#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class SGGLDB : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAttachFile(AttachFile instance);
    partial void UpdateAttachFile(AttachFile instance);
    partial void DeleteAttachFile(AttachFile instance);
    partial void InsertBase_Certificate(Base_Certificate instance);
    partial void UpdateBase_Certificate(Base_Certificate instance);
    partial void DeleteBase_Certificate(Base_Certificate instance);
    partial void InsertBase_CNProfessional(Base_CNProfessional instance);
    partial void UpdateBase_CNProfessional(Base_CNProfessional instance);
    partial void DeleteBase_CNProfessional(Base_CNProfessional instance);
    partial void InsertBase_Components(Base_Components instance);
    partial void UpdateBase_Components(Base_Components instance);
    partial void DeleteBase_Components(Base_Components instance);
    partial void InsertBase_Consumables(Base_Consumables instance);
    partial void UpdateBase_Consumables(Base_Consumables instance);
    partial void DeleteBase_Consumables(Base_Consumables instance);
    partial void InsertBase_Defect(Base_Defect instance);
    partial void UpdateBase_Defect(Base_Defect instance);
    partial void DeleteBase_Defect(Base_Defect instance);
    partial void InsertBase_Depart(Base_Depart instance);
    partial void UpdateBase_Depart(Base_Depart instance);
    partial void DeleteBase_Depart(Base_Depart instance);
    partial void InsertBase_DesignProfessional(Base_DesignProfessional instance);
    partial void UpdateBase_DesignProfessional(Base_DesignProfessional instance);
    partial void DeleteBase_DesignProfessional(Base_DesignProfessional instance);
    partial void InsertBase_DetectionRate(Base_DetectionRate instance);
    partial void UpdateBase_DetectionRate(Base_DetectionRate instance);
    partial void DeleteBase_DetectionRate(Base_DetectionRate instance);
    partial void InsertBase_DetectionType(Base_DetectionType instance);
    partial void UpdateBase_DetectionType(Base_DetectionType instance);
    partial void DeleteBase_DetectionType(Base_DetectionType instance);
    partial void InsertBase_DNCompare(Base_DNCompare instance);
    partial void UpdateBase_DNCompare(Base_DNCompare instance);
    partial void DeleteBase_DNCompare(Base_DNCompare instance);
    partial void InsertBase_GrooveType(Base_GrooveType instance);
    partial void UpdateBase_GrooveType(Base_GrooveType instance);
    partial void DeleteBase_GrooveType(Base_GrooveType instance);
    partial void InsertBase_Material(Base_Material instance);
    partial void UpdateBase_Material(Base_Material instance);
    partial void DeleteBase_Material(Base_Material instance);
    partial void InsertBase_Medium(Base_Medium instance);
    partial void UpdateBase_Medium(Base_Medium instance);
    partial void DeleteBase_Medium(Base_Medium instance);
    partial void InsertBase_PipingClass(Base_PipingClass instance);
    partial void UpdateBase_PipingClass(Base_PipingClass instance);
    partial void DeleteBase_PipingClass(Base_PipingClass instance);
    partial void InsertBase_Position(Base_Position instance);
    partial void UpdateBase_Position(Base_Position instance);
    partial void DeleteBase_Position(Base_Position instance);
    partial void InsertBase_PostTitle(Base_PostTitle instance);
    partial void UpdateBase_PostTitle(Base_PostTitle instance);
    partial void DeleteBase_PostTitle(Base_PostTitle instance);
    partial void InsertBase_Pressure(Base_Pressure instance);
    partial void UpdateBase_Pressure(Base_Pressure instance);
    partial void DeleteBase_Pressure(Base_Pressure instance);
    partial void InsertBase_Project(Base_Project instance);
    partial void UpdateBase_Project(Base_Project instance);
    partial void DeleteBase_Project(Base_Project instance);
    partial void InsertBase_QualityQuestionType(Base_QualityQuestionType instance);
    partial void UpdateBase_QualityQuestionType(Base_QualityQuestionType instance);
    partial void DeleteBase_QualityQuestionType(Base_QualityQuestionType instance);
    partial void InsertBase_TrainType(Base_TrainType instance);
    partial void UpdateBase_TrainType(Base_TrainType instance);
    partial void DeleteBase_TrainType(Base_TrainType instance);
    partial void InsertBase_Unit(Base_Unit instance);
    partial void UpdateBase_Unit(Base_Unit instance);
    partial void DeleteBase_Unit(Base_Unit instance);
    partial void InsertBase_UnitType(Base_UnitType instance);
    partial void UpdateBase_UnitType(Base_UnitType instance);
    partial void DeleteBase_UnitType(Base_UnitType instance);
    partial void InsertBase_WeldingLocation(Base_WeldingLocation instance);
    partial void UpdateBase_WeldingLocation(Base_WeldingLocation instance);
    partial void DeleteBase_WeldingLocation(Base_WeldingLocation instance);
    partial void InsertBase_WeldingMethod(Base_WeldingMethod instance);
    partial void UpdateBase_WeldingMethod(Base_WeldingMethod instance);
    partial void DeleteBase_WeldingMethod(Base_WeldingMethod instance);
    partial void InsertBase_WeldType(Base_WeldType instance);
    partial void UpdateBase_WeldType(Base_WeldType instance);
    partial void DeleteBase_WeldType(Base_WeldType instance);
    partial void InsertBase_WorkPost(Base_WorkPost instance);
    partial void UpdateBase_WorkPost(Base_WorkPost instance);
    partial void DeleteBase_WorkPost(Base_WorkPost instance);
    partial void InsertHJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem instance);
    partial void UpdateHJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem instance);
    partial void DeleteHJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem instance);
    partial void InsertHJGL_Batch_NDE(HJGL_Batch_NDE instance);
    partial void UpdateHJGL_Batch_NDE(HJGL_Batch_NDE instance);
    partial void DeleteHJGL_Batch_NDE(HJGL_Batch_NDE instance);
    partial void InsertHJGL_Batch_NDEItem(HJGL_Batch_NDEItem instance);
    partial void UpdateHJGL_Batch_NDEItem(HJGL_Batch_NDEItem instance);
    partial void DeleteHJGL_Batch_NDEItem(HJGL_Batch_NDEItem instance);
    partial void InsertHJGL_Batch_PointBatch(HJGL_Batch_PointBatch instance);
    partial void UpdateHJGL_Batch_PointBatch(HJGL_Batch_PointBatch instance);
    partial void DeleteHJGL_Batch_PointBatch(HJGL_Batch_PointBatch instance);
    partial void InsertHJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem instance);
    partial void UpdateHJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem instance);
    partial void DeleteHJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem instance);
    partial void InsertHJGL_Hard_Report(HJGL_Hard_Report instance);
    partial void UpdateHJGL_Hard_Report(HJGL_Hard_Report instance);
    partial void DeleteHJGL_Hard_Report(HJGL_Hard_Report instance);
    partial void InsertHJGL_Hard_Trust(HJGL_Hard_Trust instance);
    partial void UpdateHJGL_Hard_Trust(HJGL_Hard_Trust instance);
    partial void DeleteHJGL_Hard_Trust(HJGL_Hard_Trust instance);
    partial void InsertHJGL_Hard_TrustItem(HJGL_Hard_TrustItem instance);
    partial void UpdateHJGL_Hard_TrustItem(HJGL_Hard_TrustItem instance);
    partial void DeleteHJGL_Hard_TrustItem(HJGL_Hard_TrustItem instance);
    partial void InsertHJGL_HotProess_Report(HJGL_HotProess_Report instance);
    partial void UpdateHJGL_HotProess_Report(HJGL_HotProess_Report instance);
    partial void DeleteHJGL_HotProess_Report(HJGL_HotProess_Report instance);
    partial void InsertHJGL_HotProess_Trust(HJGL_HotProess_Trust instance);
    partial void UpdateHJGL_HotProess_Trust(HJGL_HotProess_Trust instance);
    partial void DeleteHJGL_HotProess_Trust(HJGL_HotProess_Trust instance);
    partial void InsertHJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem instance);
    partial void UpdateHJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem instance);
    partial void DeleteHJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem instance);
    partial void InsertHJGL_Pipeline(HJGL_Pipeline instance);
    partial void UpdateHJGL_Pipeline(HJGL_Pipeline instance);
    partial void DeleteHJGL_Pipeline(HJGL_Pipeline instance);
    partial void InsertHJGL_PreWeldingDaily(HJGL_PreWeldingDaily instance);
    partial void UpdateHJGL_PreWeldingDaily(HJGL_PreWeldingDaily instance);
    partial void DeleteHJGL_PreWeldingDaily(HJGL_PreWeldingDaily instance);
    partial void InsertHJGL_RepairRecord(HJGL_RepairRecord instance);
    partial void UpdateHJGL_RepairRecord(HJGL_RepairRecord instance);
    partial void DeleteHJGL_RepairRecord(HJGL_RepairRecord instance);
    partial void InsertHJGL_WeldingDaily(HJGL_WeldingDaily instance);
    partial void UpdateHJGL_WeldingDaily(HJGL_WeldingDaily instance);
    partial void DeleteHJGL_WeldingDaily(HJGL_WeldingDaily instance);
    partial void InsertHJGL_WeldJoint(HJGL_WeldJoint instance);
    partial void UpdateHJGL_WeldJoint(HJGL_WeldJoint instance);
    partial void DeleteHJGL_WeldJoint(HJGL_WeldJoint instance);
    partial void InsertProject_ProjectUnit(Project_ProjectUnit instance);
    partial void UpdateProject_ProjectUnit(Project_ProjectUnit instance);
    partial void DeleteProject_ProjectUnit(Project_ProjectUnit instance);
    partial void InsertProject_ProjectUser(Project_ProjectUser instance);
    partial void UpdateProject_ProjectUser(Project_ProjectUser instance);
    partial void DeleteProject_ProjectUser(Project_ProjectUser instance);
    partial void InsertProjectData_MainItem(ProjectData_MainItem instance);
    partial void UpdateProjectData_MainItem(ProjectData_MainItem instance);
    partial void DeleteProjectData_MainItem(ProjectData_MainItem instance);
    partial void InsertProjectData_TeamGroup(ProjectData_TeamGroup instance);
    partial void UpdateProjectData_TeamGroup(ProjectData_TeamGroup instance);
    partial void DeleteProjectData_TeamGroup(ProjectData_TeamGroup instance);
    partial void InsertPTP_AItemEndCheck(PTP_AItemEndCheck instance);
    partial void UpdatePTP_AItemEndCheck(PTP_AItemEndCheck instance);
    partial void DeletePTP_AItemEndCheck(PTP_AItemEndCheck instance);
    partial void InsertPTP_BItemEndCheck(PTP_BItemEndCheck instance);
    partial void UpdatePTP_BItemEndCheck(PTP_BItemEndCheck instance);
    partial void DeletePTP_BItemEndCheck(PTP_BItemEndCheck instance);
    partial void InsertPTP_PipelineList(PTP_PipelineList instance);
    partial void UpdatePTP_PipelineList(PTP_PipelineList instance);
    partial void DeletePTP_PipelineList(PTP_PipelineList instance);
    partial void InsertPTP_TestPackage(PTP_TestPackage instance);
    partial void UpdatePTP_TestPackage(PTP_TestPackage instance);
    partial void DeletePTP_TestPackage(PTP_TestPackage instance);
    partial void InsertQualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality instance);
    partial void UpdateQualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality instance);
    partial void DeleteQualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality instance);
    partial void InsertQualityAudit_PersonQuality(QualityAudit_PersonQuality instance);
    partial void UpdateQualityAudit_PersonQuality(QualityAudit_PersonQuality instance);
    partial void DeleteQualityAudit_PersonQuality(QualityAudit_PersonQuality instance);
    partial void InsertQualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality instance);
    partial void UpdateQualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality instance);
    partial void DeleteQualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality instance);
    partial void InsertSitePerson_Person(SitePerson_Person instance);
    partial void UpdateSitePerson_Person(SitePerson_Person instance);
    partial void DeleteSitePerson_Person(SitePerson_Person instance);
    partial void InsertSys_ButtonPower(Sys_ButtonPower instance);
    partial void UpdateSys_ButtonPower(Sys_ButtonPower instance);
    partial void DeleteSys_ButtonPower(Sys_ButtonPower instance);
    partial void InsertSys_ButtonToMenu(Sys_ButtonToMenu instance);
    partial void UpdateSys_ButtonToMenu(Sys_ButtonToMenu instance);
    partial void DeleteSys_ButtonToMenu(Sys_ButtonToMenu instance);
    partial void InsertSys_CodeRecords(Sys_CodeRecords instance);
    partial void UpdateSys_CodeRecords(Sys_CodeRecords instance);
    partial void DeleteSys_CodeRecords(Sys_CodeRecords instance);
    partial void InsertSys_CodeTemplateRule(Sys_CodeTemplateRule instance);
    partial void UpdateSys_CodeTemplateRule(Sys_CodeTemplateRule instance);
    partial void DeleteSys_CodeTemplateRule(Sys_CodeTemplateRule instance);
    partial void InsertSys_Const(Sys_Const instance);
    partial void UpdateSys_Const(Sys_Const instance);
    partial void DeleteSys_Const(Sys_Const instance);
    partial void InsertSys_ErrLogInfo(Sys_ErrLogInfo instance);
    partial void UpdateSys_ErrLogInfo(Sys_ErrLogInfo instance);
    partial void DeleteSys_ErrLogInfo(Sys_ErrLogInfo instance);
    partial void InsertSys_Log(Sys_Log instance);
    partial void UpdateSys_Log(Sys_Log instance);
    partial void DeleteSys_Log(Sys_Log instance);
    partial void InsertSys_Menu(Sys_Menu instance);
    partial void UpdateSys_Menu(Sys_Menu instance);
    partial void DeleteSys_Menu(Sys_Menu instance);
    partial void InsertSys_MenuFlowOperate(Sys_MenuFlowOperate instance);
    partial void UpdateSys_MenuFlowOperate(Sys_MenuFlowOperate instance);
    partial void DeleteSys_MenuFlowOperate(Sys_MenuFlowOperate instance);
    partial void InsertSys_Role(Sys_Role instance);
    partial void UpdateSys_Role(Sys_Role instance);
    partial void DeleteSys_Role(Sys_Role instance);
    partial void InsertSys_RolePower(Sys_RolePower instance);
    partial void UpdateSys_RolePower(Sys_RolePower instance);
    partial void DeleteSys_RolePower(Sys_RolePower instance);
    partial void InsertSys_TestRule(Sys_TestRule instance);
    partial void UpdateSys_TestRule(Sys_TestRule instance);
    partial void DeleteSys_TestRule(Sys_TestRule instance);
    partial void InsertSys_User(Sys_User instance);
    partial void UpdateSys_User(Sys_User instance);
    partial void DeleteSys_User(Sys_User instance);
    partial void InsertSys_UserRead(Sys_UserRead instance);
    partial void UpdateSys_UserRead(Sys_UserRead instance);
    partial void DeleteSys_UserRead(Sys_UserRead instance);
    partial void InsertSys_UserShowColumns(Sys_UserShowColumns instance);
    partial void UpdateSys_UserShowColumns(Sys_UserShowColumns instance);
    partial void DeleteSys_UserShowColumns(Sys_UserShowColumns instance);
    partial void InsertWBS_ControlItemAndCycle(WBS_ControlItemAndCycle instance);
    partial void UpdateWBS_ControlItemAndCycle(WBS_ControlItemAndCycle instance);
    partial void DeleteWBS_ControlItemAndCycle(WBS_ControlItemAndCycle instance);
    partial void InsertWBS_UnitWork(WBS_UnitWork instance);
    partial void UpdateWBS_UnitWork(WBS_UnitWork instance);
    partial void DeleteWBS_UnitWork(WBS_UnitWork instance);
    partial void InsertWBS_WorkPackage(WBS_WorkPackage instance);
    partial void UpdateWBS_WorkPackage(WBS_WorkPackage instance);
    partial void DeleteWBS_WorkPackage(WBS_WorkPackage instance);
    partial void InsertWelder_WelderQualify(Welder_WelderQualify instance);
    partial void UpdateWelder_WelderQualify(Welder_WelderQualify instance);
    partial void DeleteWelder_WelderQualify(Welder_WelderQualify instance);
    partial void InsertWPQ_WPQList(WPQ_WPQList instance);
    partial void UpdateWPQ_WPQList(WPQ_WPQList instance);
    partial void DeleteWPQ_WPQList(WPQ_WPQList instance);
    #endregion
		
		public SGGLDB(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGGLDB(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGGLDB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGGLDB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AttachFile> AttachFile
		{
			get
			{
				return this.GetTable<AttachFile>();
			}
		}
		
		public System.Data.Linq.Table<Base_Certificate> Base_Certificate
		{
			get
			{
				return this.GetTable<Base_Certificate>();
			}
		}
		
		public System.Data.Linq.Table<Base_CNProfessional> Base_CNProfessional
		{
			get
			{
				return this.GetTable<Base_CNProfessional>();
			}
		}
		
		public System.Data.Linq.Table<Base_Components> Base_Components
		{
			get
			{
				return this.GetTable<Base_Components>();
			}
		}
		
		public System.Data.Linq.Table<Base_Consumables> Base_Consumables
		{
			get
			{
				return this.GetTable<Base_Consumables>();
			}
		}
		
		public System.Data.Linq.Table<Base_Defect> Base_Defect
		{
			get
			{
				return this.GetTable<Base_Defect>();
			}
		}
		
		public System.Data.Linq.Table<Base_Depart> Base_Depart
		{
			get
			{
				return this.GetTable<Base_Depart>();
			}
		}
		
		public System.Data.Linq.Table<Base_DesignProfessional> Base_DesignProfessional
		{
			get
			{
				return this.GetTable<Base_DesignProfessional>();
			}
		}
		
		public System.Data.Linq.Table<Base_DetectionRate> Base_DetectionRate
		{
			get
			{
				return this.GetTable<Base_DetectionRate>();
			}
		}
		
		public System.Data.Linq.Table<Base_DetectionType> Base_DetectionType
		{
			get
			{
				return this.GetTable<Base_DetectionType>();
			}
		}
		
		public System.Data.Linq.Table<Base_DNCompare> Base_DNCompare
		{
			get
			{
				return this.GetTable<Base_DNCompare>();
			}
		}
		
		public System.Data.Linq.Table<Base_GrooveType> Base_GrooveType
		{
			get
			{
				return this.GetTable<Base_GrooveType>();
			}
		}
		
		public System.Data.Linq.Table<Base_Material> Base_Material
		{
			get
			{
				return this.GetTable<Base_Material>();
			}
		}
		
		public System.Data.Linq.Table<Base_Medium> Base_Medium
		{
			get
			{
				return this.GetTable<Base_Medium>();
			}
		}
		
		public System.Data.Linq.Table<Base_PipingClass> Base_PipingClass
		{
			get
			{
				return this.GetTable<Base_PipingClass>();
			}
		}
		
		public System.Data.Linq.Table<Base_Position> Base_Position
		{
			get
			{
				return this.GetTable<Base_Position>();
			}
		}
		
		public System.Data.Linq.Table<Base_PostTitle> Base_PostTitle
		{
			get
			{
				return this.GetTable<Base_PostTitle>();
			}
		}
		
		public System.Data.Linq.Table<Base_Pressure> Base_Pressure
		{
			get
			{
				return this.GetTable<Base_Pressure>();
			}
		}
		
		public System.Data.Linq.Table<Base_Project> Base_Project
		{
			get
			{
				return this.GetTable<Base_Project>();
			}
		}
		
		public System.Data.Linq.Table<Base_QualityQuestionType> Base_QualityQuestionType
		{
			get
			{
				return this.GetTable<Base_QualityQuestionType>();
			}
		}
		
		public System.Data.Linq.Table<Base_TrainType> Base_TrainType
		{
			get
			{
				return this.GetTable<Base_TrainType>();
			}
		}
		
		public System.Data.Linq.Table<Base_Unit> Base_Unit
		{
			get
			{
				return this.GetTable<Base_Unit>();
			}
		}
		
		public System.Data.Linq.Table<Base_UnitType> Base_UnitType
		{
			get
			{
				return this.GetTable<Base_UnitType>();
			}
		}
		
		public System.Data.Linq.Table<Base_WeldingLocation> Base_WeldingLocation
		{
			get
			{
				return this.GetTable<Base_WeldingLocation>();
			}
		}
		
		public System.Data.Linq.Table<Base_WeldingMethod> Base_WeldingMethod
		{
			get
			{
				return this.GetTable<Base_WeldingMethod>();
			}
		}
		
		public System.Data.Linq.Table<Base_WeldType> Base_WeldType
		{
			get
			{
				return this.GetTable<Base_WeldType>();
			}
		}
		
		public System.Data.Linq.Table<Base_WorkPost> Base_WorkPost
		{
			get
			{
				return this.GetTable<Base_WorkPost>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Batch_BatchTrustItem> HJGL_Batch_BatchTrustItem
		{
			get
			{
				return this.GetTable<HJGL_Batch_BatchTrustItem>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Batch_NDE> HJGL_Batch_NDE
		{
			get
			{
				return this.GetTable<HJGL_Batch_NDE>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Batch_NDEItem> HJGL_Batch_NDEItem
		{
			get
			{
				return this.GetTable<HJGL_Batch_NDEItem>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this.GetTable<HJGL_Batch_PointBatch>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Batch_PointBatchItem> HJGL_Batch_PointBatchItem
		{
			get
			{
				return this.GetTable<HJGL_Batch_PointBatchItem>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Hard_Report> HJGL_Hard_Report
		{
			get
			{
				return this.GetTable<HJGL_Hard_Report>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Hard_Trust> HJGL_Hard_Trust
		{
			get
			{
				return this.GetTable<HJGL_Hard_Trust>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Hard_TrustItem> HJGL_Hard_TrustItem
		{
			get
			{
				return this.GetTable<HJGL_Hard_TrustItem>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_HotProess_Report> HJGL_HotProess_Report
		{
			get
			{
				return this.GetTable<HJGL_HotProess_Report>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_HotProess_Trust> HJGL_HotProess_Trust
		{
			get
			{
				return this.GetTable<HJGL_HotProess_Trust>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_HotProess_TrustItem> HJGL_HotProess_TrustItem
		{
			get
			{
				return this.GetTable<HJGL_HotProess_TrustItem>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this.GetTable<HJGL_Pipeline>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_PreWeldingDaily> HJGL_PreWeldingDaily
		{
			get
			{
				return this.GetTable<HJGL_PreWeldingDaily>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this.GetTable<HJGL_RepairRecord>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_WeldingDaily> HJGL_WeldingDaily
		{
			get
			{
				return this.GetTable<HJGL_WeldingDaily>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this.GetTable<HJGL_WeldJoint>();
			}
		}
		
		public System.Data.Linq.Table<Project_ProjectUnit> Project_ProjectUnit
		{
			get
			{
				return this.GetTable<Project_ProjectUnit>();
			}
		}
		
		public System.Data.Linq.Table<Project_ProjectUser> Project_ProjectUser
		{
			get
			{
				return this.GetTable<Project_ProjectUser>();
			}
		}
		
		public System.Data.Linq.Table<ProjectData_MainItem> ProjectData_MainItem
		{
			get
			{
				return this.GetTable<ProjectData_MainItem>();
			}
		}
		
		public System.Data.Linq.Table<ProjectData_TeamGroup> ProjectData_TeamGroup
		{
			get
			{
				return this.GetTable<ProjectData_TeamGroup>();
			}
		}
		
		public System.Data.Linq.Table<PTP_AItemEndCheck> PTP_AItemEndCheck
		{
			get
			{
				return this.GetTable<PTP_AItemEndCheck>();
			}
		}
		
		public System.Data.Linq.Table<PTP_BItemEndCheck> PTP_BItemEndCheck
		{
			get
			{
				return this.GetTable<PTP_BItemEndCheck>();
			}
		}
		
		public System.Data.Linq.Table<PTP_PipelineList> PTP_PipelineList
		{
			get
			{
				return this.GetTable<PTP_PipelineList>();
			}
		}
		
		public System.Data.Linq.Table<PTP_TestPackage> PTP_TestPackage
		{
			get
			{
				return this.GetTable<PTP_TestPackage>();
			}
		}
		
		public System.Data.Linq.Table<QualityAudit_EquipmentPersonQuality> QualityAudit_EquipmentPersonQuality
		{
			get
			{
				return this.GetTable<QualityAudit_EquipmentPersonQuality>();
			}
		}
		
		public System.Data.Linq.Table<QualityAudit_PersonQuality> QualityAudit_PersonQuality
		{
			get
			{
				return this.GetTable<QualityAudit_PersonQuality>();
			}
		}
		
		public System.Data.Linq.Table<QualityAudit_SafePersonQuality> QualityAudit_SafePersonQuality
		{
			get
			{
				return this.GetTable<QualityAudit_SafePersonQuality>();
			}
		}
		
		public System.Data.Linq.Table<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this.GetTable<SitePerson_Person>();
			}
		}
		
		public System.Data.Linq.Table<Sys_ButtonPower> Sys_ButtonPower
		{
			get
			{
				return this.GetTable<Sys_ButtonPower>();
			}
		}
		
		public System.Data.Linq.Table<Sys_ButtonToMenu> Sys_ButtonToMenu
		{
			get
			{
				return this.GetTable<Sys_ButtonToMenu>();
			}
		}
		
		public System.Data.Linq.Table<Sys_CodeRecords> Sys_CodeRecords
		{
			get
			{
				return this.GetTable<Sys_CodeRecords>();
			}
		}
		
		public System.Data.Linq.Table<Sys_CodeTemplateRule> Sys_CodeTemplateRule
		{
			get
			{
				return this.GetTable<Sys_CodeTemplateRule>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Const> Sys_Const
		{
			get
			{
				return this.GetTable<Sys_Const>();
			}
		}
		
		public System.Data.Linq.Table<Sys_ErrLogInfo> Sys_ErrLogInfo
		{
			get
			{
				return this.GetTable<Sys_ErrLogInfo>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Log> Sys_Log
		{
			get
			{
				return this.GetTable<Sys_Log>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Menu> Sys_Menu
		{
			get
			{
				return this.GetTable<Sys_Menu>();
			}
		}
		
		public System.Data.Linq.Table<Sys_MenuFlowOperate> Sys_MenuFlowOperate
		{
			get
			{
				return this.GetTable<Sys_MenuFlowOperate>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Role> Sys_Role
		{
			get
			{
				return this.GetTable<Sys_Role>();
			}
		}
		
		public System.Data.Linq.Table<Sys_RolePower> Sys_RolePower
		{
			get
			{
				return this.GetTable<Sys_RolePower>();
			}
		}
		
		public System.Data.Linq.Table<Sys_TestRule> Sys_TestRule
		{
			get
			{
				return this.GetTable<Sys_TestRule>();
			}
		}
		
		public System.Data.Linq.Table<Sys_User> Sys_User
		{
			get
			{
				return this.GetTable<Sys_User>();
			}
		}
		
		public System.Data.Linq.Table<Sys_UserRead> Sys_UserRead
		{
			get
			{
				return this.GetTable<Sys_UserRead>();
			}
		}
		
		public System.Data.Linq.Table<Sys_UserShowColumns> Sys_UserShowColumns
		{
			get
			{
				return this.GetTable<Sys_UserShowColumns>();
			}
		}
		
		public System.Data.Linq.Table<View_SitePerson_Person> View_SitePerson_Person
		{
			get
			{
				return this.GetTable<View_SitePerson_Person>();
			}
		}
		
		public System.Data.Linq.Table<View_Sys_User> View_Sys_User
		{
			get
			{
				return this.GetTable<View_Sys_User>();
			}
		}
		
		public System.Data.Linq.Table<WBS_ControlItemAndCycle> WBS_ControlItemAndCycle
		{
			get
			{
				return this.GetTable<WBS_ControlItemAndCycle>();
			}
		}
		
		public System.Data.Linq.Table<WBS_UnitWork> WBS_UnitWork
		{
			get
			{
				return this.GetTable<WBS_UnitWork>();
			}
		}
		
		public System.Data.Linq.Table<WBS_WorkPackage> WBS_WorkPackage
		{
			get
			{
				return this.GetTable<WBS_WorkPackage>();
			}
		}
		
		public System.Data.Linq.Table<Welder_WelderQualify> Welder_WelderQualify
		{
			get
			{
				return this.GetTable<Welder_WelderQualify>();
			}
		}
		
		public System.Data.Linq.Table<WPQ_WPQList> WPQ_WPQList
		{
			get
			{
				return this.GetTable<WPQ_WPQList>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttachFile")]
	public partial class AttachFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AttachFileId;
		
		private string _ToKeyId;
		
		private string _AttachSource;
		
		private string _AttachUrl;
		
		private string _MenuId;
		
		private string _AttachPath;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachFileIdChanging(string value);
    partial void OnAttachFileIdChanged();
    partial void OnToKeyIdChanging(string value);
    partial void OnToKeyIdChanged();
    partial void OnAttachSourceChanging(string value);
    partial void OnAttachSourceChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnAttachPathChanging(string value);
    partial void OnAttachPathChanged();
    #endregion
		
		public AttachFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachFileId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AttachFileId
		{
			get
			{
				return this._AttachFileId;
			}
			set
			{
				if ((this._AttachFileId != value))
				{
					this.OnAttachFileIdChanging(value);
					this.SendPropertyChanging();
					this._AttachFileId = value;
					this.SendPropertyChanged("AttachFileId");
					this.OnAttachFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToKeyId", DbType="NVarChar(50)")]
		public string ToKeyId
		{
			get
			{
				return this._ToKeyId;
			}
			set
			{
				if ((this._ToKeyId != value))
				{
					this.OnToKeyIdChanging(value);
					this.SendPropertyChanging();
					this._ToKeyId = value;
					this.SendPropertyChanged("ToKeyId");
					this.OnToKeyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachSource", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AttachSource
		{
			get
			{
				return this._AttachSource;
			}
			set
			{
				if ((this._AttachSource != value))
				{
					this.OnAttachSourceChanging(value);
					this.SendPropertyChanging();
					this._AttachSource = value;
					this.SendPropertyChanged("AttachSource");
					this.OnAttachSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachPath", DbType="NVarChar(50)")]
		public string AttachPath
		{
			get
			{
				return this._AttachPath;
			}
			set
			{
				if ((this._AttachPath != value))
				{
					this.OnAttachPathChanging(value);
					this.SendPropertyChanging();
					this._AttachPath = value;
					this.SendPropertyChanged("AttachPath");
					this.OnAttachPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Certificate")]
	public partial class Base_Certificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CertificateId;
		
		private string _CertificateCode;
		
		private string _CertificateName;
		
		private string _Remark;
		
		private EntitySet<QualityAudit_EquipmentPersonQuality> _QualityAudit_EquipmentPersonQuality;
		
		private EntitySet<QualityAudit_PersonQuality> _QualityAudit_PersonQuality;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertificateIdChanging(string value);
    partial void OnCertificateIdChanged();
    partial void OnCertificateCodeChanging(string value);
    partial void OnCertificateCodeChanged();
    partial void OnCertificateNameChanging(string value);
    partial void OnCertificateNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Certificate()
		{
			this._QualityAudit_EquipmentPersonQuality = new EntitySet<QualityAudit_EquipmentPersonQuality>(new Action<QualityAudit_EquipmentPersonQuality>(this.attach_QualityAudit_EquipmentPersonQuality), new Action<QualityAudit_EquipmentPersonQuality>(this.detach_QualityAudit_EquipmentPersonQuality));
			this._QualityAudit_PersonQuality = new EntitySet<QualityAudit_PersonQuality>(new Action<QualityAudit_PersonQuality>(this.attach_QualityAudit_PersonQuality), new Action<QualityAudit_PersonQuality>(this.detach_QualityAudit_PersonQuality));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateCode", DbType="NVarChar(50)")]
		public string CertificateCode
		{
			get
			{
				return this._CertificateCode;
			}
			set
			{
				if ((this._CertificateCode != value))
				{
					this.OnCertificateCodeChanging(value);
					this.SendPropertyChanging();
					this._CertificateCode = value;
					this.SendPropertyChanged("CertificateCode");
					this.OnCertificateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateName", DbType="NVarChar(50)")]
		public string CertificateName
		{
			get
			{
				return this._CertificateName;
			}
			set
			{
				if ((this._CertificateName != value))
				{
					this.OnCertificateNameChanging(value);
					this.SendPropertyChanging();
					this._CertificateName = value;
					this.SendPropertyChanged("CertificateName");
					this.OnCertificateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_Base_Certificate", Storage="_QualityAudit_EquipmentPersonQuality", ThisKey="CertificateId", OtherKey="CertificateId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_EquipmentPersonQuality> QualityAudit_EquipmentPersonQuality
		{
			get
			{
				return this._QualityAudit_EquipmentPersonQuality;
			}
			set
			{
				this._QualityAudit_EquipmentPersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Base_Certificate", Storage="_QualityAudit_PersonQuality", ThisKey="CertificateId", OtherKey="CertificateId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQuality> QualityAudit_PersonQuality
		{
			get
			{
				return this._QualityAudit_PersonQuality;
			}
			set
			{
				this._QualityAudit_PersonQuality.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Certificate = this;
		}
		
		private void detach_QualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Certificate = null;
		}
		
		private void attach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Certificate = this;
		}
		
		private void detach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Certificate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_CNProfessional")]
	public partial class Base_CNProfessional : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CNProfessionalId;
		
		private string _CNProfessionalCode;
		
		private string _ProfessionalName;
		
		private System.Nullable<int> _SortIndex;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCNProfessionalIdChanging(string value);
    partial void OnCNProfessionalIdChanged();
    partial void OnCNProfessionalCodeChanging(string value);
    partial void OnCNProfessionalCodeChanged();
    partial void OnProfessionalNameChanging(string value);
    partial void OnProfessionalNameChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Base_CNProfessional()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNProfessionalId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CNProfessionalId
		{
			get
			{
				return this._CNProfessionalId;
			}
			set
			{
				if ((this._CNProfessionalId != value))
				{
					this.OnCNProfessionalIdChanging(value);
					this.SendPropertyChanging();
					this._CNProfessionalId = value;
					this.SendPropertyChanged("CNProfessionalId");
					this.OnCNProfessionalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNProfessionalCode", DbType="NVarChar(10)")]
		public string CNProfessionalCode
		{
			get
			{
				return this._CNProfessionalCode;
			}
			set
			{
				if ((this._CNProfessionalCode != value))
				{
					this.OnCNProfessionalCodeChanging(value);
					this.SendPropertyChanging();
					this._CNProfessionalCode = value;
					this.SendPropertyChanged("CNProfessionalCode");
					this.OnCNProfessionalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessionalName", DbType="NVarChar(30)")]
		public string ProfessionalName
		{
			get
			{
				return this._ProfessionalName;
			}
			set
			{
				if ((this._ProfessionalName != value))
				{
					this.OnProfessionalNameChanging(value);
					this.SendPropertyChanging();
					this._ProfessionalName = value;
					this.SendPropertyChanged("ProfessionalName");
					this.OnProfessionalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Components")]
	public partial class Base_Components : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ComponentsId;
		
		private string _ComponentsCode;
		
		private string _ComponentsName;
		
		private string _ProjeceId;
		
		private string _Remark;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComponentsIdChanging(string value);
    partial void OnComponentsIdChanged();
    partial void OnComponentsCodeChanging(string value);
    partial void OnComponentsCodeChanged();
    partial void OnComponentsNameChanging(string value);
    partial void OnComponentsNameChanged();
    partial void OnProjeceIdChanging(string value);
    partial void OnProjeceIdChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Components()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentsId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ComponentsId
		{
			get
			{
				return this._ComponentsId;
			}
			set
			{
				if ((this._ComponentsId != value))
				{
					this.OnComponentsIdChanging(value);
					this.SendPropertyChanging();
					this._ComponentsId = value;
					this.SendPropertyChanged("ComponentsId");
					this.OnComponentsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentsCode", DbType="NVarChar(50)")]
		public string ComponentsCode
		{
			get
			{
				return this._ComponentsCode;
			}
			set
			{
				if ((this._ComponentsCode != value))
				{
					this.OnComponentsCodeChanging(value);
					this.SendPropertyChanging();
					this._ComponentsCode = value;
					this.SendPropertyChanged("ComponentsCode");
					this.OnComponentsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentsName", DbType="NVarChar(50)")]
		public string ComponentsName
		{
			get
			{
				return this._ComponentsName;
			}
			set
			{
				if ((this._ComponentsName != value))
				{
					this.OnComponentsNameChanging(value);
					this.SendPropertyChanging();
					this._ComponentsName = value;
					this.SendPropertyChanged("ComponentsName");
					this.OnComponentsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjeceId", DbType="NVarChar(50)")]
		public string ProjeceId
		{
			get
			{
				return this._ProjeceId;
			}
			set
			{
				if ((this._ProjeceId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjeceIdChanging(value);
					this.SendPropertyChanging();
					this._ProjeceId = value;
					this.SendPropertyChanged("ProjeceId");
					this.OnProjeceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Components_Base_Project", Storage="_Base_Project", ThisKey="ProjeceId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Base_Components.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Base_Components.Add(this);
						this._ProjeceId = value.ProjectId;
					}
					else
					{
						this._ProjeceId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Consumables")]
	public partial class Base_Consumables : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConsumablesId;
		
		private string _ConsumablesCode;
		
		private string _ConsumablesName;
		
		private string _ConsumablesType;
		
		private string _SteelType;
		
		private string _SteelFormat;
		
		private string _Standard;
		
		private string _Remark;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<HJGL_WeldJoint> _Consumables;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConsumablesIdChanging(string value);
    partial void OnConsumablesIdChanged();
    partial void OnConsumablesCodeChanging(string value);
    partial void OnConsumablesCodeChanged();
    partial void OnConsumablesNameChanging(string value);
    partial void OnConsumablesNameChanged();
    partial void OnConsumablesTypeChanging(string value);
    partial void OnConsumablesTypeChanged();
    partial void OnSteelTypeChanging(string value);
    partial void OnSteelTypeChanged();
    partial void OnSteelFormatChanging(string value);
    partial void OnSteelFormatChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Consumables()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._Consumables = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_Consumables), new Action<HJGL_WeldJoint>(this.detach_Consumables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumablesId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConsumablesId
		{
			get
			{
				return this._ConsumablesId;
			}
			set
			{
				if ((this._ConsumablesId != value))
				{
					this.OnConsumablesIdChanging(value);
					this.SendPropertyChanging();
					this._ConsumablesId = value;
					this.SendPropertyChanged("ConsumablesId");
					this.OnConsumablesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumablesCode", DbType="NVarChar(50)")]
		public string ConsumablesCode
		{
			get
			{
				return this._ConsumablesCode;
			}
			set
			{
				if ((this._ConsumablesCode != value))
				{
					this.OnConsumablesCodeChanging(value);
					this.SendPropertyChanging();
					this._ConsumablesCode = value;
					this.SendPropertyChanged("ConsumablesCode");
					this.OnConsumablesCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumablesName", DbType="NVarChar(50)")]
		public string ConsumablesName
		{
			get
			{
				return this._ConsumablesName;
			}
			set
			{
				if ((this._ConsumablesName != value))
				{
					this.OnConsumablesNameChanging(value);
					this.SendPropertyChanging();
					this._ConsumablesName = value;
					this.SendPropertyChanged("ConsumablesName");
					this.OnConsumablesNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumablesType", DbType="NVarChar(50)")]
		public string ConsumablesType
		{
			get
			{
				return this._ConsumablesType;
			}
			set
			{
				if ((this._ConsumablesType != value))
				{
					this.OnConsumablesTypeChanging(value);
					this.SendPropertyChanging();
					this._ConsumablesType = value;
					this.SendPropertyChanged("ConsumablesType");
					this.OnConsumablesTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteelType", DbType="NVarChar(50)")]
		public string SteelType
		{
			get
			{
				return this._SteelType;
			}
			set
			{
				if ((this._SteelType != value))
				{
					this.OnSteelTypeChanging(value);
					this.SendPropertyChanging();
					this._SteelType = value;
					this.SendPropertyChanged("SteelType");
					this.OnSteelTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteelFormat", DbType="NVarChar(50)")]
		public string SteelFormat
		{
			get
			{
				return this._SteelFormat;
			}
			set
			{
				if ((this._SteelFormat != value))
				{
					this.OnSteelFormatChanging(value);
					this.SendPropertyChanging();
					this._SteelFormat = value;
					this.SendPropertyChanged("SteelFormat");
					this.OnSteelFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(50)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Consumables", Storage="_HJGL_WeldJoint", ThisKey="ConsumablesId", OtherKey="WeldingRod", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Consumables1", Storage="_Consumables", ThisKey="ConsumablesId", OtherKey="WeldingWire", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> Consumables
		{
			get
			{
				return this._Consumables;
			}
			set
			{
				this._Consumables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_Consumables = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_Consumables = null;
		}
		
		private void attach_Consumables(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.WeldingWireBase_Consumables = this;
		}
		
		private void detach_Consumables(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.WeldingWireBase_Consumables = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Defect")]
	public partial class Base_Defect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DefectId;
		
		private string _DefectName;
		
		private string _DefectEngName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDefectIdChanging(int value);
    partial void OnDefectIdChanged();
    partial void OnDefectNameChanging(string value);
    partial void OnDefectNameChanged();
    partial void OnDefectEngNameChanging(string value);
    partial void OnDefectEngNameChanged();
    #endregion
		
		public Base_Defect()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefectId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DefectId
		{
			get
			{
				return this._DefectId;
			}
			set
			{
				if ((this._DefectId != value))
				{
					this.OnDefectIdChanging(value);
					this.SendPropertyChanging();
					this._DefectId = value;
					this.SendPropertyChanged("DefectId");
					this.OnDefectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefectName", DbType="NVarChar(60)")]
		public string DefectName
		{
			get
			{
				return this._DefectName;
			}
			set
			{
				if ((this._DefectName != value))
				{
					this.OnDefectNameChanging(value);
					this.SendPropertyChanging();
					this._DefectName = value;
					this.SendPropertyChanged("DefectName");
					this.OnDefectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefectEngName", DbType="NVarChar(60)")]
		public string DefectEngName
		{
			get
			{
				return this._DefectEngName;
			}
			set
			{
				if ((this._DefectEngName != value))
				{
					this.OnDefectEngNameChanging(value);
					this.SendPropertyChanging();
					this._DefectEngName = value;
					this.SendPropertyChanged("DefectEngName");
					this.OnDefectEngNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Depart")]
	public partial class Base_Depart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartId;
		
		private string _DepartCode;
		
		private string _DepartName;
		
		private string _Remark;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
		private EntitySet<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnDepartCodeChanging(string value);
    partial void OnDepartCodeChanged();
    partial void OnDepartNameChanging(string value);
    partial void OnDepartNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Depart()
		{
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			this._Sys_User = new EntitySet<Sys_User>(new Action<Sys_User>(this.attach_Sys_User), new Action<Sys_User>(this.detach_Sys_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="NVarChar(50)")]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					this.OnDepartCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartCode = value;
					this.SendPropertyChanged("DepartCode");
					this.OnDepartCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartName
		{
			get
			{
				return this._DepartName;
			}
			set
			{
				if ((this._DepartName != value))
				{
					this.OnDepartNameChanging(value);
					this.SendPropertyChanging();
					this._DepartName = value;
					this.SendPropertyChanged("DepartName");
					this.OnDepartNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Depart", Storage="_SitePerson_Person", ThisKey="DepartId", OtherKey="DepartId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Depart", Storage="_Sys_User", ThisKey="DepartId", OtherKey="DepartId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_User> Sys_User
		{
			get
			{
				return this._Sys_User;
			}
			set
			{
				this._Sys_User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = null;
		}
		
		private void attach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = this;
		}
		
		private void detach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_DesignProfessional")]
	public partial class Base_DesignProfessional : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DesignProfessionalId;
		
		private string _DesignProfessionalCode;
		
		private string _ProfessionalName;
		
		private System.Nullable<int> _SortIndex;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesignProfessionalIdChanging(string value);
    partial void OnDesignProfessionalIdChanged();
    partial void OnDesignProfessionalCodeChanging(string value);
    partial void OnDesignProfessionalCodeChanged();
    partial void OnProfessionalNameChanging(string value);
    partial void OnProfessionalNameChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Base_DesignProfessional()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignProfessionalId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DesignProfessionalId
		{
			get
			{
				return this._DesignProfessionalId;
			}
			set
			{
				if ((this._DesignProfessionalId != value))
				{
					this.OnDesignProfessionalIdChanging(value);
					this.SendPropertyChanging();
					this._DesignProfessionalId = value;
					this.SendPropertyChanged("DesignProfessionalId");
					this.OnDesignProfessionalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignProfessionalCode", DbType="NVarChar(10)")]
		public string DesignProfessionalCode
		{
			get
			{
				return this._DesignProfessionalCode;
			}
			set
			{
				if ((this._DesignProfessionalCode != value))
				{
					this.OnDesignProfessionalCodeChanging(value);
					this.SendPropertyChanging();
					this._DesignProfessionalCode = value;
					this.SendPropertyChanged("DesignProfessionalCode");
					this.OnDesignProfessionalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessionalName", DbType="NVarChar(30)")]
		public string ProfessionalName
		{
			get
			{
				return this._ProfessionalName;
			}
			set
			{
				if ((this._ProfessionalName != value))
				{
					this.OnProfessionalNameChanging(value);
					this.SendPropertyChanging();
					this._ProfessionalName = value;
					this.SendPropertyChanged("ProfessionalName");
					this.OnProfessionalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_DetectionRate")]
	public partial class Base_DetectionRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DetectionRateId;
		
		private string _DetectionRateCode;
		
		private System.Nullable<int> _DetectionRateValue;
		
		private string _Remark;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<HJGL_Pipeline> _HJGL_Pipeline;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetectionRateIdChanging(string value);
    partial void OnDetectionRateIdChanged();
    partial void OnDetectionRateCodeChanging(string value);
    partial void OnDetectionRateCodeChanged();
    partial void OnDetectionRateValueChanging(System.Nullable<int> value);
    partial void OnDetectionRateValueChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_DetectionRate()
		{
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._HJGL_Pipeline = new EntitySet<HJGL_Pipeline>(new Action<HJGL_Pipeline>(this.attach_HJGL_Pipeline), new Action<HJGL_Pipeline>(this.detach_HJGL_Pipeline));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					this.OnDetectionRateIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionRateId = value;
					this.SendPropertyChanged("DetectionRateId");
					this.OnDetectionRateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateCode", DbType="NVarChar(50)")]
		public string DetectionRateCode
		{
			get
			{
				return this._DetectionRateCode;
			}
			set
			{
				if ((this._DetectionRateCode != value))
				{
					this.OnDetectionRateCodeChanging(value);
					this.SendPropertyChanging();
					this._DetectionRateCode = value;
					this.SendPropertyChanged("DetectionRateCode");
					this.OnDetectionRateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateValue", DbType="Int")]
		public System.Nullable<int> DetectionRateValue
		{
			get
			{
				return this._DetectionRateValue;
			}
			set
			{
				if ((this._DetectionRateValue != value))
				{
					this.OnDetectionRateValueChanging(value);
					this.SendPropertyChanging();
					this._DetectionRateValue = value;
					this.SendPropertyChanged("DetectionRateValue");
					this.OnDetectionRateValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Base_DetectionRate", Storage="_HJGL_Batch_PointBatch", ThisKey="DetectionRateId", OtherKey="DetectionRateId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_DetectionRate", Storage="_HJGL_Pipeline", ThisKey="DetectionRateId", OtherKey="DetectionRateId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline;
			}
			set
			{
				this._HJGL_Pipeline.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionRate = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionRate = null;
		}
		
		private void attach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionRate = this;
		}
		
		private void detach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionRate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_DetectionType")]
	public partial class Base_DetectionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DetectionTypeId;
		
		private string _DetectionTypeCode;
		
		private string _DetectionTypeName;
		
		private string _SysType;
		
		private System.Nullable<decimal> _SecuritySpace;
		
		private string _InjuryDegree;
		
		private string _Remark;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetectionTypeIdChanging(string value);
    partial void OnDetectionTypeIdChanged();
    partial void OnDetectionTypeCodeChanging(string value);
    partial void OnDetectionTypeCodeChanged();
    partial void OnDetectionTypeNameChanging(string value);
    partial void OnDetectionTypeNameChanged();
    partial void OnSysTypeChanging(string value);
    partial void OnSysTypeChanged();
    partial void OnSecuritySpaceChanging(System.Nullable<decimal> value);
    partial void OnSecuritySpaceChanged();
    partial void OnInjuryDegreeChanging(string value);
    partial void OnInjuryDegreeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_DetectionType()
		{
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					this.OnDetectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeId = value;
					this.SendPropertyChanged("DetectionTypeId");
					this.OnDetectionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeCode", DbType="NVarChar(50)")]
		public string DetectionTypeCode
		{
			get
			{
				return this._DetectionTypeCode;
			}
			set
			{
				if ((this._DetectionTypeCode != value))
				{
					this.OnDetectionTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeCode = value;
					this.SendPropertyChanged("DetectionTypeCode");
					this.OnDetectionTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeName", DbType="NVarChar(50)")]
		public string DetectionTypeName
		{
			get
			{
				return this._DetectionTypeName;
			}
			set
			{
				if ((this._DetectionTypeName != value))
				{
					this.OnDetectionTypeNameChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeName = value;
					this.SendPropertyChanged("DetectionTypeName");
					this.OnDetectionTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysType", DbType="NVarChar(50)")]
		public string SysType
		{
			get
			{
				return this._SysType;
			}
			set
			{
				if ((this._SysType != value))
				{
					this.OnSysTypeChanging(value);
					this.SendPropertyChanging();
					this._SysType = value;
					this.SendPropertyChanged("SysType");
					this.OnSysTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecuritySpace", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> SecuritySpace
		{
			get
			{
				return this._SecuritySpace;
			}
			set
			{
				if ((this._SecuritySpace != value))
				{
					this.OnSecuritySpaceChanging(value);
					this.SendPropertyChanging();
					this._SecuritySpace = value;
					this.SendPropertyChanged("SecuritySpace");
					this.OnSecuritySpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InjuryDegree", DbType="NVarChar(100)")]
		public string InjuryDegree
		{
			get
			{
				return this._InjuryDegree;
			}
			set
			{
				if ((this._InjuryDegree != value))
				{
					this.OnInjuryDegreeChanging(value);
					this.SendPropertyChanging();
					this._InjuryDegree = value;
					this.SendPropertyChanged("InjuryDegree");
					this.OnInjuryDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Base_DetectionType", Storage="_HJGL_Batch_PointBatch", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_Base_DetectionType", Storage="_HJGL_RepairRecord", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_DetectionType", Storage="_HJGL_WeldJoint", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = null;
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = null;
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_DNCompare")]
	public partial class Base_DNCompare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DNCompareId;
		
		private System.Nullable<int> _DN;
		
		private System.Nullable<decimal> _PipeSize;
		
		private System.Nullable<decimal> _OutSizeDia;
		
		private System.Nullable<decimal> _SCH10;
		
		private System.Nullable<decimal> _SCH20;
		
		private System.Nullable<decimal> _SCH30;
		
		private System.Nullable<decimal> _STD;
		
		private System.Nullable<decimal> _SCH40;
		
		private System.Nullable<decimal> _SCH60;
		
		private System.Nullable<decimal> _XS;
		
		private System.Nullable<decimal> _SCH80;
		
		private System.Nullable<decimal> _SCH100;
		
		private System.Nullable<decimal> _SCH120;
		
		private System.Nullable<decimal> _SCH140;
		
		private System.Nullable<decimal> _SCH160;
		
		private System.Nullable<decimal> _XXS;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDNCompareIdChanging(string value);
    partial void OnDNCompareIdChanged();
    partial void OnDNChanging(System.Nullable<int> value);
    partial void OnDNChanged();
    partial void OnPipeSizeChanging(System.Nullable<decimal> value);
    partial void OnPipeSizeChanged();
    partial void OnOutSizeDiaChanging(System.Nullable<decimal> value);
    partial void OnOutSizeDiaChanged();
    partial void OnSCH10Changing(System.Nullable<decimal> value);
    partial void OnSCH10Changed();
    partial void OnSCH20Changing(System.Nullable<decimal> value);
    partial void OnSCH20Changed();
    partial void OnSCH30Changing(System.Nullable<decimal> value);
    partial void OnSCH30Changed();
    partial void OnSTDChanging(System.Nullable<decimal> value);
    partial void OnSTDChanged();
    partial void OnSCH40Changing(System.Nullable<decimal> value);
    partial void OnSCH40Changed();
    partial void OnSCH60Changing(System.Nullable<decimal> value);
    partial void OnSCH60Changed();
    partial void OnXSChanging(System.Nullable<decimal> value);
    partial void OnXSChanged();
    partial void OnSCH80Changing(System.Nullable<decimal> value);
    partial void OnSCH80Changed();
    partial void OnSCH100Changing(System.Nullable<decimal> value);
    partial void OnSCH100Changed();
    partial void OnSCH120Changing(System.Nullable<decimal> value);
    partial void OnSCH120Changed();
    partial void OnSCH140Changing(System.Nullable<decimal> value);
    partial void OnSCH140Changed();
    partial void OnSCH160Changing(System.Nullable<decimal> value);
    partial void OnSCH160Changed();
    partial void OnXXSChanging(System.Nullable<decimal> value);
    partial void OnXXSChanged();
    #endregion
		
		public Base_DNCompare()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNCompareId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DNCompareId
		{
			get
			{
				return this._DNCompareId;
			}
			set
			{
				if ((this._DNCompareId != value))
				{
					this.OnDNCompareIdChanging(value);
					this.SendPropertyChanging();
					this._DNCompareId = value;
					this.SendPropertyChanged("DNCompareId");
					this.OnDNCompareIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DN", DbType="Int")]
		public System.Nullable<int> DN
		{
			get
			{
				return this._DN;
			}
			set
			{
				if ((this._DN != value))
				{
					this.OnDNChanging(value);
					this.SendPropertyChanging();
					this._DN = value;
					this.SendPropertyChanged("DN");
					this.OnDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipeSize", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PipeSize
		{
			get
			{
				return this._PipeSize;
			}
			set
			{
				if ((this._PipeSize != value))
				{
					this.OnPipeSizeChanging(value);
					this.SendPropertyChanging();
					this._PipeSize = value;
					this.SendPropertyChanged("PipeSize");
					this.OnPipeSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutSizeDia", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> OutSizeDia
		{
			get
			{
				return this._OutSizeDia;
			}
			set
			{
				if ((this._OutSizeDia != value))
				{
					this.OnOutSizeDiaChanging(value);
					this.SendPropertyChanging();
					this._OutSizeDia = value;
					this.SendPropertyChanged("OutSizeDia");
					this.OnOutSizeDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH10", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH10
		{
			get
			{
				return this._SCH10;
			}
			set
			{
				if ((this._SCH10 != value))
				{
					this.OnSCH10Changing(value);
					this.SendPropertyChanging();
					this._SCH10 = value;
					this.SendPropertyChanged("SCH10");
					this.OnSCH10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH20", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH20
		{
			get
			{
				return this._SCH20;
			}
			set
			{
				if ((this._SCH20 != value))
				{
					this.OnSCH20Changing(value);
					this.SendPropertyChanging();
					this._SCH20 = value;
					this.SendPropertyChanged("SCH20");
					this.OnSCH20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH30", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH30
		{
			get
			{
				return this._SCH30;
			}
			set
			{
				if ((this._SCH30 != value))
				{
					this.OnSCH30Changing(value);
					this.SendPropertyChanging();
					this._SCH30 = value;
					this.SendPropertyChanged("SCH30");
					this.OnSCH30Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STD", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> STD
		{
			get
			{
				return this._STD;
			}
			set
			{
				if ((this._STD != value))
				{
					this.OnSTDChanging(value);
					this.SendPropertyChanging();
					this._STD = value;
					this.SendPropertyChanged("STD");
					this.OnSTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH40", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH40
		{
			get
			{
				return this._SCH40;
			}
			set
			{
				if ((this._SCH40 != value))
				{
					this.OnSCH40Changing(value);
					this.SendPropertyChanging();
					this._SCH40 = value;
					this.SendPropertyChanged("SCH40");
					this.OnSCH40Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH60", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH60
		{
			get
			{
				return this._SCH60;
			}
			set
			{
				if ((this._SCH60 != value))
				{
					this.OnSCH60Changing(value);
					this.SendPropertyChanging();
					this._SCH60 = value;
					this.SendPropertyChanged("SCH60");
					this.OnSCH60Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XS", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> XS
		{
			get
			{
				return this._XS;
			}
			set
			{
				if ((this._XS != value))
				{
					this.OnXSChanging(value);
					this.SendPropertyChanging();
					this._XS = value;
					this.SendPropertyChanged("XS");
					this.OnXSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH80", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH80
		{
			get
			{
				return this._SCH80;
			}
			set
			{
				if ((this._SCH80 != value))
				{
					this.OnSCH80Changing(value);
					this.SendPropertyChanging();
					this._SCH80 = value;
					this.SendPropertyChanged("SCH80");
					this.OnSCH80Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH100", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH100
		{
			get
			{
				return this._SCH100;
			}
			set
			{
				if ((this._SCH100 != value))
				{
					this.OnSCH100Changing(value);
					this.SendPropertyChanging();
					this._SCH100 = value;
					this.SendPropertyChanged("SCH100");
					this.OnSCH100Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH120", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH120
		{
			get
			{
				return this._SCH120;
			}
			set
			{
				if ((this._SCH120 != value))
				{
					this.OnSCH120Changing(value);
					this.SendPropertyChanging();
					this._SCH120 = value;
					this.SendPropertyChanged("SCH120");
					this.OnSCH120Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH140", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH140
		{
			get
			{
				return this._SCH140;
			}
			set
			{
				if ((this._SCH140 != value))
				{
					this.OnSCH140Changing(value);
					this.SendPropertyChanging();
					this._SCH140 = value;
					this.SendPropertyChanged("SCH140");
					this.OnSCH140Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH160", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH160
		{
			get
			{
				return this._SCH160;
			}
			set
			{
				if ((this._SCH160 != value))
				{
					this.OnSCH160Changing(value);
					this.SendPropertyChanging();
					this._SCH160 = value;
					this.SendPropertyChanged("SCH160");
					this.OnSCH160Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XXS", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> XXS
		{
			get
			{
				return this._XXS;
			}
			set
			{
				if ((this._XXS != value))
				{
					this.OnXXSChanging(value);
					this.SendPropertyChanging();
					this._XXS = value;
					this.SendPropertyChanged("XXS");
					this.OnXXSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_GrooveType")]
	public partial class Base_GrooveType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _GrooveTypeId;
		
		private string _GrooveTypeCode;
		
		private string _GrooveTypeName;
		
		private string _Remark;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGrooveTypeIdChanging(string value);
    partial void OnGrooveTypeIdChanged();
    partial void OnGrooveTypeCodeChanging(string value);
    partial void OnGrooveTypeCodeChanged();
    partial void OnGrooveTypeNameChanging(string value);
    partial void OnGrooveTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_GrooveType()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GrooveTypeId
		{
			get
			{
				return this._GrooveTypeId;
			}
			set
			{
				if ((this._GrooveTypeId != value))
				{
					this.OnGrooveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._GrooveTypeId = value;
					this.SendPropertyChanged("GrooveTypeId");
					this.OnGrooveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveTypeCode", DbType="NVarChar(50)")]
		public string GrooveTypeCode
		{
			get
			{
				return this._GrooveTypeCode;
			}
			set
			{
				if ((this._GrooveTypeCode != value))
				{
					this.OnGrooveTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._GrooveTypeCode = value;
					this.SendPropertyChanged("GrooveTypeCode");
					this.OnGrooveTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveTypeName", DbType="NVarChar(50)")]
		public string GrooveTypeName
		{
			get
			{
				return this._GrooveTypeName;
			}
			set
			{
				if ((this._GrooveTypeName != value))
				{
					this.OnGrooveTypeNameChanging(value);
					this.SendPropertyChanging();
					this._GrooveTypeName = value;
					this.SendPropertyChanged("GrooveTypeName");
					this.OnGrooveTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_GrooveType", Storage="_HJGL_WeldJoint", ThisKey="GrooveTypeId", OtherKey="GrooveTypeId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_GrooveType = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_GrooveType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Material")]
	public partial class Base_Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaterialId;
		
		private string _MaterialCode;
		
		private string _MaterialType;
		
		private string _SteelType;
		
		private string _MaterialClass;
		
		private string _MaterialGroup;
		
		private string _Remark;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<HJGL_WeldJoint> _Material;
		
		private EntitySet<WPQ_WPQList> _WPQ_WPQList;
		
		private EntitySet<WPQ_WPQList> _WPQ_WPQList_Base_Material2;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaterialIdChanging(string value);
    partial void OnMaterialIdChanged();
    partial void OnMaterialCodeChanging(string value);
    partial void OnMaterialCodeChanged();
    partial void OnMaterialTypeChanging(string value);
    partial void OnMaterialTypeChanged();
    partial void OnSteelTypeChanging(string value);
    partial void OnSteelTypeChanged();
    partial void OnMaterialClassChanging(string value);
    partial void OnMaterialClassChanged();
    partial void OnMaterialGroupChanging(string value);
    partial void OnMaterialGroupChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Material()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._Material = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_Material), new Action<HJGL_WeldJoint>(this.detach_Material));
			this._WPQ_WPQList = new EntitySet<WPQ_WPQList>(new Action<WPQ_WPQList>(this.attach_WPQ_WPQList), new Action<WPQ_WPQList>(this.detach_WPQ_WPQList));
			this._WPQ_WPQList_Base_Material2 = new EntitySet<WPQ_WPQList>(new Action<WPQ_WPQList>(this.attach_WPQ_WPQList_Base_Material2), new Action<WPQ_WPQList>(this.detach_WPQ_WPQList_Base_Material2));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="NVarChar(50)")]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this.OnMaterialCodeChanging(value);
					this.SendPropertyChanging();
					this._MaterialCode = value;
					this.SendPropertyChanged("MaterialCode");
					this.OnMaterialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialType", DbType="NVarChar(50)")]
		public string MaterialType
		{
			get
			{
				return this._MaterialType;
			}
			set
			{
				if ((this._MaterialType != value))
				{
					this.OnMaterialTypeChanging(value);
					this.SendPropertyChanging();
					this._MaterialType = value;
					this.SendPropertyChanged("MaterialType");
					this.OnMaterialTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteelType", DbType="NVarChar(50)")]
		public string SteelType
		{
			get
			{
				return this._SteelType;
			}
			set
			{
				if ((this._SteelType != value))
				{
					this.OnSteelTypeChanging(value);
					this.SendPropertyChanging();
					this._SteelType = value;
					this.SendPropertyChanged("SteelType");
					this.OnSteelTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialClass", DbType="NVarChar(50)")]
		public string MaterialClass
		{
			get
			{
				return this._MaterialClass;
			}
			set
			{
				if ((this._MaterialClass != value))
				{
					this.OnMaterialClassChanging(value);
					this.SendPropertyChanging();
					this._MaterialClass = value;
					this.SendPropertyChanged("MaterialClass");
					this.OnMaterialClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialGroup", DbType="NVarChar(50)")]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this.OnMaterialGroupChanging(value);
					this.SendPropertyChanging();
					this._MaterialGroup = value;
					this.SendPropertyChanged("MaterialGroup");
					this.OnMaterialGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Material", Storage="_HJGL_WeldJoint", ThisKey="MaterialId", OtherKey="Material1Id", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Material1", Storage="_Material", ThisKey="MaterialId", OtherKey="Material2Id", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				this._Material.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WPQ_WPQList_Base_Material1", Storage="_WPQ_WPQList", ThisKey="MaterialId", OtherKey="MaterialId1", DeleteRule="NO ACTION")]
		public EntitySet<WPQ_WPQList> WPQ_WPQList
		{
			get
			{
				return this._WPQ_WPQList;
			}
			set
			{
				this._WPQ_WPQList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WPQ_WPQList_Base_Material2", Storage="_WPQ_WPQList_Base_Material2", ThisKey="MaterialId", OtherKey="MaterialId2", DeleteRule="NO ACTION")]
		public EntitySet<WPQ_WPQList> WPQ_WPQList_Base_Material2
		{
			get
			{
				return this._WPQ_WPQList_Base_Material2;
			}
			set
			{
				this._WPQ_WPQList_Base_Material2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_Material = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_Material = null;
		}
		
		private void attach_Material(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Material2 = this;
		}
		
		private void detach_Material(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Material2 = null;
		}
		
		private void attach_WPQ_WPQList(WPQ_WPQList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Material = this;
		}
		
		private void detach_WPQ_WPQList(WPQ_WPQList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Material = null;
		}
		
		private void attach_WPQ_WPQList_Base_Material2(WPQ_WPQList entity)
		{
			this.SendPropertyChanging();
			entity.MaterialId2Base_Material = this;
		}
		
		private void detach_WPQ_WPQList_Base_Material2(WPQ_WPQList entity)
		{
			this.SendPropertyChanging();
			entity.MaterialId2Base_Material = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Medium")]
	public partial class Base_Medium : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MediumId;
		
		private string _ProjectId;
		
		private string _MediumCode;
		
		private string _MediumName;
		
		private string _MediumAbbreviation;
		
		private System.Nullable<bool> _IsTestMedium;
		
		private string _Remark;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntitySet<HJGL_Pipeline> _HJGL_Pipeline;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMediumIdChanging(string value);
    partial void OnMediumIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnMediumCodeChanging(string value);
    partial void OnMediumCodeChanged();
    partial void OnMediumNameChanging(string value);
    partial void OnMediumNameChanged();
    partial void OnMediumAbbreviationChanging(string value);
    partial void OnMediumAbbreviationChanged();
    partial void OnIsTestMediumChanging(System.Nullable<bool> value);
    partial void OnIsTestMediumChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Medium()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._HJGL_Pipeline = new EntitySet<HJGL_Pipeline>(new Action<HJGL_Pipeline>(this.attach_HJGL_Pipeline), new Action<HJGL_Pipeline>(this.detach_HJGL_Pipeline));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MediumId
		{
			get
			{
				return this._MediumId;
			}
			set
			{
				if ((this._MediumId != value))
				{
					this.OnMediumIdChanging(value);
					this.SendPropertyChanging();
					this._MediumId = value;
					this.SendPropertyChanged("MediumId");
					this.OnMediumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumCode", DbType="NVarChar(50)")]
		public string MediumCode
		{
			get
			{
				return this._MediumCode;
			}
			set
			{
				if ((this._MediumCode != value))
				{
					this.OnMediumCodeChanging(value);
					this.SendPropertyChanging();
					this._MediumCode = value;
					this.SendPropertyChanged("MediumCode");
					this.OnMediumCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumName", DbType="NVarChar(50)")]
		public string MediumName
		{
			get
			{
				return this._MediumName;
			}
			set
			{
				if ((this._MediumName != value))
				{
					this.OnMediumNameChanging(value);
					this.SendPropertyChanging();
					this._MediumName = value;
					this.SendPropertyChanged("MediumName");
					this.OnMediumNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumAbbreviation", DbType="NVarChar(50)")]
		public string MediumAbbreviation
		{
			get
			{
				return this._MediumAbbreviation;
			}
			set
			{
				if ((this._MediumAbbreviation != value))
				{
					this.OnMediumAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._MediumAbbreviation = value;
					this.SendPropertyChanged("MediumAbbreviation");
					this.OnMediumAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTestMedium", DbType="Bit")]
		public System.Nullable<bool> IsTestMedium
		{
			get
			{
				return this._IsTestMedium;
			}
			set
			{
				if ((this._IsTestMedium != value))
				{
					this.OnIsTestMediumChanging(value);
					this.SendPropertyChanging();
					this._IsTestMedium = value;
					this.SendPropertyChanged("IsTestMedium");
					this.OnIsTestMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Medium_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Base_Medium.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Base_Medium.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_Medium", Storage="_HJGL_Pipeline", ThisKey="MediumId", OtherKey="MediumId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline;
			}
			set
			{
				this._HJGL_Pipeline.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_Medium = this;
		}
		
		private void detach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_Medium = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_PipingClass")]
	public partial class Base_PipingClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PipingClassId;
		
		private string _ProjectId;
		
		private string _PipingClassCode;
		
		private string _PipingClassName;
		
		private string _Remark;
		
		private string _PNO;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<HJGL_Pipeline> _HJGL_Pipeline;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPipingClassIdChanging(string value);
    partial void OnPipingClassIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnPipingClassCodeChanging(string value);
    partial void OnPipingClassCodeChanged();
    partial void OnPipingClassNameChanging(string value);
    partial void OnPipingClassNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnPNOChanging(string value);
    partial void OnPNOChanged();
    #endregion
		
		public Base_PipingClass()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._HJGL_Pipeline = new EntitySet<HJGL_Pipeline>(new Action<HJGL_Pipeline>(this.attach_HJGL_Pipeline), new Action<HJGL_Pipeline>(this.detach_HJGL_Pipeline));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PipingClassId
		{
			get
			{
				return this._PipingClassId;
			}
			set
			{
				if ((this._PipingClassId != value))
				{
					this.OnPipingClassIdChanging(value);
					this.SendPropertyChanging();
					this._PipingClassId = value;
					this.SendPropertyChanged("PipingClassId");
					this.OnPipingClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassCode", DbType="NVarChar(50)")]
		public string PipingClassCode
		{
			get
			{
				return this._PipingClassCode;
			}
			set
			{
				if ((this._PipingClassCode != value))
				{
					this.OnPipingClassCodeChanging(value);
					this.SendPropertyChanging();
					this._PipingClassCode = value;
					this.SendPropertyChanged("PipingClassCode");
					this.OnPipingClassCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassName", DbType="NVarChar(50)")]
		public string PipingClassName
		{
			get
			{
				return this._PipingClassName;
			}
			set
			{
				if ((this._PipingClassName != value))
				{
					this.OnPipingClassNameChanging(value);
					this.SendPropertyChanging();
					this._PipingClassName = value;
					this.SendPropertyChanged("PipingClassName");
					this.OnPipingClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNO", DbType="NVarChar(50)")]
		public string PNO
		{
			get
			{
				return this._PNO;
			}
			set
			{
				if ((this._PNO != value))
				{
					this.OnPNOChanging(value);
					this.SendPropertyChanging();
					this._PNO = value;
					this.SendPropertyChanged("PNO");
					this.OnPNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_PipingClass_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Base_PipingClass.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Base_PipingClass.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_Base_PipingClass", Storage="_HJGL_Batch_PointBatch", ThisKey="PipingClassId", OtherKey="PipingClassId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_PipingClass", Storage="_HJGL_Pipeline", ThisKey="PipingClassId", OtherKey="PipingClassId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline;
			}
			set
			{
				this._HJGL_Pipeline.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_PipingClass = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_PipingClass = null;
		}
		
		private void attach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_PipingClass = this;
		}
		
		private void detach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_PipingClass = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Position")]
	public partial class Base_Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PositionId;
		
		private string _PositionCode;
		
		private string _PositionName;
		
		private string _Remark;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPositionIdChanging(string value);
    partial void OnPositionIdChanged();
    partial void OnPositionCodeChanging(string value);
    partial void OnPositionCodeChanged();
    partial void OnPositionNameChanging(string value);
    partial void OnPositionNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Position()
		{
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionCode", DbType="NVarChar(50)")]
		public string PositionCode
		{
			get
			{
				return this._PositionCode;
			}
			set
			{
				if ((this._PositionCode != value))
				{
					this.OnPositionCodeChanging(value);
					this.SendPropertyChanging();
					this._PositionCode = value;
					this.SendPropertyChanged("PositionCode");
					this.OnPositionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionName", DbType="NVarChar(50)")]
		public string PositionName
		{
			get
			{
				return this._PositionName;
			}
			set
			{
				if ((this._PositionName != value))
				{
					this.OnPositionNameChanging(value);
					this.SendPropertyChanging();
					this._PositionName = value;
					this.SendPropertyChanged("PositionName");
					this.OnPositionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Position", Storage="_SitePerson_Person", ThisKey="PositionId", OtherKey="PositionId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Position = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Position = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_PostTitle")]
	public partial class Base_PostTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PostTitleId;
		
		private string _PostTitleName;
		
		private string _PostTitleCode;
		
		private string _Remark;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostTitleIdChanging(string value);
    partial void OnPostTitleIdChanged();
    partial void OnPostTitleNameChanging(string value);
    partial void OnPostTitleNameChanged();
    partial void OnPostTitleCodeChanging(string value);
    partial void OnPostTitleCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_PostTitle()
		{
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PostTitleId
		{
			get
			{
				return this._PostTitleId;
			}
			set
			{
				if ((this._PostTitleId != value))
				{
					this.OnPostTitleIdChanging(value);
					this.SendPropertyChanging();
					this._PostTitleId = value;
					this.SendPropertyChanged("PostTitleId");
					this.OnPostTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleName", DbType="NVarChar(100)")]
		public string PostTitleName
		{
			get
			{
				return this._PostTitleName;
			}
			set
			{
				if ((this._PostTitleName != value))
				{
					this.OnPostTitleNameChanging(value);
					this.SendPropertyChanging();
					this._PostTitleName = value;
					this.SendPropertyChanged("PostTitleName");
					this.OnPostTitleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleCode", DbType="NVarChar(50)")]
		public string PostTitleCode
		{
			get
			{
				return this._PostTitleCode;
			}
			set
			{
				if ((this._PostTitleCode != value))
				{
					this.OnPostTitleCodeChanging(value);
					this.SendPropertyChanging();
					this._PostTitleCode = value;
					this.SendPropertyChanged("PostTitleCode");
					this.OnPostTitleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_PostTitle", Storage="_SitePerson_Person", ThisKey="PostTitleId", OtherKey="PostTitleId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_PostTitle = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_PostTitle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Pressure")]
	public partial class Base_Pressure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PressureId;
		
		private string _PressureCode;
		
		private string _PressureName;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPressureIdChanging(string value);
    partial void OnPressureIdChanged();
    partial void OnPressureCodeChanging(string value);
    partial void OnPressureCodeChanged();
    partial void OnPressureNameChanging(string value);
    partial void OnPressureNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Pressure()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PressureId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PressureId
		{
			get
			{
				return this._PressureId;
			}
			set
			{
				if ((this._PressureId != value))
				{
					this.OnPressureIdChanging(value);
					this.SendPropertyChanging();
					this._PressureId = value;
					this.SendPropertyChanged("PressureId");
					this.OnPressureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PressureCode", DbType="NVarChar(50)")]
		public string PressureCode
		{
			get
			{
				return this._PressureCode;
			}
			set
			{
				if ((this._PressureCode != value))
				{
					this.OnPressureCodeChanging(value);
					this.SendPropertyChanging();
					this._PressureCode = value;
					this.SendPropertyChanged("PressureCode");
					this.OnPressureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PressureName", DbType="NVarChar(50)")]
		public string PressureName
		{
			get
			{
				return this._PressureName;
			}
			set
			{
				if ((this._PressureName != value))
				{
					this.OnPressureNameChanging(value);
					this.SendPropertyChanging();
					this._PressureName = value;
					this.SendPropertyChanged("PressureName");
					this.OnPressureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Project")]
	public partial class Base_Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _ProjectCode;
		
		private string _ProjectName;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _ProjectAddress;
		
		private string _ShortName;
		
		private string _ProjectType;
		
		private string _PostCode;
		
		private string _Remark;
		
		private string _ProjectState;
		
		private string _ContractNo;
		
		private string _WorkRange;
		
		private System.Nullable<int> _Duration;
		
		private System.Nullable<bool> _IsUpTotalMonth;
		
		private string _ProjectMainPerson;
		
		private string _ProjectLiaisonPerson;
		
		private System.Nullable<bool> _IsForeign;
		
		private string _FromProjectId;
		
		private string _MapCoordinates;
		
		private EntitySet<Base_Components> _Base_Components;
		
		private EntitySet<Base_Medium> _Base_Medium;
		
		private EntitySet<Base_PipingClass> _Base_PipingClass;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<HJGL_Batch_NDE> _HJGL_Batch_NDE;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<HJGL_Hard_Trust> _HJGL_Hard_Trust;
		
		private EntitySet<HJGL_Pipeline> _HJGL_Pipeline;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<HJGL_HotProess_Trust> _HJGL_HotProess_Trust;
		
		private EntitySet<HJGL_WeldingDaily> _HJGL_WeldingDaily;
		
		private EntitySet<Project_ProjectUnit> _Project_ProjectUnit;
		
		private EntitySet<Project_ProjectUser> _Project_ProjectUser;
		
		private EntitySet<ProjectData_MainItem> _ProjectData_MainItem;
		
		private EntitySet<ProjectData_TeamGroup> _ProjectData_TeamGroup;
		
		private EntitySet<PTP_TestPackage> _PTP_TestPackage;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
		private EntitySet<Sys_CodeRecords> _Sys_CodeRecords;
		
		private EntitySet<Sys_Log> _Sys_Log;
		
		private EntitySet<Sys_UserRead> _Sys_UserRead;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnProjectCodeChanging(string value);
    partial void OnProjectCodeChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnProjectAddressChanging(string value);
    partial void OnProjectAddressChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnProjectTypeChanging(string value);
    partial void OnProjectTypeChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnProjectStateChanging(string value);
    partial void OnProjectStateChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnWorkRangeChanging(string value);
    partial void OnWorkRangeChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnIsUpTotalMonthChanging(System.Nullable<bool> value);
    partial void OnIsUpTotalMonthChanged();
    partial void OnProjectMainPersonChanging(string value);
    partial void OnProjectMainPersonChanged();
    partial void OnProjectLiaisonPersonChanging(string value);
    partial void OnProjectLiaisonPersonChanged();
    partial void OnIsForeignChanging(System.Nullable<bool> value);
    partial void OnIsForeignChanged();
    partial void OnFromProjectIdChanging(string value);
    partial void OnFromProjectIdChanged();
    partial void OnMapCoordinatesChanging(string value);
    partial void OnMapCoordinatesChanged();
    #endregion
		
		public Base_Project()
		{
			this._Base_Components = new EntitySet<Base_Components>(new Action<Base_Components>(this.attach_Base_Components), new Action<Base_Components>(this.detach_Base_Components));
			this._Base_Medium = new EntitySet<Base_Medium>(new Action<Base_Medium>(this.attach_Base_Medium), new Action<Base_Medium>(this.detach_Base_Medium));
			this._Base_PipingClass = new EntitySet<Base_PipingClass>(new Action<Base_PipingClass>(this.attach_Base_PipingClass), new Action<Base_PipingClass>(this.detach_Base_PipingClass));
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._HJGL_Batch_NDE = new EntitySet<HJGL_Batch_NDE>(new Action<HJGL_Batch_NDE>(this.attach_HJGL_Batch_NDE), new Action<HJGL_Batch_NDE>(this.detach_HJGL_Batch_NDE));
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._HJGL_Hard_Trust = new EntitySet<HJGL_Hard_Trust>(new Action<HJGL_Hard_Trust>(this.attach_HJGL_Hard_Trust), new Action<HJGL_Hard_Trust>(this.detach_HJGL_Hard_Trust));
			this._HJGL_Pipeline = new EntitySet<HJGL_Pipeline>(new Action<HJGL_Pipeline>(this.attach_HJGL_Pipeline), new Action<HJGL_Pipeline>(this.detach_HJGL_Pipeline));
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._HJGL_HotProess_Trust = new EntitySet<HJGL_HotProess_Trust>(new Action<HJGL_HotProess_Trust>(this.attach_HJGL_HotProess_Trust), new Action<HJGL_HotProess_Trust>(this.detach_HJGL_HotProess_Trust));
			this._HJGL_WeldingDaily = new EntitySet<HJGL_WeldingDaily>(new Action<HJGL_WeldingDaily>(this.attach_HJGL_WeldingDaily), new Action<HJGL_WeldingDaily>(this.detach_HJGL_WeldingDaily));
			this._Project_ProjectUnit = new EntitySet<Project_ProjectUnit>(new Action<Project_ProjectUnit>(this.attach_Project_ProjectUnit), new Action<Project_ProjectUnit>(this.detach_Project_ProjectUnit));
			this._Project_ProjectUser = new EntitySet<Project_ProjectUser>(new Action<Project_ProjectUser>(this.attach_Project_ProjectUser), new Action<Project_ProjectUser>(this.detach_Project_ProjectUser));
			this._ProjectData_MainItem = new EntitySet<ProjectData_MainItem>(new Action<ProjectData_MainItem>(this.attach_ProjectData_MainItem), new Action<ProjectData_MainItem>(this.detach_ProjectData_MainItem));
			this._ProjectData_TeamGroup = new EntitySet<ProjectData_TeamGroup>(new Action<ProjectData_TeamGroup>(this.attach_ProjectData_TeamGroup), new Action<ProjectData_TeamGroup>(this.detach_ProjectData_TeamGroup));
			this._PTP_TestPackage = new EntitySet<PTP_TestPackage>(new Action<PTP_TestPackage>(this.attach_PTP_TestPackage), new Action<PTP_TestPackage>(this.detach_PTP_TestPackage));
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			this._Sys_CodeRecords = new EntitySet<Sys_CodeRecords>(new Action<Sys_CodeRecords>(this.attach_Sys_CodeRecords), new Action<Sys_CodeRecords>(this.detach_Sys_CodeRecords));
			this._Sys_Log = new EntitySet<Sys_Log>(new Action<Sys_Log>(this.attach_Sys_Log), new Action<Sys_Log>(this.detach_Sys_Log));
			this._Sys_UserRead = new EntitySet<Sys_UserRead>(new Action<Sys_UserRead>(this.attach_Sys_UserRead), new Action<Sys_UserRead>(this.detach_Sys_UserRead));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="NVarChar(50)")]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this.OnProjectCodeChanging(value);
					this.SendPropertyChanging();
					this._ProjectCode = value;
					this.SendPropertyChanged("ProjectCode");
					this.OnProjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectAddress", DbType="NVarChar(500)")]
		public string ProjectAddress
		{
			get
			{
				return this._ProjectAddress;
			}
			set
			{
				if ((this._ProjectAddress != value))
				{
					this.OnProjectAddressChanging(value);
					this.SendPropertyChanging();
					this._ProjectAddress = value;
					this.SendPropertyChanged("ProjectAddress");
					this.OnProjectAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(200)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectType", DbType="NVarChar(20)")]
		public string ProjectType
		{
			get
			{
				return this._ProjectType;
			}
			set
			{
				if ((this._ProjectType != value))
				{
					this.OnProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ProjectType = value;
					this.SendPropertyChanged("ProjectType");
					this.OnProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(20)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectState", DbType="Char(1)")]
		public string ProjectState
		{
			get
			{
				return this._ProjectState;
			}
			set
			{
				if ((this._ProjectState != value))
				{
					this.OnProjectStateChanging(value);
					this.SendPropertyChanging();
					this._ProjectState = value;
					this.SendPropertyChanged("ProjectState");
					this.OnProjectStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="NVarChar(50)")]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkRange", DbType="NVarChar(500)")]
		public string WorkRange
		{
			get
			{
				return this._WorkRange;
			}
			set
			{
				if ((this._WorkRange != value))
				{
					this.OnWorkRangeChanging(value);
					this.SendPropertyChanging();
					this._WorkRange = value;
					this.SendPropertyChanged("WorkRange");
					this.OnWorkRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUpTotalMonth", DbType="Bit")]
		public System.Nullable<bool> IsUpTotalMonth
		{
			get
			{
				return this._IsUpTotalMonth;
			}
			set
			{
				if ((this._IsUpTotalMonth != value))
				{
					this.OnIsUpTotalMonthChanging(value);
					this.SendPropertyChanging();
					this._IsUpTotalMonth = value;
					this.SendPropertyChanged("IsUpTotalMonth");
					this.OnIsUpTotalMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectMainPerson", DbType="NVarChar(500)")]
		public string ProjectMainPerson
		{
			get
			{
				return this._ProjectMainPerson;
			}
			set
			{
				if ((this._ProjectMainPerson != value))
				{
					this.OnProjectMainPersonChanging(value);
					this.SendPropertyChanging();
					this._ProjectMainPerson = value;
					this.SendPropertyChanged("ProjectMainPerson");
					this.OnProjectMainPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectLiaisonPerson", DbType="NVarChar(500)")]
		public string ProjectLiaisonPerson
		{
			get
			{
				return this._ProjectLiaisonPerson;
			}
			set
			{
				if ((this._ProjectLiaisonPerson != value))
				{
					this.OnProjectLiaisonPersonChanging(value);
					this.SendPropertyChanging();
					this._ProjectLiaisonPerson = value;
					this.SendPropertyChanged("ProjectLiaisonPerson");
					this.OnProjectLiaisonPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForeign", DbType="Bit")]
		public System.Nullable<bool> IsForeign
		{
			get
			{
				return this._IsForeign;
			}
			set
			{
				if ((this._IsForeign != value))
				{
					this.OnIsForeignChanging(value);
					this.SendPropertyChanging();
					this._IsForeign = value;
					this.SendPropertyChanged("IsForeign");
					this.OnIsForeignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromProjectId", DbType="NVarChar(50)")]
		public string FromProjectId
		{
			get
			{
				return this._FromProjectId;
			}
			set
			{
				if ((this._FromProjectId != value))
				{
					this.OnFromProjectIdChanging(value);
					this.SendPropertyChanging();
					this._FromProjectId = value;
					this.SendPropertyChanged("FromProjectId");
					this.OnFromProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapCoordinates", DbType="NVarChar(50)")]
		public string MapCoordinates
		{
			get
			{
				return this._MapCoordinates;
			}
			set
			{
				if ((this._MapCoordinates != value))
				{
					this.OnMapCoordinatesChanging(value);
					this.SendPropertyChanging();
					this._MapCoordinates = value;
					this.SendPropertyChanged("MapCoordinates");
					this.OnMapCoordinatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Components_Base_Project", Storage="_Base_Components", ThisKey="ProjectId", OtherKey="ProjeceId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Components> Base_Components
		{
			get
			{
				return this._Base_Components;
			}
			set
			{
				this._Base_Components.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Medium_Base_Project", Storage="_Base_Medium", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Medium> Base_Medium
		{
			get
			{
				return this._Base_Medium;
			}
			set
			{
				this._Base_Medium.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_PipingClass_Base_Project", Storage="_Base_PipingClass", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Base_PipingClass> Base_PipingClass
		{
			get
			{
				return this._Base_PipingClass;
			}
			set
			{
				this._Base_PipingClass.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Project_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Base_Project.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Base_Project.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_NDECheck_Base_Project", Storage="_HJGL_Batch_NDE", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_NDE> HJGL_Batch_NDE
		{
			get
			{
				return this._HJGL_Batch_NDE;
			}
			set
			{
				this._HJGL_Batch_NDE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Batch_Base_Project", Storage="_HJGL_Batch_PointBatch", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hard_Trust_Base_Project", Storage="_HJGL_Hard_Trust", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_Trust> HJGL_Hard_Trust
		{
			get
			{
				return this._HJGL_Hard_Trust;
			}
			set
			{
				this._HJGL_Hard_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_Project", Storage="_HJGL_Pipeline", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline;
			}
			set
			{
				this._HJGL_Pipeline.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_Base_Project", Storage="_HJGL_RepairRecord", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Trust_Base_Project", Storage="_HJGL_HotProess_Trust", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_Trust> HJGL_HotProess_Trust
		{
			get
			{
				return this._HJGL_HotProess_Trust;
			}
			set
			{
				this._HJGL_HotProess_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Pipeline_WeldingDaily_Base_Project", Storage="_HJGL_WeldingDaily", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldingDaily> HJGL_WeldingDaily
		{
			get
			{
				return this._HJGL_WeldingDaily;
			}
			set
			{
				this._HJGL_WeldingDaily.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUnit_Base_Project", Storage="_Project_ProjectUnit", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Project_ProjectUnit> Project_ProjectUnit
		{
			get
			{
				return this._Project_ProjectUnit;
			}
			set
			{
				this._Project_ProjectUnit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUser_Base_Project", Storage="_Project_ProjectUser", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Project_ProjectUser> Project_ProjectUser
		{
			get
			{
				return this._Project_ProjectUser;
			}
			set
			{
				this._Project_ProjectUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_MainItem_Base_Project", Storage="_ProjectData_MainItem", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<ProjectData_MainItem> ProjectData_MainItem
		{
			get
			{
				return this._ProjectData_MainItem;
			}
			set
			{
				this._ProjectData_MainItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_TeamGroup_Base_Project", Storage="_ProjectData_TeamGroup", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<ProjectData_TeamGroup> ProjectData_TeamGroup
		{
			get
			{
				return this._ProjectData_TeamGroup;
			}
			set
			{
				this._ProjectData_TeamGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_TestPackage_Base_Project", Storage="_PTP_TestPackage", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<PTP_TestPackage> PTP_TestPackage
		{
			get
			{
				return this._PTP_TestPackage;
			}
			set
			{
				this._PTP_TestPackage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Project", Storage="_SitePerson_Person", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_CodeRecords_Base_Project", Storage="_Sys_CodeRecords", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_CodeRecords> Sys_CodeRecords
		{
			get
			{
				return this._Sys_CodeRecords;
			}
			set
			{
				this._Sys_CodeRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Log_Base_Project", Storage="_Sys_Log", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_Log> Sys_Log
		{
			get
			{
				return this._Sys_Log;
			}
			set
			{
				this._Sys_Log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserRead_Base_Project", Storage="_Sys_UserRead", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_UserRead> Sys_UserRead
		{
			get
			{
				return this._Sys_UserRead;
			}
			set
			{
				this._Sys_UserRead.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_Components(Base_Components entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Base_Components(Base_Components entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Base_Medium(Base_Medium entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Base_Medium(Base_Medium entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Base_PipingClass(Base_PipingClass entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Base_PipingClass(Base_PipingClass entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_Batch_NDE(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_Batch_NDE(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_Hard_Trust(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_Hard_Trust(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_HotProess_Trust(HJGL_HotProess_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_HotProess_Trust(HJGL_HotProess_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Project_ProjectUnit(Project_ProjectUnit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Project_ProjectUnit(Project_ProjectUnit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Project_ProjectUser(Project_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Project_ProjectUser(Project_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_ProjectData_MainItem(ProjectData_MainItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_ProjectData_MainItem(ProjectData_MainItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_ProjectData_TeamGroup(ProjectData_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_ProjectData_TeamGroup(ProjectData_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_PTP_TestPackage(PTP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_PTP_TestPackage(PTP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Sys_CodeRecords(Sys_CodeRecords entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Sys_CodeRecords(Sys_CodeRecords entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Sys_Log(Sys_Log entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Sys_Log(Sys_Log entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Sys_UserRead(Sys_UserRead entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Sys_UserRead(Sys_UserRead entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_QualityQuestionType")]
	public partial class Base_QualityQuestionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _QualityQuestionTypeId;
		
		private string _QualityQuestionType;
		
		private System.Nullable<int> _SortIndex;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQualityQuestionTypeIdChanging(string value);
    partial void OnQualityQuestionTypeIdChanged();
    partial void OnQualityQuestionTypeChanging(string value);
    partial void OnQualityQuestionTypeChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Base_QualityQuestionType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualityQuestionTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string QualityQuestionTypeId
		{
			get
			{
				return this._QualityQuestionTypeId;
			}
			set
			{
				if ((this._QualityQuestionTypeId != value))
				{
					this.OnQualityQuestionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._QualityQuestionTypeId = value;
					this.SendPropertyChanged("QualityQuestionTypeId");
					this.OnQualityQuestionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualityQuestionType", DbType="NVarChar(50)")]
		public string QualityQuestionType
		{
			get
			{
				return this._QualityQuestionType;
			}
			set
			{
				if ((this._QualityQuestionType != value))
				{
					this.OnQualityQuestionTypeChanging(value);
					this.SendPropertyChanging();
					this._QualityQuestionType = value;
					this.SendPropertyChanged("QualityQuestionType");
					this.OnQualityQuestionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_TrainType")]
	public partial class Base_TrainType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainTypeId;
		
		private string _TrainTypeCode;
		
		private string _TrainTypeName;
		
		private string _Remark;
		
		private System.Nullable<bool> _IsAboutSendCard;
		
		private System.Nullable<bool> _IsRepeat;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainTypeIdChanging(string value);
    partial void OnTrainTypeIdChanged();
    partial void OnTrainTypeCodeChanging(string value);
    partial void OnTrainTypeCodeChanged();
    partial void OnTrainTypeNameChanging(string value);
    partial void OnTrainTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIsAboutSendCardChanging(System.Nullable<bool> value);
    partial void OnIsAboutSendCardChanged();
    partial void OnIsRepeatChanging(System.Nullable<bool> value);
    partial void OnIsRepeatChanged();
    #endregion
		
		public Base_TrainType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainTypeId
		{
			get
			{
				return this._TrainTypeId;
			}
			set
			{
				if ((this._TrainTypeId != value))
				{
					this.OnTrainTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeId = value;
					this.SendPropertyChanged("TrainTypeId");
					this.OnTrainTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeCode", DbType="NVarChar(50)")]
		public string TrainTypeCode
		{
			get
			{
				return this._TrainTypeCode;
			}
			set
			{
				if ((this._TrainTypeCode != value))
				{
					this.OnTrainTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeCode = value;
					this.SendPropertyChanged("TrainTypeCode");
					this.OnTrainTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeName", DbType="NVarChar(50)")]
		public string TrainTypeName
		{
			get
			{
				return this._TrainTypeName;
			}
			set
			{
				if ((this._TrainTypeName != value))
				{
					this.OnTrainTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeName = value;
					this.SendPropertyChanged("TrainTypeName");
					this.OnTrainTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAboutSendCard", DbType="Bit")]
		public System.Nullable<bool> IsAboutSendCard
		{
			get
			{
				return this._IsAboutSendCard;
			}
			set
			{
				if ((this._IsAboutSendCard != value))
				{
					this.OnIsAboutSendCardChanging(value);
					this.SendPropertyChanging();
					this._IsAboutSendCard = value;
					this.SendPropertyChanged("IsAboutSendCard");
					this.OnIsAboutSendCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRepeat", DbType="Bit")]
		public System.Nullable<bool> IsRepeat
		{
			get
			{
				return this._IsRepeat;
			}
			set
			{
				if ((this._IsRepeat != value))
				{
					this.OnIsRepeatChanging(value);
					this.SendPropertyChanging();
					this._IsRepeat = value;
					this.SendPropertyChanged("IsRepeat");
					this.OnIsRepeatChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Unit")]
	public partial class Base_Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UnitId;
		
		private string _UnitCode;
		
		private string _UnitName;
		
		private string _ShortUnitName;
		
		private string _UnitTypeId;
		
		private string _ProjectRange;
		
		private string _Corporate;
		
		private string _Address;
		
		private string _Telephone;
		
		private string _Fax;
		
		private string _EMail;
		
		private System.Nullable<bool> _IsBuild;
		
		private System.Nullable<bool> _IsBranch;
		
		private string _DataSources;
		
		private string _FromUnitId;
		
		private string _SupUnitId;
		
		private EntitySet<Base_Project> _Base_Project;
		
		private EntitySet<HJGL_Batch_NDE> _HJGL_Batch_NDE;
		
		private EntitySet<HJGL_Batch_NDE> _Unit;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<HJGL_Hard_Trust> _HJGL_Hard_Trust;
		
		private EntitySet<HJGL_Hard_Trust> _HJGL_Hard_Trust_Base_Unit;
		
		private EntitySet<HJGL_Pipeline> _HJGL_Pipeline;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
		private EntitySet<HJGL_HotProess_Trust> _HJGL_HotProess_Trust;
		
		private EntitySet<HJGL_WeldingDaily> _HJGL_WeldingDaily;
		
		private EntitySet<Project_ProjectUnit> _Project_ProjectUnit;
		
		private EntitySet<Project_ProjectUser> _Project_ProjectUser;
		
		private EntitySet<ProjectData_TeamGroup> _ProjectData_TeamGroup;
		
		private EntitySet<PTP_TestPackage> _PTP_TestPackage;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
		private EntitySet<Sys_User> _Sys_User;
		
		private EntitySet<WBS_UnitWork> _WBS_UnitWork;
		
		private EntitySet<WBS_UnitWork> _WBS_UnitWork_Base_Unit_SupervisorUnit;
		
		private EntitySet<WBS_UnitWork> _WBS_UnitWork_Base_Unit_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitCodeChanging(string value);
    partial void OnUnitCodeChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnShortUnitNameChanging(string value);
    partial void OnShortUnitNameChanged();
    partial void OnUnitTypeIdChanging(string value);
    partial void OnUnitTypeIdChanged();
    partial void OnProjectRangeChanging(string value);
    partial void OnProjectRangeChanged();
    partial void OnCorporateChanging(string value);
    partial void OnCorporateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnIsBranchChanging(System.Nullable<bool> value);
    partial void OnIsBranchChanged();
    partial void OnDataSourcesChanging(string value);
    partial void OnDataSourcesChanged();
    partial void OnFromUnitIdChanging(string value);
    partial void OnFromUnitIdChanged();
    partial void OnSupUnitIdChanging(string value);
    partial void OnSupUnitIdChanged();
    #endregion
		
		public Base_Unit()
		{
			this._Base_Project = new EntitySet<Base_Project>(new Action<Base_Project>(this.attach_Base_Project), new Action<Base_Project>(this.detach_Base_Project));
			this._HJGL_Batch_NDE = new EntitySet<HJGL_Batch_NDE>(new Action<HJGL_Batch_NDE>(this.attach_HJGL_Batch_NDE), new Action<HJGL_Batch_NDE>(this.detach_HJGL_Batch_NDE));
			this._Unit = new EntitySet<HJGL_Batch_NDE>(new Action<HJGL_Batch_NDE>(this.attach_Unit), new Action<HJGL_Batch_NDE>(this.detach_Unit));
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._HJGL_Hard_Trust = new EntitySet<HJGL_Hard_Trust>(new Action<HJGL_Hard_Trust>(this.attach_HJGL_Hard_Trust), new Action<HJGL_Hard_Trust>(this.detach_HJGL_Hard_Trust));
			this._HJGL_Hard_Trust_Base_Unit = new EntitySet<HJGL_Hard_Trust>(new Action<HJGL_Hard_Trust>(this.attach_HJGL_Hard_Trust_Base_Unit), new Action<HJGL_Hard_Trust>(this.detach_HJGL_Hard_Trust_Base_Unit));
			this._HJGL_Pipeline = new EntitySet<HJGL_Pipeline>(new Action<HJGL_Pipeline>(this.attach_HJGL_Pipeline), new Action<HJGL_Pipeline>(this.detach_HJGL_Pipeline));
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			this._HJGL_HotProess_Trust = new EntitySet<HJGL_HotProess_Trust>(new Action<HJGL_HotProess_Trust>(this.attach_HJGL_HotProess_Trust), new Action<HJGL_HotProess_Trust>(this.detach_HJGL_HotProess_Trust));
			this._HJGL_WeldingDaily = new EntitySet<HJGL_WeldingDaily>(new Action<HJGL_WeldingDaily>(this.attach_HJGL_WeldingDaily), new Action<HJGL_WeldingDaily>(this.detach_HJGL_WeldingDaily));
			this._Project_ProjectUnit = new EntitySet<Project_ProjectUnit>(new Action<Project_ProjectUnit>(this.attach_Project_ProjectUnit), new Action<Project_ProjectUnit>(this.detach_Project_ProjectUnit));
			this._Project_ProjectUser = new EntitySet<Project_ProjectUser>(new Action<Project_ProjectUser>(this.attach_Project_ProjectUser), new Action<Project_ProjectUser>(this.detach_Project_ProjectUser));
			this._ProjectData_TeamGroup = new EntitySet<ProjectData_TeamGroup>(new Action<ProjectData_TeamGroup>(this.attach_ProjectData_TeamGroup), new Action<ProjectData_TeamGroup>(this.detach_ProjectData_TeamGroup));
			this._PTP_TestPackage = new EntitySet<PTP_TestPackage>(new Action<PTP_TestPackage>(this.attach_PTP_TestPackage), new Action<PTP_TestPackage>(this.detach_PTP_TestPackage));
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			this._Sys_User = new EntitySet<Sys_User>(new Action<Sys_User>(this.attach_Sys_User), new Action<Sys_User>(this.detach_Sys_User));
			this._WBS_UnitWork = new EntitySet<WBS_UnitWork>(new Action<WBS_UnitWork>(this.attach_WBS_UnitWork), new Action<WBS_UnitWork>(this.detach_WBS_UnitWork));
			this._WBS_UnitWork_Base_Unit_SupervisorUnit = new EntitySet<WBS_UnitWork>(new Action<WBS_UnitWork>(this.attach_WBS_UnitWork_Base_Unit_SupervisorUnit), new Action<WBS_UnitWork>(this.detach_WBS_UnitWork_Base_Unit_SupervisorUnit));
			this._WBS_UnitWork_Base_Unit_Unit = new EntitySet<WBS_UnitWork>(new Action<WBS_UnitWork>(this.attach_WBS_UnitWork_Base_Unit_Unit), new Action<WBS_UnitWork>(this.detach_WBS_UnitWork_Base_Unit_Unit));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(100)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this.OnUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitCode = value;
					this.SendPropertyChanged("UnitCode");
					this.OnUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortUnitName", DbType="NVarChar(50)")]
		public string ShortUnitName
		{
			get
			{
				return this._ShortUnitName;
			}
			set
			{
				if ((this._ShortUnitName != value))
				{
					this.OnShortUnitNameChanging(value);
					this.SendPropertyChanging();
					this._ShortUnitName = value;
					this.SendPropertyChanged("ShortUnitName");
					this.OnShortUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeId", DbType="NVarChar(50)")]
		public string UnitTypeId
		{
			get
			{
				return this._UnitTypeId;
			}
			set
			{
				if ((this._UnitTypeId != value))
				{
					this.OnUnitTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeId = value;
					this.SendPropertyChanged("UnitTypeId");
					this.OnUnitTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectRange", DbType="NVarChar(1000)")]
		public string ProjectRange
		{
			get
			{
				return this._ProjectRange;
			}
			set
			{
				if ((this._ProjectRange != value))
				{
					this.OnProjectRangeChanging(value);
					this.SendPropertyChanging();
					this._ProjectRange = value;
					this.SendPropertyChanged("ProjectRange");
					this.OnProjectRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corporate", DbType="NVarChar(100)")]
		public string Corporate
		{
			get
			{
				return this._Corporate;
			}
			set
			{
				if ((this._Corporate != value))
				{
					this.OnCorporateChanging(value);
					this.SendPropertyChanging();
					this._Corporate = value;
					this.SendPropertyChanged("Corporate");
					this.OnCorporateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(200)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBranch", DbType="Bit")]
		public System.Nullable<bool> IsBranch
		{
			get
			{
				return this._IsBranch;
			}
			set
			{
				if ((this._IsBranch != value))
				{
					this.OnIsBranchChanging(value);
					this.SendPropertyChanging();
					this._IsBranch = value;
					this.SendPropertyChanged("IsBranch");
					this.OnIsBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSources", DbType="NVarChar(50)")]
		public string DataSources
		{
			get
			{
				return this._DataSources;
			}
			set
			{
				if ((this._DataSources != value))
				{
					this.OnDataSourcesChanging(value);
					this.SendPropertyChanging();
					this._DataSources = value;
					this.SendPropertyChanged("DataSources");
					this.OnDataSourcesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUnitId", DbType="NVarChar(50)")]
		public string FromUnitId
		{
			get
			{
				return this._FromUnitId;
			}
			set
			{
				if ((this._FromUnitId != value))
				{
					this.OnFromUnitIdChanging(value);
					this.SendPropertyChanging();
					this._FromUnitId = value;
					this.SendPropertyChanged("FromUnitId");
					this.OnFromUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupUnitId", DbType="NVarChar(50)")]
		public string SupUnitId
		{
			get
			{
				return this._SupUnitId;
			}
			set
			{
				if ((this._SupUnitId != value))
				{
					this.OnSupUnitIdChanging(value);
					this.SendPropertyChanging();
					this._SupUnitId = value;
					this.SendPropertyChanged("SupUnitId");
					this.OnSupUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Project_Base_Unit", Storage="_Base_Project", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Project> Base_Project
		{
			get
			{
				return this._Base_Project;
			}
			set
			{
				this._Base_Project.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_NDECheck_Base_Unit", Storage="_HJGL_Batch_NDE", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_NDE> HJGL_Batch_NDE
		{
			get
			{
				return this._HJGL_Batch_NDE;
			}
			set
			{
				this._HJGL_Batch_NDE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_NDECheck_CheckUnit_Base_Unit", Storage="_Unit", ThisKey="UnitId", OtherKey="NDEUnit", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_NDE> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				this._Unit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Base_Unit", Storage="_HJGL_Batch_PointBatch", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hard_Trust_Base_Unit", Storage="_HJGL_Hard_Trust", ThisKey="UnitId", OtherKey="CheckUnit", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_Trust> HJGL_Hard_Trust
		{
			get
			{
				return this._HJGL_Hard_Trust;
			}
			set
			{
				this._HJGL_Hard_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Trust_Base_Unit", Storage="_HJGL_Hard_Trust_Base_Unit", ThisKey="UnitId", OtherKey="HardTrustUnit", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_Trust> HJGL_Hard_Trust_Base_Unit
		{
			get
			{
				return this._HJGL_Hard_Trust_Base_Unit;
			}
			set
			{
				this._HJGL_Hard_Trust_Base_Unit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_Unit", Storage="_HJGL_Pipeline", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline;
			}
			set
			{
				this._HJGL_Pipeline.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_Base_Unit", Storage="_HJGL_RepairRecord", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Trust_Base_Unit", Storage="_HJGL_HotProess_Trust", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_Trust> HJGL_HotProess_Trust
		{
			get
			{
				return this._HJGL_HotProess_Trust;
			}
			set
			{
				this._HJGL_HotProess_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Pipeline_WeldingDaily_Base_Unit", Storage="_HJGL_WeldingDaily", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldingDaily> HJGL_WeldingDaily
		{
			get
			{
				return this._HJGL_WeldingDaily;
			}
			set
			{
				this._HJGL_WeldingDaily.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUnit_Base_Unit", Storage="_Project_ProjectUnit", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Project_ProjectUnit> Project_ProjectUnit
		{
			get
			{
				return this._Project_ProjectUnit;
			}
			set
			{
				this._Project_ProjectUnit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUser_Base_Unit", Storage="_Project_ProjectUser", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Project_ProjectUser> Project_ProjectUser
		{
			get
			{
				return this._Project_ProjectUser;
			}
			set
			{
				this._Project_ProjectUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_TeamGroup_Base_Unit", Storage="_ProjectData_TeamGroup", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<ProjectData_TeamGroup> ProjectData_TeamGroup
		{
			get
			{
				return this._ProjectData_TeamGroup;
			}
			set
			{
				this._ProjectData_TeamGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_TestPackage_Base_Unit", Storage="_PTP_TestPackage", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<PTP_TestPackage> PTP_TestPackage
		{
			get
			{
				return this._PTP_TestPackage;
			}
			set
			{
				this._PTP_TestPackage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Unit", Storage="_SitePerson_Person", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Unit", Storage="_Sys_User", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_User> Sys_User
		{
			get
			{
				return this._Sys_User;
			}
			set
			{
				this._Sys_User.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_UnitWork_Base_Unit_NDEUnit", Storage="_WBS_UnitWork", ThisKey="UnitId", OtherKey="NDEUnit", DeleteRule="NO ACTION")]
		public EntitySet<WBS_UnitWork> WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork;
			}
			set
			{
				this._WBS_UnitWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_UnitWork_Base_Unit_SupervisorUnit", Storage="_WBS_UnitWork_Base_Unit_SupervisorUnit", ThisKey="UnitId", OtherKey="SupervisorUnitId", DeleteRule="NO ACTION")]
		public EntitySet<WBS_UnitWork> WBS_UnitWork_Base_Unit_SupervisorUnit
		{
			get
			{
				return this._WBS_UnitWork_Base_Unit_SupervisorUnit;
			}
			set
			{
				this._WBS_UnitWork_Base_Unit_SupervisorUnit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_UnitWork_Base_Unit_Unit", Storage="_WBS_UnitWork_Base_Unit_Unit", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<WBS_UnitWork> WBS_UnitWork_Base_Unit_Unit
		{
			get
			{
				return this._WBS_UnitWork_Base_Unit_Unit;
			}
			set
			{
				this._WBS_UnitWork_Base_Unit_Unit.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_Project(Base_Project entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Base_Project(Base_Project entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_Batch_NDE(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_Batch_NDE(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Unit(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.NDEUnitBase_Unit = this;
		}
		
		private void detach_Unit(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.NDEUnitBase_Unit = null;
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_Hard_Trust(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_Hard_Trust(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_Hard_Trust_Base_Unit(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.HardTrustUnitBase_Unit = this;
		}
		
		private void detach_HJGL_Hard_Trust_Base_Unit(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.HardTrustUnitBase_Unit = null;
		}
		
		private void attach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_HotProess_Trust(HJGL_HotProess_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_HotProess_Trust(HJGL_HotProess_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Project_ProjectUnit(Project_ProjectUnit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Project_ProjectUnit(Project_ProjectUnit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Project_ProjectUser(Project_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Project_ProjectUser(Project_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_ProjectData_TeamGroup(ProjectData_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_ProjectData_TeamGroup(ProjectData_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_PTP_TestPackage(PTP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_PTP_TestPackage(PTP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_WBS_UnitWork(WBS_UnitWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_WBS_UnitWork(WBS_UnitWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_WBS_UnitWork_Base_Unit_SupervisorUnit(WBS_UnitWork entity)
		{
			this.SendPropertyChanging();
			entity.SupervisorUnit = this;
		}
		
		private void detach_WBS_UnitWork_Base_Unit_SupervisorUnit(WBS_UnitWork entity)
		{
			this.SendPropertyChanging();
			entity.SupervisorUnit = null;
		}
		
		private void attach_WBS_UnitWork_Base_Unit_Unit(WBS_UnitWork entity)
		{
			this.SendPropertyChanging();
			entity.Unit = this;
		}
		
		private void detach_WBS_UnitWork_Base_Unit_Unit(WBS_UnitWork entity)
		{
			this.SendPropertyChanging();
			entity.Unit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_UnitType")]
	public partial class Base_UnitType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UnitTypeId;
		
		private string _UnitTypeCode;
		
		private string _UnitTypeName;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitTypeIdChanging(string value);
    partial void OnUnitTypeIdChanged();
    partial void OnUnitTypeCodeChanging(string value);
    partial void OnUnitTypeCodeChanged();
    partial void OnUnitTypeNameChanging(string value);
    partial void OnUnitTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_UnitType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UnitTypeId
		{
			get
			{
				return this._UnitTypeId;
			}
			set
			{
				if ((this._UnitTypeId != value))
				{
					this.OnUnitTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeId = value;
					this.SendPropertyChanged("UnitTypeId");
					this.OnUnitTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeCode", DbType="NVarChar(50)")]
		public string UnitTypeCode
		{
			get
			{
				return this._UnitTypeCode;
			}
			set
			{
				if ((this._UnitTypeCode != value))
				{
					this.OnUnitTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeCode = value;
					this.SendPropertyChanged("UnitTypeCode");
					this.OnUnitTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitTypeName
		{
			get
			{
				return this._UnitTypeName;
			}
			set
			{
				if ((this._UnitTypeName != value))
				{
					this.OnUnitTypeNameChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeName = value;
					this.SendPropertyChanged("UnitTypeName");
					this.OnUnitTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_WeldingLocation")]
	public partial class Base_WeldingLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldingLocationId;
		
		private string _WeldingLocationCode;
		
		private string _Remark;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldingLocationIdChanging(string value);
    partial void OnWeldingLocationIdChanged();
    partial void OnWeldingLocationCodeChanging(string value);
    partial void OnWeldingLocationCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_WeldingLocation()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingLocationId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldingLocationId
		{
			get
			{
				return this._WeldingLocationId;
			}
			set
			{
				if ((this._WeldingLocationId != value))
				{
					this.OnWeldingLocationIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingLocationId = value;
					this.SendPropertyChanged("WeldingLocationId");
					this.OnWeldingLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingLocationCode", DbType="NVarChar(50)")]
		public string WeldingLocationCode
		{
			get
			{
				return this._WeldingLocationCode;
			}
			set
			{
				if ((this._WeldingLocationCode != value))
				{
					this.OnWeldingLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldingLocationCode = value;
					this.SendPropertyChanged("WeldingLocationCode");
					this.OnWeldingLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_WeldingLocation", Storage="_HJGL_WeldJoint", ThisKey="WeldingLocationId", OtherKey="WeldingLocationId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldingLocation = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldingLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_WeldingMethod")]
	public partial class Base_WeldingMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldingMethodId;
		
		private string _WeldingMethodCode;
		
		private string _WeldingMethodName;
		
		private string _ConsumablesType;
		
		private string _Remark;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<WPQ_WPQList> _WPQ_WPQList;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldingMethodIdChanging(string value);
    partial void OnWeldingMethodIdChanged();
    partial void OnWeldingMethodCodeChanging(string value);
    partial void OnWeldingMethodCodeChanged();
    partial void OnWeldingMethodNameChanging(string value);
    partial void OnWeldingMethodNameChanged();
    partial void OnConsumablesTypeChanging(string value);
    partial void OnConsumablesTypeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_WeldingMethod()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._WPQ_WPQList = new EntitySet<WPQ_WPQList>(new Action<WPQ_WPQList>(this.attach_WPQ_WPQList), new Action<WPQ_WPQList>(this.detach_WPQ_WPQList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldingMethodId
		{
			get
			{
				return this._WeldingMethodId;
			}
			set
			{
				if ((this._WeldingMethodId != value))
				{
					this.OnWeldingMethodIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingMethodId = value;
					this.SendPropertyChanged("WeldingMethodId");
					this.OnWeldingMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodCode", DbType="NVarChar(50)")]
		public string WeldingMethodCode
		{
			get
			{
				return this._WeldingMethodCode;
			}
			set
			{
				if ((this._WeldingMethodCode != value))
				{
					this.OnWeldingMethodCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldingMethodCode = value;
					this.SendPropertyChanged("WeldingMethodCode");
					this.OnWeldingMethodCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodName", DbType="NVarChar(50)")]
		public string WeldingMethodName
		{
			get
			{
				return this._WeldingMethodName;
			}
			set
			{
				if ((this._WeldingMethodName != value))
				{
					this.OnWeldingMethodNameChanging(value);
					this.SendPropertyChanging();
					this._WeldingMethodName = value;
					this.SendPropertyChanged("WeldingMethodName");
					this.OnWeldingMethodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumablesType", DbType="NVarChar(10)")]
		public string ConsumablesType
		{
			get
			{
				return this._ConsumablesType;
			}
			set
			{
				if ((this._ConsumablesType != value))
				{
					this.OnConsumablesTypeChanging(value);
					this.SendPropertyChanging();
					this._ConsumablesType = value;
					this.SendPropertyChanged("ConsumablesType");
					this.OnConsumablesTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_WeldingMethod", Storage="_HJGL_WeldJoint", ThisKey="WeldingMethodId", OtherKey="WeldingMethodId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WPQ_WPQList_Base_WeldingMethod", Storage="_WPQ_WPQList", ThisKey="WeldingMethodId", OtherKey="WeldingMethodId", DeleteRule="NO ACTION")]
		public EntitySet<WPQ_WPQList> WPQ_WPQList
		{
			get
			{
				return this._WPQ_WPQList;
			}
			set
			{
				this._WPQ_WPQList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldingMethod = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldingMethod = null;
		}
		
		private void attach_WPQ_WPQList(WPQ_WPQList entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldingMethod = this;
		}
		
		private void detach_WPQ_WPQList(WPQ_WPQList entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldingMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_WeldType")]
	public partial class Base_WeldType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldTypeId;
		
		private string _WeldTypeCode;
		
		private string _WeldTypeName;
		
		private string _DetectionType;
		
		private System.Nullable<decimal> _Thickness;
		
		private string _Remark;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldTypeIdChanging(string value);
    partial void OnWeldTypeIdChanged();
    partial void OnWeldTypeCodeChanging(string value);
    partial void OnWeldTypeCodeChanged();
    partial void OnWeldTypeNameChanging(string value);
    partial void OnWeldTypeNameChanged();
    partial void OnDetectionTypeChanging(string value);
    partial void OnDetectionTypeChanged();
    partial void OnThicknessChanging(System.Nullable<decimal> value);
    partial void OnThicknessChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_WeldType()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldTypeId
		{
			get
			{
				return this._WeldTypeId;
			}
			set
			{
				if ((this._WeldTypeId != value))
				{
					this.OnWeldTypeIdChanging(value);
					this.SendPropertyChanging();
					this._WeldTypeId = value;
					this.SendPropertyChanged("WeldTypeId");
					this.OnWeldTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldTypeCode", DbType="NVarChar(50)")]
		public string WeldTypeCode
		{
			get
			{
				return this._WeldTypeCode;
			}
			set
			{
				if ((this._WeldTypeCode != value))
				{
					this.OnWeldTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldTypeCode = value;
					this.SendPropertyChanged("WeldTypeCode");
					this.OnWeldTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldTypeName", DbType="NVarChar(50)")]
		public string WeldTypeName
		{
			get
			{
				return this._WeldTypeName;
			}
			set
			{
				if ((this._WeldTypeName != value))
				{
					this.OnWeldTypeNameChanging(value);
					this.SendPropertyChanging();
					this._WeldTypeName = value;
					this.SendPropertyChanged("WeldTypeName");
					this.OnWeldTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionType", DbType="NVarChar(150)")]
		public string DetectionType
		{
			get
			{
				return this._DetectionType;
			}
			set
			{
				if ((this._DetectionType != value))
				{
					this.OnDetectionTypeChanging(value);
					this.SendPropertyChanging();
					this._DetectionType = value;
					this.SendPropertyChanged("DetectionType");
					this.OnDetectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Thickness
		{
			get
			{
				return this._Thickness;
			}
			set
			{
				if ((this._Thickness != value))
				{
					this.OnThicknessChanging(value);
					this.SendPropertyChanging();
					this._Thickness = value;
					this.SendPropertyChanged("Thickness");
					this.OnThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_WeldType", Storage="_HJGL_WeldJoint", ThisKey="WeldTypeId", OtherKey="WeldTypeId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldType = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_WorkPost")]
	public partial class Base_WorkPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkPostId;
		
		private string _WorkPostName;
		
		private string _WorkPostCode;
		
		private string _Remark;
		
		private string _PostType;
		
		private System.Nullable<bool> _IsHsse;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkPostIdChanging(string value);
    partial void OnWorkPostIdChanged();
    partial void OnWorkPostNameChanging(string value);
    partial void OnWorkPostNameChanged();
    partial void OnWorkPostCodeChanging(string value);
    partial void OnWorkPostCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnPostTypeChanging(string value);
    partial void OnPostTypeChanged();
    partial void OnIsHsseChanging(System.Nullable<bool> value);
    partial void OnIsHsseChanged();
    #endregion
		
		public Base_WorkPost()
		{
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					this.OnWorkPostIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPostId = value;
					this.SendPropertyChanged("WorkPostId");
					this.OnWorkPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostName", DbType="NVarChar(100)")]
		public string WorkPostName
		{
			get
			{
				return this._WorkPostName;
			}
			set
			{
				if ((this._WorkPostName != value))
				{
					this.OnWorkPostNameChanging(value);
					this.SendPropertyChanging();
					this._WorkPostName = value;
					this.SendPropertyChanged("WorkPostName");
					this.OnWorkPostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostCode", DbType="NVarChar(50)")]
		public string WorkPostCode
		{
			get
			{
				return this._WorkPostCode;
			}
			set
			{
				if ((this._WorkPostCode != value))
				{
					this.OnWorkPostCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkPostCode = value;
					this.SendPropertyChanged("WorkPostCode");
					this.OnWorkPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostType", DbType="NChar(1)")]
		public string PostType
		{
			get
			{
				return this._PostType;
			}
			set
			{
				if ((this._PostType != value))
				{
					this.OnPostTypeChanging(value);
					this.SendPropertyChanging();
					this._PostType = value;
					this.SendPropertyChanged("PostType");
					this.OnPostTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHsse", DbType="Bit")]
		public System.Nullable<bool> IsHsse
		{
			get
			{
				return this._IsHsse;
			}
			set
			{
				if ((this._IsHsse != value))
				{
					this.OnIsHsseChanging(value);
					this.SendPropertyChanging();
					this._IsHsse = value;
					this.SendPropertyChanged("IsHsse");
					this.OnIsHsseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_WorkPost", Storage="_SitePerson_Person", ThisKey="WorkPostId", OtherKey="WorkPostId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkPost = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkPost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Batch_BatchTrustItem")]
	public partial class HJGL_Batch_BatchTrustItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrustBatchItemId;
		
		private string _TrustBatchId;
		
		private string _PointBatchItemId;
		
		private string _RepairRecordId;
		
		private string _WeldJointId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _RepairNum;
		
		private System.Nullable<int> _TrustNum;
		
		private EntityRef<HJGL_Batch_PointBatchItem> _HJGL_Batch_PointBatchItem;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<HJGL_Batch_NDEItem> _HJGL_Batch_NDEItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrustBatchItemIdChanging(string value);
    partial void OnTrustBatchItemIdChanged();
    partial void OnTrustBatchIdChanging(string value);
    partial void OnTrustBatchIdChanged();
    partial void OnPointBatchItemIdChanging(string value);
    partial void OnPointBatchItemIdChanged();
    partial void OnRepairRecordIdChanging(string value);
    partial void OnRepairRecordIdChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnRepairNumChanging(System.Nullable<int> value);
    partial void OnRepairNumChanged();
    partial void OnTrustNumChanging(System.Nullable<int> value);
    partial void OnTrustNumChanged();
    #endregion
		
		public HJGL_Batch_BatchTrustItem()
		{
			this._HJGL_Batch_PointBatchItem = default(EntityRef<HJGL_Batch_PointBatchItem>);
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			this._HJGL_Batch_NDEItem = new EntitySet<HJGL_Batch_NDEItem>(new Action<HJGL_Batch_NDEItem>(this.attach_HJGL_Batch_NDEItem), new Action<HJGL_Batch_NDEItem>(this.detach_HJGL_Batch_NDEItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrustBatchItemId
		{
			get
			{
				return this._TrustBatchItemId;
			}
			set
			{
				if ((this._TrustBatchItemId != value))
				{
					this.OnTrustBatchItemIdChanging(value);
					this.SendPropertyChanging();
					this._TrustBatchItemId = value;
					this.SendPropertyChanged("TrustBatchItemId");
					this.OnTrustBatchItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchId", DbType="NVarChar(50)")]
		public string TrustBatchId
		{
			get
			{
				return this._TrustBatchId;
			}
			set
			{
				if ((this._TrustBatchId != value))
				{
					this.OnTrustBatchIdChanging(value);
					this.SendPropertyChanging();
					this._TrustBatchId = value;
					this.SendPropertyChanged("TrustBatchId");
					this.OnTrustBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchItemId", DbType="NVarChar(50)")]
		public string PointBatchItemId
		{
			get
			{
				return this._PointBatchItemId;
			}
			set
			{
				if ((this._PointBatchItemId != value))
				{
					if (this._HJGL_Batch_PointBatchItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointBatchItemIdChanging(value);
					this.SendPropertyChanging();
					this._PointBatchItemId = value;
					this.SendPropertyChanged("PointBatchItemId");
					this.OnPointBatchItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairRecordId", DbType="NVarChar(50)")]
		public string RepairRecordId
		{
			get
			{
				return this._RepairRecordId;
			}
			set
			{
				if ((this._RepairRecordId != value))
				{
					this.OnRepairRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RepairRecordId = value;
					this.SendPropertyChanged("RepairRecordId");
					this.OnRepairRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairNum", DbType="Int")]
		public System.Nullable<int> RepairNum
		{
			get
			{
				return this._RepairNum;
			}
			set
			{
				if ((this._RepairNum != value))
				{
					this.OnRepairNumChanging(value);
					this.SendPropertyChanging();
					this._RepairNum = value;
					this.SendPropertyChanged("RepairNum");
					this.OnRepairNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustNum", DbType="Int")]
		public System.Nullable<int> TrustNum
		{
			get
			{
				return this._TrustNum;
			}
			set
			{
				if ((this._TrustNum != value))
				{
					this.OnTrustNumChanging(value);
					this.SendPropertyChanging();
					this._TrustNum = value;
					this.SendPropertyChanged("TrustNum");
					this.OnTrustNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrustItem_HJGL_Batch_PointBatchItem", Storage="_HJGL_Batch_PointBatchItem", ThisKey="PointBatchItemId", OtherKey="PointBatchItemId", IsForeignKey=true)]
		public HJGL_Batch_PointBatchItem HJGL_Batch_PointBatchItem
		{
			get
			{
				return this._HJGL_Batch_PointBatchItem.Entity;
			}
			set
			{
				HJGL_Batch_PointBatchItem previousValue = this._HJGL_Batch_PointBatchItem.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Batch_PointBatchItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Batch_PointBatchItem.Entity = null;
						previousValue.HJGL_Batch_BatchTrustItem.Remove(this);
					}
					this._HJGL_Batch_PointBatchItem.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_BatchTrustItem.Add(this);
						this._PointBatchItemId = value.PointBatchItemId;
					}
					else
					{
						this._PointBatchItemId = default(string);
					}
					this.SendPropertyChanged("HJGL_Batch_PointBatchItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrustItem_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_Batch_BatchTrustItem.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_BatchTrustItem.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_NDEItem_HJGL_Batch_BatchTrustItem", Storage="_HJGL_Batch_NDEItem", ThisKey="TrustBatchItemId", OtherKey="TrustBatchItemId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_NDEItem> HJGL_Batch_NDEItem
		{
			get
			{
				return this._HJGL_Batch_NDEItem;
			}
			set
			{
				this._HJGL_Batch_NDEItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_NDEItem(HJGL_Batch_NDEItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_BatchTrustItem = this;
		}
		
		private void detach_HJGL_Batch_NDEItem(HJGL_Batch_NDEItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_BatchTrustItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Batch_NDE")]
	public partial class HJGL_Batch_NDE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NDEID;
		
		private string _TrustBatchId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _UnitWorkId;
		
		private string _NDEUnit;
		
		private string _NDECode;
		
		private System.Nullable<System.DateTime> _NDEDate;
		
		private string _NDEMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _Remark;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Unit> _NDEUnitBase_Unit;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
		private EntitySet<HJGL_Batch_NDEItem> _HJGL_Batch_NDEItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNDEIDChanging(string value);
    partial void OnNDEIDChanged();
    partial void OnTrustBatchIdChanging(string value);
    partial void OnTrustBatchIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnNDEUnitChanging(string value);
    partial void OnNDEUnitChanged();
    partial void OnNDECodeChanging(string value);
    partial void OnNDECodeChanged();
    partial void OnNDEDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNDEDateChanged();
    partial void OnNDEManChanging(string value);
    partial void OnNDEManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_Batch_NDE()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._NDEUnitBase_Unit = default(EntityRef<Base_Unit>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			this._HJGL_Batch_NDEItem = new EntitySet<HJGL_Batch_NDEItem>(new Action<HJGL_Batch_NDEItem>(this.attach_HJGL_Batch_NDEItem), new Action<HJGL_Batch_NDEItem>(this.detach_HJGL_Batch_NDEItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NDEID
		{
			get
			{
				return this._NDEID;
			}
			set
			{
				if ((this._NDEID != value))
				{
					this.OnNDEIDChanging(value);
					this.SendPropertyChanging();
					this._NDEID = value;
					this.SendPropertyChanged("NDEID");
					this.OnNDEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchId", DbType="NVarChar(50)")]
		public string TrustBatchId
		{
			get
			{
				return this._TrustBatchId;
			}
			set
			{
				if ((this._TrustBatchId != value))
				{
					this.OnTrustBatchIdChanging(value);
					this.SendPropertyChanging();
					this._TrustBatchId = value;
					this.SendPropertyChanged("TrustBatchId");
					this.OnTrustBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEUnit", DbType="NVarChar(50)")]
		public string NDEUnit
		{
			get
			{
				return this._NDEUnit;
			}
			set
			{
				if ((this._NDEUnit != value))
				{
					if (this._NDEUnitBase_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDEUnitChanging(value);
					this.SendPropertyChanging();
					this._NDEUnit = value;
					this.SendPropertyChanged("NDEUnit");
					this.OnNDEUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDECode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NDECode
		{
			get
			{
				return this._NDECode;
			}
			set
			{
				if ((this._NDECode != value))
				{
					this.OnNDECodeChanging(value);
					this.SendPropertyChanging();
					this._NDECode = value;
					this.SendPropertyChanged("NDECode");
					this.OnNDECodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NDEDate
		{
			get
			{
				return this._NDEDate;
			}
			set
			{
				if ((this._NDEDate != value))
				{
					this.OnNDEDateChanging(value);
					this.SendPropertyChanging();
					this._NDEDate = value;
					this.SendPropertyChanged("NDEDate");
					this.OnNDEDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEMan", DbType="VarChar(50)")]
		public string NDEMan
		{
			get
			{
				return this._NDEMan;
			}
			set
			{
				if ((this._NDEMan != value))
				{
					this.OnNDEManChanging(value);
					this.SendPropertyChanging();
					this._NDEMan = value;
					this.SendPropertyChanged("NDEMan");
					this.OnNDEManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_NDECheck_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_Batch_NDE.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_NDE.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_NDECheck_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_Batch_NDE.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_NDE.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_NDECheck_CheckUnit_Base_Unit", Storage="_NDEUnitBase_Unit", ThisKey="NDEUnit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit NDEUnitBase_Unit
		{
			get
			{
				return this._NDEUnitBase_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._NDEUnitBase_Unit.Entity;
				if (((previousValue != value) 
							|| (this._NDEUnitBase_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NDEUnitBase_Unit.Entity = null;
						previousValue.Unit.Remove(this);
					}
					this._NDEUnitBase_Unit.Entity = value;
					if ((value != null))
					{
						value.Unit.Add(this);
						this._NDEUnit = value.UnitId;
					}
					else
					{
						this._NDEUnit = default(string);
					}
					this.SendPropertyChanged("NDEUnitBase_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_NDE_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_Batch_NDE.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_NDE.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_NDEItem_HJGL_Batch_NDE", Storage="_HJGL_Batch_NDEItem", ThisKey="NDEID", OtherKey="NDEID", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_NDEItem> HJGL_Batch_NDEItem
		{
			get
			{
				return this._HJGL_Batch_NDEItem;
			}
			set
			{
				this._HJGL_Batch_NDEItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_NDEItem(HJGL_Batch_NDEItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_NDE = this;
		}
		
		private void detach_HJGL_Batch_NDEItem(HJGL_Batch_NDEItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_NDE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Batch_NDEItem")]
	public partial class HJGL_Batch_NDEItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NDEItemID;
		
		private string _NDEID;
		
		private string _TrustBatchItemId;
		
		private string _DetectionTypeId;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private string _RepairLocation;
		
		private System.Nullable<int> _TotalFilm;
		
		private System.Nullable<int> _PassFilm;
		
		private string _CheckResult;
		
		private string _NDEReportNo;
		
		private System.Nullable<System.DateTime> _FilmDate;
		
		private System.Nullable<System.DateTime> _ReportDate;
		
		private System.Nullable<System.DateTime> _SubmitDate;
		
		private string _CheckDefects;
		
		private string _JudgeGrade;
		
		private string _Remark;
		
		private EntityRef<HJGL_Batch_BatchTrustItem> _HJGL_Batch_BatchTrustItem;
		
		private EntityRef<HJGL_Batch_NDE> _HJGL_Batch_NDE;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNDEItemIDChanging(string value);
    partial void OnNDEItemIDChanged();
    partial void OnNDEIDChanging(string value);
    partial void OnNDEIDChanged();
    partial void OnTrustBatchItemIdChanging(string value);
    partial void OnTrustBatchItemIdChanged();
    partial void OnDetectionTypeIdChanging(string value);
    partial void OnDetectionTypeIdChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    partial void OnRepairLocationChanging(string value);
    partial void OnRepairLocationChanged();
    partial void OnTotalFilmChanging(System.Nullable<int> value);
    partial void OnTotalFilmChanged();
    partial void OnPassFilmChanging(System.Nullable<int> value);
    partial void OnPassFilmChanged();
    partial void OnCheckResultChanging(string value);
    partial void OnCheckResultChanged();
    partial void OnNDEReportNoChanging(string value);
    partial void OnNDEReportNoChanged();
    partial void OnFilmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFilmDateChanged();
    partial void OnReportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReportDateChanged();
    partial void OnSubmitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmitDateChanged();
    partial void OnCheckDefectsChanging(string value);
    partial void OnCheckDefectsChanged();
    partial void OnJudgeGradeChanging(string value);
    partial void OnJudgeGradeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_Batch_NDEItem()
		{
			this._HJGL_Batch_BatchTrustItem = default(EntityRef<HJGL_Batch_BatchTrustItem>);
			this._HJGL_Batch_NDE = default(EntityRef<HJGL_Batch_NDE>);
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEItemID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NDEItemID
		{
			get
			{
				return this._NDEItemID;
			}
			set
			{
				if ((this._NDEItemID != value))
				{
					this.OnNDEItemIDChanging(value);
					this.SendPropertyChanging();
					this._NDEItemID = value;
					this.SendPropertyChanged("NDEItemID");
					this.OnNDEItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NDEID
		{
			get
			{
				return this._NDEID;
			}
			set
			{
				if ((this._NDEID != value))
				{
					if (this._HJGL_Batch_NDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDEIDChanging(value);
					this.SendPropertyChanging();
					this._NDEID = value;
					this.SendPropertyChanged("NDEID");
					this.OnNDEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchItemId", DbType="NVarChar(50)")]
		public string TrustBatchItemId
		{
			get
			{
				return this._TrustBatchItemId;
			}
			set
			{
				if ((this._TrustBatchItemId != value))
				{
					if (this._HJGL_Batch_BatchTrustItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrustBatchItemIdChanging(value);
					this.SendPropertyChanging();
					this._TrustBatchItemId = value;
					this.SendPropertyChanged("TrustBatchItemId");
					this.OnTrustBatchItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					this.OnDetectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeId = value;
					this.SendPropertyChanged("DetectionTypeId");
					this.OnDetectionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairLocation", DbType="NVarChar(50)")]
		public string RepairLocation
		{
			get
			{
				return this._RepairLocation;
			}
			set
			{
				if ((this._RepairLocation != value))
				{
					this.OnRepairLocationChanging(value);
					this.SendPropertyChanging();
					this._RepairLocation = value;
					this.SendPropertyChanged("RepairLocation");
					this.OnRepairLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFilm", DbType="Int")]
		public System.Nullable<int> TotalFilm
		{
			get
			{
				return this._TotalFilm;
			}
			set
			{
				if ((this._TotalFilm != value))
				{
					this.OnTotalFilmChanging(value);
					this.SendPropertyChanging();
					this._TotalFilm = value;
					this.SendPropertyChanged("TotalFilm");
					this.OnTotalFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassFilm", DbType="Int")]
		public System.Nullable<int> PassFilm
		{
			get
			{
				return this._PassFilm;
			}
			set
			{
				if ((this._PassFilm != value))
				{
					this.OnPassFilmChanging(value);
					this.SendPropertyChanging();
					this._PassFilm = value;
					this.SendPropertyChanged("PassFilm");
					this.OnPassFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckResult", DbType="VarChar(20)")]
		public string CheckResult
		{
			get
			{
				return this._CheckResult;
			}
			set
			{
				if ((this._CheckResult != value))
				{
					this.OnCheckResultChanging(value);
					this.SendPropertyChanging();
					this._CheckResult = value;
					this.SendPropertyChanged("CheckResult");
					this.OnCheckResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEReportNo", DbType="VarChar(30)")]
		public string NDEReportNo
		{
			get
			{
				return this._NDEReportNo;
			}
			set
			{
				if ((this._NDEReportNo != value))
				{
					this.OnNDEReportNoChanging(value);
					this.SendPropertyChanging();
					this._NDEReportNo = value;
					this.SendPropertyChanged("NDEReportNo");
					this.OnNDEReportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FilmDate
		{
			get
			{
				return this._FilmDate;
			}
			set
			{
				if ((this._FilmDate != value))
				{
					this.OnFilmDateChanging(value);
					this.SendPropertyChanging();
					this._FilmDate = value;
					this.SendPropertyChanged("FilmDate");
					this.OnFilmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReportDate
		{
			get
			{
				return this._ReportDate;
			}
			set
			{
				if ((this._ReportDate != value))
				{
					this.OnReportDateChanging(value);
					this.SendPropertyChanging();
					this._ReportDate = value;
					this.SendPropertyChanged("ReportDate");
					this.OnReportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubmitDate
		{
			get
			{
				return this._SubmitDate;
			}
			set
			{
				if ((this._SubmitDate != value))
				{
					this.OnSubmitDateChanging(value);
					this.SendPropertyChanging();
					this._SubmitDate = value;
					this.SendPropertyChanged("SubmitDate");
					this.OnSubmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDefects", DbType="NVarChar(100)")]
		public string CheckDefects
		{
			get
			{
				return this._CheckDefects;
			}
			set
			{
				if ((this._CheckDefects != value))
				{
					this.OnCheckDefectsChanging(value);
					this.SendPropertyChanging();
					this._CheckDefects = value;
					this.SendPropertyChanged("CheckDefects");
					this.OnCheckDefectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JudgeGrade", DbType="NVarChar(10)")]
		public string JudgeGrade
		{
			get
			{
				return this._JudgeGrade;
			}
			set
			{
				if ((this._JudgeGrade != value))
				{
					this.OnJudgeGradeChanging(value);
					this.SendPropertyChanging();
					this._JudgeGrade = value;
					this.SendPropertyChanged("JudgeGrade");
					this.OnJudgeGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_NDEItem_HJGL_Batch_BatchTrustItem", Storage="_HJGL_Batch_BatchTrustItem", ThisKey="TrustBatchItemId", OtherKey="TrustBatchItemId", IsForeignKey=true)]
		public HJGL_Batch_BatchTrustItem HJGL_Batch_BatchTrustItem
		{
			get
			{
				return this._HJGL_Batch_BatchTrustItem.Entity;
			}
			set
			{
				HJGL_Batch_BatchTrustItem previousValue = this._HJGL_Batch_BatchTrustItem.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Batch_BatchTrustItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Batch_BatchTrustItem.Entity = null;
						previousValue.HJGL_Batch_NDEItem.Remove(this);
					}
					this._HJGL_Batch_BatchTrustItem.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_NDEItem.Add(this);
						this._TrustBatchItemId = value.TrustBatchItemId;
					}
					else
					{
						this._TrustBatchItemId = default(string);
					}
					this.SendPropertyChanged("HJGL_Batch_BatchTrustItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_NDEItem_HJGL_Batch_NDE", Storage="_HJGL_Batch_NDE", ThisKey="NDEID", OtherKey="NDEID", IsForeignKey=true)]
		public HJGL_Batch_NDE HJGL_Batch_NDE
		{
			get
			{
				return this._HJGL_Batch_NDE.Entity;
			}
			set
			{
				HJGL_Batch_NDE previousValue = this._HJGL_Batch_NDE.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Batch_NDE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Batch_NDE.Entity = null;
						previousValue.HJGL_Batch_NDEItem.Remove(this);
					}
					this._HJGL_Batch_NDE.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_NDEItem.Add(this);
						this._NDEID = value.NDEID;
					}
					else
					{
						this._NDEID = default(string);
					}
					this.SendPropertyChanged("HJGL_Batch_NDE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_HJGL_Batch_NDEItem", Storage="_HJGL_RepairRecord", ThisKey="NDEItemID", OtherKey="NDEItemID", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_NDEItem = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_NDEItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Batch_PointBatch")]
	public partial class HJGL_Batch_PointBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PointBatchId;
		
		private string _PointBatchCode;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _UnitWorkId;
		
		private string _DetectionTypeId;
		
		private string _DetectionRateId;
		
		private string _WelderId;
		
		private string _PipelineId;
		
		private string _PipingClassId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _BatchCondition;
		
		private EntityRef<Base_DetectionRate> _Base_DetectionRate;
		
		private EntityRef<Base_DetectionType> _Base_DetectionType;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_PipingClass> _Base_PipingClass;
		
		private EntityRef<HJGL_Pipeline> _HJGL_Pipeline;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
		private EntitySet<HJGL_Batch_PointBatchItem> _HJGL_Batch_PointBatchItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPointBatchIdChanging(string value);
    partial void OnPointBatchIdChanged();
    partial void OnPointBatchCodeChanging(string value);
    partial void OnPointBatchCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnDetectionTypeIdChanging(string value);
    partial void OnDetectionTypeIdChanged();
    partial void OnDetectionRateIdChanging(string value);
    partial void OnDetectionRateIdChanged();
    partial void OnWelderIdChanging(string value);
    partial void OnWelderIdChanged();
    partial void OnPipelineIdChanging(string value);
    partial void OnPipelineIdChanged();
    partial void OnPipingClassIdChanging(string value);
    partial void OnPipingClassIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnBatchConditionChanging(string value);
    partial void OnBatchConditionChanged();
    #endregion
		
		public HJGL_Batch_PointBatch()
		{
			this._Base_DetectionRate = default(EntityRef<Base_DetectionRate>);
			this._Base_DetectionType = default(EntityRef<Base_DetectionType>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_PipingClass = default(EntityRef<Base_PipingClass>);
			this._HJGL_Pipeline = default(EntityRef<HJGL_Pipeline>);
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			this._HJGL_Batch_PointBatchItem = new EntitySet<HJGL_Batch_PointBatchItem>(new Action<HJGL_Batch_PointBatchItem>(this.attach_HJGL_Batch_PointBatchItem), new Action<HJGL_Batch_PointBatchItem>(this.detach_HJGL_Batch_PointBatchItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PointBatchId
		{
			get
			{
				return this._PointBatchId;
			}
			set
			{
				if ((this._PointBatchId != value))
				{
					this.OnPointBatchIdChanging(value);
					this.SendPropertyChanging();
					this._PointBatchId = value;
					this.SendPropertyChanged("PointBatchId");
					this.OnPointBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchCode", DbType="NVarChar(100)")]
		public string PointBatchCode
		{
			get
			{
				return this._PointBatchCode;
			}
			set
			{
				if ((this._PointBatchCode != value))
				{
					this.OnPointBatchCodeChanging(value);
					this.SendPropertyChanging();
					this._PointBatchCode = value;
					this.SendPropertyChanged("PointBatchCode");
					this.OnPointBatchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					if (this._Base_DetectionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeId = value;
					this.SendPropertyChanged("DetectionTypeId");
					this.OnDetectionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50)")]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					if (this._Base_DetectionRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetectionRateIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionRateId = value;
					this.SendPropertyChanged("DetectionRateId");
					this.OnDetectionRateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderId", DbType="NVarChar(50)")]
		public string WelderId
		{
			get
			{
				return this._WelderId;
			}
			set
			{
				if ((this._WelderId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWelderIdChanging(value);
					this.SendPropertyChanging();
					this._WelderId = value;
					this.SendPropertyChanged("WelderId");
					this.OnWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					if (this._HJGL_Pipeline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipelineIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineId = value;
					this.SendPropertyChanged("PipelineId");
					this.OnPipelineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassId", DbType="NVarChar(50)")]
		public string PipingClassId
		{
			get
			{
				return this._PipingClassId;
			}
			set
			{
				if ((this._PipingClassId != value))
				{
					if (this._Base_PipingClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipingClassIdChanging(value);
					this.SendPropertyChanging();
					this._PipingClassId = value;
					this.SendPropertyChanged("PipingClassId");
					this.OnPipingClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchCondition", DbType="NVarChar(50)")]
		public string BatchCondition
		{
			get
			{
				return this._BatchCondition;
			}
			set
			{
				if ((this._BatchCondition != value))
				{
					this.OnBatchConditionChanging(value);
					this.SendPropertyChanging();
					this._BatchCondition = value;
					this.SendPropertyChanged("BatchCondition");
					this.OnBatchConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Base_DetectionRate", Storage="_Base_DetectionRate", ThisKey="DetectionRateId", OtherKey="DetectionRateId", IsForeignKey=true)]
		public Base_DetectionRate Base_DetectionRate
		{
			get
			{
				return this._Base_DetectionRate.Entity;
			}
			set
			{
				Base_DetectionRate previousValue = this._Base_DetectionRate.Entity;
				if (((previousValue != value) 
							|| (this._Base_DetectionRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_DetectionRate.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._Base_DetectionRate.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._DetectionRateId = value.DetectionRateId;
					}
					else
					{
						this._DetectionRateId = default(string);
					}
					this.SendPropertyChanged("Base_DetectionRate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Base_DetectionType", Storage="_Base_DetectionType", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", IsForeignKey=true)]
		public Base_DetectionType Base_DetectionType
		{
			get
			{
				return this._Base_DetectionType.Entity;
			}
			set
			{
				Base_DetectionType previousValue = this._Base_DetectionType.Entity;
				if (((previousValue != value) 
							|| (this._Base_DetectionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_DetectionType.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._Base_DetectionType.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._DetectionTypeId = value.DetectionTypeId;
					}
					else
					{
						this._DetectionTypeId = default(string);
					}
					this.SendPropertyChanged("Base_DetectionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Batch_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_Base_PipingClass", Storage="_Base_PipingClass", ThisKey="PipingClassId", OtherKey="PipingClassId", IsForeignKey=true)]
		public Base_PipingClass Base_PipingClass
		{
			get
			{
				return this._Base_PipingClass.Entity;
			}
			set
			{
				Base_PipingClass previousValue = this._Base_PipingClass.Entity;
				if (((previousValue != value) 
							|| (this._Base_PipingClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_PipingClass.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._Base_PipingClass.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._PipingClassId = value.PipingClassId;
					}
					else
					{
						this._PipingClassId = default(string);
					}
					this.SendPropertyChanged("Base_PipingClass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_HJGL_Pipeline", Storage="_HJGL_Pipeline", ThisKey="PipelineId", OtherKey="PipelineId", IsForeignKey=true)]
		public HJGL_Pipeline HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline.Entity;
			}
			set
			{
				HJGL_Pipeline previousValue = this._HJGL_Pipeline.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Pipeline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Pipeline.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._HJGL_Pipeline.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._PipelineId = value.PipelineId;
					}
					else
					{
						this._PipelineId = default(string);
					}
					this.SendPropertyChanged("HJGL_Pipeline");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="WelderId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._WelderId = value.PersonId;
					}
					else
					{
						this._WelderId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatchItem_HJGL_Batch_PointBatch", Storage="_HJGL_Batch_PointBatchItem", ThisKey="PointBatchId", OtherKey="PointBatchId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatchItem> HJGL_Batch_PointBatchItem
		{
			get
			{
				return this._HJGL_Batch_PointBatchItem;
			}
			set
			{
				this._HJGL_Batch_PointBatchItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_PointBatch = this;
		}
		
		private void detach_HJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_PointBatch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Batch_PointBatchItem")]
	public partial class HJGL_Batch_PointBatchItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PointBatchItemId;
		
		private string _PointBatchId;
		
		private string _WeldJointId;
		
		private string _PointState;
		
		private System.Nullable<System.DateTime> _PointDate;
		
		private System.Nullable<System.DateTime> _WeldingDate;
		
		private System.Nullable<System.DateTime> _RepairDate;
		
		private string _RepairRecordId;
		
		private System.Nullable<System.DateTime> _CutDate;
		
		private System.Nullable<System.DateTime> _CreatDate;
		
		private System.Nullable<bool> _IsBuildTrust;
		
		private System.Nullable<bool> _IsWelderFirst;
		
		private System.Nullable<bool> _IsPipelineFirst;
		
		private string _ToPointBatchItemId;
		
		private System.Nullable<bool> _IsAudit;
		
		private string _Remark;
		
		private EntitySet<HJGL_Batch_BatchTrustItem> _HJGL_Batch_BatchTrustItem;
		
		private EntityRef<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPointBatchItemIdChanging(string value);
    partial void OnPointBatchItemIdChanged();
    partial void OnPointBatchIdChanging(string value);
    partial void OnPointBatchIdChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnPointStateChanging(string value);
    partial void OnPointStateChanged();
    partial void OnPointDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPointDateChanged();
    partial void OnWeldingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWeldingDateChanged();
    partial void OnRepairDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRepairDateChanged();
    partial void OnRepairRecordIdChanging(string value);
    partial void OnRepairRecordIdChanged();
    partial void OnCutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCutDateChanged();
    partial void OnCreatDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatDateChanged();
    partial void OnIsBuildTrustChanging(System.Nullable<bool> value);
    partial void OnIsBuildTrustChanged();
    partial void OnIsWelderFirstChanging(System.Nullable<bool> value);
    partial void OnIsWelderFirstChanged();
    partial void OnIsPipelineFirstChanging(System.Nullable<bool> value);
    partial void OnIsPipelineFirstChanged();
    partial void OnToPointBatchItemIdChanging(string value);
    partial void OnToPointBatchItemIdChanged();
    partial void OnIsAuditChanging(System.Nullable<bool> value);
    partial void OnIsAuditChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_Batch_PointBatchItem()
		{
			this._HJGL_Batch_BatchTrustItem = new EntitySet<HJGL_Batch_BatchTrustItem>(new Action<HJGL_Batch_BatchTrustItem>(this.attach_HJGL_Batch_BatchTrustItem), new Action<HJGL_Batch_BatchTrustItem>(this.detach_HJGL_Batch_BatchTrustItem));
			this._HJGL_Batch_PointBatch = default(EntityRef<HJGL_Batch_PointBatch>);
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PointBatchItemId
		{
			get
			{
				return this._PointBatchItemId;
			}
			set
			{
				if ((this._PointBatchItemId != value))
				{
					this.OnPointBatchItemIdChanging(value);
					this.SendPropertyChanging();
					this._PointBatchItemId = value;
					this.SendPropertyChanged("PointBatchItemId");
					this.OnPointBatchItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchId", DbType="NVarChar(50)")]
		public string PointBatchId
		{
			get
			{
				return this._PointBatchId;
			}
			set
			{
				if ((this._PointBatchId != value))
				{
					if (this._HJGL_Batch_PointBatch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointBatchIdChanging(value);
					this.SendPropertyChanging();
					this._PointBatchId = value;
					this.SendPropertyChanged("PointBatchId");
					this.OnPointBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointState", DbType="Char(1)")]
		public string PointState
		{
			get
			{
				return this._PointState;
			}
			set
			{
				if ((this._PointState != value))
				{
					this.OnPointStateChanging(value);
					this.SendPropertyChanging();
					this._PointState = value;
					this.SendPropertyChanged("PointState");
					this.OnPointStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PointDate
		{
			get
			{
				return this._PointDate;
			}
			set
			{
				if ((this._PointDate != value))
				{
					this.OnPointDateChanging(value);
					this.SendPropertyChanging();
					this._PointDate = value;
					this.SendPropertyChanged("PointDate");
					this.OnPointDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WeldingDate
		{
			get
			{
				return this._WeldingDate;
			}
			set
			{
				if ((this._WeldingDate != value))
				{
					this.OnWeldingDateChanging(value);
					this.SendPropertyChanging();
					this._WeldingDate = value;
					this.SendPropertyChanged("WeldingDate");
					this.OnWeldingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RepairDate
		{
			get
			{
				return this._RepairDate;
			}
			set
			{
				if ((this._RepairDate != value))
				{
					this.OnRepairDateChanging(value);
					this.SendPropertyChanging();
					this._RepairDate = value;
					this.SendPropertyChanged("RepairDate");
					this.OnRepairDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairRecordId", DbType="NVarChar(50)")]
		public string RepairRecordId
		{
			get
			{
				return this._RepairRecordId;
			}
			set
			{
				if ((this._RepairRecordId != value))
				{
					this.OnRepairRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RepairRecordId = value;
					this.SendPropertyChanged("RepairRecordId");
					this.OnRepairRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CutDate
		{
			get
			{
				return this._CutDate;
			}
			set
			{
				if ((this._CutDate != value))
				{
					this.OnCutDateChanging(value);
					this.SendPropertyChanging();
					this._CutDate = value;
					this.SendPropertyChanged("CutDate");
					this.OnCutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatDate
		{
			get
			{
				return this._CreatDate;
			}
			set
			{
				if ((this._CreatDate != value))
				{
					this.OnCreatDateChanging(value);
					this.SendPropertyChanging();
					this._CreatDate = value;
					this.SendPropertyChanged("CreatDate");
					this.OnCreatDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuildTrust", DbType="Bit")]
		public System.Nullable<bool> IsBuildTrust
		{
			get
			{
				return this._IsBuildTrust;
			}
			set
			{
				if ((this._IsBuildTrust != value))
				{
					this.OnIsBuildTrustChanging(value);
					this.SendPropertyChanging();
					this._IsBuildTrust = value;
					this.SendPropertyChanged("IsBuildTrust");
					this.OnIsBuildTrustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWelderFirst", DbType="Bit")]
		public System.Nullable<bool> IsWelderFirst
		{
			get
			{
				return this._IsWelderFirst;
			}
			set
			{
				if ((this._IsWelderFirst != value))
				{
					this.OnIsWelderFirstChanging(value);
					this.SendPropertyChanging();
					this._IsWelderFirst = value;
					this.SendPropertyChanged("IsWelderFirst");
					this.OnIsWelderFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPipelineFirst", DbType="Bit")]
		public System.Nullable<bool> IsPipelineFirst
		{
			get
			{
				return this._IsPipelineFirst;
			}
			set
			{
				if ((this._IsPipelineFirst != value))
				{
					this.OnIsPipelineFirstChanging(value);
					this.SendPropertyChanging();
					this._IsPipelineFirst = value;
					this.SendPropertyChanged("IsPipelineFirst");
					this.OnIsPipelineFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPointBatchItemId", DbType="NVarChar(50)")]
		public string ToPointBatchItemId
		{
			get
			{
				return this._ToPointBatchItemId;
			}
			set
			{
				if ((this._ToPointBatchItemId != value))
				{
					this.OnToPointBatchItemIdChanging(value);
					this.SendPropertyChanging();
					this._ToPointBatchItemId = value;
					this.SendPropertyChanged("ToPointBatchItemId");
					this.OnToPointBatchItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAudit", DbType="Bit")]
		public System.Nullable<bool> IsAudit
		{
			get
			{
				return this._IsAudit;
			}
			set
			{
				if ((this._IsAudit != value))
				{
					this.OnIsAuditChanging(value);
					this.SendPropertyChanging();
					this._IsAudit = value;
					this.SendPropertyChanged("IsAudit");
					this.OnIsAuditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(150)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrustItem_HJGL_Batch_PointBatchItem", Storage="_HJGL_Batch_BatchTrustItem", ThisKey="PointBatchItemId", OtherKey="PointBatchItemId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_BatchTrustItem> HJGL_Batch_BatchTrustItem
		{
			get
			{
				return this._HJGL_Batch_BatchTrustItem;
			}
			set
			{
				this._HJGL_Batch_BatchTrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatchItem_HJGL_Batch_PointBatch", Storage="_HJGL_Batch_PointBatch", ThisKey="PointBatchId", OtherKey="PointBatchId", IsForeignKey=true)]
		public HJGL_Batch_PointBatch HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch.Entity;
			}
			set
			{
				HJGL_Batch_PointBatch previousValue = this._HJGL_Batch_PointBatch.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Batch_PointBatch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Batch_PointBatch.Entity = null;
						previousValue.HJGL_Batch_PointBatchItem.Remove(this);
					}
					this._HJGL_Batch_PointBatch.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatchItem.Add(this);
						this._PointBatchId = value.PointBatchId;
					}
					else
					{
						this._PointBatchId = default(string);
					}
					this.SendPropertyChanged("HJGL_Batch_PointBatch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatchItem_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_Batch_PointBatchItem.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatchItem.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_PointBatchItem = this;
		}
		
		private void detach_HJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_PointBatchItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Hard_Report")]
	public partial class HJGL_Hard_Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HardReportId;
		
		private string _HardTrustItemID;
		
		private string _WeldJointId;
		
		private string _HardReportNo;
		
		private string _TestingPointNo;
		
		private System.Nullable<int> _HardNessValue1;
		
		private System.Nullable<int> _HardNessValue2;
		
		private System.Nullable<int> _HardNessValue3;
		
		private string _Remark;
		
		private EntityRef<HJGL_Hard_TrustItem> _HJGL_Hard_TrustItem;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHardReportIdChanging(string value);
    partial void OnHardReportIdChanged();
    partial void OnHardTrustItemIDChanging(string value);
    partial void OnHardTrustItemIDChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnHardReportNoChanging(string value);
    partial void OnHardReportNoChanged();
    partial void OnTestingPointNoChanging(string value);
    partial void OnTestingPointNoChanged();
    partial void OnHardNessValue1Changing(System.Nullable<int> value);
    partial void OnHardNessValue1Changed();
    partial void OnHardNessValue2Changing(System.Nullable<int> value);
    partial void OnHardNessValue2Changed();
    partial void OnHardNessValue3Changing(System.Nullable<int> value);
    partial void OnHardNessValue3Changed();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_Hard_Report()
		{
			this._HJGL_Hard_TrustItem = default(EntityRef<HJGL_Hard_TrustItem>);
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardReportId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HardReportId
		{
			get
			{
				return this._HardReportId;
			}
			set
			{
				if ((this._HardReportId != value))
				{
					this.OnHardReportIdChanging(value);
					this.SendPropertyChanging();
					this._HardReportId = value;
					this.SendPropertyChanged("HardReportId");
					this.OnHardReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustItemID", DbType="NVarChar(50)")]
		public string HardTrustItemID
		{
			get
			{
				return this._HardTrustItemID;
			}
			set
			{
				if ((this._HardTrustItemID != value))
				{
					if (this._HJGL_Hard_TrustItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHardTrustItemIDChanging(value);
					this.SendPropertyChanging();
					this._HardTrustItemID = value;
					this.SendPropertyChanged("HardTrustItemID");
					this.OnHardTrustItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardReportNo", DbType="NChar(10)")]
		public string HardReportNo
		{
			get
			{
				return this._HardReportNo;
			}
			set
			{
				if ((this._HardReportNo != value))
				{
					this.OnHardReportNoChanging(value);
					this.SendPropertyChanging();
					this._HardReportNo = value;
					this.SendPropertyChanged("HardReportNo");
					this.OnHardReportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingPointNo", DbType="NVarChar(20)")]
		public string TestingPointNo
		{
			get
			{
				return this._TestingPointNo;
			}
			set
			{
				if ((this._TestingPointNo != value))
				{
					this.OnTestingPointNoChanging(value);
					this.SendPropertyChanging();
					this._TestingPointNo = value;
					this.SendPropertyChanged("TestingPointNo");
					this.OnTestingPointNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardNessValue1", DbType="Int")]
		public System.Nullable<int> HardNessValue1
		{
			get
			{
				return this._HardNessValue1;
			}
			set
			{
				if ((this._HardNessValue1 != value))
				{
					this.OnHardNessValue1Changing(value);
					this.SendPropertyChanging();
					this._HardNessValue1 = value;
					this.SendPropertyChanged("HardNessValue1");
					this.OnHardNessValue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardNessValue2", DbType="Int")]
		public System.Nullable<int> HardNessValue2
		{
			get
			{
				return this._HardNessValue2;
			}
			set
			{
				if ((this._HardNessValue2 != value))
				{
					this.OnHardNessValue2Changing(value);
					this.SendPropertyChanging();
					this._HardNessValue2 = value;
					this.SendPropertyChanged("HardNessValue2");
					this.OnHardNessValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardNessValue3", DbType="Int")]
		public System.Nullable<int> HardNessValue3
		{
			get
			{
				return this._HardNessValue3;
			}
			set
			{
				if ((this._HardNessValue3 != value))
				{
					this.OnHardNessValue3Changing(value);
					this.SendPropertyChanging();
					this._HardNessValue3 = value;
					this.SendPropertyChanged("HardNessValue3");
					this.OnHardNessValue3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Report_HJGL_Hard_TrustItem", Storage="_HJGL_Hard_TrustItem", ThisKey="HardTrustItemID", OtherKey="HardTrustItemID", IsForeignKey=true)]
		public HJGL_Hard_TrustItem HJGL_Hard_TrustItem
		{
			get
			{
				return this._HJGL_Hard_TrustItem.Entity;
			}
			set
			{
				HJGL_Hard_TrustItem previousValue = this._HJGL_Hard_TrustItem.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Hard_TrustItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Hard_TrustItem.Entity = null;
						previousValue.HJGL_Hard_Report.Remove(this);
					}
					this._HJGL_Hard_TrustItem.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_Report.Add(this);
						this._HardTrustItemID = value.HardTrustItemID;
					}
					else
					{
						this._HardTrustItemID = default(string);
					}
					this.SendPropertyChanged("HJGL_Hard_TrustItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Report_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_Hard_Report.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_Report.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Hard_Trust")]
	public partial class HJGL_Hard_Trust : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HardTrustID;
		
		private string _HardTrustNo;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private System.Nullable<System.DateTime> _HardTrustDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _HardnessRate;
		
		private string _HardnessMethod;
		
		private string _CheckUnit;
		
		private string _HardTrustUnit;
		
		private string _DetectionTime;
		
		private string _Sendee;
		
		private string _Standards;
		
		private string _InspectionNum;
		
		private string _CheckNum;
		
		private string _TestWeldNum;
		
		private string _HardTrustMan;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<HJGL_Hard_TrustItem> _HJGL_Hard_TrustItem;
		
		private EntityRef<Base_Unit> _HardTrustUnitBase_Unit;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHardTrustIDChanging(string value);
    partial void OnHardTrustIDChanged();
    partial void OnHardTrustNoChanging(string value);
    partial void OnHardTrustNoChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnHardTrustDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHardTrustDateChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnHardnessRateChanging(string value);
    partial void OnHardnessRateChanged();
    partial void OnHardnessMethodChanging(string value);
    partial void OnHardnessMethodChanged();
    partial void OnCheckUnitChanging(string value);
    partial void OnCheckUnitChanged();
    partial void OnHardTrustUnitChanging(string value);
    partial void OnHardTrustUnitChanged();
    partial void OnDetectionTimeChanging(string value);
    partial void OnDetectionTimeChanged();
    partial void OnSendeeChanging(string value);
    partial void OnSendeeChanged();
    partial void OnStandardsChanging(string value);
    partial void OnStandardsChanged();
    partial void OnInspectionNumChanging(string value);
    partial void OnInspectionNumChanged();
    partial void OnCheckNumChanging(string value);
    partial void OnCheckNumChanged();
    partial void OnTestWeldNumChanging(string value);
    partial void OnTestWeldNumChanged();
    partial void OnHardTrustManChanging(string value);
    partial void OnHardTrustManChanged();
    #endregion
		
		public HJGL_Hard_Trust()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._HJGL_Hard_TrustItem = new EntitySet<HJGL_Hard_TrustItem>(new Action<HJGL_Hard_TrustItem>(this.attach_HJGL_Hard_TrustItem), new Action<HJGL_Hard_TrustItem>(this.detach_HJGL_Hard_TrustItem));
			this._HardTrustUnitBase_Unit = default(EntityRef<Base_Unit>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HardTrustID
		{
			get
			{
				return this._HardTrustID;
			}
			set
			{
				if ((this._HardTrustID != value))
				{
					this.OnHardTrustIDChanging(value);
					this.SendPropertyChanging();
					this._HardTrustID = value;
					this.SendPropertyChanged("HardTrustID");
					this.OnHardTrustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustNo", DbType="NVarChar(50)")]
		public string HardTrustNo
		{
			get
			{
				return this._HardTrustNo;
			}
			set
			{
				if ((this._HardTrustNo != value))
				{
					this.OnHardTrustNoChanging(value);
					this.SendPropertyChanging();
					this._HardTrustNo = value;
					this.SendPropertyChanged("HardTrustNo");
					this.OnHardTrustNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HardTrustDate
		{
			get
			{
				return this._HardTrustDate;
			}
			set
			{
				if ((this._HardTrustDate != value))
				{
					this.OnHardTrustDateChanging(value);
					this.SendPropertyChanging();
					this._HardTrustDate = value;
					this.SendPropertyChanged("HardTrustDate");
					this.OnHardTrustDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardnessRate", DbType="NVarChar(50)")]
		public string HardnessRate
		{
			get
			{
				return this._HardnessRate;
			}
			set
			{
				if ((this._HardnessRate != value))
				{
					this.OnHardnessRateChanging(value);
					this.SendPropertyChanging();
					this._HardnessRate = value;
					this.SendPropertyChanged("HardnessRate");
					this.OnHardnessRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardnessMethod", DbType="NVarChar(50)")]
		public string HardnessMethod
		{
			get
			{
				return this._HardnessMethod;
			}
			set
			{
				if ((this._HardnessMethod != value))
				{
					this.OnHardnessMethodChanging(value);
					this.SendPropertyChanging();
					this._HardnessMethod = value;
					this.SendPropertyChanged("HardnessMethod");
					this.OnHardnessMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckUnit", DbType="NVarChar(50)")]
		public string CheckUnit
		{
			get
			{
				return this._CheckUnit;
			}
			set
			{
				if ((this._CheckUnit != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckUnitChanging(value);
					this.SendPropertyChanging();
					this._CheckUnit = value;
					this.SendPropertyChanged("CheckUnit");
					this.OnCheckUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustUnit", DbType="NVarChar(50)")]
		public string HardTrustUnit
		{
			get
			{
				return this._HardTrustUnit;
			}
			set
			{
				if ((this._HardTrustUnit != value))
				{
					if (this._HardTrustUnitBase_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHardTrustUnitChanging(value);
					this.SendPropertyChanging();
					this._HardTrustUnit = value;
					this.SendPropertyChanged("HardTrustUnit");
					this.OnHardTrustUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTime", DbType="NVarChar(50)")]
		public string DetectionTime
		{
			get
			{
				return this._DetectionTime;
			}
			set
			{
				if ((this._DetectionTime != value))
				{
					this.OnDetectionTimeChanging(value);
					this.SendPropertyChanging();
					this._DetectionTime = value;
					this.SendPropertyChanged("DetectionTime");
					this.OnDetectionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sendee", DbType="NVarChar(50)")]
		public string Sendee
		{
			get
			{
				return this._Sendee;
			}
			set
			{
				if ((this._Sendee != value))
				{
					this.OnSendeeChanging(value);
					this.SendPropertyChanging();
					this._Sendee = value;
					this.SendPropertyChanged("Sendee");
					this.OnSendeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standards", DbType="NVarChar(50)")]
		public string Standards
		{
			get
			{
				return this._Standards;
			}
			set
			{
				if ((this._Standards != value))
				{
					this.OnStandardsChanging(value);
					this.SendPropertyChanging();
					this._Standards = value;
					this.SendPropertyChanged("Standards");
					this.OnStandardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionNum", DbType="NVarChar(50)")]
		public string InspectionNum
		{
			get
			{
				return this._InspectionNum;
			}
			set
			{
				if ((this._InspectionNum != value))
				{
					this.OnInspectionNumChanging(value);
					this.SendPropertyChanging();
					this._InspectionNum = value;
					this.SendPropertyChanged("InspectionNum");
					this.OnInspectionNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNum", DbType="NVarChar(50)")]
		public string CheckNum
		{
			get
			{
				return this._CheckNum;
			}
			set
			{
				if ((this._CheckNum != value))
				{
					this.OnCheckNumChanging(value);
					this.SendPropertyChanging();
					this._CheckNum = value;
					this.SendPropertyChanged("CheckNum");
					this.OnCheckNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestWeldNum", DbType="NVarChar(50)")]
		public string TestWeldNum
		{
			get
			{
				return this._TestWeldNum;
			}
			set
			{
				if ((this._TestWeldNum != value))
				{
					this.OnTestWeldNumChanging(value);
					this.SendPropertyChanging();
					this._TestWeldNum = value;
					this.SendPropertyChanged("TestWeldNum");
					this.OnTestWeldNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustMan", DbType="VarChar(50)")]
		public string HardTrustMan
		{
			get
			{
				return this._HardTrustMan;
			}
			set
			{
				if ((this._HardTrustMan != value))
				{
					this.OnHardTrustManChanging(value);
					this.SendPropertyChanging();
					this._HardTrustMan = value;
					this.SendPropertyChanged("HardTrustMan");
					this.OnHardTrustManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hard_Trust_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_Hard_Trust.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_Trust.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hard_Trust_Base_Unit", Storage="_Base_Unit", ThisKey="CheckUnit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_Hard_Trust.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_Trust.Add(this);
						this._CheckUnit = value.UnitId;
					}
					else
					{
						this._CheckUnit = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hard_TrustItem_Hard_Trust", Storage="_HJGL_Hard_TrustItem", ThisKey="HardTrustID", OtherKey="HardTrustID", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_TrustItem> HJGL_Hard_TrustItem
		{
			get
			{
				return this._HJGL_Hard_TrustItem;
			}
			set
			{
				this._HJGL_Hard_TrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Trust_Base_Unit", Storage="_HardTrustUnitBase_Unit", ThisKey="HardTrustUnit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit HardTrustUnitBase_Unit
		{
			get
			{
				return this._HardTrustUnitBase_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._HardTrustUnitBase_Unit.Entity;
				if (((previousValue != value) 
							|| (this._HardTrustUnitBase_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HardTrustUnitBase_Unit.Entity = null;
						previousValue.HJGL_Hard_Trust_Base_Unit.Remove(this);
					}
					this._HardTrustUnitBase_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_Trust_Base_Unit.Add(this);
						this._HardTrustUnit = value.UnitId;
					}
					else
					{
						this._HardTrustUnit = default(string);
					}
					this.SendPropertyChanged("HardTrustUnitBase_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Trust_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_Hard_Trust.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_Trust.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Hard_TrustItem(HJGL_Hard_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Hard_Trust = this;
		}
		
		private void detach_HJGL_Hard_TrustItem(HJGL_Hard_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Hard_Trust = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Hard_TrustItem")]
	public partial class HJGL_Hard_TrustItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HardTrustItemID;
		
		private string _HardTrustID;
		
		private string _HotProessTrustItemId;
		
		private string _WeldJointId;
		
		private System.Nullable<bool> _IsPass;
		
		private System.Nullable<bool> _IsTrust;
		
		private EntityRef<HJGL_Hard_Trust> _HJGL_Hard_Trust;
		
		private EntitySet<HJGL_Hard_Report> _HJGL_Hard_Report;
		
		private EntityRef<HJGL_HotProess_TrustItem> _HJGL_HotProess_TrustItem;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHardTrustItemIDChanging(string value);
    partial void OnHardTrustItemIDChanged();
    partial void OnHardTrustIDChanging(string value);
    partial void OnHardTrustIDChanged();
    partial void OnHotProessTrustItemIdChanging(string value);
    partial void OnHotProessTrustItemIdChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnIsTrustChanging(System.Nullable<bool> value);
    partial void OnIsTrustChanged();
    #endregion
		
		public HJGL_Hard_TrustItem()
		{
			this._HJGL_Hard_Trust = default(EntityRef<HJGL_Hard_Trust>);
			this._HJGL_Hard_Report = new EntitySet<HJGL_Hard_Report>(new Action<HJGL_Hard_Report>(this.attach_HJGL_Hard_Report), new Action<HJGL_Hard_Report>(this.detach_HJGL_Hard_Report));
			this._HJGL_HotProess_TrustItem = default(EntityRef<HJGL_HotProess_TrustItem>);
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustItemID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HardTrustItemID
		{
			get
			{
				return this._HardTrustItemID;
			}
			set
			{
				if ((this._HardTrustItemID != value))
				{
					this.OnHardTrustItemIDChanging(value);
					this.SendPropertyChanging();
					this._HardTrustItemID = value;
					this.SendPropertyChanged("HardTrustItemID");
					this.OnHardTrustItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustID", DbType="NVarChar(50)")]
		public string HardTrustID
		{
			get
			{
				return this._HardTrustID;
			}
			set
			{
				if ((this._HardTrustID != value))
				{
					if (this._HJGL_Hard_Trust.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHardTrustIDChanging(value);
					this.SendPropertyChanging();
					this._HardTrustID = value;
					this.SendPropertyChanged("HardTrustID");
					this.OnHardTrustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustItemId", DbType="NVarChar(50)")]
		public string HotProessTrustItemId
		{
			get
			{
				return this._HotProessTrustItemId;
			}
			set
			{
				if ((this._HotProessTrustItemId != value))
				{
					if (this._HJGL_HotProess_TrustItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotProessTrustItemIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessTrustItemId = value;
					this.SendPropertyChanged("HotProessTrustItemId");
					this.OnHotProessTrustItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTrust", DbType="Bit")]
		public System.Nullable<bool> IsTrust
		{
			get
			{
				return this._IsTrust;
			}
			set
			{
				if ((this._IsTrust != value))
				{
					this.OnIsTrustChanging(value);
					this.SendPropertyChanging();
					this._IsTrust = value;
					this.SendPropertyChanged("IsTrust");
					this.OnIsTrustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hard_TrustItem_Hard_Trust", Storage="_HJGL_Hard_Trust", ThisKey="HardTrustID", OtherKey="HardTrustID", IsForeignKey=true)]
		public HJGL_Hard_Trust HJGL_Hard_Trust
		{
			get
			{
				return this._HJGL_Hard_Trust.Entity;
			}
			set
			{
				HJGL_Hard_Trust previousValue = this._HJGL_Hard_Trust.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Hard_Trust.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Hard_Trust.Entity = null;
						previousValue.HJGL_Hard_TrustItem.Remove(this);
					}
					this._HJGL_Hard_Trust.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_TrustItem.Add(this);
						this._HardTrustID = value.HardTrustID;
					}
					else
					{
						this._HardTrustID = default(string);
					}
					this.SendPropertyChanged("HJGL_Hard_Trust");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Report_HJGL_Hard_TrustItem", Storage="_HJGL_Hard_Report", ThisKey="HardTrustItemID", OtherKey="HardTrustItemID", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_Report> HJGL_Hard_Report
		{
			get
			{
				return this._HJGL_Hard_Report;
			}
			set
			{
				this._HJGL_Hard_Report.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_TrustItem_HJGL_HotProess_TrustItem", Storage="_HJGL_HotProess_TrustItem", ThisKey="HotProessTrustItemId", OtherKey="HotProessTrustItemId", IsForeignKey=true)]
		public HJGL_HotProess_TrustItem HJGL_HotProess_TrustItem
		{
			get
			{
				return this._HJGL_HotProess_TrustItem.Entity;
			}
			set
			{
				HJGL_HotProess_TrustItem previousValue = this._HJGL_HotProess_TrustItem.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_HotProess_TrustItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_HotProess_TrustItem.Entity = null;
						previousValue.HJGL_Hard_TrustItem.Remove(this);
					}
					this._HJGL_HotProess_TrustItem.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_TrustItem.Add(this);
						this._HotProessTrustItemId = value.HotProessTrustItemId;
					}
					else
					{
						this._HotProessTrustItemId = default(string);
					}
					this.SendPropertyChanged("HJGL_HotProess_TrustItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_TrustItem_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_Hard_TrustItem.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_TrustItem.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Hard_Report(HJGL_Hard_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Hard_TrustItem = this;
		}
		
		private void detach_HJGL_Hard_Report(HJGL_Hard_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Hard_TrustItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_HotProess_Report")]
	public partial class HJGL_HotProess_Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HotProessReportId;
		
		private string _HotProessTrustItemId;
		
		private string _WeldJointId;
		
		private System.Nullable<int> _PointCount;
		
		private string _RequiredT;
		
		private string _ActualT;
		
		private string _RequestTime;
		
		private string _ActualTime;
		
		private string _RecordChartNo;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntityRef<HJGL_HotProess_TrustItem> _HJGL_HotProess_TrustItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHotProessReportIdChanging(string value);
    partial void OnHotProessReportIdChanged();
    partial void OnHotProessTrustItemIdChanging(string value);
    partial void OnHotProessTrustItemIdChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnPointCountChanging(System.Nullable<int> value);
    partial void OnPointCountChanged();
    partial void OnRequiredTChanging(string value);
    partial void OnRequiredTChanged();
    partial void OnActualTChanging(string value);
    partial void OnActualTChanged();
    partial void OnRequestTimeChanging(string value);
    partial void OnRequestTimeChanged();
    partial void OnActualTimeChanging(string value);
    partial void OnActualTimeChanged();
    partial void OnRecordChartNoChanging(string value);
    partial void OnRecordChartNoChanged();
    #endregion
		
		public HJGL_HotProess_Report()
		{
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			this._HJGL_HotProess_TrustItem = default(EntityRef<HJGL_HotProess_TrustItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessReportId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HotProessReportId
		{
			get
			{
				return this._HotProessReportId;
			}
			set
			{
				if ((this._HotProessReportId != value))
				{
					this.OnHotProessReportIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessReportId = value;
					this.SendPropertyChanged("HotProessReportId");
					this.OnHotProessReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustItemId", DbType="NVarChar(50)")]
		public string HotProessTrustItemId
		{
			get
			{
				return this._HotProessTrustItemId;
			}
			set
			{
				if ((this._HotProessTrustItemId != value))
				{
					if (this._HJGL_HotProess_TrustItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotProessTrustItemIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessTrustItemId = value;
					this.SendPropertyChanged("HotProessTrustItemId");
					this.OnHotProessTrustItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointCount", DbType="Int")]
		public System.Nullable<int> PointCount
		{
			get
			{
				return this._PointCount;
			}
			set
			{
				if ((this._PointCount != value))
				{
					this.OnPointCountChanging(value);
					this.SendPropertyChanging();
					this._PointCount = value;
					this.SendPropertyChanged("PointCount");
					this.OnPointCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredT", DbType="VarChar(20)")]
		public string RequiredT
		{
			get
			{
				return this._RequiredT;
			}
			set
			{
				if ((this._RequiredT != value))
				{
					this.OnRequiredTChanging(value);
					this.SendPropertyChanging();
					this._RequiredT = value;
					this.SendPropertyChanged("RequiredT");
					this.OnRequiredTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualT", DbType="VarChar(20)")]
		public string ActualT
		{
			get
			{
				return this._ActualT;
			}
			set
			{
				if ((this._ActualT != value))
				{
					this.OnActualTChanging(value);
					this.SendPropertyChanging();
					this._ActualT = value;
					this.SendPropertyChanged("ActualT");
					this.OnActualTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="VarChar(20)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualTime", DbType="VarChar(20)")]
		public string ActualTime
		{
			get
			{
				return this._ActualTime;
			}
			set
			{
				if ((this._ActualTime != value))
				{
					this.OnActualTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualTime = value;
					this.SendPropertyChanged("ActualTime");
					this.OnActualTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordChartNo", DbType="VarChar(20)")]
		public string RecordChartNo
		{
			get
			{
				return this._RecordChartNo;
			}
			set
			{
				if ((this._RecordChartNo != value))
				{
					this.OnRecordChartNoChanging(value);
					this.SendPropertyChanging();
					this._RecordChartNo = value;
					this.SendPropertyChanged("RecordChartNo");
					this.OnRecordChartNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Report_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_HotProess_Report.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_Report.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Report_HotProess_TrustItem", Storage="_HJGL_HotProess_TrustItem", ThisKey="HotProessTrustItemId", OtherKey="HotProessTrustItemId", IsForeignKey=true)]
		public HJGL_HotProess_TrustItem HJGL_HotProess_TrustItem
		{
			get
			{
				return this._HJGL_HotProess_TrustItem.Entity;
			}
			set
			{
				HJGL_HotProess_TrustItem previousValue = this._HJGL_HotProess_TrustItem.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_HotProess_TrustItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_HotProess_TrustItem.Entity = null;
						previousValue.HJGL_HotProess_Report.Remove(this);
					}
					this._HJGL_HotProess_TrustItem.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_Report.Add(this);
						this._HotProessTrustItemId = value.HotProessTrustItemId;
					}
					else
					{
						this._HotProessTrustItemId = default(string);
					}
					this.SendPropertyChanged("HJGL_HotProess_TrustItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_HotProess_Trust")]
	public partial class HJGL_HotProess_Trust : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HotProessTrustId;
		
		private string _HotProessTrustNo;
		
		private System.Nullable<System.DateTime> _ProessDate;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _UnitId;
		
		private string _Tabler;
		
		private string _Remark;
		
		private string _ProessMethod;
		
		private string _ProessEquipment;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<HJGL_HotProess_TrustItem> _HJGL_HotProess_TrustItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHotProessTrustIdChanging(string value);
    partial void OnHotProessTrustIdChanged();
    partial void OnHotProessTrustNoChanging(string value);
    partial void OnHotProessTrustNoChanged();
    partial void OnProessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProessDateChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnTablerChanging(string value);
    partial void OnTablerChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnProessMethodChanging(string value);
    partial void OnProessMethodChanged();
    partial void OnProessEquipmentChanging(string value);
    partial void OnProessEquipmentChanged();
    #endregion
		
		public HJGL_HotProess_Trust()
		{
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._HJGL_HotProess_TrustItem = new EntitySet<HJGL_HotProess_TrustItem>(new Action<HJGL_HotProess_TrustItem>(this.attach_HJGL_HotProess_TrustItem), new Action<HJGL_HotProess_TrustItem>(this.detach_HJGL_HotProess_TrustItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HotProessTrustId
		{
			get
			{
				return this._HotProessTrustId;
			}
			set
			{
				if ((this._HotProessTrustId != value))
				{
					this.OnHotProessTrustIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessTrustId = value;
					this.SendPropertyChanged("HotProessTrustId");
					this.OnHotProessTrustIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustNo", DbType="NVarChar(50)")]
		public string HotProessTrustNo
		{
			get
			{
				return this._HotProessTrustNo;
			}
			set
			{
				if ((this._HotProessTrustNo != value))
				{
					this.OnHotProessTrustNoChanging(value);
					this.SendPropertyChanging();
					this._HotProessTrustNo = value;
					this.SendPropertyChanged("HotProessTrustNo");
					this.OnHotProessTrustNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProessDate
		{
			get
			{
				return this._ProessDate;
			}
			set
			{
				if ((this._ProessDate != value))
				{
					this.OnProessDateChanging(value);
					this.SendPropertyChanging();
					this._ProessDate = value;
					this.SendPropertyChanged("ProessDate");
					this.OnProessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabler", DbType="NVarChar(50)")]
		public string Tabler
		{
			get
			{
				return this._Tabler;
			}
			set
			{
				if ((this._Tabler != value))
				{
					this.OnTablerChanging(value);
					this.SendPropertyChanging();
					this._Tabler = value;
					this.SendPropertyChanged("Tabler");
					this.OnTablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProessMethod", DbType="NVarChar(50)")]
		public string ProessMethod
		{
			get
			{
				return this._ProessMethod;
			}
			set
			{
				if ((this._ProessMethod != value))
				{
					this.OnProessMethodChanging(value);
					this.SendPropertyChanging();
					this._ProessMethod = value;
					this.SendPropertyChanged("ProessMethod");
					this.OnProessMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProessEquipment", DbType="NVarChar(50)")]
		public string ProessEquipment
		{
			get
			{
				return this._ProessEquipment;
			}
			set
			{
				if ((this._ProessEquipment != value))
				{
					this.OnProessEquipmentChanging(value);
					this.SendPropertyChanging();
					this._ProessEquipment = value;
					this.SendPropertyChanged("ProessEquipment");
					this.OnProessEquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_HotProess_Trust_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_HotProess_Trust.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_Trust.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Trust_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_HotProess_Trust.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_Trust.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Trust_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_HotProess_Trust.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_Trust.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_TrustItem_HotProess_Trust", Storage="_HJGL_HotProess_TrustItem", ThisKey="HotProessTrustId", OtherKey="HotProessTrustId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_TrustItem> HJGL_HotProess_TrustItem
		{
			get
			{
				return this._HJGL_HotProess_TrustItem;
			}
			set
			{
				this._HJGL_HotProess_TrustItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_HotProess_Trust = this;
		}
		
		private void detach_HJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_HotProess_Trust = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_HotProess_TrustItem")]
	public partial class HJGL_HotProess_TrustItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HotProessTrustItemId;
		
		private string _HotProessTrustId;
		
		private string _WeldJointId;
		
		private System.Nullable<bool> _IsPass;
		
		private System.Nullable<bool> _IsHardness;
		
		private System.Nullable<bool> _IsTrust;
		
		private string _HardTrustItemID;
		
		private System.Nullable<bool> _IsCompleted;
		
		private EntitySet<HJGL_Hard_TrustItem> _HJGL_Hard_TrustItem;
		
		private EntitySet<HJGL_HotProess_Report> _HJGL_HotProess_Report;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntityRef<HJGL_HotProess_Trust> _HJGL_HotProess_Trust;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHotProessTrustItemIdChanging(string value);
    partial void OnHotProessTrustItemIdChanged();
    partial void OnHotProessTrustIdChanging(string value);
    partial void OnHotProessTrustIdChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnIsHardnessChanging(System.Nullable<bool> value);
    partial void OnIsHardnessChanged();
    partial void OnIsTrustChanging(System.Nullable<bool> value);
    partial void OnIsTrustChanged();
    partial void OnHardTrustItemIDChanging(string value);
    partial void OnHardTrustItemIDChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    #endregion
		
		public HJGL_HotProess_TrustItem()
		{
			this._HJGL_Hard_TrustItem = new EntitySet<HJGL_Hard_TrustItem>(new Action<HJGL_Hard_TrustItem>(this.attach_HJGL_Hard_TrustItem), new Action<HJGL_Hard_TrustItem>(this.detach_HJGL_Hard_TrustItem));
			this._HJGL_HotProess_Report = new EntitySet<HJGL_HotProess_Report>(new Action<HJGL_HotProess_Report>(this.attach_HJGL_HotProess_Report), new Action<HJGL_HotProess_Report>(this.detach_HJGL_HotProess_Report));
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			this._HJGL_HotProess_Trust = default(EntityRef<HJGL_HotProess_Trust>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HotProessTrustItemId
		{
			get
			{
				return this._HotProessTrustItemId;
			}
			set
			{
				if ((this._HotProessTrustItemId != value))
				{
					this.OnHotProessTrustItemIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessTrustItemId = value;
					this.SendPropertyChanged("HotProessTrustItemId");
					this.OnHotProessTrustItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustId", DbType="NVarChar(50)")]
		public string HotProessTrustId
		{
			get
			{
				return this._HotProessTrustId;
			}
			set
			{
				if ((this._HotProessTrustId != value))
				{
					if (this._HJGL_HotProess_Trust.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotProessTrustIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessTrustId = value;
					this.SendPropertyChanged("HotProessTrustId");
					this.OnHotProessTrustIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHardness", DbType="Bit")]
		public System.Nullable<bool> IsHardness
		{
			get
			{
				return this._IsHardness;
			}
			set
			{
				if ((this._IsHardness != value))
				{
					this.OnIsHardnessChanging(value);
					this.SendPropertyChanging();
					this._IsHardness = value;
					this.SendPropertyChanged("IsHardness");
					this.OnIsHardnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTrust", DbType="Bit")]
		public System.Nullable<bool> IsTrust
		{
			get
			{
				return this._IsTrust;
			}
			set
			{
				if ((this._IsTrust != value))
				{
					this.OnIsTrustChanging(value);
					this.SendPropertyChanging();
					this._IsTrust = value;
					this.SendPropertyChanged("IsTrust");
					this.OnIsTrustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustItemID", DbType="NVarChar(50)")]
		public string HardTrustItemID
		{
			get
			{
				return this._HardTrustItemID;
			}
			set
			{
				if ((this._HardTrustItemID != value))
				{
					this.OnHardTrustItemIDChanging(value);
					this.SendPropertyChanging();
					this._HardTrustItemID = value;
					this.SendPropertyChanged("HardTrustItemID");
					this.OnHardTrustItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_TrustItem_HJGL_HotProess_TrustItem", Storage="_HJGL_Hard_TrustItem", ThisKey="HotProessTrustItemId", OtherKey="HotProessTrustItemId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_TrustItem> HJGL_Hard_TrustItem
		{
			get
			{
				return this._HJGL_Hard_TrustItem;
			}
			set
			{
				this._HJGL_Hard_TrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Report_HotProess_TrustItem", Storage="_HJGL_HotProess_Report", ThisKey="HotProessTrustItemId", OtherKey="HotProessTrustItemId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_Report> HJGL_HotProess_Report
		{
			get
			{
				return this._HJGL_HotProess_Report;
			}
			set
			{
				this._HJGL_HotProess_Report.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_TrustItem_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_HotProess_TrustItem.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_TrustItem.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_TrustItem_HotProess_Trust", Storage="_HJGL_HotProess_Trust", ThisKey="HotProessTrustId", OtherKey="HotProessTrustId", IsForeignKey=true)]
		public HJGL_HotProess_Trust HJGL_HotProess_Trust
		{
			get
			{
				return this._HJGL_HotProess_Trust.Entity;
			}
			set
			{
				HJGL_HotProess_Trust previousValue = this._HJGL_HotProess_Trust.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_HotProess_Trust.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_HotProess_Trust.Entity = null;
						previousValue.HJGL_HotProess_TrustItem.Remove(this);
					}
					this._HJGL_HotProess_Trust.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_TrustItem.Add(this);
						this._HotProessTrustId = value.HotProessTrustId;
					}
					else
					{
						this._HotProessTrustId = default(string);
					}
					this.SendPropertyChanged("HJGL_HotProess_Trust");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Hard_TrustItem(HJGL_Hard_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_HotProess_TrustItem = this;
		}
		
		private void detach_HJGL_Hard_TrustItem(HJGL_Hard_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_HotProess_TrustItem = null;
		}
		
		private void attach_HJGL_HotProess_Report(HJGL_HotProess_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_HotProess_TrustItem = this;
		}
		
		private void detach_HJGL_HotProess_Report(HJGL_HotProess_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_HotProess_TrustItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Pipeline")]
	public partial class HJGL_Pipeline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PipelineId;
		
		private string _PipelineCode;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _UnitId;
		
		private string _SingleNumber;
		
		private string _PipingClassId;
		
		private string _MediumId;
		
		private string _DetectionRateId;
		
		private string _DetectionType;
		
		private System.Nullable<decimal> _TestPressure;
		
		private string _TestMedium;
		
		private string _Remark;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntityRef<Base_DetectionRate> _Base_DetectionRate;
		
		private EntityRef<Base_Medium> _Base_Medium;
		
		private EntityRef<Base_PipingClass> _Base_PipingClass;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<PTP_AItemEndCheck> _PTP_AItemEndCheck;
		
		private EntitySet<PTP_BItemEndCheck> _PTP_BItemEndCheck;
		
		private EntitySet<PTP_PipelineList> _PTP_PipelineList;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPipelineIdChanging(string value);
    partial void OnPipelineIdChanged();
    partial void OnPipelineCodeChanging(string value);
    partial void OnPipelineCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnSingleNumberChanging(string value);
    partial void OnSingleNumberChanged();
    partial void OnPipingClassIdChanging(string value);
    partial void OnPipingClassIdChanged();
    partial void OnMediumIdChanging(string value);
    partial void OnMediumIdChanged();
    partial void OnDetectionRateIdChanging(string value);
    partial void OnDetectionRateIdChanged();
    partial void OnDetectionTypeChanging(string value);
    partial void OnDetectionTypeChanged();
    partial void OnTestPressureChanging(System.Nullable<decimal> value);
    partial void OnTestPressureChanged();
    partial void OnTestMediumChanging(string value);
    partial void OnTestMediumChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_Pipeline()
		{
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._Base_DetectionRate = default(EntityRef<Base_DetectionRate>);
			this._Base_Medium = default(EntityRef<Base_Medium>);
			this._Base_PipingClass = default(EntityRef<Base_PipingClass>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._PTP_AItemEndCheck = new EntitySet<PTP_AItemEndCheck>(new Action<PTP_AItemEndCheck>(this.attach_PTP_AItemEndCheck), new Action<PTP_AItemEndCheck>(this.detach_PTP_AItemEndCheck));
			this._PTP_BItemEndCheck = new EntitySet<PTP_BItemEndCheck>(new Action<PTP_BItemEndCheck>(this.attach_PTP_BItemEndCheck), new Action<PTP_BItemEndCheck>(this.detach_PTP_BItemEndCheck));
			this._PTP_PipelineList = new EntitySet<PTP_PipelineList>(new Action<PTP_PipelineList>(this.attach_PTP_PipelineList), new Action<PTP_PipelineList>(this.detach_PTP_PipelineList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					this.OnPipelineIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineId = value;
					this.SendPropertyChanged("PipelineId");
					this.OnPipelineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this.OnPipelineCodeChanging(value);
					this.SendPropertyChanging();
					this._PipelineCode = value;
					this.SendPropertyChanged("PipelineCode");
					this.OnPipelineCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleNumber", DbType="NVarChar(50)")]
		public string SingleNumber
		{
			get
			{
				return this._SingleNumber;
			}
			set
			{
				if ((this._SingleNumber != value))
				{
					this.OnSingleNumberChanging(value);
					this.SendPropertyChanging();
					this._SingleNumber = value;
					this.SendPropertyChanged("SingleNumber");
					this.OnSingleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassId", DbType="NVarChar(50)")]
		public string PipingClassId
		{
			get
			{
				return this._PipingClassId;
			}
			set
			{
				if ((this._PipingClassId != value))
				{
					if (this._Base_PipingClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipingClassIdChanging(value);
					this.SendPropertyChanging();
					this._PipingClassId = value;
					this.SendPropertyChanged("PipingClassId");
					this.OnPipingClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumId", DbType="NVarChar(50)")]
		public string MediumId
		{
			get
			{
				return this._MediumId;
			}
			set
			{
				if ((this._MediumId != value))
				{
					if (this._Base_Medium.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMediumIdChanging(value);
					this.SendPropertyChanging();
					this._MediumId = value;
					this.SendPropertyChanged("MediumId");
					this.OnMediumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50)")]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					if (this._Base_DetectionRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetectionRateIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionRateId = value;
					this.SendPropertyChanged("DetectionRateId");
					this.OnDetectionRateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionType", DbType="NVarChar(150)")]
		public string DetectionType
		{
			get
			{
				return this._DetectionType;
			}
			set
			{
				if ((this._DetectionType != value))
				{
					this.OnDetectionTypeChanging(value);
					this.SendPropertyChanging();
					this._DetectionType = value;
					this.SendPropertyChanged("DetectionType");
					this.OnDetectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPressure", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> TestPressure
		{
			get
			{
				return this._TestPressure;
			}
			set
			{
				if ((this._TestPressure != value))
				{
					this.OnTestPressureChanging(value);
					this.SendPropertyChanging();
					this._TestPressure = value;
					this.SendPropertyChanged("TestPressure");
					this.OnTestPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestMedium", DbType="NVarChar(50)")]
		public string TestMedium
		{
			get
			{
				return this._TestMedium;
			}
			set
			{
				if ((this._TestMedium != value))
				{
					this.OnTestMediumChanging(value);
					this.SendPropertyChanging();
					this._TestMedium = value;
					this.SendPropertyChanged("TestMedium");
					this.OnTestMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(150)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_HJGL_Pipeline", Storage="_HJGL_Batch_PointBatch", ThisKey="PipelineId", OtherKey="PipelineId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_DetectionRate", Storage="_Base_DetectionRate", ThisKey="DetectionRateId", OtherKey="DetectionRateId", IsForeignKey=true)]
		public Base_DetectionRate Base_DetectionRate
		{
			get
			{
				return this._Base_DetectionRate.Entity;
			}
			set
			{
				Base_DetectionRate previousValue = this._Base_DetectionRate.Entity;
				if (((previousValue != value) 
							|| (this._Base_DetectionRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_DetectionRate.Entity = null;
						previousValue.HJGL_Pipeline.Remove(this);
					}
					this._Base_DetectionRate.Entity = value;
					if ((value != null))
					{
						value.HJGL_Pipeline.Add(this);
						this._DetectionRateId = value.DetectionRateId;
					}
					else
					{
						this._DetectionRateId = default(string);
					}
					this.SendPropertyChanged("Base_DetectionRate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_Medium", Storage="_Base_Medium", ThisKey="MediumId", OtherKey="MediumId", IsForeignKey=true)]
		public Base_Medium Base_Medium
		{
			get
			{
				return this._Base_Medium.Entity;
			}
			set
			{
				Base_Medium previousValue = this._Base_Medium.Entity;
				if (((previousValue != value) 
							|| (this._Base_Medium.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Medium.Entity = null;
						previousValue.HJGL_Pipeline.Remove(this);
					}
					this._Base_Medium.Entity = value;
					if ((value != null))
					{
						value.HJGL_Pipeline.Add(this);
						this._MediumId = value.MediumId;
					}
					else
					{
						this._MediumId = default(string);
					}
					this.SendPropertyChanged("Base_Medium");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_PipingClass", Storage="_Base_PipingClass", ThisKey="PipingClassId", OtherKey="PipingClassId", IsForeignKey=true)]
		public Base_PipingClass Base_PipingClass
		{
			get
			{
				return this._Base_PipingClass.Entity;
			}
			set
			{
				Base_PipingClass previousValue = this._Base_PipingClass.Entity;
				if (((previousValue != value) 
							|| (this._Base_PipingClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_PipingClass.Entity = null;
						previousValue.HJGL_Pipeline.Remove(this);
					}
					this._Base_PipingClass.Entity = value;
					if ((value != null))
					{
						value.HJGL_Pipeline.Add(this);
						this._PipingClassId = value.PipingClassId;
					}
					else
					{
						this._PipingClassId = default(string);
					}
					this.SendPropertyChanged("Base_PipingClass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_Pipeline.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_Pipeline.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_Pipeline.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_Pipeline.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_Pipeline.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_Pipeline.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_HJGL_Pipeline", Storage="_HJGL_WeldJoint", ThisKey="PipelineId", OtherKey="PipelineId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_AItemEndCheck_HJGL_Pipeline", Storage="_PTP_AItemEndCheck", ThisKey="PipelineId", OtherKey="PipelineId", DeleteRule="NO ACTION")]
		public EntitySet<PTP_AItemEndCheck> PTP_AItemEndCheck
		{
			get
			{
				return this._PTP_AItemEndCheck;
			}
			set
			{
				this._PTP_AItemEndCheck.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_BItemEndCheck_HJGL_Pipeline", Storage="_PTP_BItemEndCheck", ThisKey="PipelineId", OtherKey="PipelineId", DeleteRule="NO ACTION")]
		public EntitySet<PTP_BItemEndCheck> PTP_BItemEndCheck
		{
			get
			{
				return this._PTP_BItemEndCheck;
			}
			set
			{
				this._PTP_BItemEndCheck.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_PipelineList_HJGL_Pipeline", Storage="_PTP_PipelineList", ThisKey="PipelineId", OtherKey="PipelineId", DeleteRule="NO ACTION")]
		public EntitySet<PTP_PipelineList> PTP_PipelineList
		{
			get
			{
				return this._PTP_PipelineList;
			}
			set
			{
				this._PTP_PipelineList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = null;
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = null;
		}
		
		private void attach_PTP_AItemEndCheck(PTP_AItemEndCheck entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = this;
		}
		
		private void detach_PTP_AItemEndCheck(PTP_AItemEndCheck entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = null;
		}
		
		private void attach_PTP_BItemEndCheck(PTP_BItemEndCheck entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = this;
		}
		
		private void detach_PTP_BItemEndCheck(PTP_BItemEndCheck entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = null;
		}
		
		private void attach_PTP_PipelineList(PTP_PipelineList entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = this;
		}
		
		private void detach_PTP_PipelineList(PTP_PipelineList entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_PreWeldingDaily")]
	public partial class HJGL_PreWeldingDaily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PreWeldingDailyId;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _UnitId;
		
		private string _WeldJointId;
		
		private System.Nullable<System.DateTime> _WeldingDate;
		
		private string _CoverWelderId;
		
		private string _BackingWelderId;
		
		private string _JointAttribute;
		
		private string _WeldingMode;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _AttachUrl;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPreWeldingDailyIdChanging(string value);
    partial void OnPreWeldingDailyIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnWeldingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWeldingDateChanged();
    partial void OnCoverWelderIdChanging(string value);
    partial void OnCoverWelderIdChanged();
    partial void OnBackingWelderIdChanging(string value);
    partial void OnBackingWelderIdChanged();
    partial void OnJointAttributeChanging(string value);
    partial void OnJointAttributeChanged();
    partial void OnWeldingModeChanging(string value);
    partial void OnWeldingModeChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    #endregion
		
		public HJGL_PreWeldingDaily()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreWeldingDailyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PreWeldingDailyId
		{
			get
			{
				return this._PreWeldingDailyId;
			}
			set
			{
				if ((this._PreWeldingDailyId != value))
				{
					this.OnPreWeldingDailyIdChanging(value);
					this.SendPropertyChanging();
					this._PreWeldingDailyId = value;
					this.SendPropertyChanged("PreWeldingDailyId");
					this.OnPreWeldingDailyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WeldingDate
		{
			get
			{
				return this._WeldingDate;
			}
			set
			{
				if ((this._WeldingDate != value))
				{
					this.OnWeldingDateChanging(value);
					this.SendPropertyChanging();
					this._WeldingDate = value;
					this.SendPropertyChanged("WeldingDate");
					this.OnWeldingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverWelderId", DbType="NVarChar(50)")]
		public string CoverWelderId
		{
			get
			{
				return this._CoverWelderId;
			}
			set
			{
				if ((this._CoverWelderId != value))
				{
					this.OnCoverWelderIdChanging(value);
					this.SendPropertyChanging();
					this._CoverWelderId = value;
					this.SendPropertyChanged("CoverWelderId");
					this.OnCoverWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackingWelderId", DbType="NVarChar(50)")]
		public string BackingWelderId
		{
			get
			{
				return this._BackingWelderId;
			}
			set
			{
				if ((this._BackingWelderId != value))
				{
					this.OnBackingWelderIdChanging(value);
					this.SendPropertyChanging();
					this._BackingWelderId = value;
					this.SendPropertyChanged("BackingWelderId");
					this.OnBackingWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointAttribute", DbType="NVarChar(10)")]
		public string JointAttribute
		{
			get
			{
				return this._JointAttribute;
			}
			set
			{
				if ((this._JointAttribute != value))
				{
					this.OnJointAttributeChanging(value);
					this.SendPropertyChanging();
					this._JointAttribute = value;
					this.SendPropertyChanged("JointAttribute");
					this.OnJointAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMode", DbType="NVarChar(10)")]
		public string WeldingMode
		{
			get
			{
				return this._WeldingMode;
			}
			set
			{
				if ((this._WeldingMode != value))
				{
					this.OnWeldingModeChanging(value);
					this.SendPropertyChanging();
					this._WeldingMode = value;
					this.SendPropertyChanged("WeldingMode");
					this.OnWeldingModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(200)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_RepairRecord")]
	public partial class HJGL_RepairRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RepairRecordId;
		
		private string _RepairRecordCode;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _UnitWorkId;
		
		private string _NDEItemID;
		
		private System.Nullable<System.DateTime> _NoticeDate;
		
		private string _WeldJointId;
		
		private string _DetectionTypeId;
		
		private string _RepairLocation;
		
		private string _CheckDefects;
		
		private string _RepairMark;
		
		private string _WelderId;
		
		private string _RepairWelder;
		
		private System.Nullable<System.DateTime> _RepairDate;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _Ex_ToPointBatchItemId;
		
		private string _PhotoUrl;
		
		private System.Nullable<bool> _IsCut;
		
		private EntityRef<Base_DetectionType> _Base_DetectionType;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<HJGL_Batch_NDEItem> _HJGL_Batch_NDEItem;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepairRecordIdChanging(string value);
    partial void OnRepairRecordIdChanged();
    partial void OnRepairRecordCodeChanging(string value);
    partial void OnRepairRecordCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnNDEItemIDChanging(string value);
    partial void OnNDEItemIDChanged();
    partial void OnNoticeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNoticeDateChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnDetectionTypeIdChanging(string value);
    partial void OnDetectionTypeIdChanged();
    partial void OnRepairLocationChanging(string value);
    partial void OnRepairLocationChanged();
    partial void OnCheckDefectsChanging(string value);
    partial void OnCheckDefectsChanged();
    partial void OnRepairMarkChanging(string value);
    partial void OnRepairMarkChanged();
    partial void OnWelderIdChanging(string value);
    partial void OnWelderIdChanged();
    partial void OnRepairWelderChanging(string value);
    partial void OnRepairWelderChanged();
    partial void OnRepairDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRepairDateChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnEx_ToPointBatchItemIdChanging(string value);
    partial void OnEx_ToPointBatchItemIdChanged();
    partial void OnPhotoUrlChanging(string value);
    partial void OnPhotoUrlChanged();
    partial void OnIsCutChanging(System.Nullable<bool> value);
    partial void OnIsCutChanged();
    #endregion
		
		public HJGL_RepairRecord()
		{
			this._Base_DetectionType = default(EntityRef<Base_DetectionType>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._HJGL_Batch_NDEItem = default(EntityRef<HJGL_Batch_NDEItem>);
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RepairRecordId
		{
			get
			{
				return this._RepairRecordId;
			}
			set
			{
				if ((this._RepairRecordId != value))
				{
					this.OnRepairRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RepairRecordId = value;
					this.SendPropertyChanged("RepairRecordId");
					this.OnRepairRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairRecordCode", DbType="NVarChar(50)")]
		public string RepairRecordCode
		{
			get
			{
				return this._RepairRecordCode;
			}
			set
			{
				if ((this._RepairRecordCode != value))
				{
					this.OnRepairRecordCodeChanging(value);
					this.SendPropertyChanging();
					this._RepairRecordCode = value;
					this.SendPropertyChanged("RepairRecordCode");
					this.OnRepairRecordCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEItemID", DbType="NVarChar(50)")]
		public string NDEItemID
		{
			get
			{
				return this._NDEItemID;
			}
			set
			{
				if ((this._NDEItemID != value))
				{
					if (this._HJGL_Batch_NDEItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDEItemIDChanging(value);
					this.SendPropertyChanging();
					this._NDEItemID = value;
					this.SendPropertyChanged("NDEItemID");
					this.OnNDEItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NoticeDate
		{
			get
			{
				return this._NoticeDate;
			}
			set
			{
				if ((this._NoticeDate != value))
				{
					this.OnNoticeDateChanging(value);
					this.SendPropertyChanging();
					this._NoticeDate = value;
					this.SendPropertyChanged("NoticeDate");
					this.OnNoticeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					if (this._Base_DetectionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeId = value;
					this.SendPropertyChanged("DetectionTypeId");
					this.OnDetectionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairLocation", DbType="NVarChar(50)")]
		public string RepairLocation
		{
			get
			{
				return this._RepairLocation;
			}
			set
			{
				if ((this._RepairLocation != value))
				{
					this.OnRepairLocationChanging(value);
					this.SendPropertyChanging();
					this._RepairLocation = value;
					this.SendPropertyChanged("RepairLocation");
					this.OnRepairLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDefects", DbType="NVarChar(100)")]
		public string CheckDefects
		{
			get
			{
				return this._CheckDefects;
			}
			set
			{
				if ((this._CheckDefects != value))
				{
					this.OnCheckDefectsChanging(value);
					this.SendPropertyChanging();
					this._CheckDefects = value;
					this.SendPropertyChanged("CheckDefects");
					this.OnCheckDefectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairMark", DbType="NVarChar(10)")]
		public string RepairMark
		{
			get
			{
				return this._RepairMark;
			}
			set
			{
				if ((this._RepairMark != value))
				{
					this.OnRepairMarkChanging(value);
					this.SendPropertyChanging();
					this._RepairMark = value;
					this.SendPropertyChanged("RepairMark");
					this.OnRepairMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderId", DbType="NVarChar(50)")]
		public string WelderId
		{
			get
			{
				return this._WelderId;
			}
			set
			{
				if ((this._WelderId != value))
				{
					this.OnWelderIdChanging(value);
					this.SendPropertyChanging();
					this._WelderId = value;
					this.SendPropertyChanged("WelderId");
					this.OnWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairWelder", DbType="NVarChar(50)")]
		public string RepairWelder
		{
			get
			{
				return this._RepairWelder;
			}
			set
			{
				if ((this._RepairWelder != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepairWelderChanging(value);
					this.SendPropertyChanging();
					this._RepairWelder = value;
					this.SendPropertyChanged("RepairWelder");
					this.OnRepairWelderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RepairDate
		{
			get
			{
				return this._RepairDate;
			}
			set
			{
				if ((this._RepairDate != value))
				{
					this.OnRepairDateChanging(value);
					this.SendPropertyChanging();
					this._RepairDate = value;
					this.SendPropertyChanged("RepairDate");
					this.OnRepairDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ex_ToPointBatchItemId", DbType="NVarChar(500)")]
		public string Ex_ToPointBatchItemId
		{
			get
			{
				return this._Ex_ToPointBatchItemId;
			}
			set
			{
				if ((this._Ex_ToPointBatchItemId != value))
				{
					this.OnEx_ToPointBatchItemIdChanging(value);
					this.SendPropertyChanging();
					this._Ex_ToPointBatchItemId = value;
					this.SendPropertyChanged("Ex_ToPointBatchItemId");
					this.OnEx_ToPointBatchItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(100)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this.OnPhotoUrlChanging(value);
					this.SendPropertyChanging();
					this._PhotoUrl = value;
					this.SendPropertyChanged("PhotoUrl");
					this.OnPhotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCut", DbType="Bit")]
		public System.Nullable<bool> IsCut
		{
			get
			{
				return this._IsCut;
			}
			set
			{
				if ((this._IsCut != value))
				{
					this.OnIsCutChanging(value);
					this.SendPropertyChanging();
					this._IsCut = value;
					this.SendPropertyChanged("IsCut");
					this.OnIsCutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_Base_DetectionType", Storage="_Base_DetectionType", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", IsForeignKey=true)]
		public Base_DetectionType Base_DetectionType
		{
			get
			{
				return this._Base_DetectionType.Entity;
			}
			set
			{
				Base_DetectionType previousValue = this._Base_DetectionType.Entity;
				if (((previousValue != value) 
							|| (this._Base_DetectionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_DetectionType.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._Base_DetectionType.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._DetectionTypeId = value.DetectionTypeId;
					}
					else
					{
						this._DetectionTypeId = default(string);
					}
					this.SendPropertyChanged("Base_DetectionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_HJGL_Batch_NDEItem", Storage="_HJGL_Batch_NDEItem", ThisKey="NDEItemID", OtherKey="NDEItemID", IsForeignKey=true)]
		public HJGL_Batch_NDEItem HJGL_Batch_NDEItem
		{
			get
			{
				return this._HJGL_Batch_NDEItem.Entity;
			}
			set
			{
				HJGL_Batch_NDEItem previousValue = this._HJGL_Batch_NDEItem.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Batch_NDEItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Batch_NDEItem.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._HJGL_Batch_NDEItem.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._NDEItemID = value.NDEItemID;
					}
					else
					{
						this._NDEItemID = default(string);
					}
					this.SendPropertyChanged("HJGL_Batch_NDEItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="RepairWelder", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._RepairWelder = value.PersonId;
					}
					else
					{
						this._RepairWelder = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_WeldingDaily")]
	public partial class HJGL_WeldingDaily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldingDailyId;
		
		private string _WeldingDailyCode;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _UnitId;
		
		private System.Nullable<System.DateTime> _WeldingDate;
		
		private string _Tabler;
		
		private System.Nullable<System.DateTime> _TableDate;
		
		private string _Remark;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldingDailyIdChanging(string value);
    partial void OnWeldingDailyIdChanged();
    partial void OnWeldingDailyCodeChanging(string value);
    partial void OnWeldingDailyCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnWeldingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWeldingDateChanged();
    partial void OnTablerChanging(string value);
    partial void OnTablerChanged();
    partial void OnTableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTableDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_WeldingDaily()
		{
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDailyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldingDailyId
		{
			get
			{
				return this._WeldingDailyId;
			}
			set
			{
				if ((this._WeldingDailyId != value))
				{
					this.OnWeldingDailyIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingDailyId = value;
					this.SendPropertyChanged("WeldingDailyId");
					this.OnWeldingDailyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDailyCode", DbType="NVarChar(50)")]
		public string WeldingDailyCode
		{
			get
			{
				return this._WeldingDailyCode;
			}
			set
			{
				if ((this._WeldingDailyCode != value))
				{
					this.OnWeldingDailyCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldingDailyCode = value;
					this.SendPropertyChanged("WeldingDailyCode");
					this.OnWeldingDailyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WeldingDate
		{
			get
			{
				return this._WeldingDate;
			}
			set
			{
				if ((this._WeldingDate != value))
				{
					this.OnWeldingDateChanging(value);
					this.SendPropertyChanging();
					this._WeldingDate = value;
					this.SendPropertyChanged("WeldingDate");
					this.OnWeldingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabler", DbType="NVarChar(50)")]
		public string Tabler
		{
			get
			{
				return this._Tabler;
			}
			set
			{
				if ((this._Tabler != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTablerChanging(value);
					this.SendPropertyChanging();
					this._Tabler = value;
					this.SendPropertyChanged("Tabler");
					this.OnTablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TableDate
		{
			get
			{
				return this._TableDate;
			}
			set
			{
				if ((this._TableDate != value))
				{
					this.OnTableDateChanging(value);
					this.SendPropertyChanging();
					this._TableDate = value;
					this.SendPropertyChanged("TableDate");
					this.OnTableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldingDaily_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_WeldingDaily.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldingDaily.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_HJGL_WeldingDaily", Storage="_HJGL_WeldJoint", ThisKey="WeldingDailyId", OtherKey="WeldingDailyId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Pipeline_WeldingDaily_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_WeldingDaily.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldingDaily.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Pipeline_WeldingDaily_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_WeldingDaily.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldingDaily.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Pipeline_WeldingDaily_Sys_User", Storage="_Sys_User", ThisKey="Tabler", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.HJGL_WeldingDaily.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldingDaily.Add(this);
						this._Tabler = value.UserId;
					}
					else
					{
						this._Tabler = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldingDaily = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldingDaily = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_WeldJoint")]
	public partial class HJGL_WeldJoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldJointId;
		
		private string _PipelineId;
		
		private string _PipelineCode;
		
		private string _WeldJointCode;
		
		private string _ProjectId;
		
		private string _WeldTypeId;
		
		private string _JointArea;
		
		private string _Material1Id;
		
		private string _Material2Id;
		
		private string _DetectionTypeId;
		
		private string _WeldingMethodId;
		
		private string _GrooveTypeId;
		
		private string _WeldingLocationId;
		
		private string _JointAttribute;
		
		private System.Nullable<decimal> _Size;
		
		private System.Nullable<decimal> _Dia;
		
		private System.Nullable<decimal> _Thickness;
		
		private string _Specification;
		
		private string _WeldingWire;
		
		private string _WeldingRod;
		
		private string _PreTemperature;
		
		private string _Components1Id;
		
		private string _Components2Id;
		
		private string _HeartNo1;
		
		private string _HeartNo2;
		
		private System.Nullable<bool> _IsHotProess;
		
		private string _WPQId;
		
		private string _WeldingDailyId;
		
		private string _WeldingDailyCode;
		
		private string _BackingWelderId;
		
		private string _CoverWelderId;
		
		private string _WeldingMode;
		
		private string _Remark;
		
		private EntitySet<HJGL_Batch_BatchTrustItem> _HJGL_Batch_BatchTrustItem;
		
		private EntitySet<HJGL_Batch_PointBatchItem> _HJGL_Batch_PointBatchItem;
		
		private EntitySet<HJGL_Hard_Report> _HJGL_Hard_Report;
		
		private EntitySet<HJGL_Hard_TrustItem> _HJGL_Hard_TrustItem;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
		private EntityRef<Base_Consumables> _Base_Consumables;
		
		private EntityRef<Base_Consumables> _WeldingWireBase_Consumables;
		
		private EntityRef<Base_DetectionType> _Base_DetectionType;
		
		private EntityRef<Base_GrooveType> _Base_GrooveType;
		
		private EntityRef<Base_Material> _Base_Material;
		
		private EntityRef<Base_Material> _Material2;
		
		private EntityRef<Base_WeldingLocation> _Base_WeldingLocation;
		
		private EntityRef<Base_WeldingMethod> _Base_WeldingMethod;
		
		private EntityRef<Base_WeldType> _Base_WeldType;
		
		private EntityRef<HJGL_Pipeline> _HJGL_Pipeline;
		
		private EntityRef<HJGL_WeldingDaily> _HJGL_WeldingDaily;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<SitePerson_Person> _CoverWelder;
		
		private EntityRef<WPQ_WPQList> _WPQ_WPQList;
		
		private EntitySet<HJGL_HotProess_Report> _HJGL_HotProess_Report;
		
		private EntitySet<HJGL_HotProess_TrustItem> _HJGL_HotProess_TrustItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnPipelineIdChanging(string value);
    partial void OnPipelineIdChanged();
    partial void OnPipelineCodeChanging(string value);
    partial void OnPipelineCodeChanged();
    partial void OnWeldJointCodeChanging(string value);
    partial void OnWeldJointCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnWeldTypeIdChanging(string value);
    partial void OnWeldTypeIdChanged();
    partial void OnJointAreaChanging(string value);
    partial void OnJointAreaChanged();
    partial void OnMaterial1IdChanging(string value);
    partial void OnMaterial1IdChanged();
    partial void OnMaterial2IdChanging(string value);
    partial void OnMaterial2IdChanged();
    partial void OnDetectionTypeIdChanging(string value);
    partial void OnDetectionTypeIdChanged();
    partial void OnWeldingMethodIdChanging(string value);
    partial void OnWeldingMethodIdChanged();
    partial void OnGrooveTypeIdChanging(string value);
    partial void OnGrooveTypeIdChanged();
    partial void OnWeldingLocationIdChanging(string value);
    partial void OnWeldingLocationIdChanged();
    partial void OnJointAttributeChanging(string value);
    partial void OnJointAttributeChanged();
    partial void OnSizeChanging(System.Nullable<decimal> value);
    partial void OnSizeChanged();
    partial void OnDiaChanging(System.Nullable<decimal> value);
    partial void OnDiaChanged();
    partial void OnThicknessChanging(System.Nullable<decimal> value);
    partial void OnThicknessChanged();
    partial void OnSpecificationChanging(string value);
    partial void OnSpecificationChanged();
    partial void OnWeldingWireChanging(string value);
    partial void OnWeldingWireChanged();
    partial void OnWeldingRodChanging(string value);
    partial void OnWeldingRodChanged();
    partial void OnPreTemperatureChanging(string value);
    partial void OnPreTemperatureChanged();
    partial void OnComponents1IdChanging(string value);
    partial void OnComponents1IdChanged();
    partial void OnComponents2IdChanging(string value);
    partial void OnComponents2IdChanged();
    partial void OnHeartNo1Changing(string value);
    partial void OnHeartNo1Changed();
    partial void OnHeartNo2Changing(string value);
    partial void OnHeartNo2Changed();
    partial void OnIsHotProessChanging(System.Nullable<bool> value);
    partial void OnIsHotProessChanged();
    partial void OnWPQIdChanging(string value);
    partial void OnWPQIdChanged();
    partial void OnWeldingDailyIdChanging(string value);
    partial void OnWeldingDailyIdChanged();
    partial void OnWeldingDailyCodeChanging(string value);
    partial void OnWeldingDailyCodeChanged();
    partial void OnBackingWelderIdChanging(string value);
    partial void OnBackingWelderIdChanged();
    partial void OnCoverWelderIdChanging(string value);
    partial void OnCoverWelderIdChanged();
    partial void OnWeldingModeChanging(string value);
    partial void OnWeldingModeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_WeldJoint()
		{
			this._HJGL_Batch_BatchTrustItem = new EntitySet<HJGL_Batch_BatchTrustItem>(new Action<HJGL_Batch_BatchTrustItem>(this.attach_HJGL_Batch_BatchTrustItem), new Action<HJGL_Batch_BatchTrustItem>(this.detach_HJGL_Batch_BatchTrustItem));
			this._HJGL_Batch_PointBatchItem = new EntitySet<HJGL_Batch_PointBatchItem>(new Action<HJGL_Batch_PointBatchItem>(this.attach_HJGL_Batch_PointBatchItem), new Action<HJGL_Batch_PointBatchItem>(this.detach_HJGL_Batch_PointBatchItem));
			this._HJGL_Hard_Report = new EntitySet<HJGL_Hard_Report>(new Action<HJGL_Hard_Report>(this.attach_HJGL_Hard_Report), new Action<HJGL_Hard_Report>(this.detach_HJGL_Hard_Report));
			this._HJGL_Hard_TrustItem = new EntitySet<HJGL_Hard_TrustItem>(new Action<HJGL_Hard_TrustItem>(this.attach_HJGL_Hard_TrustItem), new Action<HJGL_Hard_TrustItem>(this.detach_HJGL_Hard_TrustItem));
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			this._Base_Consumables = default(EntityRef<Base_Consumables>);
			this._WeldingWireBase_Consumables = default(EntityRef<Base_Consumables>);
			this._Base_DetectionType = default(EntityRef<Base_DetectionType>);
			this._Base_GrooveType = default(EntityRef<Base_GrooveType>);
			this._Base_Material = default(EntityRef<Base_Material>);
			this._Material2 = default(EntityRef<Base_Material>);
			this._Base_WeldingLocation = default(EntityRef<Base_WeldingLocation>);
			this._Base_WeldingMethod = default(EntityRef<Base_WeldingMethod>);
			this._Base_WeldType = default(EntityRef<Base_WeldType>);
			this._HJGL_Pipeline = default(EntityRef<HJGL_Pipeline>);
			this._HJGL_WeldingDaily = default(EntityRef<HJGL_WeldingDaily>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._CoverWelder = default(EntityRef<SitePerson_Person>);
			this._WPQ_WPQList = default(EntityRef<WPQ_WPQList>);
			this._HJGL_HotProess_Report = new EntitySet<HJGL_HotProess_Report>(new Action<HJGL_HotProess_Report>(this.attach_HJGL_HotProess_Report), new Action<HJGL_HotProess_Report>(this.detach_HJGL_HotProess_Report));
			this._HJGL_HotProess_TrustItem = new EntitySet<HJGL_HotProess_TrustItem>(new Action<HJGL_HotProess_TrustItem>(this.attach_HJGL_HotProess_TrustItem), new Action<HJGL_HotProess_TrustItem>(this.detach_HJGL_HotProess_TrustItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					if (this._HJGL_Pipeline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipelineIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineId = value;
					this.SendPropertyChanged("PipelineId");
					this.OnPipelineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this.OnPipelineCodeChanging(value);
					this.SendPropertyChanging();
					this._PipelineCode = value;
					this.SendPropertyChanged("PipelineCode");
					this.OnPipelineCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointCode", DbType="NVarChar(50)")]
		public string WeldJointCode
		{
			get
			{
				return this._WeldJointCode;
			}
			set
			{
				if ((this._WeldJointCode != value))
				{
					this.OnWeldJointCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldJointCode = value;
					this.SendPropertyChanged("WeldJointCode");
					this.OnWeldJointCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldTypeId", DbType="NVarChar(50)")]
		public string WeldTypeId
		{
			get
			{
				return this._WeldTypeId;
			}
			set
			{
				if ((this._WeldTypeId != value))
				{
					if (this._Base_WeldType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldTypeIdChanging(value);
					this.SendPropertyChanging();
					this._WeldTypeId = value;
					this.SendPropertyChanged("WeldTypeId");
					this.OnWeldTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointArea", DbType="NVarChar(50)")]
		public string JointArea
		{
			get
			{
				return this._JointArea;
			}
			set
			{
				if ((this._JointArea != value))
				{
					this.OnJointAreaChanging(value);
					this.SendPropertyChanging();
					this._JointArea = value;
					this.SendPropertyChanged("JointArea");
					this.OnJointAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material1Id", DbType="NVarChar(50)")]
		public string Material1Id
		{
			get
			{
				return this._Material1Id;
			}
			set
			{
				if ((this._Material1Id != value))
				{
					if (this._Base_Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterial1IdChanging(value);
					this.SendPropertyChanging();
					this._Material1Id = value;
					this.SendPropertyChanged("Material1Id");
					this.OnMaterial1IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material2Id", DbType="NVarChar(50)")]
		public string Material2Id
		{
			get
			{
				return this._Material2Id;
			}
			set
			{
				if ((this._Material2Id != value))
				{
					if (this._Material2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterial2IdChanging(value);
					this.SendPropertyChanging();
					this._Material2Id = value;
					this.SendPropertyChanged("Material2Id");
					this.OnMaterial2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					if (this._Base_DetectionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeId = value;
					this.SendPropertyChanged("DetectionTypeId");
					this.OnDetectionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodId", DbType="NVarChar(50)")]
		public string WeldingMethodId
		{
			get
			{
				return this._WeldingMethodId;
			}
			set
			{
				if ((this._WeldingMethodId != value))
				{
					if (this._Base_WeldingMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldingMethodIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingMethodId = value;
					this.SendPropertyChanged("WeldingMethodId");
					this.OnWeldingMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveTypeId", DbType="NVarChar(50)")]
		public string GrooveTypeId
		{
			get
			{
				return this._GrooveTypeId;
			}
			set
			{
				if ((this._GrooveTypeId != value))
				{
					if (this._Base_GrooveType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGrooveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._GrooveTypeId = value;
					this.SendPropertyChanged("GrooveTypeId");
					this.OnGrooveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingLocationId", DbType="NVarChar(50)")]
		public string WeldingLocationId
		{
			get
			{
				return this._WeldingLocationId;
			}
			set
			{
				if ((this._WeldingLocationId != value))
				{
					if (this._Base_WeldingLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldingLocationIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingLocationId = value;
					this.SendPropertyChanged("WeldingLocationId");
					this.OnWeldingLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointAttribute", DbType="NVarChar(10)")]
		public string JointAttribute
		{
			get
			{
				return this._JointAttribute;
			}
			set
			{
				if ((this._JointAttribute != value))
				{
					this.OnJointAttributeChanging(value);
					this.SendPropertyChanging();
					this._JointAttribute = value;
					this.SendPropertyChanged("JointAttribute");
					this.OnJointAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dia", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Dia
		{
			get
			{
				return this._Dia;
			}
			set
			{
				if ((this._Dia != value))
				{
					this.OnDiaChanging(value);
					this.SendPropertyChanging();
					this._Dia = value;
					this.SendPropertyChanged("Dia");
					this.OnDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Thickness
		{
			get
			{
				return this._Thickness;
			}
			set
			{
				if ((this._Thickness != value))
				{
					this.OnThicknessChanging(value);
					this.SendPropertyChanging();
					this._Thickness = value;
					this.SendPropertyChanged("Thickness");
					this.OnThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(20)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this.OnSpecificationChanging(value);
					this.SendPropertyChanging();
					this._Specification = value;
					this.SendPropertyChanged("Specification");
					this.OnSpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingWire", DbType="NVarChar(50)")]
		public string WeldingWire
		{
			get
			{
				return this._WeldingWire;
			}
			set
			{
				if ((this._WeldingWire != value))
				{
					if (this._WeldingWireBase_Consumables.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldingWireChanging(value);
					this.SendPropertyChanging();
					this._WeldingWire = value;
					this.SendPropertyChanged("WeldingWire");
					this.OnWeldingWireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingRod", DbType="NVarChar(50)")]
		public string WeldingRod
		{
			get
			{
				return this._WeldingRod;
			}
			set
			{
				if ((this._WeldingRod != value))
				{
					if (this._Base_Consumables.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldingRodChanging(value);
					this.SendPropertyChanging();
					this._WeldingRod = value;
					this.SendPropertyChanged("WeldingRod");
					this.OnWeldingRodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreTemperature", DbType="NVarChar(20)")]
		public string PreTemperature
		{
			get
			{
				return this._PreTemperature;
			}
			set
			{
				if ((this._PreTemperature != value))
				{
					this.OnPreTemperatureChanging(value);
					this.SendPropertyChanging();
					this._PreTemperature = value;
					this.SendPropertyChanged("PreTemperature");
					this.OnPreTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Components1Id", DbType="NVarChar(50)")]
		public string Components1Id
		{
			get
			{
				return this._Components1Id;
			}
			set
			{
				if ((this._Components1Id != value))
				{
					this.OnComponents1IdChanging(value);
					this.SendPropertyChanging();
					this._Components1Id = value;
					this.SendPropertyChanged("Components1Id");
					this.OnComponents1IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Components2Id", DbType="NVarChar(50)")]
		public string Components2Id
		{
			get
			{
				return this._Components2Id;
			}
			set
			{
				if ((this._Components2Id != value))
				{
					this.OnComponents2IdChanging(value);
					this.SendPropertyChanging();
					this._Components2Id = value;
					this.SendPropertyChanged("Components2Id");
					this.OnComponents2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartNo1", DbType="NVarChar(30)")]
		public string HeartNo1
		{
			get
			{
				return this._HeartNo1;
			}
			set
			{
				if ((this._HeartNo1 != value))
				{
					this.OnHeartNo1Changing(value);
					this.SendPropertyChanging();
					this._HeartNo1 = value;
					this.SendPropertyChanged("HeartNo1");
					this.OnHeartNo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartNo2", DbType="NVarChar(30)")]
		public string HeartNo2
		{
			get
			{
				return this._HeartNo2;
			}
			set
			{
				if ((this._HeartNo2 != value))
				{
					this.OnHeartNo2Changing(value);
					this.SendPropertyChanging();
					this._HeartNo2 = value;
					this.SendPropertyChanged("HeartNo2");
					this.OnHeartNo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHotProess", DbType="Bit")]
		public System.Nullable<bool> IsHotProess
		{
			get
			{
				return this._IsHotProess;
			}
			set
			{
				if ((this._IsHotProess != value))
				{
					this.OnIsHotProessChanging(value);
					this.SendPropertyChanging();
					this._IsHotProess = value;
					this.SendPropertyChanged("IsHotProess");
					this.OnIsHotProessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPQId", DbType="NVarChar(50)")]
		public string WPQId
		{
			get
			{
				return this._WPQId;
			}
			set
			{
				if ((this._WPQId != value))
				{
					if (this._WPQ_WPQList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWPQIdChanging(value);
					this.SendPropertyChanging();
					this._WPQId = value;
					this.SendPropertyChanged("WPQId");
					this.OnWPQIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDailyId", DbType="NVarChar(50)")]
		public string WeldingDailyId
		{
			get
			{
				return this._WeldingDailyId;
			}
			set
			{
				if ((this._WeldingDailyId != value))
				{
					if (this._HJGL_WeldingDaily.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldingDailyIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingDailyId = value;
					this.SendPropertyChanged("WeldingDailyId");
					this.OnWeldingDailyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDailyCode", DbType="NVarChar(50)")]
		public string WeldingDailyCode
		{
			get
			{
				return this._WeldingDailyCode;
			}
			set
			{
				if ((this._WeldingDailyCode != value))
				{
					this.OnWeldingDailyCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldingDailyCode = value;
					this.SendPropertyChanged("WeldingDailyCode");
					this.OnWeldingDailyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackingWelderId", DbType="NVarChar(50)")]
		public string BackingWelderId
		{
			get
			{
				return this._BackingWelderId;
			}
			set
			{
				if ((this._BackingWelderId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBackingWelderIdChanging(value);
					this.SendPropertyChanging();
					this._BackingWelderId = value;
					this.SendPropertyChanged("BackingWelderId");
					this.OnBackingWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverWelderId", DbType="NVarChar(50)")]
		public string CoverWelderId
		{
			get
			{
				return this._CoverWelderId;
			}
			set
			{
				if ((this._CoverWelderId != value))
				{
					if (this._CoverWelder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoverWelderIdChanging(value);
					this.SendPropertyChanging();
					this._CoverWelderId = value;
					this.SendPropertyChanged("CoverWelderId");
					this.OnCoverWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMode", DbType="NVarChar(10)")]
		public string WeldingMode
		{
			get
			{
				return this._WeldingMode;
			}
			set
			{
				if ((this._WeldingMode != value))
				{
					this.OnWeldingModeChanging(value);
					this.SendPropertyChanging();
					this._WeldingMode = value;
					this.SendPropertyChanged("WeldingMode");
					this.OnWeldingModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrustItem_HJGL_WeldJoint", Storage="_HJGL_Batch_BatchTrustItem", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_BatchTrustItem> HJGL_Batch_BatchTrustItem
		{
			get
			{
				return this._HJGL_Batch_BatchTrustItem;
			}
			set
			{
				this._HJGL_Batch_BatchTrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatchItem_HJGL_WeldJoint", Storage="_HJGL_Batch_PointBatchItem", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatchItem> HJGL_Batch_PointBatchItem
		{
			get
			{
				return this._HJGL_Batch_PointBatchItem;
			}
			set
			{
				this._HJGL_Batch_PointBatchItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Report_HJGL_WeldJoint", Storage="_HJGL_Hard_Report", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_Report> HJGL_Hard_Report
		{
			get
			{
				return this._HJGL_Hard_Report;
			}
			set
			{
				this._HJGL_Hard_Report.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_TrustItem_HJGL_WeldJoint", Storage="_HJGL_Hard_TrustItem", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_TrustItem> HJGL_Hard_TrustItem
		{
			get
			{
				return this._HJGL_Hard_TrustItem;
			}
			set
			{
				this._HJGL_Hard_TrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_HJGL_WeldJoint", Storage="_HJGL_RepairRecord", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Consumables", Storage="_Base_Consumables", ThisKey="WeldingRod", OtherKey="ConsumablesId", IsForeignKey=true)]
		public Base_Consumables Base_Consumables
		{
			get
			{
				return this._Base_Consumables.Entity;
			}
			set
			{
				Base_Consumables previousValue = this._Base_Consumables.Entity;
				if (((previousValue != value) 
							|| (this._Base_Consumables.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Consumables.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_Consumables.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._WeldingRod = value.ConsumablesId;
					}
					else
					{
						this._WeldingRod = default(string);
					}
					this.SendPropertyChanged("Base_Consumables");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Consumables1", Storage="_WeldingWireBase_Consumables", ThisKey="WeldingWire", OtherKey="ConsumablesId", IsForeignKey=true)]
		public Base_Consumables WeldingWireBase_Consumables
		{
			get
			{
				return this._WeldingWireBase_Consumables.Entity;
			}
			set
			{
				Base_Consumables previousValue = this._WeldingWireBase_Consumables.Entity;
				if (((previousValue != value) 
							|| (this._WeldingWireBase_Consumables.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WeldingWireBase_Consumables.Entity = null;
						previousValue.Consumables.Remove(this);
					}
					this._WeldingWireBase_Consumables.Entity = value;
					if ((value != null))
					{
						value.Consumables.Add(this);
						this._WeldingWire = value.ConsumablesId;
					}
					else
					{
						this._WeldingWire = default(string);
					}
					this.SendPropertyChanged("WeldingWireBase_Consumables");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_DetectionType", Storage="_Base_DetectionType", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", IsForeignKey=true)]
		public Base_DetectionType Base_DetectionType
		{
			get
			{
				return this._Base_DetectionType.Entity;
			}
			set
			{
				Base_DetectionType previousValue = this._Base_DetectionType.Entity;
				if (((previousValue != value) 
							|| (this._Base_DetectionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_DetectionType.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_DetectionType.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._DetectionTypeId = value.DetectionTypeId;
					}
					else
					{
						this._DetectionTypeId = default(string);
					}
					this.SendPropertyChanged("Base_DetectionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_GrooveType", Storage="_Base_GrooveType", ThisKey="GrooveTypeId", OtherKey="GrooveTypeId", IsForeignKey=true)]
		public Base_GrooveType Base_GrooveType
		{
			get
			{
				return this._Base_GrooveType.Entity;
			}
			set
			{
				Base_GrooveType previousValue = this._Base_GrooveType.Entity;
				if (((previousValue != value) 
							|| (this._Base_GrooveType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_GrooveType.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_GrooveType.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._GrooveTypeId = value.GrooveTypeId;
					}
					else
					{
						this._GrooveTypeId = default(string);
					}
					this.SendPropertyChanged("Base_GrooveType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Material", Storage="_Base_Material", ThisKey="Material1Id", OtherKey="MaterialId", IsForeignKey=true)]
		public Base_Material Base_Material
		{
			get
			{
				return this._Base_Material.Entity;
			}
			set
			{
				Base_Material previousValue = this._Base_Material.Entity;
				if (((previousValue != value) 
							|| (this._Base_Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Material.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_Material.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._Material1Id = value.MaterialId;
					}
					else
					{
						this._Material1Id = default(string);
					}
					this.SendPropertyChanged("Base_Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Material1", Storage="_Material2", ThisKey="Material2Id", OtherKey="MaterialId", IsForeignKey=true)]
		public Base_Material Material2
		{
			get
			{
				return this._Material2.Entity;
			}
			set
			{
				Base_Material previousValue = this._Material2.Entity;
				if (((previousValue != value) 
							|| (this._Material2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material2.Entity = null;
						previousValue.Material.Remove(this);
					}
					this._Material2.Entity = value;
					if ((value != null))
					{
						value.Material.Add(this);
						this._Material2Id = value.MaterialId;
					}
					else
					{
						this._Material2Id = default(string);
					}
					this.SendPropertyChanged("Material2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_WeldingLocation", Storage="_Base_WeldingLocation", ThisKey="WeldingLocationId", OtherKey="WeldingLocationId", IsForeignKey=true)]
		public Base_WeldingLocation Base_WeldingLocation
		{
			get
			{
				return this._Base_WeldingLocation.Entity;
			}
			set
			{
				Base_WeldingLocation previousValue = this._Base_WeldingLocation.Entity;
				if (((previousValue != value) 
							|| (this._Base_WeldingLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WeldingLocation.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_WeldingLocation.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._WeldingLocationId = value.WeldingLocationId;
					}
					else
					{
						this._WeldingLocationId = default(string);
					}
					this.SendPropertyChanged("Base_WeldingLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_WeldingMethod", Storage="_Base_WeldingMethod", ThisKey="WeldingMethodId", OtherKey="WeldingMethodId", IsForeignKey=true)]
		public Base_WeldingMethod Base_WeldingMethod
		{
			get
			{
				return this._Base_WeldingMethod.Entity;
			}
			set
			{
				Base_WeldingMethod previousValue = this._Base_WeldingMethod.Entity;
				if (((previousValue != value) 
							|| (this._Base_WeldingMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WeldingMethod.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_WeldingMethod.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._WeldingMethodId = value.WeldingMethodId;
					}
					else
					{
						this._WeldingMethodId = default(string);
					}
					this.SendPropertyChanged("Base_WeldingMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_WeldType", Storage="_Base_WeldType", ThisKey="WeldTypeId", OtherKey="WeldTypeId", IsForeignKey=true)]
		public Base_WeldType Base_WeldType
		{
			get
			{
				return this._Base_WeldType.Entity;
			}
			set
			{
				Base_WeldType previousValue = this._Base_WeldType.Entity;
				if (((previousValue != value) 
							|| (this._Base_WeldType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WeldType.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_WeldType.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._WeldTypeId = value.WeldTypeId;
					}
					else
					{
						this._WeldTypeId = default(string);
					}
					this.SendPropertyChanged("Base_WeldType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_HJGL_Pipeline", Storage="_HJGL_Pipeline", ThisKey="PipelineId", OtherKey="PipelineId", IsForeignKey=true)]
		public HJGL_Pipeline HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline.Entity;
			}
			set
			{
				HJGL_Pipeline previousValue = this._HJGL_Pipeline.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Pipeline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Pipeline.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._HJGL_Pipeline.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._PipelineId = value.PipelineId;
					}
					else
					{
						this._PipelineId = default(string);
					}
					this.SendPropertyChanged("HJGL_Pipeline");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_HJGL_WeldingDaily", Storage="_HJGL_WeldingDaily", ThisKey="WeldingDailyId", OtherKey="WeldingDailyId", IsForeignKey=true)]
		public HJGL_WeldingDaily HJGL_WeldingDaily
		{
			get
			{
				return this._HJGL_WeldingDaily.Entity;
			}
			set
			{
				HJGL_WeldingDaily previousValue = this._HJGL_WeldingDaily.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldingDaily.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldingDaily.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._HJGL_WeldingDaily.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._WeldingDailyId = value.WeldingDailyId;
					}
					else
					{
						this._WeldingDailyId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldingDaily");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_HJGL_WeldJoint", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_SitePerson_Person_BackingWelder", Storage="_SitePerson_Person", ThisKey="BackingWelderId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._BackingWelderId = value.PersonId;
					}
					else
					{
						this._BackingWelderId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_SitePerson_Person_CoverWelder", Storage="_CoverWelder", ThisKey="CoverWelderId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person CoverWelder
		{
			get
			{
				return this._CoverWelder.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._CoverWelder.Entity;
				if (((previousValue != value) 
							|| (this._CoverWelder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoverWelder.Entity = null;
						previousValue.Person.Remove(this);
					}
					this._CoverWelder.Entity = value;
					if ((value != null))
					{
						value.Person.Add(this);
						this._CoverWelderId = value.PersonId;
					}
					else
					{
						this._CoverWelderId = default(string);
					}
					this.SendPropertyChanged("CoverWelder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_WPQ_WPQList", Storage="_WPQ_WPQList", ThisKey="WPQId", OtherKey="WPQId", IsForeignKey=true)]
		public WPQ_WPQList WPQ_WPQList
		{
			get
			{
				return this._WPQ_WPQList.Entity;
			}
			set
			{
				WPQ_WPQList previousValue = this._WPQ_WPQList.Entity;
				if (((previousValue != value) 
							|| (this._WPQ_WPQList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WPQ_WPQList.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._WPQ_WPQList.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._WPQId = value.WPQId;
					}
					else
					{
						this._WPQId = default(string);
					}
					this.SendPropertyChanged("WPQ_WPQList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Report_HJGL_WeldJoint", Storage="_HJGL_HotProess_Report", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_Report> HJGL_HotProess_Report
		{
			get
			{
				return this._HJGL_HotProess_Report;
			}
			set
			{
				this._HJGL_HotProess_Report.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_TrustItem_HJGL_WeldJoint", Storage="_HJGL_HotProess_TrustItem", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_TrustItem> HJGL_HotProess_TrustItem
		{
			get
			{
				return this._HJGL_HotProess_TrustItem;
			}
			set
			{
				this._HJGL_HotProess_TrustItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
		
		private void attach_HJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
		
		private void attach_HJGL_Hard_Report(HJGL_Hard_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_Hard_Report(HJGL_Hard_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
		
		private void attach_HJGL_Hard_TrustItem(HJGL_Hard_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_Hard_TrustItem(HJGL_Hard_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
		
		private void attach_HJGL_HotProess_Report(HJGL_HotProess_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_HotProess_Report(HJGL_HotProess_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
		
		private void attach_HJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_ProjectUnit")]
	public partial class Project_ProjectUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectUnitId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _UnitType;
		
		private System.Nullable<System.DateTime> _InTime;
		
		private System.Nullable<System.DateTime> _OutTime;
		
		private System.Nullable<decimal> _PlanCostA;
		
		private System.Nullable<decimal> _PlanCostB;
		
		private string _ContractRange;
		
		private string _Phone;
		
		private string _AuditMan;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectUnitIdChanging(string value);
    partial void OnProjectUnitIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitTypeChanging(string value);
    partial void OnUnitTypeChanged();
    partial void OnInTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInTimeChanged();
    partial void OnOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOutTimeChanged();
    partial void OnPlanCostAChanging(System.Nullable<decimal> value);
    partial void OnPlanCostAChanged();
    partial void OnPlanCostBChanging(System.Nullable<decimal> value);
    partial void OnPlanCostBChanged();
    partial void OnContractRangeChanging(string value);
    partial void OnContractRangeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    #endregion
		
		public Project_ProjectUnit()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectUnitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectUnitId
		{
			get
			{
				return this._ProjectUnitId;
			}
			set
			{
				if ((this._ProjectUnitId != value))
				{
					this.OnProjectUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectUnitId = value;
					this.SendPropertyChanged("ProjectUnitId");
					this.OnProjectUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitType", DbType="NVarChar(50)")]
		public string UnitType
		{
			get
			{
				return this._UnitType;
			}
			set
			{
				if ((this._UnitType != value))
				{
					this.OnUnitTypeChanging(value);
					this.SendPropertyChanging();
					this._UnitType = value;
					this.SendPropertyChanged("UnitType");
					this.OnUnitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> InTime
		{
			get
			{
				return this._InTime;
			}
			set
			{
				if ((this._InTime != value))
				{
					this.OnInTimeChanging(value);
					this.SendPropertyChanging();
					this._InTime = value;
					this.SendPropertyChanged("InTime");
					this.OnInTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutTime
		{
			get
			{
				return this._OutTime;
			}
			set
			{
				if ((this._OutTime != value))
				{
					this.OnOutTimeChanging(value);
					this.SendPropertyChanging();
					this._OutTime = value;
					this.SendPropertyChanged("OutTime");
					this.OnOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanCostA", DbType="Money")]
		public System.Nullable<decimal> PlanCostA
		{
			get
			{
				return this._PlanCostA;
			}
			set
			{
				if ((this._PlanCostA != value))
				{
					this.OnPlanCostAChanging(value);
					this.SendPropertyChanging();
					this._PlanCostA = value;
					this.SendPropertyChanged("PlanCostA");
					this.OnPlanCostAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanCostB", DbType="Money")]
		public System.Nullable<decimal> PlanCostB
		{
			get
			{
				return this._PlanCostB;
			}
			set
			{
				if ((this._PlanCostB != value))
				{
					this.OnPlanCostBChanging(value);
					this.SendPropertyChanging();
					this._PlanCostB = value;
					this.SendPropertyChanged("PlanCostB");
					this.OnPlanCostBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractRange", DbType="NVarChar(500)")]
		public string ContractRange
		{
			get
			{
				return this._ContractRange;
			}
			set
			{
				if ((this._ContractRange != value))
				{
					this.OnContractRangeChanging(value);
					this.SendPropertyChanging();
					this._ContractRange = value;
					this.SendPropertyChanged("ContractRange");
					this.OnContractRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(20)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUnit_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Project_ProjectUnit.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Project_ProjectUnit.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUnit_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Project_ProjectUnit.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Project_ProjectUnit.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_ProjectUser")]
	public partial class Project_ProjectUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectUserId;
		
		private string _ProjectId;
		
		private string _UserId;
		
		private string _UnitId;
		
		private string _RoleId;
		
		private System.Nullable<bool> _IsPost;
		
		private string _RoleName;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectUserIdChanging(string value);
    partial void OnProjectUserIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnIsPostChanging(System.Nullable<bool> value);
    partial void OnIsPostChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public Project_ProjectUser()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectUserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectUserId
		{
			get
			{
				return this._ProjectUserId;
			}
			set
			{
				if ((this._ProjectUserId != value))
				{
					this.OnProjectUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectUserId = value;
					this.SendPropertyChanged("ProjectUserId");
					this.OnProjectUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(500)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPost", DbType="Bit")]
		public System.Nullable<bool> IsPost
		{
			get
			{
				return this._IsPost;
			}
			set
			{
				if ((this._IsPost != value))
				{
					this.OnIsPostChanging(value);
					this.SendPropertyChanging();
					this._IsPost = value;
					this.SendPropertyChanged("IsPost");
					this.OnIsPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(500)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUser_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Project_ProjectUser.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Project_ProjectUser.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUser_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Project_ProjectUser.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Project_ProjectUser.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUser_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Project_ProjectUser.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Project_ProjectUser.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectData_MainItem")]
	public partial class ProjectData_MainItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MainItemId;
		
		private string _ProjectId;
		
		private string _MainItemCode;
		
		private string _MainItemName;
		
		private string _UnitWorkIds;
		
		private string _Remark;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMainItemIdChanging(string value);
    partial void OnMainItemIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnMainItemCodeChanging(string value);
    partial void OnMainItemCodeChanged();
    partial void OnMainItemNameChanging(string value);
    partial void OnMainItemNameChanged();
    partial void OnUnitWorkIdsChanging(string value);
    partial void OnUnitWorkIdsChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public ProjectData_MainItem()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MainItemId
		{
			get
			{
				return this._MainItemId;
			}
			set
			{
				if ((this._MainItemId != value))
				{
					this.OnMainItemIdChanging(value);
					this.SendPropertyChanging();
					this._MainItemId = value;
					this.SendPropertyChanged("MainItemId");
					this.OnMainItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainItemCode", DbType="NVarChar(50)")]
		public string MainItemCode
		{
			get
			{
				return this._MainItemCode;
			}
			set
			{
				if ((this._MainItemCode != value))
				{
					this.OnMainItemCodeChanging(value);
					this.SendPropertyChanging();
					this._MainItemCode = value;
					this.SendPropertyChanged("MainItemCode");
					this.OnMainItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainItemName", DbType="NVarChar(50)")]
		public string MainItemName
		{
			get
			{
				return this._MainItemName;
			}
			set
			{
				if ((this._MainItemName != value))
				{
					this.OnMainItemNameChanging(value);
					this.SendPropertyChanging();
					this._MainItemName = value;
					this.SendPropertyChanged("MainItemName");
					this.OnMainItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkIds", DbType="NVarChar(500)")]
		public string UnitWorkIds
		{
			get
			{
				return this._UnitWorkIds;
			}
			set
			{
				if ((this._UnitWorkIds != value))
				{
					this.OnUnitWorkIdsChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkIds = value;
					this.SendPropertyChanged("UnitWorkIds");
					this.OnUnitWorkIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_MainItem_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.ProjectData_MainItem.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.ProjectData_MainItem.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectData_TeamGroup")]
	public partial class ProjectData_TeamGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TeamGroupId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _TeamGroupCode;
		
		private string _TeamGroupName;
		
		private string _Remark;
		
		private string _GroupLeaderId;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamGroupIdChanging(string value);
    partial void OnTeamGroupIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnTeamGroupCodeChanging(string value);
    partial void OnTeamGroupCodeChanged();
    partial void OnTeamGroupNameChanging(string value);
    partial void OnTeamGroupNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnGroupLeaderIdChanging(string value);
    partial void OnGroupLeaderIdChanged();
    #endregion
		
		public ProjectData_TeamGroup()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TeamGroupId
		{
			get
			{
				return this._TeamGroupId;
			}
			set
			{
				if ((this._TeamGroupId != value))
				{
					this.OnTeamGroupIdChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupId = value;
					this.SendPropertyChanged("TeamGroupId");
					this.OnTeamGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupCode", DbType="NVarChar(50)")]
		public string TeamGroupCode
		{
			get
			{
				return this._TeamGroupCode;
			}
			set
			{
				if ((this._TeamGroupCode != value))
				{
					this.OnTeamGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupCode = value;
					this.SendPropertyChanged("TeamGroupCode");
					this.OnTeamGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupName", DbType="NVarChar(50)")]
		public string TeamGroupName
		{
			get
			{
				return this._TeamGroupName;
			}
			set
			{
				if ((this._TeamGroupName != value))
				{
					this.OnTeamGroupNameChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupName = value;
					this.SendPropertyChanged("TeamGroupName");
					this.OnTeamGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupLeaderId", DbType="NVarChar(50)")]
		public string GroupLeaderId
		{
			get
			{
				return this._GroupLeaderId;
			}
			set
			{
				if ((this._GroupLeaderId != value))
				{
					this.OnGroupLeaderIdChanging(value);
					this.SendPropertyChanging();
					this._GroupLeaderId = value;
					this.SendPropertyChanged("GroupLeaderId");
					this.OnGroupLeaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_TeamGroup_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.ProjectData_TeamGroup.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.ProjectData_TeamGroup.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_TeamGroup_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.ProjectData_TeamGroup.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.ProjectData_TeamGroup.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_ProjectData_TeamGroup", Storage="_SitePerson_Person", ThisKey="TeamGroupId", OtherKey="TeamGroupId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.ProjectData_TeamGroup = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.ProjectData_TeamGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTP_AItemEndCheck")]
	public partial class PTP_AItemEndCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AItemCheckId;
		
		private string _PipelineId;
		
		private string _CheckMan;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private string _DealMan;
		
		private System.Nullable<System.DateTime> _DealDate;
		
		private string _Remark;
		
		private EntityRef<HJGL_Pipeline> _HJGL_Pipeline;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAItemCheckIdChanging(string value);
    partial void OnAItemCheckIdChanged();
    partial void OnPipelineIdChanging(string value);
    partial void OnPipelineIdChanged();
    partial void OnCheckManChanging(string value);
    partial void OnCheckManChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnDealManChanging(string value);
    partial void OnDealManChanged();
    partial void OnDealDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDealDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PTP_AItemEndCheck()
		{
			this._HJGL_Pipeline = default(EntityRef<HJGL_Pipeline>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AItemCheckId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AItemCheckId
		{
			get
			{
				return this._AItemCheckId;
			}
			set
			{
				if ((this._AItemCheckId != value))
				{
					this.OnAItemCheckIdChanging(value);
					this.SendPropertyChanging();
					this._AItemCheckId = value;
					this.SendPropertyChanged("AItemCheckId");
					this.OnAItemCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					if (this._HJGL_Pipeline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipelineIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineId = value;
					this.SendPropertyChanged("PipelineId");
					this.OnPipelineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckMan", DbType="VarChar(20)")]
		public string CheckMan
		{
			get
			{
				return this._CheckMan;
			}
			set
			{
				if ((this._CheckMan != value))
				{
					this.OnCheckManChanging(value);
					this.SendPropertyChanging();
					this._CheckMan = value;
					this.SendPropertyChanged("CheckMan");
					this.OnCheckManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealMan", DbType="VarChar(20)")]
		public string DealMan
		{
			get
			{
				return this._DealMan;
			}
			set
			{
				if ((this._DealMan != value))
				{
					this.OnDealManChanging(value);
					this.SendPropertyChanging();
					this._DealMan = value;
					this.SendPropertyChanged("DealMan");
					this.OnDealManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DealDate
		{
			get
			{
				return this._DealDate;
			}
			set
			{
				if ((this._DealDate != value))
				{
					this.OnDealDateChanging(value);
					this.SendPropertyChanging();
					this._DealDate = value;
					this.SendPropertyChanged("DealDate");
					this.OnDealDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_AItemEndCheck_HJGL_Pipeline", Storage="_HJGL_Pipeline", ThisKey="PipelineId", OtherKey="PipelineId", IsForeignKey=true)]
		public HJGL_Pipeline HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline.Entity;
			}
			set
			{
				HJGL_Pipeline previousValue = this._HJGL_Pipeline.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Pipeline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Pipeline.Entity = null;
						previousValue.PTP_AItemEndCheck.Remove(this);
					}
					this._HJGL_Pipeline.Entity = value;
					if ((value != null))
					{
						value.PTP_AItemEndCheck.Add(this);
						this._PipelineId = value.PipelineId;
					}
					else
					{
						this._PipelineId = default(string);
					}
					this.SendPropertyChanged("HJGL_Pipeline");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTP_BItemEndCheck")]
	public partial class PTP_BItemEndCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BItemCheckId;
		
		private string _PipelineId;
		
		private string _CheckMan;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private string _DealMan;
		
		private System.Nullable<System.DateTime> _DealDate;
		
		private string _Remark;
		
		private EntityRef<HJGL_Pipeline> _HJGL_Pipeline;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBItemCheckIdChanging(string value);
    partial void OnBItemCheckIdChanged();
    partial void OnPipelineIdChanging(string value);
    partial void OnPipelineIdChanged();
    partial void OnCheckManChanging(string value);
    partial void OnCheckManChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnDealManChanging(string value);
    partial void OnDealManChanged();
    partial void OnDealDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDealDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PTP_BItemEndCheck()
		{
			this._HJGL_Pipeline = default(EntityRef<HJGL_Pipeline>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BItemCheckId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BItemCheckId
		{
			get
			{
				return this._BItemCheckId;
			}
			set
			{
				if ((this._BItemCheckId != value))
				{
					this.OnBItemCheckIdChanging(value);
					this.SendPropertyChanging();
					this._BItemCheckId = value;
					this.SendPropertyChanged("BItemCheckId");
					this.OnBItemCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					if (this._HJGL_Pipeline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipelineIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineId = value;
					this.SendPropertyChanged("PipelineId");
					this.OnPipelineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckMan", DbType="VarChar(20)")]
		public string CheckMan
		{
			get
			{
				return this._CheckMan;
			}
			set
			{
				if ((this._CheckMan != value))
				{
					this.OnCheckManChanging(value);
					this.SendPropertyChanging();
					this._CheckMan = value;
					this.SendPropertyChanged("CheckMan");
					this.OnCheckManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealMan", DbType="VarChar(20)")]
		public string DealMan
		{
			get
			{
				return this._DealMan;
			}
			set
			{
				if ((this._DealMan != value))
				{
					this.OnDealManChanging(value);
					this.SendPropertyChanging();
					this._DealMan = value;
					this.SendPropertyChanged("DealMan");
					this.OnDealManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DealDate
		{
			get
			{
				return this._DealDate;
			}
			set
			{
				if ((this._DealDate != value))
				{
					this.OnDealDateChanging(value);
					this.SendPropertyChanging();
					this._DealDate = value;
					this.SendPropertyChanged("DealDate");
					this.OnDealDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_BItemEndCheck_HJGL_Pipeline", Storage="_HJGL_Pipeline", ThisKey="PipelineId", OtherKey="PipelineId", IsForeignKey=true)]
		public HJGL_Pipeline HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline.Entity;
			}
			set
			{
				HJGL_Pipeline previousValue = this._HJGL_Pipeline.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Pipeline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Pipeline.Entity = null;
						previousValue.PTP_BItemEndCheck.Remove(this);
					}
					this._HJGL_Pipeline.Entity = value;
					if ((value != null))
					{
						value.PTP_BItemEndCheck.Add(this);
						this._PipelineId = value.PipelineId;
					}
					else
					{
						this._PipelineId = default(string);
					}
					this.SendPropertyChanged("HJGL_Pipeline");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTP_PipelineList")]
	public partial class PTP_PipelineList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PT_PipeId;
		
		private string _PTP_ID;
		
		private string _PipelineId;
		
		private string _PT_DataType;
		
		private EntityRef<HJGL_Pipeline> _HJGL_Pipeline;
		
		private EntityRef<PTP_TestPackage> _PTP_TestPackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPT_PipeIdChanging(string value);
    partial void OnPT_PipeIdChanged();
    partial void OnPTP_IDChanging(string value);
    partial void OnPTP_IDChanged();
    partial void OnPipelineIdChanging(string value);
    partial void OnPipelineIdChanged();
    partial void OnPT_DataTypeChanging(string value);
    partial void OnPT_DataTypeChanged();
    #endregion
		
		public PTP_PipelineList()
		{
			this._HJGL_Pipeline = default(EntityRef<HJGL_Pipeline>);
			this._PTP_TestPackage = default(EntityRef<PTP_TestPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_PipeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PT_PipeId
		{
			get
			{
				return this._PT_PipeId;
			}
			set
			{
				if ((this._PT_PipeId != value))
				{
					this.OnPT_PipeIdChanging(value);
					this.SendPropertyChanging();
					this._PT_PipeId = value;
					this.SendPropertyChanged("PT_PipeId");
					this.OnPT_PipeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_ID", DbType="NVarChar(50)")]
		public string PTP_ID
		{
			get
			{
				return this._PTP_ID;
			}
			set
			{
				if ((this._PTP_ID != value))
				{
					if (this._PTP_TestPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPTP_IDChanging(value);
					this.SendPropertyChanging();
					this._PTP_ID = value;
					this.SendPropertyChanged("PTP_ID");
					this.OnPTP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					if (this._HJGL_Pipeline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipelineIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineId = value;
					this.SendPropertyChanged("PipelineId");
					this.OnPipelineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_DataType", DbType="Char(2)")]
		public string PT_DataType
		{
			get
			{
				return this._PT_DataType;
			}
			set
			{
				if ((this._PT_DataType != value))
				{
					this.OnPT_DataTypeChanging(value);
					this.SendPropertyChanging();
					this._PT_DataType = value;
					this.SendPropertyChanged("PT_DataType");
					this.OnPT_DataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_PipelineList_HJGL_Pipeline", Storage="_HJGL_Pipeline", ThisKey="PipelineId", OtherKey="PipelineId", IsForeignKey=true)]
		public HJGL_Pipeline HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline.Entity;
			}
			set
			{
				HJGL_Pipeline previousValue = this._HJGL_Pipeline.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Pipeline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Pipeline.Entity = null;
						previousValue.PTP_PipelineList.Remove(this);
					}
					this._HJGL_Pipeline.Entity = value;
					if ((value != null))
					{
						value.PTP_PipelineList.Add(this);
						this._PipelineId = value.PipelineId;
					}
					else
					{
						this._PipelineId = default(string);
					}
					this.SendPropertyChanged("HJGL_Pipeline");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_PipelineList_PTP_TestPackage", Storage="_PTP_TestPackage", ThisKey="PTP_ID", OtherKey="PTP_ID", IsForeignKey=true)]
		public PTP_TestPackage PTP_TestPackage
		{
			get
			{
				return this._PTP_TestPackage.Entity;
			}
			set
			{
				PTP_TestPackage previousValue = this._PTP_TestPackage.Entity;
				if (((previousValue != value) 
							|| (this._PTP_TestPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PTP_TestPackage.Entity = null;
						previousValue.PTP_PipelineList.Remove(this);
					}
					this._PTP_TestPackage.Entity = value;
					if ((value != null))
					{
						value.PTP_PipelineList.Add(this);
						this._PTP_ID = value.PTP_ID;
					}
					else
					{
						this._PTP_ID = default(string);
					}
					this.SendPropertyChanged("PTP_TestPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTP_TestPackage")]
	public partial class PTP_TestPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PTP_ID;
		
		private string _UnitId;
		
		private string _TestPackageNo;
		
		private string _TestPackageName;
		
		private string _TestHeat;
		
		private string _TestService;
		
		private string _TestType;
		
		private string _Finisher;
		
		private System.Nullable<System.DateTime> _FinishDate;
		
		private string _Tabler;
		
		private System.Nullable<System.DateTime> _TableDate;
		
		private string _Modifier;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private string _Auditer;
		
		private System.Nullable<System.DateTime> _AduditDate;
		
		private string _Remark;
		
		private string _TestPackageCode;
		
		private string _TestAmbientTemp;
		
		private string _TestMediumTemp;
		
		private string _TestPressure;
		
		private string _TestPressureTemp;
		
		private string _TestPressureTime;
		
		private string _TightnessTest;
		
		private string _TightnessTestTemp;
		
		private string _TightnessTestTime;
		
		private string _LeakageTestService;
		
		private string _LeakageTestPressure;
		
		private string _VacuumTestService;
		
		private string _VacuumTestPressure;
		
		private string _OperationMedium;
		
		private string _PurgingMedium;
		
		private string _CleaningMedium;
		
		private string _AllowSeepage;
		
		private string _FactSeepage;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _FinishDef;
		
		private EntitySet<PTP_PipelineList> _PTP_PipelineList;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPTP_IDChanging(string value);
    partial void OnPTP_IDChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnTestPackageNoChanging(string value);
    partial void OnTestPackageNoChanged();
    partial void OnTestPackageNameChanging(string value);
    partial void OnTestPackageNameChanged();
    partial void OnTestHeatChanging(string value);
    partial void OnTestHeatChanged();
    partial void OnTestServiceChanging(string value);
    partial void OnTestServiceChanged();
    partial void OnTestTypeChanging(string value);
    partial void OnTestTypeChanged();
    partial void OnFinisherChanging(string value);
    partial void OnFinisherChanged();
    partial void OnFinishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishDateChanged();
    partial void OnTablerChanging(string value);
    partial void OnTablerChanged();
    partial void OnTableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTableDateChanged();
    partial void OnModifierChanging(string value);
    partial void OnModifierChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnAuditerChanging(string value);
    partial void OnAuditerChanged();
    partial void OnAduditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAduditDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnTestPackageCodeChanging(string value);
    partial void OnTestPackageCodeChanged();
    partial void OnTestAmbientTempChanging(string value);
    partial void OnTestAmbientTempChanged();
    partial void OnTestMediumTempChanging(string value);
    partial void OnTestMediumTempChanged();
    partial void OnTestPressureChanging(string value);
    partial void OnTestPressureChanged();
    partial void OnTestPressureTempChanging(string value);
    partial void OnTestPressureTempChanged();
    partial void OnTestPressureTimeChanging(string value);
    partial void OnTestPressureTimeChanged();
    partial void OnTightnessTestChanging(string value);
    partial void OnTightnessTestChanged();
    partial void OnTightnessTestTempChanging(string value);
    partial void OnTightnessTestTempChanged();
    partial void OnTightnessTestTimeChanging(string value);
    partial void OnTightnessTestTimeChanged();
    partial void OnLeakageTestServiceChanging(string value);
    partial void OnLeakageTestServiceChanged();
    partial void OnLeakageTestPressureChanging(string value);
    partial void OnLeakageTestPressureChanged();
    partial void OnVacuumTestServiceChanging(string value);
    partial void OnVacuumTestServiceChanged();
    partial void OnVacuumTestPressureChanging(string value);
    partial void OnVacuumTestPressureChanged();
    partial void OnOperationMediumChanging(string value);
    partial void OnOperationMediumChanged();
    partial void OnPurgingMediumChanging(string value);
    partial void OnPurgingMediumChanged();
    partial void OnCleaningMediumChanging(string value);
    partial void OnCleaningMediumChanged();
    partial void OnAllowSeepageChanging(string value);
    partial void OnAllowSeepageChanged();
    partial void OnFactSeepageChanging(string value);
    partial void OnFactSeepageChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnFinishDefChanging(string value);
    partial void OnFinishDefChanged();
    #endregion
		
		public PTP_TestPackage()
		{
			this._PTP_PipelineList = new EntitySet<PTP_PipelineList>(new Action<PTP_PipelineList>(this.attach_PTP_PipelineList), new Action<PTP_PipelineList>(this.detach_PTP_PipelineList));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PTP_ID
		{
			get
			{
				return this._PTP_ID;
			}
			set
			{
				if ((this._PTP_ID != value))
				{
					this.OnPTP_IDChanging(value);
					this.SendPropertyChanging();
					this._PTP_ID = value;
					this.SendPropertyChanged("PTP_ID");
					this.OnPTP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPackageNo", DbType="VarChar(50)")]
		public string TestPackageNo
		{
			get
			{
				return this._TestPackageNo;
			}
			set
			{
				if ((this._TestPackageNo != value))
				{
					this.OnTestPackageNoChanging(value);
					this.SendPropertyChanging();
					this._TestPackageNo = value;
					this.SendPropertyChanged("TestPackageNo");
					this.OnTestPackageNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPackageName", DbType="VarChar(50)")]
		public string TestPackageName
		{
			get
			{
				return this._TestPackageName;
			}
			set
			{
				if ((this._TestPackageName != value))
				{
					this.OnTestPackageNameChanging(value);
					this.SendPropertyChanging();
					this._TestPackageName = value;
					this.SendPropertyChanged("TestPackageName");
					this.OnTestPackageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestHeat", DbType="VarChar(10)")]
		public string TestHeat
		{
			get
			{
				return this._TestHeat;
			}
			set
			{
				if ((this._TestHeat != value))
				{
					this.OnTestHeatChanging(value);
					this.SendPropertyChanging();
					this._TestHeat = value;
					this.SendPropertyChanged("TestHeat");
					this.OnTestHeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestService", DbType="VarChar(10)")]
		public string TestService
		{
			get
			{
				return this._TestService;
			}
			set
			{
				if ((this._TestService != value))
				{
					this.OnTestServiceChanging(value);
					this.SendPropertyChanging();
					this._TestService = value;
					this.SendPropertyChanged("TestService");
					this.OnTestServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="VarChar(50)")]
		public string TestType
		{
			get
			{
				return this._TestType;
			}
			set
			{
				if ((this._TestType != value))
				{
					this.OnTestTypeChanging(value);
					this.SendPropertyChanging();
					this._TestType = value;
					this.SendPropertyChanged("TestType");
					this.OnTestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finisher", DbType="NVarChar(50)")]
		public string Finisher
		{
			get
			{
				return this._Finisher;
			}
			set
			{
				if ((this._Finisher != value))
				{
					this.OnFinisherChanging(value);
					this.SendPropertyChanging();
					this._Finisher = value;
					this.SendPropertyChanged("Finisher");
					this.OnFinisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishDate
		{
			get
			{
				return this._FinishDate;
			}
			set
			{
				if ((this._FinishDate != value))
				{
					this.OnFinishDateChanging(value);
					this.SendPropertyChanging();
					this._FinishDate = value;
					this.SendPropertyChanged("FinishDate");
					this.OnFinishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabler", DbType="NVarChar(50)")]
		public string Tabler
		{
			get
			{
				return this._Tabler;
			}
			set
			{
				if ((this._Tabler != value))
				{
					this.OnTablerChanging(value);
					this.SendPropertyChanging();
					this._Tabler = value;
					this.SendPropertyChanged("Tabler");
					this.OnTablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TableDate
		{
			get
			{
				return this._TableDate;
			}
			set
			{
				if ((this._TableDate != value))
				{
					this.OnTableDateChanging(value);
					this.SendPropertyChanging();
					this._TableDate = value;
					this.SendPropertyChanged("TableDate");
					this.OnTableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modifier", DbType="NVarChar(50)")]
		public string Modifier
		{
			get
			{
				return this._Modifier;
			}
			set
			{
				if ((this._Modifier != value))
				{
					this.OnModifierChanging(value);
					this.SendPropertyChanging();
					this._Modifier = value;
					this.SendPropertyChanged("Modifier");
					this.OnModifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auditer", DbType="NVarChar(50)")]
		public string Auditer
		{
			get
			{
				return this._Auditer;
			}
			set
			{
				if ((this._Auditer != value))
				{
					this.OnAuditerChanging(value);
					this.SendPropertyChanging();
					this._Auditer = value;
					this.SendPropertyChanged("Auditer");
					this.OnAuditerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AduditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AduditDate
		{
			get
			{
				return this._AduditDate;
			}
			set
			{
				if ((this._AduditDate != value))
				{
					this.OnAduditDateChanging(value);
					this.SendPropertyChanging();
					this._AduditDate = value;
					this.SendPropertyChanged("AduditDate");
					this.OnAduditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPackageCode", DbType="VarChar(50)")]
		public string TestPackageCode
		{
			get
			{
				return this._TestPackageCode;
			}
			set
			{
				if ((this._TestPackageCode != value))
				{
					this.OnTestPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._TestPackageCode = value;
					this.SendPropertyChanged("TestPackageCode");
					this.OnTestPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestAmbientTemp", DbType="VarChar(20)")]
		public string TestAmbientTemp
		{
			get
			{
				return this._TestAmbientTemp;
			}
			set
			{
				if ((this._TestAmbientTemp != value))
				{
					this.OnTestAmbientTempChanging(value);
					this.SendPropertyChanging();
					this._TestAmbientTemp = value;
					this.SendPropertyChanged("TestAmbientTemp");
					this.OnTestAmbientTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestMediumTemp", DbType="VarChar(20)")]
		public string TestMediumTemp
		{
			get
			{
				return this._TestMediumTemp;
			}
			set
			{
				if ((this._TestMediumTemp != value))
				{
					this.OnTestMediumTempChanging(value);
					this.SendPropertyChanging();
					this._TestMediumTemp = value;
					this.SendPropertyChanged("TestMediumTemp");
					this.OnTestMediumTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPressure", DbType="VarChar(20)")]
		public string TestPressure
		{
			get
			{
				return this._TestPressure;
			}
			set
			{
				if ((this._TestPressure != value))
				{
					this.OnTestPressureChanging(value);
					this.SendPropertyChanging();
					this._TestPressure = value;
					this.SendPropertyChanged("TestPressure");
					this.OnTestPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPressureTemp", DbType="VarChar(20)")]
		public string TestPressureTemp
		{
			get
			{
				return this._TestPressureTemp;
			}
			set
			{
				if ((this._TestPressureTemp != value))
				{
					this.OnTestPressureTempChanging(value);
					this.SendPropertyChanging();
					this._TestPressureTemp = value;
					this.SendPropertyChanged("TestPressureTemp");
					this.OnTestPressureTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPressureTime", DbType="VarChar(20)")]
		public string TestPressureTime
		{
			get
			{
				return this._TestPressureTime;
			}
			set
			{
				if ((this._TestPressureTime != value))
				{
					this.OnTestPressureTimeChanging(value);
					this.SendPropertyChanging();
					this._TestPressureTime = value;
					this.SendPropertyChanged("TestPressureTime");
					this.OnTestPressureTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TightnessTest", DbType="VarChar(20)")]
		public string TightnessTest
		{
			get
			{
				return this._TightnessTest;
			}
			set
			{
				if ((this._TightnessTest != value))
				{
					this.OnTightnessTestChanging(value);
					this.SendPropertyChanging();
					this._TightnessTest = value;
					this.SendPropertyChanged("TightnessTest");
					this.OnTightnessTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TightnessTestTemp", DbType="VarChar(20)")]
		public string TightnessTestTemp
		{
			get
			{
				return this._TightnessTestTemp;
			}
			set
			{
				if ((this._TightnessTestTemp != value))
				{
					this.OnTightnessTestTempChanging(value);
					this.SendPropertyChanging();
					this._TightnessTestTemp = value;
					this.SendPropertyChanged("TightnessTestTemp");
					this.OnTightnessTestTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TightnessTestTime", DbType="VarChar(20)")]
		public string TightnessTestTime
		{
			get
			{
				return this._TightnessTestTime;
			}
			set
			{
				if ((this._TightnessTestTime != value))
				{
					this.OnTightnessTestTimeChanging(value);
					this.SendPropertyChanging();
					this._TightnessTestTime = value;
					this.SendPropertyChanged("TightnessTestTime");
					this.OnTightnessTestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeakageTestService", DbType="VarChar(20)")]
		public string LeakageTestService
		{
			get
			{
				return this._LeakageTestService;
			}
			set
			{
				if ((this._LeakageTestService != value))
				{
					this.OnLeakageTestServiceChanging(value);
					this.SendPropertyChanging();
					this._LeakageTestService = value;
					this.SendPropertyChanged("LeakageTestService");
					this.OnLeakageTestServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeakageTestPressure", DbType="VarChar(20)")]
		public string LeakageTestPressure
		{
			get
			{
				return this._LeakageTestPressure;
			}
			set
			{
				if ((this._LeakageTestPressure != value))
				{
					this.OnLeakageTestPressureChanging(value);
					this.SendPropertyChanging();
					this._LeakageTestPressure = value;
					this.SendPropertyChanged("LeakageTestPressure");
					this.OnLeakageTestPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacuumTestService", DbType="VarChar(20)")]
		public string VacuumTestService
		{
			get
			{
				return this._VacuumTestService;
			}
			set
			{
				if ((this._VacuumTestService != value))
				{
					this.OnVacuumTestServiceChanging(value);
					this.SendPropertyChanging();
					this._VacuumTestService = value;
					this.SendPropertyChanged("VacuumTestService");
					this.OnVacuumTestServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacuumTestPressure", DbType="VarChar(20)")]
		public string VacuumTestPressure
		{
			get
			{
				return this._VacuumTestPressure;
			}
			set
			{
				if ((this._VacuumTestPressure != value))
				{
					this.OnVacuumTestPressureChanging(value);
					this.SendPropertyChanging();
					this._VacuumTestPressure = value;
					this.SendPropertyChanged("VacuumTestPressure");
					this.OnVacuumTestPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationMedium", DbType="VarChar(20)")]
		public string OperationMedium
		{
			get
			{
				return this._OperationMedium;
			}
			set
			{
				if ((this._OperationMedium != value))
				{
					this.OnOperationMediumChanging(value);
					this.SendPropertyChanging();
					this._OperationMedium = value;
					this.SendPropertyChanged("OperationMedium");
					this.OnOperationMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurgingMedium", DbType="VarChar(20)")]
		public string PurgingMedium
		{
			get
			{
				return this._PurgingMedium;
			}
			set
			{
				if ((this._PurgingMedium != value))
				{
					this.OnPurgingMediumChanging(value);
					this.SendPropertyChanging();
					this._PurgingMedium = value;
					this.SendPropertyChanged("PurgingMedium");
					this.OnPurgingMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleaningMedium", DbType="VarChar(20)")]
		public string CleaningMedium
		{
			get
			{
				return this._CleaningMedium;
			}
			set
			{
				if ((this._CleaningMedium != value))
				{
					this.OnCleaningMediumChanging(value);
					this.SendPropertyChanging();
					this._CleaningMedium = value;
					this.SendPropertyChanged("CleaningMedium");
					this.OnCleaningMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSeepage", DbType="VarChar(20)")]
		public string AllowSeepage
		{
			get
			{
				return this._AllowSeepage;
			}
			set
			{
				if ((this._AllowSeepage != value))
				{
					this.OnAllowSeepageChanging(value);
					this.SendPropertyChanging();
					this._AllowSeepage = value;
					this.SendPropertyChanged("AllowSeepage");
					this.OnAllowSeepageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactSeepage", DbType="VarChar(20)")]
		public string FactSeepage
		{
			get
			{
				return this._FactSeepage;
			}
			set
			{
				if ((this._FactSeepage != value))
				{
					this.OnFactSeepageChanging(value);
					this.SendPropertyChanging();
					this._FactSeepage = value;
					this.SendPropertyChanged("FactSeepage");
					this.OnFactSeepageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDef", DbType="NVarChar(200)")]
		public string FinishDef
		{
			get
			{
				return this._FinishDef;
			}
			set
			{
				if ((this._FinishDef != value))
				{
					this.OnFinishDefChanging(value);
					this.SendPropertyChanging();
					this._FinishDef = value;
					this.SendPropertyChanged("FinishDef");
					this.OnFinishDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_PipelineList_PTP_TestPackage", Storage="_PTP_PipelineList", ThisKey="PTP_ID", OtherKey="PTP_ID", DeleteRule="NO ACTION")]
		public EntitySet<PTP_PipelineList> PTP_PipelineList
		{
			get
			{
				return this._PTP_PipelineList;
			}
			set
			{
				this._PTP_PipelineList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_TestPackage_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.PTP_TestPackage.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.PTP_TestPackage.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_TestPackage_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.PTP_TestPackage.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.PTP_TestPackage.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_TestPackage_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.PTP_TestPackage.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.PTP_TestPackage.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PTP_PipelineList(PTP_PipelineList entity)
		{
			this.SendPropertyChanging();
			entity.PTP_TestPackage = this;
		}
		
		private void detach_PTP_PipelineList(PTP_PipelineList entity)
		{
			this.SendPropertyChanging();
			entity.PTP_TestPackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityAudit_EquipmentPersonQuality")]
	public partial class QualityAudit_EquipmentPersonQuality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EquipmentPersonQualityId;
		
		private string _PersonId;
		
		private string _CertificateNo;
		
		private string _CertificateName;
		
		private string _Grade;
		
		private string _SendUnit;
		
		private System.Nullable<System.DateTime> _SendDate;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private System.Nullable<System.DateTime> _LateCheckDate;
		
		private string _ApprovalPerson;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _CertificateId;
		
		private string _AuditorId;
		
		private string _AuditOpinion;
		
		private string _States;
		
		private EntityRef<Base_Certificate> _Base_Certificate;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _Auditor;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquipmentPersonQualityIdChanging(string value);
    partial void OnEquipmentPersonQualityIdChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnCertificateNoChanging(string value);
    partial void OnCertificateNoChanged();
    partial void OnCertificateNameChanging(string value);
    partial void OnCertificateNameChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnSendUnitChanging(string value);
    partial void OnSendUnitChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnLateCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLateCheckDateChanged();
    partial void OnApprovalPersonChanging(string value);
    partial void OnApprovalPersonChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnCertificateIdChanging(string value);
    partial void OnCertificateIdChanged();
    partial void OnAuditorIdChanging(string value);
    partial void OnAuditorIdChanged();
    partial void OnAuditOpinionChanging(string value);
    partial void OnAuditOpinionChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public QualityAudit_EquipmentPersonQuality()
		{
			this._Base_Certificate = default(EntityRef<Base_Certificate>);
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Auditor = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentPersonQualityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EquipmentPersonQualityId
		{
			get
			{
				return this._EquipmentPersonQualityId;
			}
			set
			{
				if ((this._EquipmentPersonQualityId != value))
				{
					this.OnEquipmentPersonQualityIdChanging(value);
					this.SendPropertyChanging();
					this._EquipmentPersonQualityId = value;
					this.SendPropertyChanged("EquipmentPersonQualityId");
					this.OnEquipmentPersonQualityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNo", DbType="NVarChar(50)")]
		public string CertificateNo
		{
			get
			{
				return this._CertificateNo;
			}
			set
			{
				if ((this._CertificateNo != value))
				{
					this.OnCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._CertificateNo = value;
					this.SendPropertyChanged("CertificateNo");
					this.OnCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateName", DbType="NVarChar(50)")]
		public string CertificateName
		{
			get
			{
				return this._CertificateName;
			}
			set
			{
				if ((this._CertificateName != value))
				{
					this.OnCertificateNameChanging(value);
					this.SendPropertyChanging();
					this._CertificateName = value;
					this.SendPropertyChanged("CertificateName");
					this.OnCertificateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="NVarChar(50)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendUnit", DbType="NVarChar(50)")]
		public string SendUnit
		{
			get
			{
				return this._SendUnit;
			}
			set
			{
				if ((this._SendUnit != value))
				{
					this.OnSendUnitChanging(value);
					this.SendPropertyChanging();
					this._SendUnit = value;
					this.SendPropertyChanged("SendUnit");
					this.OnSendUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LateCheckDate
		{
			get
			{
				return this._LateCheckDate;
			}
			set
			{
				if ((this._LateCheckDate != value))
				{
					this.OnLateCheckDateChanging(value);
					this.SendPropertyChanging();
					this._LateCheckDate = value;
					this.SendPropertyChanged("LateCheckDate");
					this.OnLateCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalPerson", DbType="NVarChar(10)")]
		public string ApprovalPerson
		{
			get
			{
				return this._ApprovalPerson;
			}
			set
			{
				if ((this._ApprovalPerson != value))
				{
					this.OnApprovalPersonChanging(value);
					this.SendPropertyChanging();
					this._ApprovalPerson = value;
					this.SendPropertyChanged("ApprovalPerson");
					this.OnApprovalPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="NVarChar(50)")]
		public string CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					if (this._Base_Certificate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorId", DbType="NVarChar(50)")]
		public string AuditorId
		{
			get
			{
				return this._AuditorId;
			}
			set
			{
				if ((this._AuditorId != value))
				{
					if (this._Auditor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditorIdChanging(value);
					this.SendPropertyChanging();
					this._AuditorId = value;
					this.SendPropertyChanged("AuditorId");
					this.OnAuditorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditOpinion", DbType="NVarChar(200)")]
		public string AuditOpinion
		{
			get
			{
				return this._AuditOpinion;
			}
			set
			{
				if ((this._AuditOpinion != value))
				{
					this.OnAuditOpinionChanging(value);
					this.SendPropertyChanging();
					this._AuditOpinion = value;
					this.SendPropertyChanged("AuditOpinion");
					this.OnAuditOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_Base_Certificate", Storage="_Base_Certificate", ThisKey="CertificateId", OtherKey="CertificateId", IsForeignKey=true)]
		public Base_Certificate Base_Certificate
		{
			get
			{
				return this._Base_Certificate.Entity;
			}
			set
			{
				Base_Certificate previousValue = this._Base_Certificate.Entity;
				if (((previousValue != value) 
							|| (this._Base_Certificate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Certificate.Entity = null;
						previousValue.QualityAudit_EquipmentPersonQuality.Remove(this);
					}
					this._Base_Certificate.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_EquipmentPersonQuality.Add(this);
						this._CertificateId = value.CertificateId;
					}
					else
					{
						this._CertificateId = default(string);
					}
					this.SendPropertyChanged("Base_Certificate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.QualityAudit_EquipmentPersonQuality.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_EquipmentPersonQuality.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.QualityAudit_EquipmentPersonQuality.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_EquipmentPersonQuality.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId", Storage="_Auditor", ThisKey="AuditorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Auditor
		{
			get
			{
				return this._Auditor.Entity;
			}
			set
			{
				Sys_User previousValue = this._Auditor.Entity;
				if (((previousValue != value) 
							|| (this._Auditor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auditor.Entity = null;
						previousValue.User.Remove(this);
					}
					this._Auditor.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._AuditorId = value.UserId;
					}
					else
					{
						this._AuditorId = default(string);
					}
					this.SendPropertyChanged("Auditor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityAudit_PersonQuality")]
	public partial class QualityAudit_PersonQuality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PersonQualityId;
		
		private string _PersonId;
		
		private string _CertificateNo;
		
		private string _CertificateName;
		
		private string _Grade;
		
		private string _SendUnit;
		
		private System.Nullable<System.DateTime> _SendDate;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private System.Nullable<System.DateTime> _LateCheckDate;
		
		private string _ApprovalPerson;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _CertificateId;
		
		private string _AuditorId;
		
		private string _AuditOpinion;
		
		private string _States;
		
		private EntityRef<Base_Certificate> _Base_Certificate;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _Auditor;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonQualityIdChanging(string value);
    partial void OnPersonQualityIdChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnCertificateNoChanging(string value);
    partial void OnCertificateNoChanged();
    partial void OnCertificateNameChanging(string value);
    partial void OnCertificateNameChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnSendUnitChanging(string value);
    partial void OnSendUnitChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnLateCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLateCheckDateChanged();
    partial void OnApprovalPersonChanging(string value);
    partial void OnApprovalPersonChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnCertificateIdChanging(string value);
    partial void OnCertificateIdChanged();
    partial void OnAuditorIdChanging(string value);
    partial void OnAuditorIdChanged();
    partial void OnAuditOpinionChanging(string value);
    partial void OnAuditOpinionChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public QualityAudit_PersonQuality()
		{
			this._Base_Certificate = default(EntityRef<Base_Certificate>);
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Auditor = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonQualityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonQualityId
		{
			get
			{
				return this._PersonQualityId;
			}
			set
			{
				if ((this._PersonQualityId != value))
				{
					this.OnPersonQualityIdChanging(value);
					this.SendPropertyChanging();
					this._PersonQualityId = value;
					this.SendPropertyChanged("PersonQualityId");
					this.OnPersonQualityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNo", DbType="NVarChar(50)")]
		public string CertificateNo
		{
			get
			{
				return this._CertificateNo;
			}
			set
			{
				if ((this._CertificateNo != value))
				{
					this.OnCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._CertificateNo = value;
					this.SendPropertyChanged("CertificateNo");
					this.OnCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateName", DbType="NVarChar(50)")]
		public string CertificateName
		{
			get
			{
				return this._CertificateName;
			}
			set
			{
				if ((this._CertificateName != value))
				{
					this.OnCertificateNameChanging(value);
					this.SendPropertyChanging();
					this._CertificateName = value;
					this.SendPropertyChanged("CertificateName");
					this.OnCertificateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="NVarChar(50)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendUnit", DbType="NVarChar(50)")]
		public string SendUnit
		{
			get
			{
				return this._SendUnit;
			}
			set
			{
				if ((this._SendUnit != value))
				{
					this.OnSendUnitChanging(value);
					this.SendPropertyChanging();
					this._SendUnit = value;
					this.SendPropertyChanged("SendUnit");
					this.OnSendUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LateCheckDate
		{
			get
			{
				return this._LateCheckDate;
			}
			set
			{
				if ((this._LateCheckDate != value))
				{
					this.OnLateCheckDateChanging(value);
					this.SendPropertyChanging();
					this._LateCheckDate = value;
					this.SendPropertyChanged("LateCheckDate");
					this.OnLateCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalPerson", DbType="NVarChar(10)")]
		public string ApprovalPerson
		{
			get
			{
				return this._ApprovalPerson;
			}
			set
			{
				if ((this._ApprovalPerson != value))
				{
					this.OnApprovalPersonChanging(value);
					this.SendPropertyChanging();
					this._ApprovalPerson = value;
					this.SendPropertyChanged("ApprovalPerson");
					this.OnApprovalPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="NVarChar(50)")]
		public string CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					if (this._Base_Certificate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorId", DbType="NVarChar(50)")]
		public string AuditorId
		{
			get
			{
				return this._AuditorId;
			}
			set
			{
				if ((this._AuditorId != value))
				{
					if (this._Auditor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditorIdChanging(value);
					this.SendPropertyChanging();
					this._AuditorId = value;
					this.SendPropertyChanged("AuditorId");
					this.OnAuditorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditOpinion", DbType="NVarChar(200)")]
		public string AuditOpinion
		{
			get
			{
				return this._AuditOpinion;
			}
			set
			{
				if ((this._AuditOpinion != value))
				{
					this.OnAuditOpinionChanging(value);
					this.SendPropertyChanging();
					this._AuditOpinion = value;
					this.SendPropertyChanged("AuditOpinion");
					this.OnAuditOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Base_Certificate", Storage="_Base_Certificate", ThisKey="CertificateId", OtherKey="CertificateId", IsForeignKey=true)]
		public Base_Certificate Base_Certificate
		{
			get
			{
				return this._Base_Certificate.Entity;
			}
			set
			{
				Base_Certificate previousValue = this._Base_Certificate.Entity;
				if (((previousValue != value) 
							|| (this._Base_Certificate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Certificate.Entity = null;
						previousValue.QualityAudit_PersonQuality.Remove(this);
					}
					this._Base_Certificate.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQuality.Add(this);
						this._CertificateId = value.CertificateId;
					}
					else
					{
						this._CertificateId = default(string);
					}
					this.SendPropertyChanged("Base_Certificate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.QualityAudit_PersonQuality.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQuality.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.QualityAudit_PersonQuality.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQuality.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Sys_User_AuditorId", Storage="_Auditor", ThisKey="AuditorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Auditor
		{
			get
			{
				return this._Auditor.Entity;
			}
			set
			{
				Sys_User previousValue = this._Auditor.Entity;
				if (((previousValue != value) 
							|| (this._Auditor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auditor.Entity = null;
						previousValue.QualityAudit_PersonQuality_Sys_User_AuditorId.Remove(this);
					}
					this._Auditor.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQuality_Sys_User_AuditorId.Add(this);
						this._AuditorId = value.UserId;
					}
					else
					{
						this._AuditorId = default(string);
					}
					this.SendPropertyChanged("Auditor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityAudit_SafePersonQuality")]
	public partial class QualityAudit_SafePersonQuality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SafePersonQualityId;
		
		private string _PersonId;
		
		private string _CertificateNo;
		
		private string _CertificateName;
		
		private string _Grade;
		
		private string _SendUnit;
		
		private System.Nullable<System.DateTime> _SendDate;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private System.Nullable<System.DateTime> _LateCheckDate;
		
		private string _ApprovalPerson;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _AuditorId;
		
		private string _AuditOpinion;
		
		private string _States;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _Auditor;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSafePersonQualityIdChanging(string value);
    partial void OnSafePersonQualityIdChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnCertificateNoChanging(string value);
    partial void OnCertificateNoChanged();
    partial void OnCertificateNameChanging(string value);
    partial void OnCertificateNameChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnSendUnitChanging(string value);
    partial void OnSendUnitChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnLateCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLateCheckDateChanged();
    partial void OnApprovalPersonChanging(string value);
    partial void OnApprovalPersonChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnAuditorIdChanging(string value);
    partial void OnAuditorIdChanged();
    partial void OnAuditOpinionChanging(string value);
    partial void OnAuditOpinionChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public QualityAudit_SafePersonQuality()
		{
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Auditor = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafePersonQualityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SafePersonQualityId
		{
			get
			{
				return this._SafePersonQualityId;
			}
			set
			{
				if ((this._SafePersonQualityId != value))
				{
					this.OnSafePersonQualityIdChanging(value);
					this.SendPropertyChanging();
					this._SafePersonQualityId = value;
					this.SendPropertyChanged("SafePersonQualityId");
					this.OnSafePersonQualityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNo", DbType="NVarChar(50)")]
		public string CertificateNo
		{
			get
			{
				return this._CertificateNo;
			}
			set
			{
				if ((this._CertificateNo != value))
				{
					this.OnCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._CertificateNo = value;
					this.SendPropertyChanged("CertificateNo");
					this.OnCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateName", DbType="NVarChar(50)")]
		public string CertificateName
		{
			get
			{
				return this._CertificateName;
			}
			set
			{
				if ((this._CertificateName != value))
				{
					this.OnCertificateNameChanging(value);
					this.SendPropertyChanging();
					this._CertificateName = value;
					this.SendPropertyChanged("CertificateName");
					this.OnCertificateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="NVarChar(50)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendUnit", DbType="NVarChar(50)")]
		public string SendUnit
		{
			get
			{
				return this._SendUnit;
			}
			set
			{
				if ((this._SendUnit != value))
				{
					this.OnSendUnitChanging(value);
					this.SendPropertyChanging();
					this._SendUnit = value;
					this.SendPropertyChanged("SendUnit");
					this.OnSendUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LateCheckDate
		{
			get
			{
				return this._LateCheckDate;
			}
			set
			{
				if ((this._LateCheckDate != value))
				{
					this.OnLateCheckDateChanging(value);
					this.SendPropertyChanging();
					this._LateCheckDate = value;
					this.SendPropertyChanged("LateCheckDate");
					this.OnLateCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalPerson", DbType="NVarChar(50)")]
		public string ApprovalPerson
		{
			get
			{
				return this._ApprovalPerson;
			}
			set
			{
				if ((this._ApprovalPerson != value))
				{
					this.OnApprovalPersonChanging(value);
					this.SendPropertyChanging();
					this._ApprovalPerson = value;
					this.SendPropertyChanged("ApprovalPerson");
					this.OnApprovalPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorId", DbType="NVarChar(50)")]
		public string AuditorId
		{
			get
			{
				return this._AuditorId;
			}
			set
			{
				if ((this._AuditorId != value))
				{
					if (this._Auditor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditorIdChanging(value);
					this.SendPropertyChanging();
					this._AuditorId = value;
					this.SendPropertyChanged("AuditorId");
					this.OnAuditorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditOpinion", DbType="NVarChar(200)")]
		public string AuditOpinion
		{
			get
			{
				return this._AuditOpinion;
			}
			set
			{
				if ((this._AuditOpinion != value))
				{
					this.OnAuditOpinionChanging(value);
					this.SendPropertyChanging();
					this._AuditOpinion = value;
					this.SendPropertyChanged("AuditOpinion");
					this.OnAuditOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SafePersonQuality_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.QualityAudit_SafePersonQuality.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_SafePersonQuality.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SafePersonQuality_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.QualityAudit_SafePersonQuality.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_SafePersonQuality.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SafePersonQuality_Sys_User_AuditorId", Storage="_Auditor", ThisKey="AuditorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Auditor
		{
			get
			{
				return this._Auditor.Entity;
			}
			set
			{
				Sys_User previousValue = this._Auditor.Entity;
				if (((previousValue != value) 
							|| (this._Auditor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auditor.Entity = null;
						previousValue.QualityAudit_SafePersonQuality_Sys_User_AuditorId.Remove(this);
					}
					this._Auditor.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_SafePersonQuality_Sys_User_AuditorId.Add(this);
						this._AuditorId = value.UserId;
					}
					else
					{
						this._AuditorId = default(string);
					}
					this.SendPropertyChanged("Auditor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitePerson_Person")]
	public partial class SitePerson_Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PersonId;
		
		private string _CardNo;
		
		private string _PersonName;
		
		private string _Sex;
		
		private string _IdentityCard;
		
		private string _Address;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _TeamGroupId;
		
		private string _WorkAreaId;
		
		private string _WorkPostId;
		
		private System.Nullable<System.DateTime> _InTime;
		
		private System.Nullable<System.DateTime> _OutTime;
		
		private string _OutResult;
		
		private string _Telephone;
		
		private string _PositionId;
		
		private string _PostTitleId;
		
		private string _PhotoUrl;
		
		private bool _IsUsed;
		
		private bool _IsCardUsed;
		
		private System.Nullable<int> _PersonIndex;
		
		private string _DepartId;
		
		private string _CertificateId;
		
		private string _CertificateCode;
		
		private System.Nullable<System.DateTime> _CertificateLimitTime;
		
		private string _QualificationCertificateUrl;
		
		private string _TrainingCertificateUrl;
		
		private string _QRCodeAttachUrl;
		
		private string _Password;
		
		private string _FromPersonId;
		
		private string _AuditorId;
		
		private System.Nullable<System.DateTime> _AuditorDate;
		
		private System.Nullable<System.DateTime> _ExchangeTime;
		
		private System.Nullable<System.DateTime> _ExchangeTime2;
		
		private string _IDCardUrl;
		
		private string _Isprint;
		
		private System.Nullable<bool> _IsForeign;
		
		private System.Nullable<bool> _IsOutside;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<HJGL_WeldJoint> _Person;
		
		private EntitySet<QualityAudit_EquipmentPersonQuality> _QualityAudit_EquipmentPersonQuality;
		
		private EntitySet<QualityAudit_PersonQuality> _QualityAudit_PersonQuality;
		
		private EntitySet<QualityAudit_SafePersonQuality> _QualityAudit_SafePersonQuality;
		
		private EntityRef<Base_Depart> _Base_Depart;
		
		private EntityRef<Base_Position> _Base_Position;
		
		private EntityRef<Base_PostTitle> _Base_PostTitle;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_WorkPost> _Base_WorkPost;
		
		private EntityRef<ProjectData_TeamGroup> _ProjectData_TeamGroup;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
		private EntitySet<Welder_WelderQualify> _Welder_WelderQualify;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnCardNoChanging(string value);
    partial void OnCardNoChanged();
    partial void OnPersonNameChanging(string value);
    partial void OnPersonNameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnIdentityCardChanging(string value);
    partial void OnIdentityCardChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnTeamGroupIdChanging(string value);
    partial void OnTeamGroupIdChanged();
    partial void OnWorkAreaIdChanging(string value);
    partial void OnWorkAreaIdChanged();
    partial void OnWorkPostIdChanging(string value);
    partial void OnWorkPostIdChanged();
    partial void OnInTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInTimeChanged();
    partial void OnOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOutTimeChanged();
    partial void OnOutResultChanging(string value);
    partial void OnOutResultChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnPositionIdChanging(string value);
    partial void OnPositionIdChanged();
    partial void OnPostTitleIdChanging(string value);
    partial void OnPostTitleIdChanged();
    partial void OnPhotoUrlChanging(string value);
    partial void OnPhotoUrlChanged();
    partial void OnIsUsedChanging(bool value);
    partial void OnIsUsedChanged();
    partial void OnIsCardUsedChanging(bool value);
    partial void OnIsCardUsedChanged();
    partial void OnPersonIndexChanging(System.Nullable<int> value);
    partial void OnPersonIndexChanged();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnCertificateIdChanging(string value);
    partial void OnCertificateIdChanged();
    partial void OnCertificateCodeChanging(string value);
    partial void OnCertificateCodeChanged();
    partial void OnCertificateLimitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCertificateLimitTimeChanged();
    partial void OnQualificationCertificateUrlChanging(string value);
    partial void OnQualificationCertificateUrlChanged();
    partial void OnTrainingCertificateUrlChanging(string value);
    partial void OnTrainingCertificateUrlChanged();
    partial void OnQRCodeAttachUrlChanging(string value);
    partial void OnQRCodeAttachUrlChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFromPersonIdChanging(string value);
    partial void OnFromPersonIdChanged();
    partial void OnAuditorIdChanging(string value);
    partial void OnAuditorIdChanged();
    partial void OnAuditorDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditorDateChanged();
    partial void OnExchangeTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExchangeTimeChanged();
    partial void OnExchangeTime2Changing(System.Nullable<System.DateTime> value);
    partial void OnExchangeTime2Changed();
    partial void OnIDCardUrlChanging(string value);
    partial void OnIDCardUrlChanged();
    partial void OnIsprintChanging(string value);
    partial void OnIsprintChanged();
    partial void OnIsForeignChanging(System.Nullable<bool> value);
    partial void OnIsForeignChanged();
    partial void OnIsOutsideChanging(System.Nullable<bool> value);
    partial void OnIsOutsideChanged();
    #endregion
		
		public SitePerson_Person()
		{
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._Person = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_Person), new Action<HJGL_WeldJoint>(this.detach_Person));
			this._QualityAudit_EquipmentPersonQuality = new EntitySet<QualityAudit_EquipmentPersonQuality>(new Action<QualityAudit_EquipmentPersonQuality>(this.attach_QualityAudit_EquipmentPersonQuality), new Action<QualityAudit_EquipmentPersonQuality>(this.detach_QualityAudit_EquipmentPersonQuality));
			this._QualityAudit_PersonQuality = new EntitySet<QualityAudit_PersonQuality>(new Action<QualityAudit_PersonQuality>(this.attach_QualityAudit_PersonQuality), new Action<QualityAudit_PersonQuality>(this.detach_QualityAudit_PersonQuality));
			this._QualityAudit_SafePersonQuality = new EntitySet<QualityAudit_SafePersonQuality>(new Action<QualityAudit_SafePersonQuality>(this.attach_QualityAudit_SafePersonQuality), new Action<QualityAudit_SafePersonQuality>(this.detach_QualityAudit_SafePersonQuality));
			this._Base_Depart = default(EntityRef<Base_Depart>);
			this._Base_Position = default(EntityRef<Base_Position>);
			this._Base_PostTitle = default(EntityRef<Base_PostTitle>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Base_WorkPost = default(EntityRef<Base_WorkPost>);
			this._ProjectData_TeamGroup = default(EntityRef<ProjectData_TeamGroup>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			this._Welder_WelderQualify = new EntitySet<Welder_WelderQualify>(new Action<Welder_WelderQualify>(this.attach_Welder_WelderQualify), new Action<Welder_WelderQualify>(this.detach_Welder_WelderQualify));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNo", DbType="NVarChar(50)")]
		public string CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this.OnCardNoChanging(value);
					this.SendPropertyChanging();
					this._CardNo = value;
					this.SendPropertyChanged("CardNo");
					this.OnCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonName", DbType="NVarChar(50)")]
		public string PersonName
		{
			get
			{
				return this._PersonName;
			}
			set
			{
				if ((this._PersonName != value))
				{
					this.OnPersonNameChanging(value);
					this.SendPropertyChanging();
					this._PersonName = value;
					this.SendPropertyChanged("PersonName");
					this.OnPersonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(50)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this.OnIdentityCardChanging(value);
					this.SendPropertyChanging();
					this._IdentityCard = value;
					this.SendPropertyChanged("IdentityCard");
					this.OnIdentityCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupId", DbType="NVarChar(50)")]
		public string TeamGroupId
		{
			get
			{
				return this._TeamGroupId;
			}
			set
			{
				if ((this._TeamGroupId != value))
				{
					if (this._ProjectData_TeamGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamGroupIdChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupId = value;
					this.SendPropertyChanged("TeamGroupId");
					this.OnTeamGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkAreaIdChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaId = value;
					this.SendPropertyChanged("WorkAreaId");
					this.OnWorkAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(50)")]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					if (this._Base_WorkPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkPostIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPostId = value;
					this.SendPropertyChanged("WorkPostId");
					this.OnWorkPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> InTime
		{
			get
			{
				return this._InTime;
			}
			set
			{
				if ((this._InTime != value))
				{
					this.OnInTimeChanging(value);
					this.SendPropertyChanging();
					this._InTime = value;
					this.SendPropertyChanged("InTime");
					this.OnInTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutTime
		{
			get
			{
				return this._OutTime;
			}
			set
			{
				if ((this._OutTime != value))
				{
					this.OnOutTimeChanging(value);
					this.SendPropertyChanging();
					this._OutTime = value;
					this.SendPropertyChanged("OutTime");
					this.OnOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutResult", DbType="NVarChar(50)")]
		public string OutResult
		{
			get
			{
				return this._OutResult;
			}
			set
			{
				if ((this._OutResult != value))
				{
					this.OnOutResultChanging(value);
					this.SendPropertyChanging();
					this._OutResult = value;
					this.SendPropertyChanged("OutResult");
					this.OnOutResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50)")]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					if (this._Base_Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleId", DbType="NVarChar(50)")]
		public string PostTitleId
		{
			get
			{
				return this._PostTitleId;
			}
			set
			{
				if ((this._PostTitleId != value))
				{
					if (this._Base_PostTitle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostTitleIdChanging(value);
					this.SendPropertyChanging();
					this._PostTitleId = value;
					this.SendPropertyChanged("PostTitleId");
					this.OnPostTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(2000)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this.OnPhotoUrlChanging(value);
					this.SendPropertyChanging();
					this._PhotoUrl = value;
					this.SendPropertyChanged("PhotoUrl");
					this.OnPhotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit NOT NULL")]
		public bool IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCardUsed", DbType="Bit NOT NULL")]
		public bool IsCardUsed
		{
			get
			{
				return this._IsCardUsed;
			}
			set
			{
				if ((this._IsCardUsed != value))
				{
					this.OnIsCardUsedChanging(value);
					this.SendPropertyChanging();
					this._IsCardUsed = value;
					this.SendPropertyChanged("IsCardUsed");
					this.OnIsCardUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonIndex", DbType="Int")]
		public System.Nullable<int> PersonIndex
		{
			get
			{
				return this._PersonIndex;
			}
			set
			{
				if ((this._PersonIndex != value))
				{
					this.OnPersonIndexChanging(value);
					this.SendPropertyChanging();
					this._PersonIndex = value;
					this.SendPropertyChanged("PersonIndex");
					this.OnPersonIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					if (this._Base_Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="NVarChar(50)")]
		public string CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateCode", DbType="NVarChar(20)")]
		public string CertificateCode
		{
			get
			{
				return this._CertificateCode;
			}
			set
			{
				if ((this._CertificateCode != value))
				{
					this.OnCertificateCodeChanging(value);
					this.SendPropertyChanging();
					this._CertificateCode = value;
					this.SendPropertyChanged("CertificateCode");
					this.OnCertificateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateLimitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CertificateLimitTime
		{
			get
			{
				return this._CertificateLimitTime;
			}
			set
			{
				if ((this._CertificateLimitTime != value))
				{
					this.OnCertificateLimitTimeChanging(value);
					this.SendPropertyChanging();
					this._CertificateLimitTime = value;
					this.SendPropertyChanged("CertificateLimitTime");
					this.OnCertificateLimitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationCertificateUrl", DbType="NVarChar(200)")]
		public string QualificationCertificateUrl
		{
			get
			{
				return this._QualificationCertificateUrl;
			}
			set
			{
				if ((this._QualificationCertificateUrl != value))
				{
					this.OnQualificationCertificateUrlChanging(value);
					this.SendPropertyChanging();
					this._QualificationCertificateUrl = value;
					this.SendPropertyChanged("QualificationCertificateUrl");
					this.OnQualificationCertificateUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingCertificateUrl", DbType="NVarChar(200)")]
		public string TrainingCertificateUrl
		{
			get
			{
				return this._TrainingCertificateUrl;
			}
			set
			{
				if ((this._TrainingCertificateUrl != value))
				{
					this.OnTrainingCertificateUrlChanging(value);
					this.SendPropertyChanging();
					this._TrainingCertificateUrl = value;
					this.SendPropertyChanged("TrainingCertificateUrl");
					this.OnTrainingCertificateUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeAttachUrl", DbType="NVarChar(200)")]
		public string QRCodeAttachUrl
		{
			get
			{
				return this._QRCodeAttachUrl;
			}
			set
			{
				if ((this._QRCodeAttachUrl != value))
				{
					this.OnQRCodeAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeAttachUrl = value;
					this.SendPropertyChanged("QRCodeAttachUrl");
					this.OnQRCodeAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPersonId", DbType="NVarChar(50)")]
		public string FromPersonId
		{
			get
			{
				return this._FromPersonId;
			}
			set
			{
				if ((this._FromPersonId != value))
				{
					this.OnFromPersonIdChanging(value);
					this.SendPropertyChanging();
					this._FromPersonId = value;
					this.SendPropertyChanged("FromPersonId");
					this.OnFromPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorId", DbType="NVarChar(50)")]
		public string AuditorId
		{
			get
			{
				return this._AuditorId;
			}
			set
			{
				if ((this._AuditorId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditorIdChanging(value);
					this.SendPropertyChanging();
					this._AuditorId = value;
					this.SendPropertyChanged("AuditorId");
					this.OnAuditorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditorDate
		{
			get
			{
				return this._AuditorDate;
			}
			set
			{
				if ((this._AuditorDate != value))
				{
					this.OnAuditorDateChanging(value);
					this.SendPropertyChanging();
					this._AuditorDate = value;
					this.SendPropertyChanged("AuditorDate");
					this.OnAuditorDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExchangeTime
		{
			get
			{
				return this._ExchangeTime;
			}
			set
			{
				if ((this._ExchangeTime != value))
				{
					this.OnExchangeTimeChanging(value);
					this.SendPropertyChanging();
					this._ExchangeTime = value;
					this.SendPropertyChanged("ExchangeTime");
					this.OnExchangeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeTime2", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExchangeTime2
		{
			get
			{
				return this._ExchangeTime2;
			}
			set
			{
				if ((this._ExchangeTime2 != value))
				{
					this.OnExchangeTime2Changing(value);
					this.SendPropertyChanging();
					this._ExchangeTime2 = value;
					this.SendPropertyChanged("ExchangeTime2");
					this.OnExchangeTime2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCardUrl", DbType="NVarChar(2000)")]
		public string IDCardUrl
		{
			get
			{
				return this._IDCardUrl;
			}
			set
			{
				if ((this._IDCardUrl != value))
				{
					this.OnIDCardUrlChanging(value);
					this.SendPropertyChanging();
					this._IDCardUrl = value;
					this.SendPropertyChanged("IDCardUrl");
					this.OnIDCardUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isprint", Storage="_Isprint", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Isprint
		{
			get
			{
				return this._Isprint;
			}
			set
			{
				if ((this._Isprint != value))
				{
					this.OnIsprintChanging(value);
					this.SendPropertyChanging();
					this._Isprint = value;
					this.SendPropertyChanged("Isprint");
					this.OnIsprintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForeign", DbType="Bit")]
		public System.Nullable<bool> IsForeign
		{
			get
			{
				return this._IsForeign;
			}
			set
			{
				if ((this._IsForeign != value))
				{
					this.OnIsForeignChanging(value);
					this.SendPropertyChanging();
					this._IsForeign = value;
					this.SendPropertyChanged("IsForeign");
					this.OnIsForeignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutside", DbType="Bit")]
		public System.Nullable<bool> IsOutside
		{
			get
			{
				return this._IsOutside;
			}
			set
			{
				if ((this._IsOutside != value))
				{
					this.OnIsOutsideChanging(value);
					this.SendPropertyChanging();
					this._IsOutside = value;
					this.SendPropertyChanged("IsOutside");
					this.OnIsOutsideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_SitePerson_Person", Storage="_HJGL_Batch_PointBatch", ThisKey="PersonId", OtherKey="WelderId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_SitePerson_Person", Storage="_HJGL_RepairRecord", ThisKey="PersonId", OtherKey="RepairWelder", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_SitePerson_Person_BackingWelder", Storage="_HJGL_WeldJoint", ThisKey="PersonId", OtherKey="BackingWelderId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_SitePerson_Person_CoverWelder", Storage="_Person", ThisKey="PersonId", OtherKey="CoverWelderId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> Person
		{
			get
			{
				return this._Person;
			}
			set
			{
				this._Person.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_SitePerson_Person", Storage="_QualityAudit_EquipmentPersonQuality", ThisKey="PersonId", OtherKey="PersonId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_EquipmentPersonQuality> QualityAudit_EquipmentPersonQuality
		{
			get
			{
				return this._QualityAudit_EquipmentPersonQuality;
			}
			set
			{
				this._QualityAudit_EquipmentPersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_SitePerson_Person", Storage="_QualityAudit_PersonQuality", ThisKey="PersonId", OtherKey="PersonId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQuality> QualityAudit_PersonQuality
		{
			get
			{
				return this._QualityAudit_PersonQuality;
			}
			set
			{
				this._QualityAudit_PersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SafePersonQuality_SitePerson_Person", Storage="_QualityAudit_SafePersonQuality", ThisKey="PersonId", OtherKey="PersonId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_SafePersonQuality> QualityAudit_SafePersonQuality
		{
			get
			{
				return this._QualityAudit_SafePersonQuality;
			}
			set
			{
				this._QualityAudit_SafePersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Depart", Storage="_Base_Depart", ThisKey="DepartId", OtherKey="DepartId", IsForeignKey=true)]
		public Base_Depart Base_Depart
		{
			get
			{
				return this._Base_Depart.Entity;
			}
			set
			{
				Base_Depart previousValue = this._Base_Depart.Entity;
				if (((previousValue != value) 
							|| (this._Base_Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Depart.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Base_Depart.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._DepartId = value.DepartId;
					}
					else
					{
						this._DepartId = default(string);
					}
					this.SendPropertyChanged("Base_Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Position", Storage="_Base_Position", ThisKey="PositionId", OtherKey="PositionId", IsForeignKey=true)]
		public Base_Position Base_Position
		{
			get
			{
				return this._Base_Position.Entity;
			}
			set
			{
				Base_Position previousValue = this._Base_Position.Entity;
				if (((previousValue != value) 
							|| (this._Base_Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Position.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Base_Position.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._PositionId = value.PositionId;
					}
					else
					{
						this._PositionId = default(string);
					}
					this.SendPropertyChanged("Base_Position");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_PostTitle", Storage="_Base_PostTitle", ThisKey="PostTitleId", OtherKey="PostTitleId", IsForeignKey=true)]
		public Base_PostTitle Base_PostTitle
		{
			get
			{
				return this._Base_PostTitle.Entity;
			}
			set
			{
				Base_PostTitle previousValue = this._Base_PostTitle.Entity;
				if (((previousValue != value) 
							|| (this._Base_PostTitle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_PostTitle.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Base_PostTitle.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._PostTitleId = value.PostTitleId;
					}
					else
					{
						this._PostTitleId = default(string);
					}
					this.SendPropertyChanged("Base_PostTitle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_WorkPost", Storage="_Base_WorkPost", ThisKey="WorkPostId", OtherKey="WorkPostId", IsForeignKey=true)]
		public Base_WorkPost Base_WorkPost
		{
			get
			{
				return this._Base_WorkPost.Entity;
			}
			set
			{
				Base_WorkPost previousValue = this._Base_WorkPost.Entity;
				if (((previousValue != value) 
							|| (this._Base_WorkPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WorkPost.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Base_WorkPost.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._WorkPostId = value.WorkPostId;
					}
					else
					{
						this._WorkPostId = default(string);
					}
					this.SendPropertyChanged("Base_WorkPost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_ProjectData_TeamGroup", Storage="_ProjectData_TeamGroup", ThisKey="TeamGroupId", OtherKey="TeamGroupId", IsForeignKey=true)]
		public ProjectData_TeamGroup ProjectData_TeamGroup
		{
			get
			{
				return this._ProjectData_TeamGroup.Entity;
			}
			set
			{
				ProjectData_TeamGroup previousValue = this._ProjectData_TeamGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProjectData_TeamGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectData_TeamGroup.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._ProjectData_TeamGroup.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._TeamGroupId = value.TeamGroupId;
					}
					else
					{
						this._TeamGroupId = default(string);
					}
					this.SendPropertyChanged("ProjectData_TeamGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Sys_User", Storage="_Sys_User", ThisKey="AuditorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._AuditorId = value.UserId;
					}
					else
					{
						this._AuditorId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="WorkAreaId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._WorkAreaId = value.UnitWorkId;
					}
					else
					{
						this._WorkAreaId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Welder_WelderQualify_SitePerson_Person", Storage="_Welder_WelderQualify", ThisKey="PersonId", OtherKey="WelderId", DeleteRule="NO ACTION")]
		public EntitySet<Welder_WelderQualify> Welder_WelderQualify
		{
			get
			{
				return this._Welder_WelderQualify;
			}
			set
			{
				this._Welder_WelderQualify.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_Person(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.CoverWelder = this;
		}
		
		private void detach_Person(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.CoverWelder = null;
		}
		
		private void attach_QualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_QualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_QualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_QualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_Welder_WelderQualify(Welder_WelderQualify entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_Welder_WelderQualify(Welder_WelderQualify entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_ButtonPower")]
	public partial class Sys_ButtonPower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ButtonPowerID;
		
		private string _RoleId;
		
		private string _MenuId;
		
		private string _ButtonToMenuId;
		
		private EntityRef<Sys_Role> _Sys_Role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnButtonPowerIDChanging(string value);
    partial void OnButtonPowerIDChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnButtonToMenuIdChanging(string value);
    partial void OnButtonToMenuIdChanged();
    #endregion
		
		public Sys_ButtonPower()
		{
			this._Sys_Role = default(EntityRef<Sys_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonPowerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ButtonPowerID
		{
			get
			{
				return this._ButtonPowerID;
			}
			set
			{
				if ((this._ButtonPowerID != value))
				{
					this.OnButtonPowerIDChanging(value);
					this.SendPropertyChanging();
					this._ButtonPowerID = value;
					this.SendPropertyChanged("ButtonPowerID");
					this.OnButtonPowerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Sys_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonToMenuId", DbType="NVarChar(50)")]
		public string ButtonToMenuId
		{
			get
			{
				return this._ButtonToMenuId;
			}
			set
			{
				if ((this._ButtonToMenuId != value))
				{
					this.OnButtonToMenuIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonToMenuId = value;
					this.SendPropertyChanged("ButtonToMenuId");
					this.OnButtonToMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_Role", Storage="_Sys_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Sys_Role Sys_Role
		{
			get
			{
				return this._Sys_Role.Entity;
			}
			set
			{
				Sys_Role previousValue = this._Sys_Role.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Role.Entity = null;
						previousValue.Sys_ButtonPower.Remove(this);
					}
					this._Sys_Role.Entity = value;
					if ((value != null))
					{
						value.Sys_ButtonPower.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("Sys_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_ButtonToMenu")]
	public partial class Sys_ButtonToMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ButtonToMenuId;
		
		private string _MenuId;
		
		private string _ButtonName;
		
		private System.Nullable<int> _SortIndex;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnButtonToMenuIdChanging(string value);
    partial void OnButtonToMenuIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnButtonNameChanging(string value);
    partial void OnButtonNameChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Sys_ButtonToMenu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonToMenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ButtonToMenuId
		{
			get
			{
				return this._ButtonToMenuId;
			}
			set
			{
				if ((this._ButtonToMenuId != value))
				{
					this.OnButtonToMenuIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonToMenuId = value;
					this.SendPropertyChanged("ButtonToMenuId");
					this.OnButtonToMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ButtonName
		{
			get
			{
				return this._ButtonName;
			}
			set
			{
				if ((this._ButtonName != value))
				{
					this.OnButtonNameChanging(value);
					this.SendPropertyChanging();
					this._ButtonName = value;
					this.SendPropertyChanged("ButtonName");
					this.OnButtonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_CodeRecords")]
	public partial class Sys_CodeRecords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeRecordId;
		
		private string _ProjectId;
		
		private string _MenuId;
		
		private string _DataId;
		
		private string _UnitId;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<int> _SortIndex;
		
		private string _RuleCodes;
		
		private System.Nullable<int> _Digit;
		
		private string _Code;
		
		private string _OwnerRuleCodes;
		
		private System.Nullable<int> _OwerDigit;
		
		private string _OwnerCode;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeRecordIdChanging(string value);
    partial void OnCodeRecordIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnRuleCodesChanging(string value);
    partial void OnRuleCodesChanged();
    partial void OnDigitChanging(System.Nullable<int> value);
    partial void OnDigitChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnOwnerRuleCodesChanging(string value);
    partial void OnOwnerRuleCodesChanged();
    partial void OnOwerDigitChanging(System.Nullable<int> value);
    partial void OnOwerDigitChanged();
    partial void OnOwnerCodeChanging(string value);
    partial void OnOwnerCodeChanged();
    #endregion
		
		public Sys_CodeRecords()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeRecordId
		{
			get
			{
				return this._CodeRecordId;
			}
			set
			{
				if ((this._CodeRecordId != value))
				{
					this.OnCodeRecordIdChanging(value);
					this.SendPropertyChanging();
					this._CodeRecordId = value;
					this.SendPropertyChanged("CodeRecordId");
					this.OnCodeRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuleCodes", DbType="NVarChar(50)")]
		public string RuleCodes
		{
			get
			{
				return this._RuleCodes;
			}
			set
			{
				if ((this._RuleCodes != value))
				{
					this.OnRuleCodesChanging(value);
					this.SendPropertyChanging();
					this._RuleCodes = value;
					this.SendPropertyChanged("RuleCodes");
					this.OnRuleCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Digit", DbType="Int")]
		public System.Nullable<int> Digit
		{
			get
			{
				return this._Digit;
			}
			set
			{
				if ((this._Digit != value))
				{
					this.OnDigitChanging(value);
					this.SendPropertyChanging();
					this._Digit = value;
					this.SendPropertyChanged("Digit");
					this.OnDigitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerRuleCodes", DbType="NVarChar(50)")]
		public string OwnerRuleCodes
		{
			get
			{
				return this._OwnerRuleCodes;
			}
			set
			{
				if ((this._OwnerRuleCodes != value))
				{
					this.OnOwnerRuleCodesChanging(value);
					this.SendPropertyChanging();
					this._OwnerRuleCodes = value;
					this.SendPropertyChanged("OwnerRuleCodes");
					this.OnOwnerRuleCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwerDigit", DbType="Int")]
		public System.Nullable<int> OwerDigit
		{
			get
			{
				return this._OwerDigit;
			}
			set
			{
				if ((this._OwerDigit != value))
				{
					this.OnOwerDigitChanging(value);
					this.SendPropertyChanging();
					this._OwerDigit = value;
					this.SendPropertyChanged("OwerDigit");
					this.OnOwerDigitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerCode", DbType="NVarChar(50)")]
		public string OwnerCode
		{
			get
			{
				return this._OwnerCode;
			}
			set
			{
				if ((this._OwnerCode != value))
				{
					this.OnOwnerCodeChanging(value);
					this.SendPropertyChanging();
					this._OwnerCode = value;
					this.SendPropertyChanged("OwnerCode");
					this.OnOwnerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_CodeRecords_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Sys_CodeRecords.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Sys_CodeRecords.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_CodeTemplateRule")]
	public partial class Sys_CodeTemplateRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeTemplateRuleId;
		
		private string _MenuId;
		
		private string _Template;
		
		private string _Symbol;
		
		private System.Nullable<bool> _IsProjectCode;
		
		private string _Prefix;
		
		private System.Nullable<bool> _IsUnitCode;
		
		private System.Nullable<int> _Digit;
		
		private System.Nullable<bool> _IsFileCabinetA;
		
		private System.Nullable<bool> _IsFileCabinetB;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeTemplateRuleIdChanging(string value);
    partial void OnCodeTemplateRuleIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnIsProjectCodeChanging(System.Nullable<bool> value);
    partial void OnIsProjectCodeChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnIsUnitCodeChanging(System.Nullable<bool> value);
    partial void OnIsUnitCodeChanged();
    partial void OnDigitChanging(System.Nullable<int> value);
    partial void OnDigitChanged();
    partial void OnIsFileCabinetAChanging(System.Nullable<bool> value);
    partial void OnIsFileCabinetAChanged();
    partial void OnIsFileCabinetBChanging(System.Nullable<bool> value);
    partial void OnIsFileCabinetBChanged();
    #endregion
		
		public Sys_CodeTemplateRule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTemplateRuleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeTemplateRuleId
		{
			get
			{
				return this._CodeTemplateRuleId;
			}
			set
			{
				if ((this._CodeTemplateRuleId != value))
				{
					this.OnCodeTemplateRuleIdChanging(value);
					this.SendPropertyChanging();
					this._CodeTemplateRuleId = value;
					this.SendPropertyChanged("CodeTemplateRuleId");
					this.OnCodeTemplateRuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(10)")]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProjectCode", DbType="Bit")]
		public System.Nullable<bool> IsProjectCode
		{
			get
			{
				return this._IsProjectCode;
			}
			set
			{
				if ((this._IsProjectCode != value))
				{
					this.OnIsProjectCodeChanging(value);
					this.SendPropertyChanging();
					this._IsProjectCode = value;
					this.SendPropertyChanged("IsProjectCode");
					this.OnIsProjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="NVarChar(50)")]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUnitCode", DbType="Bit")]
		public System.Nullable<bool> IsUnitCode
		{
			get
			{
				return this._IsUnitCode;
			}
			set
			{
				if ((this._IsUnitCode != value))
				{
					this.OnIsUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._IsUnitCode = value;
					this.SendPropertyChanged("IsUnitCode");
					this.OnIsUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Digit", DbType="Int")]
		public System.Nullable<int> Digit
		{
			get
			{
				return this._Digit;
			}
			set
			{
				if ((this._Digit != value))
				{
					this.OnDigitChanging(value);
					this.SendPropertyChanging();
					this._Digit = value;
					this.SendPropertyChanged("Digit");
					this.OnDigitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFileCabinetA", DbType="Bit")]
		public System.Nullable<bool> IsFileCabinetA
		{
			get
			{
				return this._IsFileCabinetA;
			}
			set
			{
				if ((this._IsFileCabinetA != value))
				{
					this.OnIsFileCabinetAChanging(value);
					this.SendPropertyChanging();
					this._IsFileCabinetA = value;
					this.SendPropertyChanged("IsFileCabinetA");
					this.OnIsFileCabinetAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFileCabinetB", DbType="Bit")]
		public System.Nullable<bool> IsFileCabinetB
		{
			get
			{
				return this._IsFileCabinetB;
			}
			set
			{
				if ((this._IsFileCabinetB != value))
				{
					this.OnIsFileCabinetBChanging(value);
					this.SendPropertyChanging();
					this._IsFileCabinetB = value;
					this.SendPropertyChanged("IsFileCabinetB");
					this.OnIsFileCabinetBChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Const")]
	public partial class Sys_Const : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ConstValue;
		
		private string _ConstText;
		
		private System.Nullable<int> _SortIndex;
		
		private string _GroupId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnConstValueChanging(string value);
    partial void OnConstValueChanged();
    partial void OnConstTextChanging(string value);
    partial void OnConstTextChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnGroupIdChanging(string value);
    partial void OnGroupIdChanged();
    #endregion
		
		public Sys_Const()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstValue", DbType="NVarChar(50)")]
		public string ConstValue
		{
			get
			{
				return this._ConstValue;
			}
			set
			{
				if ((this._ConstValue != value))
				{
					this.OnConstValueChanging(value);
					this.SendPropertyChanging();
					this._ConstValue = value;
					this.SendPropertyChanged("ConstValue");
					this.OnConstValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstText", DbType="NVarChar(100)")]
		public string ConstText
		{
			get
			{
				return this._ConstText;
			}
			set
			{
				if ((this._ConstText != value))
				{
					this.OnConstTextChanging(value);
					this.SendPropertyChanging();
					this._ConstText = value;
					this.SendPropertyChanged("ConstText");
					this.OnConstTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="NVarChar(50)")]
		public string GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_ErrLogInfo")]
	public partial class Sys_ErrLogInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ErrLogId;
		
		private string _ErrType;
		
		private string _ErrMessage;
		
		private string _ErrStackTrace;
		
		private System.Nullable<System.DateTime> _ErrTime;
		
		private string _ErrUrl;
		
		private string _ErrIP;
		
		private string _UserName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrLogIdChanging(string value);
    partial void OnErrLogIdChanged();
    partial void OnErrTypeChanging(string value);
    partial void OnErrTypeChanged();
    partial void OnErrMessageChanging(string value);
    partial void OnErrMessageChanged();
    partial void OnErrStackTraceChanging(string value);
    partial void OnErrStackTraceChanged();
    partial void OnErrTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnErrTimeChanged();
    partial void OnErrUrlChanging(string value);
    partial void OnErrUrlChanged();
    partial void OnErrIPChanging(string value);
    partial void OnErrIPChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public Sys_ErrLogInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrLogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ErrLogId
		{
			get
			{
				return this._ErrLogId;
			}
			set
			{
				if ((this._ErrLogId != value))
				{
					this.OnErrLogIdChanging(value);
					this.SendPropertyChanging();
					this._ErrLogId = value;
					this.SendPropertyChanged("ErrLogId");
					this.OnErrLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrType", DbType="NVarChar(500)")]
		public string ErrType
		{
			get
			{
				return this._ErrType;
			}
			set
			{
				if ((this._ErrType != value))
				{
					this.OnErrTypeChanging(value);
					this.SendPropertyChanging();
					this._ErrType = value;
					this.SendPropertyChanged("ErrType");
					this.OnErrTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrMessage", DbType="NVarChar(2000)")]
		public string ErrMessage
		{
			get
			{
				return this._ErrMessage;
			}
			set
			{
				if ((this._ErrMessage != value))
				{
					this.OnErrMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrMessage = value;
					this.SendPropertyChanged("ErrMessage");
					this.OnErrMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrStackTrace", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ErrStackTrace
		{
			get
			{
				return this._ErrStackTrace;
			}
			set
			{
				if ((this._ErrStackTrace != value))
				{
					this.OnErrStackTraceChanging(value);
					this.SendPropertyChanging();
					this._ErrStackTrace = value;
					this.SendPropertyChanged("ErrStackTrace");
					this.OnErrStackTraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ErrTime
		{
			get
			{
				return this._ErrTime;
			}
			set
			{
				if ((this._ErrTime != value))
				{
					this.OnErrTimeChanging(value);
					this.SendPropertyChanging();
					this._ErrTime = value;
					this.SendPropertyChanged("ErrTime");
					this.OnErrTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrUrl", DbType="NVarChar(800)")]
		public string ErrUrl
		{
			get
			{
				return this._ErrUrl;
			}
			set
			{
				if ((this._ErrUrl != value))
				{
					this.OnErrUrlChanging(value);
					this.SendPropertyChanging();
					this._ErrUrl = value;
					this.SendPropertyChanged("ErrUrl");
					this.OnErrUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrIP", DbType="NVarChar(50)")]
		public string ErrIP
		{
			get
			{
				return this._ErrIP;
			}
			set
			{
				if ((this._ErrIP != value))
				{
					this.OnErrIPChanging(value);
					this.SendPropertyChanging();
					this._ErrIP = value;
					this.SendPropertyChanged("ErrIP");
					this.OnErrIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Log")]
	public partial class Sys_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LogId;
		
		private string _UserId;
		
		private System.Nullable<System.DateTime> _OperationTime;
		
		private string _Ip;
		
		private string _HostName;
		
		private string _OperationLog;
		
		private string _ProjectId;
		
		private string _SystemId;
		
		private string _MenuId;
		
		private string _OperationName;
		
		private string _DataId;
		
		private System.Nullable<byte> _LogSource;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(string value);
    partial void OnLogIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnOperationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationTimeChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnHostNameChanging(string value);
    partial void OnHostNameChanged();
    partial void OnOperationLogChanging(string value);
    partial void OnOperationLogChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnSystemIdChanging(string value);
    partial void OnSystemIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnOperationNameChanging(string value);
    partial void OnOperationNameChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnLogSourceChanging(System.Nullable<byte> value);
    partial void OnLogSourceChanged();
    #endregion
		
		public Sys_Log()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationTime
		{
			get
			{
				return this._OperationTime;
			}
			set
			{
				if ((this._OperationTime != value))
				{
					this.OnOperationTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationTime = value;
					this.SendPropertyChanged("OperationTime");
					this.OnOperationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(200)")]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostName", DbType="NVarChar(500)")]
		public string HostName
		{
			get
			{
				return this._HostName;
			}
			set
			{
				if ((this._HostName != value))
				{
					this.OnHostNameChanging(value);
					this.SendPropertyChanging();
					this._HostName = value;
					this.SendPropertyChanged("HostName");
					this.OnHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationLog", DbType="NVarChar(4000)")]
		public string OperationLog
		{
			get
			{
				return this._OperationLog;
			}
			set
			{
				if ((this._OperationLog != value))
				{
					this.OnOperationLogChanging(value);
					this.SendPropertyChanging();
					this._OperationLog = value;
					this.SendPropertyChanged("OperationLog");
					this.OnOperationLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemId", DbType="NVarChar(50)")]
		public string SystemId
		{
			get
			{
				return this._SystemId;
			}
			set
			{
				if ((this._SystemId != value))
				{
					this.OnSystemIdChanging(value);
					this.SendPropertyChanging();
					this._SystemId = value;
					this.SendPropertyChanged("SystemId");
					this.OnSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationName", DbType="NVarChar(50)")]
		public string OperationName
		{
			get
			{
				return this._OperationName;
			}
			set
			{
				if ((this._OperationName != value))
				{
					this.OnOperationNameChanging(value);
					this.SendPropertyChanging();
					this._OperationName = value;
					this.SendPropertyChanged("OperationName");
					this.OnOperationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogSource", DbType="TinyInt")]
		public System.Nullable<byte> LogSource
		{
			get
			{
				return this._LogSource;
			}
			set
			{
				if ((this._LogSource != value))
				{
					this.OnLogSourceChanging(value);
					this.SendPropertyChanging();
					this._LogSource = value;
					this.SendPropertyChanged("LogSource");
					this.OnLogSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Log_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Sys_Log.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Sys_Log.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Log_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_Log.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_Log.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Menu")]
	public partial class Sys_Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MenuId;
		
		private string _MenuName;
		
		private string _Icon;
		
		private string _Url;
		
		private System.Nullable<int> _SortIndex;
		
		private string _SuperMenu;
		
		private string _MenuType;
		
		private System.Nullable<bool> _IsOffice;
		
		private System.Nullable<bool> _IsEnd;
		
		private System.Nullable<bool> _IsUsed;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnSuperMenuChanging(string value);
    partial void OnSuperMenuChanged();
    partial void OnMenuTypeChanging(string value);
    partial void OnMenuTypeChanged();
    partial void OnIsOfficeChanging(System.Nullable<bool> value);
    partial void OnIsOfficeChanged();
    partial void OnIsEndChanging(System.Nullable<bool> value);
    partial void OnIsEndChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    #endregion
		
		public Sys_Menu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(50)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(50)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(200)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperMenu", DbType="NVarChar(50)")]
		public string SuperMenu
		{
			get
			{
				return this._SuperMenu;
			}
			set
			{
				if ((this._SuperMenu != value))
				{
					this.OnSuperMenuChanging(value);
					this.SendPropertyChanging();
					this._SuperMenu = value;
					this.SendPropertyChanged("SuperMenu");
					this.OnSuperMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuType", DbType="NVarChar(50)")]
		public string MenuType
		{
			get
			{
				return this._MenuType;
			}
			set
			{
				if ((this._MenuType != value))
				{
					this.OnMenuTypeChanging(value);
					this.SendPropertyChanging();
					this._MenuType = value;
					this.SendPropertyChanged("MenuType");
					this.OnMenuTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOffice", DbType="Bit")]
		public System.Nullable<bool> IsOffice
		{
			get
			{
				return this._IsOffice;
			}
			set
			{
				if ((this._IsOffice != value))
				{
					this.OnIsOfficeChanging(value);
					this.SendPropertyChanging();
					this._IsOffice = value;
					this.SendPropertyChanged("IsOffice");
					this.OnIsOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnd", DbType="Bit")]
		public System.Nullable<bool> IsEnd
		{
			get
			{
				return this._IsEnd;
			}
			set
			{
				if ((this._IsEnd != value))
				{
					this.OnIsEndChanging(value);
					this.SendPropertyChanging();
					this._IsEnd = value;
					this.SendPropertyChanged("IsEnd");
					this.OnIsEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_MenuFlowOperate")]
	public partial class Sys_MenuFlowOperate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FlowOperateId;
		
		private string _MenuId;
		
		private System.Nullable<int> _FlowStep;
		
		private string _AuditFlowName;
		
		private string _RoleId;
		
		private System.Nullable<bool> _IsFlowEnd;
		
		private System.Nullable<int> _GroupNum;
		
		private System.Nullable<int> _OrderNum;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlowOperateIdChanging(string value);
    partial void OnFlowOperateIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnFlowStepChanging(System.Nullable<int> value);
    partial void OnFlowStepChanged();
    partial void OnAuditFlowNameChanging(string value);
    partial void OnAuditFlowNameChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnIsFlowEndChanging(System.Nullable<bool> value);
    partial void OnIsFlowEndChanged();
    partial void OnGroupNumChanging(System.Nullable<int> value);
    partial void OnGroupNumChanged();
    partial void OnOrderNumChanging(System.Nullable<int> value);
    partial void OnOrderNumChanged();
    #endregion
		
		public Sys_MenuFlowOperate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowOperateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FlowOperateId
		{
			get
			{
				return this._FlowOperateId;
			}
			set
			{
				if ((this._FlowOperateId != value))
				{
					this.OnFlowOperateIdChanging(value);
					this.SendPropertyChanging();
					this._FlowOperateId = value;
					this.SendPropertyChanged("FlowOperateId");
					this.OnFlowOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowStep", DbType="Int")]
		public System.Nullable<int> FlowStep
		{
			get
			{
				return this._FlowStep;
			}
			set
			{
				if ((this._FlowStep != value))
				{
					this.OnFlowStepChanging(value);
					this.SendPropertyChanging();
					this._FlowStep = value;
					this.SendPropertyChanged("FlowStep");
					this.OnFlowStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditFlowName", DbType="NVarChar(50)")]
		public string AuditFlowName
		{
			get
			{
				return this._AuditFlowName;
			}
			set
			{
				if ((this._AuditFlowName != value))
				{
					this.OnAuditFlowNameChanging(value);
					this.SendPropertyChanging();
					this._AuditFlowName = value;
					this.SendPropertyChanged("AuditFlowName");
					this.OnAuditFlowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(500)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFlowEnd", DbType="Bit")]
		public System.Nullable<bool> IsFlowEnd
		{
			get
			{
				return this._IsFlowEnd;
			}
			set
			{
				if ((this._IsFlowEnd != value))
				{
					this.OnIsFlowEndChanging(value);
					this.SendPropertyChanging();
					this._IsFlowEnd = value;
					this.SendPropertyChanged("IsFlowEnd");
					this.OnIsFlowEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupNum", DbType="Int")]
		public System.Nullable<int> GroupNum
		{
			get
			{
				return this._GroupNum;
			}
			set
			{
				if ((this._GroupNum != value))
				{
					this.OnGroupNumChanging(value);
					this.SendPropertyChanging();
					this._GroupNum = value;
					this.SendPropertyChanged("GroupNum");
					this.OnGroupNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int")]
		public System.Nullable<int> OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Role")]
	public partial class Sys_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleId;
		
		private string _RoleName;
		
		private string _RoleCode;
		
		private string _RoleType;
		
		private string _Def;
		
		private System.Nullable<bool> _IsAuditFlow;
		
		private System.Nullable<bool> _IsSystemBuilt;
		
		private EntitySet<Sys_ButtonPower> _Sys_ButtonPower;
		
		private EntitySet<Sys_RolePower> _Sys_RolePower;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnRoleCodeChanging(string value);
    partial void OnRoleCodeChanged();
    partial void OnRoleTypeChanging(string value);
    partial void OnRoleTypeChanged();
    partial void OnDefChanging(string value);
    partial void OnDefChanged();
    partial void OnIsAuditFlowChanging(System.Nullable<bool> value);
    partial void OnIsAuditFlowChanged();
    partial void OnIsSystemBuiltChanging(System.Nullable<bool> value);
    partial void OnIsSystemBuiltChanged();
    #endregion
		
		public Sys_Role()
		{
			this._Sys_ButtonPower = new EntitySet<Sys_ButtonPower>(new Action<Sys_ButtonPower>(this.attach_Sys_ButtonPower), new Action<Sys_ButtonPower>(this.detach_Sys_ButtonPower));
			this._Sys_RolePower = new EntitySet<Sys_RolePower>(new Action<Sys_RolePower>(this.attach_Sys_RolePower), new Action<Sys_RolePower>(this.detach_Sys_RolePower));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleCode", DbType="NVarChar(50)")]
		public string RoleCode
		{
			get
			{
				return this._RoleCode;
			}
			set
			{
				if ((this._RoleCode != value))
				{
					this.OnRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._RoleCode = value;
					this.SendPropertyChanged("RoleCode");
					this.OnRoleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleType", DbType="Char(1)")]
		public string RoleType
		{
			get
			{
				return this._RoleType;
			}
			set
			{
				if ((this._RoleType != value))
				{
					this.OnRoleTypeChanging(value);
					this.SendPropertyChanging();
					this._RoleType = value;
					this.SendPropertyChanged("RoleType");
					this.OnRoleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Def", DbType="NVarChar(100)")]
		public string Def
		{
			get
			{
				return this._Def;
			}
			set
			{
				if ((this._Def != value))
				{
					this.OnDefChanging(value);
					this.SendPropertyChanging();
					this._Def = value;
					this.SendPropertyChanged("Def");
					this.OnDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuditFlow", DbType="Bit")]
		public System.Nullable<bool> IsAuditFlow
		{
			get
			{
				return this._IsAuditFlow;
			}
			set
			{
				if ((this._IsAuditFlow != value))
				{
					this.OnIsAuditFlowChanging(value);
					this.SendPropertyChanging();
					this._IsAuditFlow = value;
					this.SendPropertyChanged("IsAuditFlow");
					this.OnIsAuditFlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystemBuilt", DbType="Bit")]
		public System.Nullable<bool> IsSystemBuilt
		{
			get
			{
				return this._IsSystemBuilt;
			}
			set
			{
				if ((this._IsSystemBuilt != value))
				{
					this.OnIsSystemBuiltChanging(value);
					this.SendPropertyChanging();
					this._IsSystemBuilt = value;
					this.SendPropertyChanged("IsSystemBuilt");
					this.OnIsSystemBuiltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_Role", Storage="_Sys_ButtonPower", ThisKey="RoleId", OtherKey="RoleId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_ButtonPower> Sys_ButtonPower
		{
			get
			{
				return this._Sys_ButtonPower;
			}
			set
			{
				this._Sys_ButtonPower.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_RolePower_Sys_Role", Storage="_Sys_RolePower", ThisKey="RoleId", OtherKey="RoleId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_RolePower> Sys_RolePower
		{
			get
			{
				return this._Sys_RolePower;
			}
			set
			{
				this._Sys_RolePower.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = this;
		}
		
		private void detach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = null;
		}
		
		private void attach_Sys_RolePower(Sys_RolePower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = this;
		}
		
		private void detach_Sys_RolePower(Sys_RolePower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_RolePower")]
	public partial class Sys_RolePower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RolePowerId;
		
		private string _RoleId;
		
		private string _MenuId;
		
		private EntityRef<Sys_Role> _Sys_Role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRolePowerIdChanging(string value);
    partial void OnRolePowerIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    #endregion
		
		public Sys_RolePower()
		{
			this._Sys_Role = default(EntityRef<Sys_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolePowerId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RolePowerId
		{
			get
			{
				return this._RolePowerId;
			}
			set
			{
				if ((this._RolePowerId != value))
				{
					this.OnRolePowerIdChanging(value);
					this.SendPropertyChanging();
					this._RolePowerId = value;
					this.SendPropertyChanged("RolePowerId");
					this.OnRolePowerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Sys_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_RolePower_Sys_Role", Storage="_Sys_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Sys_Role Sys_Role
		{
			get
			{
				return this._Sys_Role.Entity;
			}
			set
			{
				Sys_Role previousValue = this._Sys_Role.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Role.Entity = null;
						previousValue.Sys_RolePower.Remove(this);
					}
					this._Sys_Role.Entity = value;
					if ((value != null))
					{
						value.Sys_RolePower.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("Sys_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_TestRule")]
	public partial class Sys_TestRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TestRuleId;
		
		private int _Duration;
		
		private int _SValue;
		
		private int _MValue;
		
		private int _JValue;
		
		private int _SCount;
		
		private int _MCount;
		
		private int _JCount;
		
		private int _PassingScore;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRuleIdChanging(string value);
    partial void OnTestRuleIdChanged();
    partial void OnDurationChanging(int value);
    partial void OnDurationChanged();
    partial void OnSValueChanging(int value);
    partial void OnSValueChanged();
    partial void OnMValueChanging(int value);
    partial void OnMValueChanged();
    partial void OnJValueChanging(int value);
    partial void OnJValueChanged();
    partial void OnSCountChanging(int value);
    partial void OnSCountChanged();
    partial void OnMCountChanging(int value);
    partial void OnMCountChanged();
    partial void OnJCountChanging(int value);
    partial void OnJCountChanged();
    partial void OnPassingScoreChanging(int value);
    partial void OnPassingScoreChanged();
    #endregion
		
		public Sys_TestRule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRuleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TestRuleId
		{
			get
			{
				return this._TestRuleId;
			}
			set
			{
				if ((this._TestRuleId != value))
				{
					this.OnTestRuleIdChanging(value);
					this.SendPropertyChanging();
					this._TestRuleId = value;
					this.SendPropertyChanged("TestRuleId");
					this.OnTestRuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int NOT NULL")]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SValue", DbType="Int NOT NULL")]
		public int SValue
		{
			get
			{
				return this._SValue;
			}
			set
			{
				if ((this._SValue != value))
				{
					this.OnSValueChanging(value);
					this.SendPropertyChanging();
					this._SValue = value;
					this.SendPropertyChanged("SValue");
					this.OnSValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MValue", DbType="Int NOT NULL")]
		public int MValue
		{
			get
			{
				return this._MValue;
			}
			set
			{
				if ((this._MValue != value))
				{
					this.OnMValueChanging(value);
					this.SendPropertyChanging();
					this._MValue = value;
					this.SendPropertyChanged("MValue");
					this.OnMValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JValue", DbType="Int NOT NULL")]
		public int JValue
		{
			get
			{
				return this._JValue;
			}
			set
			{
				if ((this._JValue != value))
				{
					this.OnJValueChanging(value);
					this.SendPropertyChanging();
					this._JValue = value;
					this.SendPropertyChanged("JValue");
					this.OnJValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCount", DbType="Int NOT NULL")]
		public int SCount
		{
			get
			{
				return this._SCount;
			}
			set
			{
				if ((this._SCount != value))
				{
					this.OnSCountChanging(value);
					this.SendPropertyChanging();
					this._SCount = value;
					this.SendPropertyChanged("SCount");
					this.OnSCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCount", DbType="Int NOT NULL")]
		public int MCount
		{
			get
			{
				return this._MCount;
			}
			set
			{
				if ((this._MCount != value))
				{
					this.OnMCountChanging(value);
					this.SendPropertyChanging();
					this._MCount = value;
					this.SendPropertyChanged("MCount");
					this.OnMCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JCount", DbType="Int NOT NULL")]
		public int JCount
		{
			get
			{
				return this._JCount;
			}
			set
			{
				if ((this._JCount != value))
				{
					this.OnJCountChanging(value);
					this.SendPropertyChanging();
					this._JCount = value;
					this.SendPropertyChanged("JCount");
					this.OnJCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassingScore", DbType="Int NOT NULL")]
		public int PassingScore
		{
			get
			{
				return this._PassingScore;
			}
			set
			{
				if ((this._PassingScore != value))
				{
					this.OnPassingScoreChanging(value);
					this.SendPropertyChanging();
					this._PassingScore = value;
					this.SendPropertyChanged("PassingScore");
					this.OnPassingScoreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_User")]
	public partial class Sys_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _DepartId;
		
		private string _UnitId;
		
		private string _Account;
		
		private string _UserCode;
		
		private string _Password;
		
		private string _UserName;
		
		private string _RoleId;
		
		private System.Nullable<bool> _IsPost;
		
		private string _LoginProjectId;
		
		private string _Sex;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private string _Marriage;
		
		private string _Nation;
		
		private string _IdentityCard;
		
		private string _Email;
		
		private string _Telephone;
		
		private string _Education;
		
		private string _Hometown;
		
		private string _PositionId;
		
		private string _PhotoUrl;
		
		private string _Performance;
		
		private System.Nullable<int> _PageSize;
		
		private System.Nullable<bool> _IsOffice;
		
		private string _DeviceId;
		
		private string _SessionString;
		
		private System.Nullable<int> _RCount;
		
		private string _DataSources;
		
		private string _SignatureUrl;
		
		private string _OpenId;
		
		private string _LastMenuType;
		
		private System.Nullable<bool> _LastIsOffice;
		
		private string _LastProjectId;
		
		private EntitySet<HJGL_WeldingDaily> _HJGL_WeldingDaily;
		
		private EntitySet<Project_ProjectUser> _Project_ProjectUser;
		
		private EntitySet<QualityAudit_EquipmentPersonQuality> _QualityAudit_EquipmentPersonQuality;
		
		private EntitySet<QualityAudit_EquipmentPersonQuality> _User;
		
		private EntitySet<QualityAudit_PersonQuality> _QualityAudit_PersonQuality;
		
		private EntitySet<QualityAudit_PersonQuality> _QualityAudit_PersonQuality_Sys_User_AuditorId;
		
		private EntitySet<QualityAudit_SafePersonQuality> _QualityAudit_SafePersonQuality;
		
		private EntitySet<QualityAudit_SafePersonQuality> _QualityAudit_SafePersonQuality_Sys_User_AuditorId;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
		private EntitySet<Sys_Log> _Sys_Log;
		
		private EntityRef<Base_Depart> _Base_Depart;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<Sys_UserShowColumns> _Sys_UserShowColumns;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnIsPostChanging(System.Nullable<bool> value);
    partial void OnIsPostChanged();
    partial void OnLoginProjectIdChanging(string value);
    partial void OnLoginProjectIdChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnBirthDayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDayChanged();
    partial void OnMarriageChanging(string value);
    partial void OnMarriageChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnIdentityCardChanging(string value);
    partial void OnIdentityCardChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnHometownChanging(string value);
    partial void OnHometownChanged();
    partial void OnPositionIdChanging(string value);
    partial void OnPositionIdChanged();
    partial void OnPhotoUrlChanging(string value);
    partial void OnPhotoUrlChanged();
    partial void OnPerformanceChanging(string value);
    partial void OnPerformanceChanged();
    partial void OnPageSizeChanging(System.Nullable<int> value);
    partial void OnPageSizeChanged();
    partial void OnIsOfficeChanging(System.Nullable<bool> value);
    partial void OnIsOfficeChanged();
    partial void OnDeviceIdChanging(string value);
    partial void OnDeviceIdChanged();
    partial void OnSessionStringChanging(string value);
    partial void OnSessionStringChanged();
    partial void OnRCountChanging(System.Nullable<int> value);
    partial void OnRCountChanged();
    partial void OnDataSourcesChanging(string value);
    partial void OnDataSourcesChanged();
    partial void OnSignatureUrlChanging(string value);
    partial void OnSignatureUrlChanged();
    partial void OnOpenIdChanging(string value);
    partial void OnOpenIdChanged();
    partial void OnLastMenuTypeChanging(string value);
    partial void OnLastMenuTypeChanged();
    partial void OnLastIsOfficeChanging(System.Nullable<bool> value);
    partial void OnLastIsOfficeChanged();
    partial void OnLastProjectIdChanging(string value);
    partial void OnLastProjectIdChanged();
    #endregion
		
		public Sys_User()
		{
			this._HJGL_WeldingDaily = new EntitySet<HJGL_WeldingDaily>(new Action<HJGL_WeldingDaily>(this.attach_HJGL_WeldingDaily), new Action<HJGL_WeldingDaily>(this.detach_HJGL_WeldingDaily));
			this._Project_ProjectUser = new EntitySet<Project_ProjectUser>(new Action<Project_ProjectUser>(this.attach_Project_ProjectUser), new Action<Project_ProjectUser>(this.detach_Project_ProjectUser));
			this._QualityAudit_EquipmentPersonQuality = new EntitySet<QualityAudit_EquipmentPersonQuality>(new Action<QualityAudit_EquipmentPersonQuality>(this.attach_QualityAudit_EquipmentPersonQuality), new Action<QualityAudit_EquipmentPersonQuality>(this.detach_QualityAudit_EquipmentPersonQuality));
			this._User = new EntitySet<QualityAudit_EquipmentPersonQuality>(new Action<QualityAudit_EquipmentPersonQuality>(this.attach_User), new Action<QualityAudit_EquipmentPersonQuality>(this.detach_User));
			this._QualityAudit_PersonQuality = new EntitySet<QualityAudit_PersonQuality>(new Action<QualityAudit_PersonQuality>(this.attach_QualityAudit_PersonQuality), new Action<QualityAudit_PersonQuality>(this.detach_QualityAudit_PersonQuality));
			this._QualityAudit_PersonQuality_Sys_User_AuditorId = new EntitySet<QualityAudit_PersonQuality>(new Action<QualityAudit_PersonQuality>(this.attach_QualityAudit_PersonQuality_Sys_User_AuditorId), new Action<QualityAudit_PersonQuality>(this.detach_QualityAudit_PersonQuality_Sys_User_AuditorId));
			this._QualityAudit_SafePersonQuality = new EntitySet<QualityAudit_SafePersonQuality>(new Action<QualityAudit_SafePersonQuality>(this.attach_QualityAudit_SafePersonQuality), new Action<QualityAudit_SafePersonQuality>(this.detach_QualityAudit_SafePersonQuality));
			this._QualityAudit_SafePersonQuality_Sys_User_AuditorId = new EntitySet<QualityAudit_SafePersonQuality>(new Action<QualityAudit_SafePersonQuality>(this.attach_QualityAudit_SafePersonQuality_Sys_User_AuditorId), new Action<QualityAudit_SafePersonQuality>(this.detach_QualityAudit_SafePersonQuality_Sys_User_AuditorId));
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			this._Sys_Log = new EntitySet<Sys_Log>(new Action<Sys_Log>(this.attach_Sys_Log), new Action<Sys_Log>(this.detach_Sys_Log));
			this._Base_Depart = default(EntityRef<Base_Depart>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_UserShowColumns = new EntitySet<Sys_UserShowColumns>(new Action<Sys_UserShowColumns>(this.attach_Sys_UserShowColumns), new Action<Sys_UserShowColumns>(this.detach_Sys_UserShowColumns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					if (this._Base_Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(50)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(20)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPost", DbType="Bit")]
		public System.Nullable<bool> IsPost
		{
			get
			{
				return this._IsPost;
			}
			set
			{
				if ((this._IsPost != value))
				{
					this.OnIsPostChanging(value);
					this.SendPropertyChanging();
					this._IsPost = value;
					this.SendPropertyChanged("IsPost");
					this.OnIsPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProjectId", DbType="NVarChar(50)")]
		public string LoginProjectId
		{
			get
			{
				return this._LoginProjectId;
			}
			set
			{
				if ((this._LoginProjectId != value))
				{
					this.OnLoginProjectIdChanging(value);
					this.SendPropertyChanging();
					this._LoginProjectId = value;
					this.SendPropertyChanged("LoginProjectId");
					this.OnLoginProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marriage", DbType="NVarChar(20)")]
		public string Marriage
		{
			get
			{
				return this._Marriage;
			}
			set
			{
				if ((this._Marriage != value))
				{
					this.OnMarriageChanging(value);
					this.SendPropertyChanging();
					this._Marriage = value;
					this.SendPropertyChanged("Marriage");
					this.OnMarriageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="NVarChar(20)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(50)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this.OnIdentityCardChanging(value);
					this.SendPropertyChanging();
					this._IdentityCard = value;
					this.SendPropertyChanged("IdentityCard");
					this.OnIdentityCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(20)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hometown", DbType="NVarChar(50)")]
		public string Hometown
		{
			get
			{
				return this._Hometown;
			}
			set
			{
				if ((this._Hometown != value))
				{
					this.OnHometownChanging(value);
					this.SendPropertyChanging();
					this._Hometown = value;
					this.SendPropertyChanged("Hometown");
					this.OnHometownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50)")]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(500)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this.OnPhotoUrlChanging(value);
					this.SendPropertyChanging();
					this._PhotoUrl = value;
					this.SendPropertyChanged("PhotoUrl");
					this.OnPhotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Performance", DbType="NVarChar(800)")]
		public string Performance
		{
			get
			{
				return this._Performance;
			}
			set
			{
				if ((this._Performance != value))
				{
					this.OnPerformanceChanging(value);
					this.SendPropertyChanging();
					this._Performance = value;
					this.SendPropertyChanged("Performance");
					this.OnPerformanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSize", DbType="Int")]
		public System.Nullable<int> PageSize
		{
			get
			{
				return this._PageSize;
			}
			set
			{
				if ((this._PageSize != value))
				{
					this.OnPageSizeChanging(value);
					this.SendPropertyChanging();
					this._PageSize = value;
					this.SendPropertyChanged("PageSize");
					this.OnPageSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOffice", DbType="Bit")]
		public System.Nullable<bool> IsOffice
		{
			get
			{
				return this._IsOffice;
			}
			set
			{
				if ((this._IsOffice != value))
				{
					this.OnIsOfficeChanging(value);
					this.SendPropertyChanging();
					this._IsOffice = value;
					this.SendPropertyChanged("IsOffice");
					this.OnIsOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(100)")]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionString", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SessionString
		{
			get
			{
				return this._SessionString;
			}
			set
			{
				if ((this._SessionString != value))
				{
					this.OnSessionStringChanging(value);
					this.SendPropertyChanging();
					this._SessionString = value;
					this.SendPropertyChanged("SessionString");
					this.OnSessionStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCount", DbType="Int")]
		public System.Nullable<int> RCount
		{
			get
			{
				return this._RCount;
			}
			set
			{
				if ((this._RCount != value))
				{
					this.OnRCountChanging(value);
					this.SendPropertyChanging();
					this._RCount = value;
					this.SendPropertyChanged("RCount");
					this.OnRCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSources", DbType="NVarChar(50)")]
		public string DataSources
		{
			get
			{
				return this._DataSources;
			}
			set
			{
				if ((this._DataSources != value))
				{
					this.OnDataSourcesChanging(value);
					this.SendPropertyChanging();
					this._DataSources = value;
					this.SendPropertyChanged("DataSources");
					this.OnDataSourcesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureUrl", DbType="NVarChar(500)")]
		public string SignatureUrl
		{
			get
			{
				return this._SignatureUrl;
			}
			set
			{
				if ((this._SignatureUrl != value))
				{
					this.OnSignatureUrlChanging(value);
					this.SendPropertyChanging();
					this._SignatureUrl = value;
					this.SendPropertyChanged("SignatureUrl");
					this.OnSignatureUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenId", DbType="NVarChar(100)")]
		public string OpenId
		{
			get
			{
				return this._OpenId;
			}
			set
			{
				if ((this._OpenId != value))
				{
					this.OnOpenIdChanging(value);
					this.SendPropertyChanging();
					this._OpenId = value;
					this.SendPropertyChanged("OpenId");
					this.OnOpenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMenuType", DbType="NVarChar(50)")]
		public string LastMenuType
		{
			get
			{
				return this._LastMenuType;
			}
			set
			{
				if ((this._LastMenuType != value))
				{
					this.OnLastMenuTypeChanging(value);
					this.SendPropertyChanging();
					this._LastMenuType = value;
					this.SendPropertyChanged("LastMenuType");
					this.OnLastMenuTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIsOffice", DbType="Bit")]
		public System.Nullable<bool> LastIsOffice
		{
			get
			{
				return this._LastIsOffice;
			}
			set
			{
				if ((this._LastIsOffice != value))
				{
					this.OnLastIsOfficeChanging(value);
					this.SendPropertyChanging();
					this._LastIsOffice = value;
					this.SendPropertyChanged("LastIsOffice");
					this.OnLastIsOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastProjectId", DbType="NVarChar(50)")]
		public string LastProjectId
		{
			get
			{
				return this._LastProjectId;
			}
			set
			{
				if ((this._LastProjectId != value))
				{
					this.OnLastProjectIdChanging(value);
					this.SendPropertyChanging();
					this._LastProjectId = value;
					this.SendPropertyChanged("LastProjectId");
					this.OnLastProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Pipeline_WeldingDaily_Sys_User", Storage="_HJGL_WeldingDaily", ThisKey="UserId", OtherKey="Tabler", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldingDaily> HJGL_WeldingDaily
		{
			get
			{
				return this._HJGL_WeldingDaily;
			}
			set
			{
				this._HJGL_WeldingDaily.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUser_Sys_User", Storage="_Project_ProjectUser", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Project_ProjectUser> Project_ProjectUser
		{
			get
			{
				return this._Project_ProjectUser;
			}
			set
			{
				this._Project_ProjectUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_Sys_User", Storage="_QualityAudit_EquipmentPersonQuality", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_EquipmentPersonQuality> QualityAudit_EquipmentPersonQuality
		{
			get
			{
				return this._QualityAudit_EquipmentPersonQuality;
			}
			set
			{
				this._QualityAudit_EquipmentPersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId", Storage="_User", ThisKey="UserId", OtherKey="AuditorId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_EquipmentPersonQuality> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Sys_User", Storage="_QualityAudit_PersonQuality", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQuality> QualityAudit_PersonQuality
		{
			get
			{
				return this._QualityAudit_PersonQuality;
			}
			set
			{
				this._QualityAudit_PersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Sys_User_AuditorId", Storage="_QualityAudit_PersonQuality_Sys_User_AuditorId", ThisKey="UserId", OtherKey="AuditorId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQuality> QualityAudit_PersonQuality_Sys_User_AuditorId
		{
			get
			{
				return this._QualityAudit_PersonQuality_Sys_User_AuditorId;
			}
			set
			{
				this._QualityAudit_PersonQuality_Sys_User_AuditorId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SafePersonQuality_Sys_User", Storage="_QualityAudit_SafePersonQuality", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_SafePersonQuality> QualityAudit_SafePersonQuality
		{
			get
			{
				return this._QualityAudit_SafePersonQuality;
			}
			set
			{
				this._QualityAudit_SafePersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SafePersonQuality_Sys_User_AuditorId", Storage="_QualityAudit_SafePersonQuality_Sys_User_AuditorId", ThisKey="UserId", OtherKey="AuditorId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_SafePersonQuality> QualityAudit_SafePersonQuality_Sys_User_AuditorId
		{
			get
			{
				return this._QualityAudit_SafePersonQuality_Sys_User_AuditorId;
			}
			set
			{
				this._QualityAudit_SafePersonQuality_Sys_User_AuditorId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Sys_User", Storage="_SitePerson_Person", ThisKey="UserId", OtherKey="AuditorId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Log_Sys_User", Storage="_Sys_Log", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_Log> Sys_Log
		{
			get
			{
				return this._Sys_Log;
			}
			set
			{
				this._Sys_Log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Depart", Storage="_Base_Depart", ThisKey="DepartId", OtherKey="DepartId", IsForeignKey=true)]
		public Base_Depart Base_Depart
		{
			get
			{
				return this._Base_Depart.Entity;
			}
			set
			{
				Base_Depart previousValue = this._Base_Depart.Entity;
				if (((previousValue != value) 
							|| (this._Base_Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Depart.Entity = null;
						previousValue.Sys_User.Remove(this);
					}
					this._Base_Depart.Entity = value;
					if ((value != null))
					{
						value.Sys_User.Add(this);
						this._DepartId = value.DepartId;
					}
					else
					{
						this._DepartId = default(string);
					}
					this.SendPropertyChanged("Base_Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Sys_User.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Sys_User.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserShowColumns_Sys_User", Storage="_Sys_UserShowColumns", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_UserShowColumns> Sys_UserShowColumns
		{
			get
			{
				return this._Sys_UserShowColumns;
			}
			set
			{
				this._Sys_UserShowColumns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Project_ProjectUser(Project_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Project_ProjectUser(Project_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_QualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_QualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_User(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Auditor = this;
		}
		
		private void detach_User(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Auditor = null;
		}
		
		private void attach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_QualityAudit_PersonQuality_Sys_User_AuditorId(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Auditor = this;
		}
		
		private void detach_QualityAudit_PersonQuality_Sys_User_AuditorId(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Auditor = null;
		}
		
		private void attach_QualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_QualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_QualityAudit_SafePersonQuality_Sys_User_AuditorId(QualityAudit_SafePersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Auditor = this;
		}
		
		private void detach_QualityAudit_SafePersonQuality_Sys_User_AuditorId(QualityAudit_SafePersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Auditor = null;
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_Log(Sys_Log entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_Log(Sys_Log entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_UserShowColumns(Sys_UserShowColumns entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_UserShowColumns(Sys_UserShowColumns entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_UserRead")]
	public partial class Sys_UserRead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserReadId;
		
		private string _UserId;
		
		private string _MenuId;
		
		private string _ProjectId;
		
		private string _DataId;
		
		private System.Nullable<System.DateTime> _ReadTime;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserReadIdChanging(string value);
    partial void OnUserReadIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnReadTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReadTimeChanged();
    #endregion
		
		public Sys_UserRead()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserReadId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserReadId
		{
			get
			{
				return this._UserReadId;
			}
			set
			{
				if ((this._UserReadId != value))
				{
					this.OnUserReadIdChanging(value);
					this.SendPropertyChanging();
					this._UserReadId = value;
					this.SendPropertyChanged("UserReadId");
					this.OnUserReadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadTime
		{
			get
			{
				return this._ReadTime;
			}
			set
			{
				if ((this._ReadTime != value))
				{
					this.OnReadTimeChanging(value);
					this.SendPropertyChanging();
					this._ReadTime = value;
					this.SendPropertyChanged("ReadTime");
					this.OnReadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserRead_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Sys_UserRead.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Sys_UserRead.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_UserShowColumns")]
	public partial class Sys_UserShowColumns : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ShowColumnId;
		
		private string _UserId;
		
		private string _Columns;
		
		private string _ShowType;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShowColumnIdChanging(string value);
    partial void OnShowColumnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnColumnsChanging(string value);
    partial void OnColumnsChanged();
    partial void OnShowTypeChanging(string value);
    partial void OnShowTypeChanged();
    #endregion
		
		public Sys_UserShowColumns()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowColumnId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ShowColumnId
		{
			get
			{
				return this._ShowColumnId;
			}
			set
			{
				if ((this._ShowColumnId != value))
				{
					this.OnShowColumnIdChanging(value);
					this.SendPropertyChanging();
					this._ShowColumnId = value;
					this.SendPropertyChanged("ShowColumnId");
					this.OnShowColumnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Columns", DbType="NVarChar(500)")]
		public string Columns
		{
			get
			{
				return this._Columns;
			}
			set
			{
				if ((this._Columns != value))
				{
					this.OnColumnsChanging(value);
					this.SendPropertyChanging();
					this._Columns = value;
					this.SendPropertyChanged("Columns");
					this.OnColumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowType", DbType="NVarChar(50)")]
		public string ShowType
		{
			get
			{
				return this._ShowType;
			}
			set
			{
				if ((this._ShowType != value))
				{
					this.OnShowTypeChanging(value);
					this.SendPropertyChanging();
					this._ShowType = value;
					this.SendPropertyChanged("ShowType");
					this.OnShowTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserShowColumns_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_UserShowColumns.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_UserShowColumns.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_SitePerson_Person")]
	public partial class View_SitePerson_Person
	{
		
		private string _PersonId;
		
		private string _CardNo;
		
		private string _PersonName;
		
		private string _Sex;
		
		private string _SexName;
		
		private string _IdentityCard;
		
		private string _Address;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _TeamGroupId;
		
		private string _WorkAreaId;
		
		private string _WorkPostId;
		
		private System.Nullable<System.DateTime> _InTime;
		
		private System.Nullable<System.DateTime> _OutTime;
		
		private string _OutResult;
		
		private string _Telephone;
		
		private string _PositionId;
		
		private string _PostTitleId;
		
		private string _PhotoUrl;
		
		private bool _IsUsed;
		
		private string _IsUsedName;
		
		private bool _IsCardUsed;
		
		private string _IsCardUsedName;
		
		private System.Nullable<int> _PersonIndex;
		
		private string _ProjectCode;
		
		private string _ProjectName;
		
		private string _UnitCode;
		
		private string _UnitName;
		
		private string _TeamGroupName;
		
		private string _WorkAreaCode;
		
		private string _WorkAreaName;
		
		private string _WorkPostName;
		
		private string _PositionName;
		
		private string _PostTitleName;
		
		private string _DepartName;
		
		private string _PostType;
		
		private System.Nullable<bool> _IsHsse;
		
		private string _AuditorId;
		
		private string _AuditorName;
		
		private System.Nullable<System.DateTime> _AuditorDate;
		
		private string _IDCardUrl;
		
		private System.Nullable<bool> _IsForeign;
		
		private System.Nullable<bool> _IsOutside;
		
		public View_SitePerson_Person()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this._PersonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNo", DbType="NVarChar(50)")]
		public string CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this._CardNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonName", DbType="NVarChar(50)")]
		public string PersonName
		{
			get
			{
				return this._PersonName;
			}
			set
			{
				if ((this._PersonName != value))
				{
					this._PersonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexName", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string SexName
		{
			get
			{
				return this._SexName;
			}
			set
			{
				if ((this._SexName != value))
				{
					this._SexName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(50)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this._IdentityCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupId", DbType="NVarChar(50)")]
		public string TeamGroupId
		{
			get
			{
				return this._TeamGroupId;
			}
			set
			{
				if ((this._TeamGroupId != value))
				{
					this._TeamGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					this._WorkAreaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(50)")]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					this._WorkPostId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> InTime
		{
			get
			{
				return this._InTime;
			}
			set
			{
				if ((this._InTime != value))
				{
					this._InTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutTime
		{
			get
			{
				return this._OutTime;
			}
			set
			{
				if ((this._OutTime != value))
				{
					this._OutTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutResult", DbType="NVarChar(50)")]
		public string OutResult
		{
			get
			{
				return this._OutResult;
			}
			set
			{
				if ((this._OutResult != value))
				{
					this._OutResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50)")]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this._PositionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleId", DbType="NVarChar(50)")]
		public string PostTitleId
		{
			get
			{
				return this._PostTitleId;
			}
			set
			{
				if ((this._PostTitleId != value))
				{
					this._PostTitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(2000)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this._PhotoUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit NOT NULL")]
		public bool IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this._IsUsed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsedName", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string IsUsedName
		{
			get
			{
				return this._IsUsedName;
			}
			set
			{
				if ((this._IsUsedName != value))
				{
					this._IsUsedName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCardUsed", DbType="Bit NOT NULL")]
		public bool IsCardUsed
		{
			get
			{
				return this._IsCardUsed;
			}
			set
			{
				if ((this._IsCardUsed != value))
				{
					this._IsCardUsed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCardUsedName", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string IsCardUsedName
		{
			get
			{
				return this._IsCardUsedName;
			}
			set
			{
				if ((this._IsCardUsedName != value))
				{
					this._IsCardUsedName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonIndex", DbType="Int")]
		public System.Nullable<int> PersonIndex
		{
			get
			{
				return this._PersonIndex;
			}
			set
			{
				if ((this._PersonIndex != value))
				{
					this._PersonIndex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="NVarChar(50)")]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this._ProjectCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this._ProjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(100)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this._UnitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupName", DbType="NVarChar(50)")]
		public string TeamGroupName
		{
			get
			{
				return this._TeamGroupName;
			}
			set
			{
				if ((this._TeamGroupName != value))
				{
					this._TeamGroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaCode", DbType="NVarChar(50)")]
		public string WorkAreaCode
		{
			get
			{
				return this._WorkAreaCode;
			}
			set
			{
				if ((this._WorkAreaCode != value))
				{
					this._WorkAreaCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaName", DbType="NVarChar(30)")]
		public string WorkAreaName
		{
			get
			{
				return this._WorkAreaName;
			}
			set
			{
				if ((this._WorkAreaName != value))
				{
					this._WorkAreaName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostName", DbType="NVarChar(100)")]
		public string WorkPostName
		{
			get
			{
				return this._WorkPostName;
			}
			set
			{
				if ((this._WorkPostName != value))
				{
					this._WorkPostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionName", DbType="NVarChar(50)")]
		public string PositionName
		{
			get
			{
				return this._PositionName;
			}
			set
			{
				if ((this._PositionName != value))
				{
					this._PositionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleName", DbType="NVarChar(100)")]
		public string PostTitleName
		{
			get
			{
				return this._PostTitleName;
			}
			set
			{
				if ((this._PostTitleName != value))
				{
					this._PostTitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartName", DbType="NVarChar(50)")]
		public string DepartName
		{
			get
			{
				return this._DepartName;
			}
			set
			{
				if ((this._DepartName != value))
				{
					this._DepartName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostType", DbType="NChar(1)")]
		public string PostType
		{
			get
			{
				return this._PostType;
			}
			set
			{
				if ((this._PostType != value))
				{
					this._PostType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHsse", DbType="Bit")]
		public System.Nullable<bool> IsHsse
		{
			get
			{
				return this._IsHsse;
			}
			set
			{
				if ((this._IsHsse != value))
				{
					this._IsHsse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorId", DbType="NVarChar(50)")]
		public string AuditorId
		{
			get
			{
				return this._AuditorId;
			}
			set
			{
				if ((this._AuditorId != value))
				{
					this._AuditorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorName", DbType="NVarChar(50)")]
		public string AuditorName
		{
			get
			{
				return this._AuditorName;
			}
			set
			{
				if ((this._AuditorName != value))
				{
					this._AuditorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditorDate
		{
			get
			{
				return this._AuditorDate;
			}
			set
			{
				if ((this._AuditorDate != value))
				{
					this._AuditorDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCardUrl", DbType="NVarChar(2000)")]
		public string IDCardUrl
		{
			get
			{
				return this._IDCardUrl;
			}
			set
			{
				if ((this._IDCardUrl != value))
				{
					this._IDCardUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForeign", DbType="Bit")]
		public System.Nullable<bool> IsForeign
		{
			get
			{
				return this._IsForeign;
			}
			set
			{
				if ((this._IsForeign != value))
				{
					this._IsForeign = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutside", DbType="Bit")]
		public System.Nullable<bool> IsOutside
		{
			get
			{
				return this._IsOutside;
			}
			set
			{
				if ((this._IsOutside != value))
				{
					this._IsOutside = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Sys_User")]
	public partial class View_Sys_User
	{
		
		private string _UserId;
		
		private string _Account;
		
		private string _UserCode;
		
		private string _Password;
		
		private string _UserName;
		
		private string _RoleId;
		
		private string _UnitId;
		
		private System.Nullable<bool> _IsPost;
		
		private string _LoginProjectId;
		
		private string _Sex;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private string _Marriage;
		
		private string _Nation;
		
		private string _IdentityCard;
		
		private string _Email;
		
		private string _Telephone;
		
		private string _Education;
		
		private string _Hometown;
		
		private string _PositionId;
		
		private string _PhotoUrl;
		
		private string _Performance;
		
		private System.Nullable<int> _PageSize;
		
		private System.Nullable<bool> _IsOffice;
		
		private string _DeviceId;
		
		private string _SessionString;
		
		private System.Nullable<int> _RCount;
		
		private string _DataSources;
		
		private string _IsPostName;
		
		private string _RoleName;
		
		private string _RoleCode;
		
		private System.Nullable<bool> _IsAuditFlow;
		
		private string _UnitCode;
		
		private string _UnitName;
		
		private string _RoleTypeName;
		
		private string _SignatureUrl;
		
		private string _UserType;
		
		public View_Sys_User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(50)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this._Account = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(20)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPost", DbType="Bit")]
		public System.Nullable<bool> IsPost
		{
			get
			{
				return this._IsPost;
			}
			set
			{
				if ((this._IsPost != value))
				{
					this._IsPost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProjectId", DbType="NVarChar(50)")]
		public string LoginProjectId
		{
			get
			{
				return this._LoginProjectId;
			}
			set
			{
				if ((this._LoginProjectId != value))
				{
					this._LoginProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this._BirthDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marriage", DbType="NVarChar(20)")]
		public string Marriage
		{
			get
			{
				return this._Marriage;
			}
			set
			{
				if ((this._Marriage != value))
				{
					this._Marriage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="NVarChar(20)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this._Nation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(50)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this._IdentityCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(20)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this._Education = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hometown", DbType="NVarChar(50)")]
		public string Hometown
		{
			get
			{
				return this._Hometown;
			}
			set
			{
				if ((this._Hometown != value))
				{
					this._Hometown = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50)")]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this._PositionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(500)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this._PhotoUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Performance", DbType="NVarChar(800)")]
		public string Performance
		{
			get
			{
				return this._Performance;
			}
			set
			{
				if ((this._Performance != value))
				{
					this._Performance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSize", DbType="Int")]
		public System.Nullable<int> PageSize
		{
			get
			{
				return this._PageSize;
			}
			set
			{
				if ((this._PageSize != value))
				{
					this._PageSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOffice", DbType="Bit")]
		public System.Nullable<bool> IsOffice
		{
			get
			{
				return this._IsOffice;
			}
			set
			{
				if ((this._IsOffice != value))
				{
					this._IsOffice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(100)")]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this._DeviceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionString", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SessionString
		{
			get
			{
				return this._SessionString;
			}
			set
			{
				if ((this._SessionString != value))
				{
					this._SessionString = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCount", DbType="Int")]
		public System.Nullable<int> RCount
		{
			get
			{
				return this._RCount;
			}
			set
			{
				if ((this._RCount != value))
				{
					this._RCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSources", DbType="NVarChar(50)")]
		public string DataSources
		{
			get
			{
				return this._DataSources;
			}
			set
			{
				if ((this._DataSources != value))
				{
					this._DataSources = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPostName", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string IsPostName
		{
			get
			{
				return this._IsPostName;
			}
			set
			{
				if ((this._IsPostName != value))
				{
					this._IsPostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleCode", DbType="NVarChar(50)")]
		public string RoleCode
		{
			get
			{
				return this._RoleCode;
			}
			set
			{
				if ((this._RoleCode != value))
				{
					this._RoleCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuditFlow", DbType="Bit")]
		public System.Nullable<bool> IsAuditFlow
		{
			get
			{
				return this._IsAuditFlow;
			}
			set
			{
				if ((this._IsAuditFlow != value))
				{
					this._IsAuditFlow = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(100)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this._UnitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleTypeName", DbType="NVarChar(100)")]
		public string RoleTypeName
		{
			get
			{
				return this._RoleTypeName;
			}
			set
			{
				if ((this._RoleTypeName != value))
				{
					this._RoleTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureUrl", DbType="NVarChar(500)")]
		public string SignatureUrl
		{
			get
			{
				return this._SignatureUrl;
			}
			set
			{
				if ((this._SignatureUrl != value))
				{
					this._SignatureUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this._UserType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WBS_ControlItemAndCycle")]
	public partial class WBS_ControlItemAndCycle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ControlItemAndCycleId;
		
		private string _ControlItemAndCycleCode;
		
		private string _WorkPackageId;
		
		private string _ProjectId;
		
		private string _ControlItemContent;
		
		private string _ControlPoint;
		
		private string _ControlItemDef;
		
		private System.Nullable<bool> _IsSelected;
		
		private System.Nullable<bool> _IsApprove;
		
		private string _AttachUrl;
		
		private System.Nullable<decimal> _Weights;
		
		private string _HGForms;
		
		private string _SHForms;
		
		private string _Standard;
		
		private string _ClauseNo;
		
		private System.Nullable<int> _CheckNum;
		
		private string _InitControlItemCode;
		
		private System.Nullable<System.DateTime> _PlanCompleteDate;
		
		private EntityRef<WBS_WorkPackage> _WBS_WorkPackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControlItemAndCycleIdChanging(string value);
    partial void OnControlItemAndCycleIdChanged();
    partial void OnControlItemAndCycleCodeChanging(string value);
    partial void OnControlItemAndCycleCodeChanged();
    partial void OnWorkPackageIdChanging(string value);
    partial void OnWorkPackageIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnControlItemContentChanging(string value);
    partial void OnControlItemContentChanged();
    partial void OnControlPointChanging(string value);
    partial void OnControlPointChanged();
    partial void OnControlItemDefChanging(string value);
    partial void OnControlItemDefChanged();
    partial void OnIsSelectedChanging(System.Nullable<bool> value);
    partial void OnIsSelectedChanged();
    partial void OnIsApproveChanging(System.Nullable<bool> value);
    partial void OnIsApproveChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnWeightsChanging(System.Nullable<decimal> value);
    partial void OnWeightsChanged();
    partial void OnHGFormsChanging(string value);
    partial void OnHGFormsChanged();
    partial void OnSHFormsChanging(string value);
    partial void OnSHFormsChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnClauseNoChanging(string value);
    partial void OnClauseNoChanged();
    partial void OnCheckNumChanging(System.Nullable<int> value);
    partial void OnCheckNumChanged();
    partial void OnInitControlItemCodeChanging(string value);
    partial void OnInitControlItemCodeChanged();
    partial void OnPlanCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanCompleteDateChanged();
    #endregion
		
		public WBS_ControlItemAndCycle()
		{
			this._WBS_WorkPackage = default(EntityRef<WBS_WorkPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemAndCycleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ControlItemAndCycleId
		{
			get
			{
				return this._ControlItemAndCycleId;
			}
			set
			{
				if ((this._ControlItemAndCycleId != value))
				{
					this.OnControlItemAndCycleIdChanging(value);
					this.SendPropertyChanging();
					this._ControlItemAndCycleId = value;
					this.SendPropertyChanged("ControlItemAndCycleId");
					this.OnControlItemAndCycleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemAndCycleCode", DbType="NVarChar(30)")]
		public string ControlItemAndCycleCode
		{
			get
			{
				return this._ControlItemAndCycleCode;
			}
			set
			{
				if ((this._ControlItemAndCycleCode != value))
				{
					this.OnControlItemAndCycleCodeChanging(value);
					this.SendPropertyChanging();
					this._ControlItemAndCycleCode = value;
					this.SendPropertyChanged("ControlItemAndCycleCode");
					this.OnControlItemAndCycleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPackageId", DbType="NVarChar(50)")]
		public string WorkPackageId
		{
			get
			{
				return this._WorkPackageId;
			}
			set
			{
				if ((this._WorkPackageId != value))
				{
					if (this._WBS_WorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkPackageIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPackageId = value;
					this.SendPropertyChanged("WorkPackageId");
					this.OnWorkPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemContent", DbType="NVarChar(300)")]
		public string ControlItemContent
		{
			get
			{
				return this._ControlItemContent;
			}
			set
			{
				if ((this._ControlItemContent != value))
				{
					this.OnControlItemContentChanging(value);
					this.SendPropertyChanging();
					this._ControlItemContent = value;
					this.SendPropertyChanged("ControlItemContent");
					this.OnControlItemContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlPoint", DbType="NVarChar(10)")]
		public string ControlPoint
		{
			get
			{
				return this._ControlPoint;
			}
			set
			{
				if ((this._ControlPoint != value))
				{
					this.OnControlPointChanging(value);
					this.SendPropertyChanging();
					this._ControlPoint = value;
					this.SendPropertyChanged("ControlPoint");
					this.OnControlPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemDef", DbType="NVarChar(500)")]
		public string ControlItemDef
		{
			get
			{
				return this._ControlItemDef;
			}
			set
			{
				if ((this._ControlItemDef != value))
				{
					this.OnControlItemDefChanging(value);
					this.SendPropertyChanging();
					this._ControlItemDef = value;
					this.SendPropertyChanged("ControlItemDef");
					this.OnControlItemDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected", DbType="Bit")]
		public System.Nullable<bool> IsSelected
		{
			get
			{
				return this._IsSelected;
			}
			set
			{
				if ((this._IsSelected != value))
				{
					this.OnIsSelectedChanging(value);
					this.SendPropertyChanging();
					this._IsSelected = value;
					this.SendPropertyChanged("IsSelected");
					this.OnIsSelectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApprove", DbType="Bit")]
		public System.Nullable<bool> IsApprove
		{
			get
			{
				return this._IsApprove;
			}
			set
			{
				if ((this._IsApprove != value))
				{
					this.OnIsApproveChanging(value);
					this.SendPropertyChanging();
					this._IsApprove = value;
					this.SendPropertyChanged("IsApprove");
					this.OnIsApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(500)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weights", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Weights
		{
			get
			{
				return this._Weights;
			}
			set
			{
				if ((this._Weights != value))
				{
					this.OnWeightsChanging(value);
					this.SendPropertyChanging();
					this._Weights = value;
					this.SendPropertyChanged("Weights");
					this.OnWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HGForms", DbType="NVarChar(500)")]
		public string HGForms
		{
			get
			{
				return this._HGForms;
			}
			set
			{
				if ((this._HGForms != value))
				{
					this.OnHGFormsChanging(value);
					this.SendPropertyChanging();
					this._HGForms = value;
					this.SendPropertyChanged("HGForms");
					this.OnHGFormsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHForms", DbType="NVarChar(500)")]
		public string SHForms
		{
			get
			{
				return this._SHForms;
			}
			set
			{
				if ((this._SHForms != value))
				{
					this.OnSHFormsChanging(value);
					this.SendPropertyChanging();
					this._SHForms = value;
					this.SendPropertyChanged("SHForms");
					this.OnSHFormsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(50)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClauseNo", DbType="NVarChar(50)")]
		public string ClauseNo
		{
			get
			{
				return this._ClauseNo;
			}
			set
			{
				if ((this._ClauseNo != value))
				{
					this.OnClauseNoChanging(value);
					this.SendPropertyChanging();
					this._ClauseNo = value;
					this.SendPropertyChanged("ClauseNo");
					this.OnClauseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNum", DbType="Int")]
		public System.Nullable<int> CheckNum
		{
			get
			{
				return this._CheckNum;
			}
			set
			{
				if ((this._CheckNum != value))
				{
					this.OnCheckNumChanging(value);
					this.SendPropertyChanging();
					this._CheckNum = value;
					this.SendPropertyChanged("CheckNum");
					this.OnCheckNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitControlItemCode", DbType="NVarChar(30)")]
		public string InitControlItemCode
		{
			get
			{
				return this._InitControlItemCode;
			}
			set
			{
				if ((this._InitControlItemCode != value))
				{
					this.OnInitControlItemCodeChanging(value);
					this.SendPropertyChanging();
					this._InitControlItemCode = value;
					this.SendPropertyChanged("InitControlItemCode");
					this.OnInitControlItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanCompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlanCompleteDate
		{
			get
			{
				return this._PlanCompleteDate;
			}
			set
			{
				if ((this._PlanCompleteDate != value))
				{
					this.OnPlanCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._PlanCompleteDate = value;
					this.SendPropertyChanged("PlanCompleteDate");
					this.OnPlanCompleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_ControlItemAndCycle_WBS_ControlItemAndCycle", Storage="_WBS_WorkPackage", ThisKey="WorkPackageId", OtherKey="WorkPackageId", IsForeignKey=true)]
		public WBS_WorkPackage WBS_WorkPackage
		{
			get
			{
				return this._WBS_WorkPackage.Entity;
			}
			set
			{
				WBS_WorkPackage previousValue = this._WBS_WorkPackage.Entity;
				if (((previousValue != value) 
							|| (this._WBS_WorkPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_WorkPackage.Entity = null;
						previousValue.WBS_ControlItemAndCycle.Remove(this);
					}
					this._WBS_WorkPackage.Entity = value;
					if ((value != null))
					{
						value.WBS_ControlItemAndCycle.Add(this);
						this._WorkPackageId = value.WorkPackageId;
					}
					else
					{
						this._WorkPackageId = default(string);
					}
					this.SendPropertyChanged("WBS_WorkPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WBS_UnitWork")]
	public partial class WBS_UnitWork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UnitWorkId;
		
		private string _UnitWorkCode;
		
		private string _UnitWorkName;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _SupervisorUnitId;
		
		private string _NDEUnit;
		
		private System.Nullable<int> _SuperUnitWork;
		
		private System.Nullable<bool> _IsChild;
		
		private string _ProjectType;
		
		private System.Nullable<decimal> _Weights;
		
		private EntitySet<HJGL_Batch_NDE> _HJGL_Batch_NDE;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<HJGL_Hard_Trust> _HJGL_Hard_Trust;
		
		private EntitySet<HJGL_HotProess_Trust> _HJGL_HotProess_Trust;
		
		private EntitySet<HJGL_Pipeline> _HJGL_Pipeline;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
		private EntitySet<HJGL_WeldingDaily> _HJGL_WeldingDaily;
		
		private EntitySet<PTP_TestPackage> _PTP_TestPackage;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Unit> _SupervisorUnit;
		
		private EntityRef<Base_Unit> _Unit;
		
		private EntitySet<WBS_WorkPackage> _WBS_WorkPackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnUnitWorkCodeChanging(string value);
    partial void OnUnitWorkCodeChanged();
    partial void OnUnitWorkNameChanging(string value);
    partial void OnUnitWorkNameChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnSupervisorUnitIdChanging(string value);
    partial void OnSupervisorUnitIdChanged();
    partial void OnNDEUnitChanging(string value);
    partial void OnNDEUnitChanged();
    partial void OnSuperUnitWorkChanging(System.Nullable<int> value);
    partial void OnSuperUnitWorkChanged();
    partial void OnIsChildChanging(System.Nullable<bool> value);
    partial void OnIsChildChanged();
    partial void OnProjectTypeChanging(string value);
    partial void OnProjectTypeChanged();
    partial void OnWeightsChanging(System.Nullable<decimal> value);
    partial void OnWeightsChanged();
    #endregion
		
		public WBS_UnitWork()
		{
			this._HJGL_Batch_NDE = new EntitySet<HJGL_Batch_NDE>(new Action<HJGL_Batch_NDE>(this.attach_HJGL_Batch_NDE), new Action<HJGL_Batch_NDE>(this.detach_HJGL_Batch_NDE));
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._HJGL_Hard_Trust = new EntitySet<HJGL_Hard_Trust>(new Action<HJGL_Hard_Trust>(this.attach_HJGL_Hard_Trust), new Action<HJGL_Hard_Trust>(this.detach_HJGL_Hard_Trust));
			this._HJGL_HotProess_Trust = new EntitySet<HJGL_HotProess_Trust>(new Action<HJGL_HotProess_Trust>(this.attach_HJGL_HotProess_Trust), new Action<HJGL_HotProess_Trust>(this.detach_HJGL_HotProess_Trust));
			this._HJGL_Pipeline = new EntitySet<HJGL_Pipeline>(new Action<HJGL_Pipeline>(this.attach_HJGL_Pipeline), new Action<HJGL_Pipeline>(this.detach_HJGL_Pipeline));
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			this._HJGL_WeldingDaily = new EntitySet<HJGL_WeldingDaily>(new Action<HJGL_WeldingDaily>(this.attach_HJGL_WeldingDaily), new Action<HJGL_WeldingDaily>(this.detach_HJGL_WeldingDaily));
			this._PTP_TestPackage = new EntitySet<PTP_TestPackage>(new Action<PTP_TestPackage>(this.attach_PTP_TestPackage), new Action<PTP_TestPackage>(this.detach_PTP_TestPackage));
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._SupervisorUnit = default(EntityRef<Base_Unit>);
			this._Unit = default(EntityRef<Base_Unit>);
			this._WBS_WorkPackage = new EntitySet<WBS_WorkPackage>(new Action<WBS_WorkPackage>(this.attach_WBS_WorkPackage), new Action<WBS_WorkPackage>(this.detach_WBS_WorkPackage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkCode", DbType="NVarChar(10)")]
		public string UnitWorkCode
		{
			get
			{
				return this._UnitWorkCode;
			}
			set
			{
				if ((this._UnitWorkCode != value))
				{
					this.OnUnitWorkCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkCode = value;
					this.SendPropertyChanged("UnitWorkCode");
					this.OnUnitWorkCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkName", DbType="NVarChar(30)")]
		public string UnitWorkName
		{
			get
			{
				return this._UnitWorkName;
			}
			set
			{
				if ((this._UnitWorkName != value))
				{
					this.OnUnitWorkNameChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkName = value;
					this.SendPropertyChanged("UnitWorkName");
					this.OnUnitWorkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisorUnitId", DbType="NVarChar(50)")]
		public string SupervisorUnitId
		{
			get
			{
				return this._SupervisorUnitId;
			}
			set
			{
				if ((this._SupervisorUnitId != value))
				{
					if (this._SupervisorUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupervisorUnitIdChanging(value);
					this.SendPropertyChanging();
					this._SupervisorUnitId = value;
					this.SendPropertyChanged("SupervisorUnitId");
					this.OnSupervisorUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEUnit", DbType="NVarChar(50)")]
		public string NDEUnit
		{
			get
			{
				return this._NDEUnit;
			}
			set
			{
				if ((this._NDEUnit != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDEUnitChanging(value);
					this.SendPropertyChanging();
					this._NDEUnit = value;
					this.SendPropertyChanged("NDEUnit");
					this.OnNDEUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperUnitWork", DbType="Int")]
		public System.Nullable<int> SuperUnitWork
		{
			get
			{
				return this._SuperUnitWork;
			}
			set
			{
				if ((this._SuperUnitWork != value))
				{
					this.OnSuperUnitWorkChanging(value);
					this.SendPropertyChanging();
					this._SuperUnitWork = value;
					this.SendPropertyChanged("SuperUnitWork");
					this.OnSuperUnitWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChild", DbType="Bit")]
		public System.Nullable<bool> IsChild
		{
			get
			{
				return this._IsChild;
			}
			set
			{
				if ((this._IsChild != value))
				{
					this.OnIsChildChanging(value);
					this.SendPropertyChanging();
					this._IsChild = value;
					this.SendPropertyChanged("IsChild");
					this.OnIsChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectType", DbType="Char(1)")]
		public string ProjectType
		{
			get
			{
				return this._ProjectType;
			}
			set
			{
				if ((this._ProjectType != value))
				{
					this.OnProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ProjectType = value;
					this.SendPropertyChanged("ProjectType");
					this.OnProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weights", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Weights
		{
			get
			{
				return this._Weights;
			}
			set
			{
				if ((this._Weights != value))
				{
					this.OnWeightsChanging(value);
					this.SendPropertyChanging();
					this._Weights = value;
					this.SendPropertyChanged("Weights");
					this.OnWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_NDE_WBS_UnitWork", Storage="_HJGL_Batch_NDE", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_NDE> HJGL_Batch_NDE
		{
			get
			{
				return this._HJGL_Batch_NDE;
			}
			set
			{
				this._HJGL_Batch_NDE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_WBS_UnitWork", Storage="_HJGL_Batch_PointBatch", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Trust_WBS_UnitWork", Storage="_HJGL_Hard_Trust", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_Trust> HJGL_Hard_Trust
		{
			get
			{
				return this._HJGL_Hard_Trust;
			}
			set
			{
				this._HJGL_Hard_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_HotProess_Trust_WBS_UnitWork", Storage="_HJGL_HotProess_Trust", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_Trust> HJGL_HotProess_Trust
		{
			get
			{
				return this._HJGL_HotProess_Trust;
			}
			set
			{
				this._HJGL_HotProess_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_WBS_UnitWork", Storage="_HJGL_Pipeline", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline;
			}
			set
			{
				this._HJGL_Pipeline.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_WBS_UnitWork", Storage="_HJGL_RepairRecord", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldingDaily_WBS_UnitWork", Storage="_HJGL_WeldingDaily", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldingDaily> HJGL_WeldingDaily
		{
			get
			{
				return this._HJGL_WeldingDaily;
			}
			set
			{
				this._HJGL_WeldingDaily.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_TestPackage_WBS_UnitWork", Storage="_PTP_TestPackage", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<PTP_TestPackage> PTP_TestPackage
		{
			get
			{
				return this._PTP_TestPackage;
			}
			set
			{
				this._PTP_TestPackage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_WBS_UnitWork", Storage="_SitePerson_Person", ThisKey="UnitWorkId", OtherKey="WorkAreaId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_UnitWork_Base_Unit_NDEUnit", Storage="_Base_Unit", ThisKey="NDEUnit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.WBS_UnitWork.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.WBS_UnitWork.Add(this);
						this._NDEUnit = value.UnitId;
					}
					else
					{
						this._NDEUnit = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_UnitWork_Base_Unit_SupervisorUnit", Storage="_SupervisorUnit", ThisKey="SupervisorUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit SupervisorUnit
		{
			get
			{
				return this._SupervisorUnit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._SupervisorUnit.Entity;
				if (((previousValue != value) 
							|| (this._SupervisorUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupervisorUnit.Entity = null;
						previousValue.WBS_UnitWork_Base_Unit_SupervisorUnit.Remove(this);
					}
					this._SupervisorUnit.Entity = value;
					if ((value != null))
					{
						value.WBS_UnitWork_Base_Unit_SupervisorUnit.Add(this);
						this._SupervisorUnitId = value.UnitId;
					}
					else
					{
						this._SupervisorUnitId = default(string);
					}
					this.SendPropertyChanged("SupervisorUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_UnitWork_Base_Unit_Unit", Storage="_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Unit
		{
			get
			{
				return this._Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Unit.Entity;
				if (((previousValue != value) 
							|| (this._Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unit.Entity = null;
						previousValue.WBS_UnitWork_Base_Unit_Unit.Remove(this);
					}
					this._Unit.Entity = value;
					if ((value != null))
					{
						value.WBS_UnitWork_Base_Unit_Unit.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_WorkPackage_WBS_UnitWork", Storage="_WBS_WorkPackage", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<WBS_WorkPackage> WBS_WorkPackage
		{
			get
			{
				return this._WBS_WorkPackage;
			}
			set
			{
				this._WBS_WorkPackage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_NDE(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_Batch_NDE(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_Hard_Trust(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_Hard_Trust(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_HotProess_Trust(HJGL_HotProess_Trust entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_HotProess_Trust(HJGL_HotProess_Trust entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_PTP_TestPackage(PTP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_PTP_TestPackage(PTP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_WBS_WorkPackage(WBS_WorkPackage entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_WBS_WorkPackage(WBS_WorkPackage entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WBS_WorkPackage")]
	public partial class WBS_WorkPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkPackageId;
		
		private string _WorkPackageCode;
		
		private string _UnitWorkId;
		
		private string _PackageCode;
		
		private string _PackageContent;
		
		private string _ProjectId;
		
		private string _SuperWorkPack;
		
		private string _SuperWorkPackageId;
		
		private System.Nullable<bool> _IsChild;
		
		private System.Nullable<bool> _IsCopy;
		
		private System.Nullable<bool> _IsCopyed;
		
		private System.Nullable<int> _SortIndex;
		
		private string _ProjectType;
		
		private string _InitWorkPackageCode;
		
		private System.Nullable<decimal> _Weights;
		
		private System.Nullable<bool> _IsApprove;
		
		private EntitySet<WBS_ControlItemAndCycle> _WBS_ControlItemAndCycle;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkPackageIdChanging(string value);
    partial void OnWorkPackageIdChanged();
    partial void OnWorkPackageCodeChanging(string value);
    partial void OnWorkPackageCodeChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnPackageCodeChanging(string value);
    partial void OnPackageCodeChanged();
    partial void OnPackageContentChanging(string value);
    partial void OnPackageContentChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnSuperWorkPackChanging(string value);
    partial void OnSuperWorkPackChanged();
    partial void OnSuperWorkPackageIdChanging(string value);
    partial void OnSuperWorkPackageIdChanged();
    partial void OnIsChildChanging(System.Nullable<bool> value);
    partial void OnIsChildChanged();
    partial void OnIsCopyChanging(System.Nullable<bool> value);
    partial void OnIsCopyChanged();
    partial void OnIsCopyedChanging(System.Nullable<bool> value);
    partial void OnIsCopyedChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnProjectTypeChanging(string value);
    partial void OnProjectTypeChanged();
    partial void OnInitWorkPackageCodeChanging(string value);
    partial void OnInitWorkPackageCodeChanged();
    partial void OnWeightsChanging(System.Nullable<decimal> value);
    partial void OnWeightsChanged();
    partial void OnIsApproveChanging(System.Nullable<bool> value);
    partial void OnIsApproveChanged();
    #endregion
		
		public WBS_WorkPackage()
		{
			this._WBS_ControlItemAndCycle = new EntitySet<WBS_ControlItemAndCycle>(new Action<WBS_ControlItemAndCycle>(this.attach_WBS_ControlItemAndCycle), new Action<WBS_ControlItemAndCycle>(this.detach_WBS_ControlItemAndCycle));
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPackageId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkPackageId
		{
			get
			{
				return this._WorkPackageId;
			}
			set
			{
				if ((this._WorkPackageId != value))
				{
					this.OnWorkPackageIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPackageId = value;
					this.SendPropertyChanged("WorkPackageId");
					this.OnWorkPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPackageCode", DbType="NVarChar(30)")]
		public string WorkPackageCode
		{
			get
			{
				return this._WorkPackageCode;
			}
			set
			{
				if ((this._WorkPackageCode != value))
				{
					this.OnWorkPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkPackageCode = value;
					this.SendPropertyChanged("WorkPackageCode");
					this.OnWorkPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCode", DbType="NVarChar(10)")]
		public string PackageCode
		{
			get
			{
				return this._PackageCode;
			}
			set
			{
				if ((this._PackageCode != value))
				{
					this.OnPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._PackageCode = value;
					this.SendPropertyChanged("PackageCode");
					this.OnPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageContent", DbType="NVarChar(50)")]
		public string PackageContent
		{
			get
			{
				return this._PackageContent;
			}
			set
			{
				if ((this._PackageContent != value))
				{
					this.OnPackageContentChanging(value);
					this.SendPropertyChanging();
					this._PackageContent = value;
					this.SendPropertyChanged("PackageContent");
					this.OnPackageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperWorkPack", DbType="NVarChar(30)")]
		public string SuperWorkPack
		{
			get
			{
				return this._SuperWorkPack;
			}
			set
			{
				if ((this._SuperWorkPack != value))
				{
					this.OnSuperWorkPackChanging(value);
					this.SendPropertyChanging();
					this._SuperWorkPack = value;
					this.SendPropertyChanged("SuperWorkPack");
					this.OnSuperWorkPackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperWorkPackageId", DbType="NVarChar(50)")]
		public string SuperWorkPackageId
		{
			get
			{
				return this._SuperWorkPackageId;
			}
			set
			{
				if ((this._SuperWorkPackageId != value))
				{
					this.OnSuperWorkPackageIdChanging(value);
					this.SendPropertyChanging();
					this._SuperWorkPackageId = value;
					this.SendPropertyChanged("SuperWorkPackageId");
					this.OnSuperWorkPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChild", DbType="Bit")]
		public System.Nullable<bool> IsChild
		{
			get
			{
				return this._IsChild;
			}
			set
			{
				if ((this._IsChild != value))
				{
					this.OnIsChildChanging(value);
					this.SendPropertyChanging();
					this._IsChild = value;
					this.SendPropertyChanged("IsChild");
					this.OnIsChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCopy", DbType="Bit")]
		public System.Nullable<bool> IsCopy
		{
			get
			{
				return this._IsCopy;
			}
			set
			{
				if ((this._IsCopy != value))
				{
					this.OnIsCopyChanging(value);
					this.SendPropertyChanging();
					this._IsCopy = value;
					this.SendPropertyChanged("IsCopy");
					this.OnIsCopyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCopyed", DbType="Bit")]
		public System.Nullable<bool> IsCopyed
		{
			get
			{
				return this._IsCopyed;
			}
			set
			{
				if ((this._IsCopyed != value))
				{
					this.OnIsCopyedChanging(value);
					this.SendPropertyChanging();
					this._IsCopyed = value;
					this.SendPropertyChanged("IsCopyed");
					this.OnIsCopyedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectType", DbType="Char(1)")]
		public string ProjectType
		{
			get
			{
				return this._ProjectType;
			}
			set
			{
				if ((this._ProjectType != value))
				{
					this.OnProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ProjectType = value;
					this.SendPropertyChanged("ProjectType");
					this.OnProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitWorkPackageCode", DbType="NVarChar(50)")]
		public string InitWorkPackageCode
		{
			get
			{
				return this._InitWorkPackageCode;
			}
			set
			{
				if ((this._InitWorkPackageCode != value))
				{
					this.OnInitWorkPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._InitWorkPackageCode = value;
					this.SendPropertyChanged("InitWorkPackageCode");
					this.OnInitWorkPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weights", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Weights
		{
			get
			{
				return this._Weights;
			}
			set
			{
				if ((this._Weights != value))
				{
					this.OnWeightsChanging(value);
					this.SendPropertyChanging();
					this._Weights = value;
					this.SendPropertyChanged("Weights");
					this.OnWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApprove", DbType="Bit")]
		public System.Nullable<bool> IsApprove
		{
			get
			{
				return this._IsApprove;
			}
			set
			{
				if ((this._IsApprove != value))
				{
					this.OnIsApproveChanging(value);
					this.SendPropertyChanging();
					this._IsApprove = value;
					this.SendPropertyChanged("IsApprove");
					this.OnIsApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_ControlItemAndCycle_WBS_ControlItemAndCycle", Storage="_WBS_ControlItemAndCycle", ThisKey="WorkPackageId", OtherKey="WorkPackageId", DeleteRule="NO ACTION")]
		public EntitySet<WBS_ControlItemAndCycle> WBS_ControlItemAndCycle
		{
			get
			{
				return this._WBS_ControlItemAndCycle;
			}
			set
			{
				this._WBS_ControlItemAndCycle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_WorkPackage_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.WBS_WorkPackage.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.WBS_WorkPackage.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WBS_ControlItemAndCycle(WBS_ControlItemAndCycle entity)
		{
			this.SendPropertyChanging();
			entity.WBS_WorkPackage = this;
		}
		
		private void detach_WBS_ControlItemAndCycle(WBS_ControlItemAndCycle entity)
		{
			this.SendPropertyChanging();
			entity.WBS_WorkPackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Welder_WelderQualify")]
	public partial class Welder_WelderQualify : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WelderQualifyId;
		
		private string _WelderId;
		
		private string _QualificationItem;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private string _WeldingMethod;
		
		private string _MaterialType;
		
		private string _WeldingLocation;
		
		private System.Nullable<decimal> _ThicknessMax;
		
		private System.Nullable<decimal> _ThicknessMin;
		
		private System.Nullable<decimal> _SizesMax;
		
		private System.Nullable<decimal> _SizesMin;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private System.Nullable<bool> _IsPrintShow;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWelderQualifyIdChanging(string value);
    partial void OnWelderQualifyIdChanged();
    partial void OnWelderIdChanging(string value);
    partial void OnWelderIdChanged();
    partial void OnQualificationItemChanging(string value);
    partial void OnQualificationItemChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnWeldingMethodChanging(string value);
    partial void OnWeldingMethodChanged();
    partial void OnMaterialTypeChanging(string value);
    partial void OnMaterialTypeChanged();
    partial void OnWeldingLocationChanging(string value);
    partial void OnWeldingLocationChanged();
    partial void OnThicknessMaxChanging(System.Nullable<decimal> value);
    partial void OnThicknessMaxChanged();
    partial void OnThicknessMinChanging(System.Nullable<decimal> value);
    partial void OnThicknessMinChanged();
    partial void OnSizesMaxChanging(System.Nullable<decimal> value);
    partial void OnSizesMaxChanged();
    partial void OnSizesMinChanging(System.Nullable<decimal> value);
    partial void OnSizesMinChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnIsPrintShowChanging(System.Nullable<bool> value);
    partial void OnIsPrintShowChanged();
    #endregion
		
		public Welder_WelderQualify()
		{
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderQualifyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WelderQualifyId
		{
			get
			{
				return this._WelderQualifyId;
			}
			set
			{
				if ((this._WelderQualifyId != value))
				{
					this.OnWelderQualifyIdChanging(value);
					this.SendPropertyChanging();
					this._WelderQualifyId = value;
					this.SendPropertyChanged("WelderQualifyId");
					this.OnWelderQualifyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderId", DbType="NVarChar(50)")]
		public string WelderId
		{
			get
			{
				return this._WelderId;
			}
			set
			{
				if ((this._WelderId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWelderIdChanging(value);
					this.SendPropertyChanging();
					this._WelderId = value;
					this.SendPropertyChanged("WelderId");
					this.OnWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationItem", DbType="NVarChar(100)")]
		public string QualificationItem
		{
			get
			{
				return this._QualificationItem;
			}
			set
			{
				if ((this._QualificationItem != value))
				{
					this.OnQualificationItemChanging(value);
					this.SendPropertyChanging();
					this._QualificationItem = value;
					this.SendPropertyChanged("QualificationItem");
					this.OnQualificationItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethod", DbType="NVarChar(50)")]
		public string WeldingMethod
		{
			get
			{
				return this._WeldingMethod;
			}
			set
			{
				if ((this._WeldingMethod != value))
				{
					this.OnWeldingMethodChanging(value);
					this.SendPropertyChanging();
					this._WeldingMethod = value;
					this.SendPropertyChanged("WeldingMethod");
					this.OnWeldingMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialType", DbType="NVarChar(50)")]
		public string MaterialType
		{
			get
			{
				return this._MaterialType;
			}
			set
			{
				if ((this._MaterialType != value))
				{
					this.OnMaterialTypeChanging(value);
					this.SendPropertyChanging();
					this._MaterialType = value;
					this.SendPropertyChanged("MaterialType");
					this.OnMaterialTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingLocation", DbType="NVarChar(50)")]
		public string WeldingLocation
		{
			get
			{
				return this._WeldingLocation;
			}
			set
			{
				if ((this._WeldingLocation != value))
				{
					this.OnWeldingLocationChanging(value);
					this.SendPropertyChanging();
					this._WeldingLocation = value;
					this.SendPropertyChanged("WeldingLocation");
					this.OnWeldingLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThicknessMax", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ThicknessMax
		{
			get
			{
				return this._ThicknessMax;
			}
			set
			{
				if ((this._ThicknessMax != value))
				{
					this.OnThicknessMaxChanging(value);
					this.SendPropertyChanging();
					this._ThicknessMax = value;
					this.SendPropertyChanged("ThicknessMax");
					this.OnThicknessMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThicknessMin", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ThicknessMin
		{
			get
			{
				return this._ThicknessMin;
			}
			set
			{
				if ((this._ThicknessMin != value))
				{
					this.OnThicknessMinChanging(value);
					this.SendPropertyChanging();
					this._ThicknessMin = value;
					this.SendPropertyChanged("ThicknessMin");
					this.OnThicknessMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizesMax", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SizesMax
		{
			get
			{
				return this._SizesMax;
			}
			set
			{
				if ((this._SizesMax != value))
				{
					this.OnSizesMaxChanging(value);
					this.SendPropertyChanging();
					this._SizesMax = value;
					this.SendPropertyChanged("SizesMax");
					this.OnSizesMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizesMin", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SizesMin
		{
			get
			{
				return this._SizesMin;
			}
			set
			{
				if ((this._SizesMin != value))
				{
					this.OnSizesMinChanging(value);
					this.SendPropertyChanging();
					this._SizesMin = value;
					this.SendPropertyChanged("SizesMin");
					this.OnSizesMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrintShow", DbType="Bit")]
		public System.Nullable<bool> IsPrintShow
		{
			get
			{
				return this._IsPrintShow;
			}
			set
			{
				if ((this._IsPrintShow != value))
				{
					this.OnIsPrintShowChanging(value);
					this.SendPropertyChanging();
					this._IsPrintShow = value;
					this.SendPropertyChanged("IsPrintShow");
					this.OnIsPrintShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Welder_WelderQualify_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="WelderId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.Welder_WelderQualify.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.Welder_WelderQualify.Add(this);
						this._WelderId = value.PersonId;
					}
					else
					{
						this._WelderId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WPQ_WPQList")]
	public partial class WPQ_WPQList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WPQId;
		
		private string _UnitId;
		
		private string _WPQCode;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _MaterialId1;
		
		private string _MaterialId2;
		
		private string _Specifications;
		
		private string _WeldingRod;
		
		private string _WeldingWire;
		
		private string _GrooveType;
		
		private string _PreTemperature;
		
		private string _WeldingPosition;
		
		private string _WeldingMethodId;
		
		private System.Nullable<decimal> _MinImpactDia;
		
		private System.Nullable<decimal> _MaxImpactDia;
		
		private System.Nullable<decimal> _MinImpactThickness;
		
		private System.Nullable<decimal> _MaxImpactThickness;
		
		private System.Nullable<decimal> _NoMinImpactThickness;
		
		private System.Nullable<decimal> _NoMaxImpactThickness;
		
		private System.Nullable<bool> _IsHotProess;
		
		private string _WPQStandard;
		
		private string _Remark;
		
		private string _JointType;
		
		private string _Motorization;
		
		private string _ProtectiveGas;
		
		private string _Stretching;
		
		private string _Bend;
		
		private string _ToAttack;
		
		private string _Others;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntityRef<Base_Material> _Base_Material;
		
		private EntityRef<Base_Material> _MaterialId2Base_Material;
		
		private EntityRef<Base_WeldingMethod> _Base_WeldingMethod;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWPQIdChanging(string value);
    partial void OnWPQIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnWPQCodeChanging(string value);
    partial void OnWPQCodeChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnMaterialId1Changing(string value);
    partial void OnMaterialId1Changed();
    partial void OnMaterialId2Changing(string value);
    partial void OnMaterialId2Changed();
    partial void OnSpecificationsChanging(string value);
    partial void OnSpecificationsChanged();
    partial void OnWeldingRodChanging(string value);
    partial void OnWeldingRodChanged();
    partial void OnWeldingWireChanging(string value);
    partial void OnWeldingWireChanged();
    partial void OnGrooveTypeChanging(string value);
    partial void OnGrooveTypeChanged();
    partial void OnPreTemperatureChanging(string value);
    partial void OnPreTemperatureChanged();
    partial void OnWeldingPositionChanging(string value);
    partial void OnWeldingPositionChanged();
    partial void OnWeldingMethodIdChanging(string value);
    partial void OnWeldingMethodIdChanged();
    partial void OnMinImpactDiaChanging(System.Nullable<decimal> value);
    partial void OnMinImpactDiaChanged();
    partial void OnMaxImpactDiaChanging(System.Nullable<decimal> value);
    partial void OnMaxImpactDiaChanged();
    partial void OnMinImpactThicknessChanging(System.Nullable<decimal> value);
    partial void OnMinImpactThicknessChanged();
    partial void OnMaxImpactThicknessChanging(System.Nullable<decimal> value);
    partial void OnMaxImpactThicknessChanged();
    partial void OnNoMinImpactThicknessChanging(System.Nullable<decimal> value);
    partial void OnNoMinImpactThicknessChanged();
    partial void OnNoMaxImpactThicknessChanging(System.Nullable<decimal> value);
    partial void OnNoMaxImpactThicknessChanged();
    partial void OnIsHotProessChanging(System.Nullable<bool> value);
    partial void OnIsHotProessChanged();
    partial void OnWPQStandardChanging(string value);
    partial void OnWPQStandardChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnJointTypeChanging(string value);
    partial void OnJointTypeChanged();
    partial void OnMotorizationChanging(string value);
    partial void OnMotorizationChanged();
    partial void OnProtectiveGasChanging(string value);
    partial void OnProtectiveGasChanged();
    partial void OnStretchingChanging(string value);
    partial void OnStretchingChanged();
    partial void OnBendChanging(string value);
    partial void OnBendChanged();
    partial void OnToAttackChanging(string value);
    partial void OnToAttackChanged();
    partial void OnOthersChanging(string value);
    partial void OnOthersChanged();
    #endregion
		
		public WPQ_WPQList()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._Base_Material = default(EntityRef<Base_Material>);
			this._MaterialId2Base_Material = default(EntityRef<Base_Material>);
			this._Base_WeldingMethod = default(EntityRef<Base_WeldingMethod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPQId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WPQId
		{
			get
			{
				return this._WPQId;
			}
			set
			{
				if ((this._WPQId != value))
				{
					this.OnWPQIdChanging(value);
					this.SendPropertyChanging();
					this._WPQId = value;
					this.SendPropertyChanged("WPQId");
					this.OnWPQIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPQCode", DbType="NVarChar(50)")]
		public string WPQCode
		{
			get
			{
				return this._WPQCode;
			}
			set
			{
				if ((this._WPQCode != value))
				{
					this.OnWPQCodeChanging(value);
					this.SendPropertyChanging();
					this._WPQCode = value;
					this.SendPropertyChanged("WPQCode");
					this.OnWPQCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId1", DbType="NVarChar(50)")]
		public string MaterialId1
		{
			get
			{
				return this._MaterialId1;
			}
			set
			{
				if ((this._MaterialId1 != value))
				{
					if (this._Base_Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialId1Changing(value);
					this.SendPropertyChanging();
					this._MaterialId1 = value;
					this.SendPropertyChanged("MaterialId1");
					this.OnMaterialId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId2", DbType="NVarChar(50)")]
		public string MaterialId2
		{
			get
			{
				return this._MaterialId2;
			}
			set
			{
				if ((this._MaterialId2 != value))
				{
					if (this._MaterialId2Base_Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialId2Changing(value);
					this.SendPropertyChanging();
					this._MaterialId2 = value;
					this.SendPropertyChanged("MaterialId2");
					this.OnMaterialId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specifications", DbType="NVarChar(100)")]
		public string Specifications
		{
			get
			{
				return this._Specifications;
			}
			set
			{
				if ((this._Specifications != value))
				{
					this.OnSpecificationsChanging(value);
					this.SendPropertyChanging();
					this._Specifications = value;
					this.SendPropertyChanged("Specifications");
					this.OnSpecificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingRod", DbType="NVarChar(100)")]
		public string WeldingRod
		{
			get
			{
				return this._WeldingRod;
			}
			set
			{
				if ((this._WeldingRod != value))
				{
					this.OnWeldingRodChanging(value);
					this.SendPropertyChanging();
					this._WeldingRod = value;
					this.SendPropertyChanged("WeldingRod");
					this.OnWeldingRodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingWire", DbType="NVarChar(100)")]
		public string WeldingWire
		{
			get
			{
				return this._WeldingWire;
			}
			set
			{
				if ((this._WeldingWire != value))
				{
					this.OnWeldingWireChanging(value);
					this.SendPropertyChanging();
					this._WeldingWire = value;
					this.SendPropertyChanged("WeldingWire");
					this.OnWeldingWireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveType", DbType="NVarChar(100)")]
		public string GrooveType
		{
			get
			{
				return this._GrooveType;
			}
			set
			{
				if ((this._GrooveType != value))
				{
					this.OnGrooveTypeChanging(value);
					this.SendPropertyChanging();
					this._GrooveType = value;
					this.SendPropertyChanged("GrooveType");
					this.OnGrooveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreTemperature", DbType="NVarChar(50)")]
		public string PreTemperature
		{
			get
			{
				return this._PreTemperature;
			}
			set
			{
				if ((this._PreTemperature != value))
				{
					this.OnPreTemperatureChanging(value);
					this.SendPropertyChanging();
					this._PreTemperature = value;
					this.SendPropertyChanged("PreTemperature");
					this.OnPreTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingPosition", DbType="NVarChar(50)")]
		public string WeldingPosition
		{
			get
			{
				return this._WeldingPosition;
			}
			set
			{
				if ((this._WeldingPosition != value))
				{
					this.OnWeldingPositionChanging(value);
					this.SendPropertyChanging();
					this._WeldingPosition = value;
					this.SendPropertyChanged("WeldingPosition");
					this.OnWeldingPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodId", DbType="NVarChar(50)")]
		public string WeldingMethodId
		{
			get
			{
				return this._WeldingMethodId;
			}
			set
			{
				if ((this._WeldingMethodId != value))
				{
					if (this._Base_WeldingMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldingMethodIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingMethodId = value;
					this.SendPropertyChanged("WeldingMethodId");
					this.OnWeldingMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinImpactDia", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> MinImpactDia
		{
			get
			{
				return this._MinImpactDia;
			}
			set
			{
				if ((this._MinImpactDia != value))
				{
					this.OnMinImpactDiaChanging(value);
					this.SendPropertyChanging();
					this._MinImpactDia = value;
					this.SendPropertyChanged("MinImpactDia");
					this.OnMinImpactDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxImpactDia", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> MaxImpactDia
		{
			get
			{
				return this._MaxImpactDia;
			}
			set
			{
				if ((this._MaxImpactDia != value))
				{
					this.OnMaxImpactDiaChanging(value);
					this.SendPropertyChanging();
					this._MaxImpactDia = value;
					this.SendPropertyChanged("MaxImpactDia");
					this.OnMaxImpactDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinImpactThickness", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> MinImpactThickness
		{
			get
			{
				return this._MinImpactThickness;
			}
			set
			{
				if ((this._MinImpactThickness != value))
				{
					this.OnMinImpactThicknessChanging(value);
					this.SendPropertyChanging();
					this._MinImpactThickness = value;
					this.SendPropertyChanged("MinImpactThickness");
					this.OnMinImpactThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxImpactThickness", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> MaxImpactThickness
		{
			get
			{
				return this._MaxImpactThickness;
			}
			set
			{
				if ((this._MaxImpactThickness != value))
				{
					this.OnMaxImpactThicknessChanging(value);
					this.SendPropertyChanging();
					this._MaxImpactThickness = value;
					this.SendPropertyChanged("MaxImpactThickness");
					this.OnMaxImpactThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoMinImpactThickness", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> NoMinImpactThickness
		{
			get
			{
				return this._NoMinImpactThickness;
			}
			set
			{
				if ((this._NoMinImpactThickness != value))
				{
					this.OnNoMinImpactThicknessChanging(value);
					this.SendPropertyChanging();
					this._NoMinImpactThickness = value;
					this.SendPropertyChanged("NoMinImpactThickness");
					this.OnNoMinImpactThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoMaxImpactThickness", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> NoMaxImpactThickness
		{
			get
			{
				return this._NoMaxImpactThickness;
			}
			set
			{
				if ((this._NoMaxImpactThickness != value))
				{
					this.OnNoMaxImpactThicknessChanging(value);
					this.SendPropertyChanging();
					this._NoMaxImpactThickness = value;
					this.SendPropertyChanged("NoMaxImpactThickness");
					this.OnNoMaxImpactThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHotProess", DbType="Bit")]
		public System.Nullable<bool> IsHotProess
		{
			get
			{
				return this._IsHotProess;
			}
			set
			{
				if ((this._IsHotProess != value))
				{
					this.OnIsHotProessChanging(value);
					this.SendPropertyChanging();
					this._IsHotProess = value;
					this.SendPropertyChanged("IsHotProess");
					this.OnIsHotProessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPQStandard", DbType="NVarChar(50)")]
		public string WPQStandard
		{
			get
			{
				return this._WPQStandard;
			}
			set
			{
				if ((this._WPQStandard != value))
				{
					this.OnWPQStandardChanging(value);
					this.SendPropertyChanging();
					this._WPQStandard = value;
					this.SendPropertyChanged("WPQStandard");
					this.OnWPQStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointType", DbType="NVarChar(50)")]
		public string JointType
		{
			get
			{
				return this._JointType;
			}
			set
			{
				if ((this._JointType != value))
				{
					this.OnJointTypeChanging(value);
					this.SendPropertyChanging();
					this._JointType = value;
					this.SendPropertyChanged("JointType");
					this.OnJointTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motorization", DbType="NVarChar(50)")]
		public string Motorization
		{
			get
			{
				return this._Motorization;
			}
			set
			{
				if ((this._Motorization != value))
				{
					this.OnMotorizationChanging(value);
					this.SendPropertyChanging();
					this._Motorization = value;
					this.SendPropertyChanged("Motorization");
					this.OnMotorizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtectiveGas", DbType="NVarChar(50)")]
		public string ProtectiveGas
		{
			get
			{
				return this._ProtectiveGas;
			}
			set
			{
				if ((this._ProtectiveGas != value))
				{
					this.OnProtectiveGasChanging(value);
					this.SendPropertyChanging();
					this._ProtectiveGas = value;
					this.SendPropertyChanged("ProtectiveGas");
					this.OnProtectiveGasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stretching", DbType="NVarChar(50)")]
		public string Stretching
		{
			get
			{
				return this._Stretching;
			}
			set
			{
				if ((this._Stretching != value))
				{
					this.OnStretchingChanging(value);
					this.SendPropertyChanging();
					this._Stretching = value;
					this.SendPropertyChanged("Stretching");
					this.OnStretchingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bend", DbType="NVarChar(50)")]
		public string Bend
		{
			get
			{
				return this._Bend;
			}
			set
			{
				if ((this._Bend != value))
				{
					this.OnBendChanging(value);
					this.SendPropertyChanging();
					this._Bend = value;
					this.SendPropertyChanged("Bend");
					this.OnBendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAttack", DbType="NVarChar(50)")]
		public string ToAttack
		{
			get
			{
				return this._ToAttack;
			}
			set
			{
				if ((this._ToAttack != value))
				{
					this.OnToAttackChanging(value);
					this.SendPropertyChanging();
					this._ToAttack = value;
					this.SendPropertyChanged("ToAttack");
					this.OnToAttackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Others", DbType="NVarChar(50)")]
		public string Others
		{
			get
			{
				return this._Others;
			}
			set
			{
				if ((this._Others != value))
				{
					this.OnOthersChanging(value);
					this.SendPropertyChanging();
					this._Others = value;
					this.SendPropertyChanged("Others");
					this.OnOthersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_WPQ_WPQList", Storage="_HJGL_WeldJoint", ThisKey="WPQId", OtherKey="WPQId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WPQ_WPQList_Base_Material1", Storage="_Base_Material", ThisKey="MaterialId1", OtherKey="MaterialId", IsForeignKey=true)]
		public Base_Material Base_Material
		{
			get
			{
				return this._Base_Material.Entity;
			}
			set
			{
				Base_Material previousValue = this._Base_Material.Entity;
				if (((previousValue != value) 
							|| (this._Base_Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Material.Entity = null;
						previousValue.WPQ_WPQList.Remove(this);
					}
					this._Base_Material.Entity = value;
					if ((value != null))
					{
						value.WPQ_WPQList.Add(this);
						this._MaterialId1 = value.MaterialId;
					}
					else
					{
						this._MaterialId1 = default(string);
					}
					this.SendPropertyChanged("Base_Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WPQ_WPQList_Base_Material2", Storage="_MaterialId2Base_Material", ThisKey="MaterialId2", OtherKey="MaterialId", IsForeignKey=true)]
		public Base_Material MaterialId2Base_Material
		{
			get
			{
				return this._MaterialId2Base_Material.Entity;
			}
			set
			{
				Base_Material previousValue = this._MaterialId2Base_Material.Entity;
				if (((previousValue != value) 
							|| (this._MaterialId2Base_Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaterialId2Base_Material.Entity = null;
						previousValue.WPQ_WPQList_Base_Material2.Remove(this);
					}
					this._MaterialId2Base_Material.Entity = value;
					if ((value != null))
					{
						value.WPQ_WPQList_Base_Material2.Add(this);
						this._MaterialId2 = value.MaterialId;
					}
					else
					{
						this._MaterialId2 = default(string);
					}
					this.SendPropertyChanged("MaterialId2Base_Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WPQ_WPQList_Base_WeldingMethod", Storage="_Base_WeldingMethod", ThisKey="WeldingMethodId", OtherKey="WeldingMethodId", IsForeignKey=true)]
		public Base_WeldingMethod Base_WeldingMethod
		{
			get
			{
				return this._Base_WeldingMethod.Entity;
			}
			set
			{
				Base_WeldingMethod previousValue = this._Base_WeldingMethod.Entity;
				if (((previousValue != value) 
							|| (this._Base_WeldingMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WeldingMethod.Entity = null;
						previousValue.WPQ_WPQList.Remove(this);
					}
					this._Base_WeldingMethod.Entity = value;
					if ((value != null))
					{
						value.WPQ_WPQList.Add(this);
						this._WeldingMethodId = value.WeldingMethodId;
					}
					else
					{
						this._WeldingMethodId = default(string);
					}
					this.SendPropertyChanged("Base_WeldingMethod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.WPQ_WPQList = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.WPQ_WPQList = null;
		}
	}
}
#pragma warning restore 1591
