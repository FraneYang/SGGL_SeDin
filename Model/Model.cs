#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class SGGLDB : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertActionPlan_ActionPlanList(ActionPlan_ActionPlanList instance);
    partial void UpdateActionPlan_ActionPlanList(ActionPlan_ActionPlanList instance);
    partial void DeleteActionPlan_ActionPlanList(ActionPlan_ActionPlanList instance);
    partial void InsertActionPlan_ManagerRule(ActionPlan_ManagerRule instance);
    partial void UpdateActionPlan_ManagerRule(ActionPlan_ManagerRule instance);
    partial void DeleteActionPlan_ManagerRule(ActionPlan_ManagerRule instance);
    partial void InsertAttachFile(AttachFile instance);
    partial void UpdateAttachFile(AttachFile instance);
    partial void DeleteAttachFile(AttachFile instance);
    partial void InsertBase_AccidentType(Base_AccidentType instance);
    partial void UpdateBase_AccidentType(Base_AccidentType instance);
    partial void DeleteBase_AccidentType(Base_AccidentType instance);
    partial void InsertBase_Certificate(Base_Certificate instance);
    partial void UpdateBase_Certificate(Base_Certificate instance);
    partial void DeleteBase_Certificate(Base_Certificate instance);
    partial void InsertBase_CNProfessional(Base_CNProfessional instance);
    partial void UpdateBase_CNProfessional(Base_CNProfessional instance);
    partial void DeleteBase_CNProfessional(Base_CNProfessional instance);
    partial void InsertBase_Components(Base_Components instance);
    partial void UpdateBase_Components(Base_Components instance);
    partial void DeleteBase_Components(Base_Components instance);
    partial void InsertBase_Consumables(Base_Consumables instance);
    partial void UpdateBase_Consumables(Base_Consumables instance);
    partial void DeleteBase_Consumables(Base_Consumables instance);
    partial void InsertBase_CostType(Base_CostType instance);
    partial void UpdateBase_CostType(Base_CostType instance);
    partial void DeleteBase_CostType(Base_CostType instance);
    partial void InsertBase_Defect(Base_Defect instance);
    partial void UpdateBase_Defect(Base_Defect instance);
    partial void DeleteBase_Defect(Base_Defect instance);
    partial void InsertBase_Depart(Base_Depart instance);
    partial void UpdateBase_Depart(Base_Depart instance);
    partial void DeleteBase_Depart(Base_Depart instance);
    partial void InsertBase_DesignProfessional(Base_DesignProfessional instance);
    partial void UpdateBase_DesignProfessional(Base_DesignProfessional instance);
    partial void DeleteBase_DesignProfessional(Base_DesignProfessional instance);
    partial void InsertBase_DetectionRate(Base_DetectionRate instance);
    partial void UpdateBase_DetectionRate(Base_DetectionRate instance);
    partial void DeleteBase_DetectionRate(Base_DetectionRate instance);
    partial void InsertBase_DetectionType(Base_DetectionType instance);
    partial void UpdateBase_DetectionType(Base_DetectionType instance);
    partial void DeleteBase_DetectionType(Base_DetectionType instance);
    partial void InsertBase_DNCompare(Base_DNCompare instance);
    partial void UpdateBase_DNCompare(Base_DNCompare instance);
    partial void DeleteBase_DNCompare(Base_DNCompare instance);
    partial void InsertBase_EmergencyType(Base_EmergencyType instance);
    partial void UpdateBase_EmergencyType(Base_EmergencyType instance);
    partial void DeleteBase_EmergencyType(Base_EmergencyType instance);
    partial void InsertBase_GrooveType(Base_GrooveType instance);
    partial void UpdateBase_GrooveType(Base_GrooveType instance);
    partial void DeleteBase_GrooveType(Base_GrooveType instance);
    partial void InsertBase_HSSEStandardListType(Base_HSSEStandardListType instance);
    partial void UpdateBase_HSSEStandardListType(Base_HSSEStandardListType instance);
    partial void DeleteBase_HSSEStandardListType(Base_HSSEStandardListType instance);
    partial void InsertBase_LawsRegulationsType(Base_LawsRegulationsType instance);
    partial void UpdateBase_LawsRegulationsType(Base_LawsRegulationsType instance);
    partial void DeleteBase_LawsRegulationsType(Base_LawsRegulationsType instance);
    partial void InsertBase_LicenseType(Base_LicenseType instance);
    partial void UpdateBase_LicenseType(Base_LicenseType instance);
    partial void DeleteBase_LicenseType(Base_LicenseType instance);
    partial void InsertBase_ManageRuleType(Base_ManageRuleType instance);
    partial void UpdateBase_ManageRuleType(Base_ManageRuleType instance);
    partial void DeleteBase_ManageRuleType(Base_ManageRuleType instance);
    partial void InsertBase_Material(Base_Material instance);
    partial void UpdateBase_Material(Base_Material instance);
    partial void DeleteBase_Material(Base_Material instance);
    partial void InsertBase_Medium(Base_Medium instance);
    partial void UpdateBase_Medium(Base_Medium instance);
    partial void DeleteBase_Medium(Base_Medium instance);
    partial void InsertBase_PictureType(Base_PictureType instance);
    partial void UpdateBase_PictureType(Base_PictureType instance);
    partial void DeleteBase_PictureType(Base_PictureType instance);
    partial void InsertBase_PipingClass(Base_PipingClass instance);
    partial void UpdateBase_PipingClass(Base_PipingClass instance);
    partial void DeleteBase_PipingClass(Base_PipingClass instance);
    partial void InsertBase_Position(Base_Position instance);
    partial void UpdateBase_Position(Base_Position instance);
    partial void DeleteBase_Position(Base_Position instance);
    partial void InsertBase_PostTitle(Base_PostTitle instance);
    partial void UpdateBase_PostTitle(Base_PostTitle instance);
    partial void DeleteBase_PostTitle(Base_PostTitle instance);
    partial void InsertBase_Pressure(Base_Pressure instance);
    partial void UpdateBase_Pressure(Base_Pressure instance);
    partial void DeleteBase_Pressure(Base_Pressure instance);
    partial void InsertBase_Project(Base_Project instance);
    partial void UpdateBase_Project(Base_Project instance);
    partial void DeleteBase_Project(Base_Project instance);
    partial void InsertBase_QualityQuestionType(Base_QualityQuestionType instance);
    partial void UpdateBase_QualityQuestionType(Base_QualityQuestionType instance);
    partial void DeleteBase_QualityQuestionType(Base_QualityQuestionType instance);
    partial void InsertBase_RulesRegulationsType(Base_RulesRegulationsType instance);
    partial void UpdateBase_RulesRegulationsType(Base_RulesRegulationsType instance);
    partial void DeleteBase_RulesRegulationsType(Base_RulesRegulationsType instance);
    partial void InsertBase_SafetyMeasures(Base_SafetyMeasures instance);
    partial void UpdateBase_SafetyMeasures(Base_SafetyMeasures instance);
    partial void DeleteBase_SafetyMeasures(Base_SafetyMeasures instance);
    partial void InsertBase_SolutionTempleteType(Base_SolutionTempleteType instance);
    partial void UpdateBase_SolutionTempleteType(Base_SolutionTempleteType instance);
    partial void DeleteBase_SolutionTempleteType(Base_SolutionTempleteType instance);
    partial void InsertBase_SpecialEquipment(Base_SpecialEquipment instance);
    partial void UpdateBase_SpecialEquipment(Base_SpecialEquipment instance);
    partial void DeleteBase_SpecialEquipment(Base_SpecialEquipment instance);
    partial void InsertBase_SpecialSchemeType(Base_SpecialSchemeType instance);
    partial void UpdateBase_SpecialSchemeType(Base_SpecialSchemeType instance);
    partial void DeleteBase_SpecialSchemeType(Base_SpecialSchemeType instance);
    partial void InsertBase_TrainLevel(Base_TrainLevel instance);
    partial void UpdateBase_TrainLevel(Base_TrainLevel instance);
    partial void DeleteBase_TrainLevel(Base_TrainLevel instance);
    partial void InsertBase_TrainType(Base_TrainType instance);
    partial void UpdateBase_TrainType(Base_TrainType instance);
    partial void DeleteBase_TrainType(Base_TrainType instance);
    partial void InsertBase_TrainTypeItem(Base_TrainTypeItem instance);
    partial void UpdateBase_TrainTypeItem(Base_TrainTypeItem instance);
    partial void DeleteBase_TrainTypeItem(Base_TrainTypeItem instance);
    partial void InsertBase_Unit(Base_Unit instance);
    partial void UpdateBase_Unit(Base_Unit instance);
    partial void DeleteBase_Unit(Base_Unit instance);
    partial void InsertBase_UnitType(Base_UnitType instance);
    partial void UpdateBase_UnitType(Base_UnitType instance);
    partial void DeleteBase_UnitType(Base_UnitType instance);
    partial void InsertBase_WeldingLocation(Base_WeldingLocation instance);
    partial void UpdateBase_WeldingLocation(Base_WeldingLocation instance);
    partial void DeleteBase_WeldingLocation(Base_WeldingLocation instance);
    partial void InsertBase_WeldingMethod(Base_WeldingMethod instance);
    partial void UpdateBase_WeldingMethod(Base_WeldingMethod instance);
    partial void DeleteBase_WeldingMethod(Base_WeldingMethod instance);
    partial void InsertBase_WeldType(Base_WeldType instance);
    partial void UpdateBase_WeldType(Base_WeldType instance);
    partial void DeleteBase_WeldType(Base_WeldType instance);
    partial void InsertBase_WorkPost(Base_WorkPost instance);
    partial void UpdateBase_WorkPost(Base_WorkPost instance);
    partial void DeleteBase_WorkPost(Base_WorkPost instance);
    partial void InsertBase_WorkStage(Base_WorkStage instance);
    partial void UpdateBase_WorkStage(Base_WorkStage instance);
    partial void DeleteBase_WorkStage(Base_WorkStage instance);
    partial void InsertCheck_CheckControl(Check_CheckControl instance);
    partial void UpdateCheck_CheckControl(Check_CheckControl instance);
    partial void DeleteCheck_CheckControl(Check_CheckControl instance);
    partial void InsertCheck_CheckControlApprove(Check_CheckControlApprove instance);
    partial void UpdateCheck_CheckControlApprove(Check_CheckControlApprove instance);
    partial void DeleteCheck_CheckControlApprove(Check_CheckControlApprove instance);
    partial void InsertCheck_CheckEquipment(Check_CheckEquipment instance);
    partial void UpdateCheck_CheckEquipment(Check_CheckEquipment instance);
    partial void DeleteCheck_CheckEquipment(Check_CheckEquipment instance);
    partial void InsertCheck_CheckEquipmentApprove(Check_CheckEquipmentApprove instance);
    partial void UpdateCheck_CheckEquipmentApprove(Check_CheckEquipmentApprove instance);
    partial void DeleteCheck_CheckEquipmentApprove(Check_CheckEquipmentApprove instance);
    partial void InsertCheck_CheckMonth(Check_CheckMonth instance);
    partial void UpdateCheck_CheckMonth(Check_CheckMonth instance);
    partial void DeleteCheck_CheckMonth(Check_CheckMonth instance);
    partial void InsertCheck_Design(Check_Design instance);
    partial void UpdateCheck_Design(Check_Design instance);
    partial void DeleteCheck_Design(Check_Design instance);
    partial void InsertCheck_DesignApprove(Check_DesignApprove instance);
    partial void UpdateCheck_DesignApprove(Check_DesignApprove instance);
    partial void DeleteCheck_DesignApprove(Check_DesignApprove instance);
    partial void InsertCheck_Draw(Check_Draw instance);
    partial void UpdateCheck_Draw(Check_Draw instance);
    partial void DeleteCheck_Draw(Check_Draw instance);
    partial void InsertCheck_JointCheck(Check_JointCheck instance);
    partial void UpdateCheck_JointCheck(Check_JointCheck instance);
    partial void DeleteCheck_JointCheck(Check_JointCheck instance);
    partial void InsertCheck_JointCheckApprove(Check_JointCheckApprove instance);
    partial void UpdateCheck_JointCheckApprove(Check_JointCheckApprove instance);
    partial void DeleteCheck_JointCheckApprove(Check_JointCheckApprove instance);
    partial void InsertCheck_JointCheckDetail(Check_JointCheckDetail instance);
    partial void UpdateCheck_JointCheckDetail(Check_JointCheckDetail instance);
    partial void DeleteCheck_JointCheckDetail(Check_JointCheckDetail instance);
    partial void InsertCheck_MonthSpotCheckDetail(Check_MonthSpotCheckDetail instance);
    partial void UpdateCheck_MonthSpotCheckDetail(Check_MonthSpotCheckDetail instance);
    partial void DeleteCheck_MonthSpotCheckDetail(Check_MonthSpotCheckDetail instance);
    partial void InsertCheck_SpecialEquipmentDetail(Check_SpecialEquipmentDetail instance);
    partial void UpdateCheck_SpecialEquipmentDetail(Check_SpecialEquipmentDetail instance);
    partial void DeleteCheck_SpecialEquipmentDetail(Check_SpecialEquipmentDetail instance);
    partial void InsertCheck_SpotCheck(Check_SpotCheck instance);
    partial void UpdateCheck_SpotCheck(Check_SpotCheck instance);
    partial void DeleteCheck_SpotCheck(Check_SpotCheck instance);
    partial void InsertCheck_SpotCheckApprove(Check_SpotCheckApprove instance);
    partial void UpdateCheck_SpotCheckApprove(Check_SpotCheckApprove instance);
    partial void DeleteCheck_SpotCheckApprove(Check_SpotCheckApprove instance);
    partial void InsertCheck_SpotCheckDetail(Check_SpotCheckDetail instance);
    partial void UpdateCheck_SpotCheckDetail(Check_SpotCheckDetail instance);
    partial void DeleteCheck_SpotCheckDetail(Check_SpotCheckDetail instance);
    partial void InsertCheck_TechnicalContactList(Check_TechnicalContactList instance);
    partial void UpdateCheck_TechnicalContactList(Check_TechnicalContactList instance);
    partial void DeleteCheck_TechnicalContactList(Check_TechnicalContactList instance);
    partial void InsertCheck_TechnicalContactListApprove(Check_TechnicalContactListApprove instance);
    partial void UpdateCheck_TechnicalContactListApprove(Check_TechnicalContactListApprove instance);
    partial void DeleteCheck_TechnicalContactListApprove(Check_TechnicalContactListApprove instance);
    partial void InsertEduTrain_AccidentCase(EduTrain_AccidentCase instance);
    partial void UpdateEduTrain_AccidentCase(EduTrain_AccidentCase instance);
    partial void DeleteEduTrain_AccidentCase(EduTrain_AccidentCase instance);
    partial void InsertEduTrain_AccidentCaseItem(EduTrain_AccidentCaseItem instance);
    partial void UpdateEduTrain_AccidentCaseItem(EduTrain_AccidentCaseItem instance);
    partial void DeleteEduTrain_AccidentCaseItem(EduTrain_AccidentCaseItem instance);
    partial void InsertEduTrain_TrainRecord(EduTrain_TrainRecord instance);
    partial void UpdateEduTrain_TrainRecord(EduTrain_TrainRecord instance);
    partial void DeleteEduTrain_TrainRecord(EduTrain_TrainRecord instance);
    partial void InsertEduTrain_TrainRecordDetail(EduTrain_TrainRecordDetail instance);
    partial void UpdateEduTrain_TrainRecordDetail(EduTrain_TrainRecordDetail instance);
    partial void DeleteEduTrain_TrainRecordDetail(EduTrain_TrainRecordDetail instance);
    partial void InsertEnvironmental_EIAReport(Environmental_EIAReport instance);
    partial void UpdateEnvironmental_EIAReport(Environmental_EIAReport instance);
    partial void DeleteEnvironmental_EIAReport(Environmental_EIAReport instance);
    partial void InsertEnvironmental_EnvironmentalEmergencyPlan(Environmental_EnvironmentalEmergencyPlan instance);
    partial void UpdateEnvironmental_EnvironmentalEmergencyPlan(Environmental_EnvironmentalEmergencyPlan instance);
    partial void DeleteEnvironmental_EnvironmentalEmergencyPlan(Environmental_EnvironmentalEmergencyPlan instance);
    partial void InsertEnvironmental_EnvironmentalMonitoring(Environmental_EnvironmentalMonitoring instance);
    partial void UpdateEnvironmental_EnvironmentalMonitoring(Environmental_EnvironmentalMonitoring instance);
    partial void DeleteEnvironmental_EnvironmentalMonitoring(Environmental_EnvironmentalMonitoring instance);
    partial void InsertEnvironmental_UnexpectedEnvironmental(Environmental_UnexpectedEnvironmental instance);
    partial void UpdateEnvironmental_UnexpectedEnvironmental(Environmental_UnexpectedEnvironmental instance);
    partial void DeleteEnvironmental_UnexpectedEnvironmental(Environmental_UnexpectedEnvironmental instance);
    partial void InsertHazard_EnvironmentalRiskItem(Hazard_EnvironmentalRiskItem instance);
    partial void UpdateHazard_EnvironmentalRiskItem(Hazard_EnvironmentalRiskItem instance);
    partial void DeleteHazard_EnvironmentalRiskItem(Hazard_EnvironmentalRiskItem instance);
    partial void InsertHazard_EnvironmentalRiskList(Hazard_EnvironmentalRiskList instance);
    partial void UpdateHazard_EnvironmentalRiskList(Hazard_EnvironmentalRiskList instance);
    partial void DeleteHazard_EnvironmentalRiskList(Hazard_EnvironmentalRiskList instance);
    partial void InsertHazard_HazardList(Hazard_HazardList instance);
    partial void UpdateHazard_HazardList(Hazard_HazardList instance);
    partial void DeleteHazard_HazardList(Hazard_HazardList instance);
    partial void InsertHazard_HazardSelectedItem(Hazard_HazardSelectedItem instance);
    partial void UpdateHazard_HazardSelectedItem(Hazard_HazardSelectedItem instance);
    partial void DeleteHazard_HazardSelectedItem(Hazard_HazardSelectedItem instance);
    partial void InsertHJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust instance);
    partial void UpdateHJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust instance);
    partial void DeleteHJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust instance);
    partial void InsertHJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem instance);
    partial void UpdateHJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem instance);
    partial void DeleteHJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem instance);
    partial void InsertHJGL_Batch_NDE(HJGL_Batch_NDE instance);
    partial void UpdateHJGL_Batch_NDE(HJGL_Batch_NDE instance);
    partial void DeleteHJGL_Batch_NDE(HJGL_Batch_NDE instance);
    partial void InsertHJGL_Batch_NDEItem(HJGL_Batch_NDEItem instance);
    partial void UpdateHJGL_Batch_NDEItem(HJGL_Batch_NDEItem instance);
    partial void DeleteHJGL_Batch_NDEItem(HJGL_Batch_NDEItem instance);
    partial void InsertHJGL_Batch_PointBatch(HJGL_Batch_PointBatch instance);
    partial void UpdateHJGL_Batch_PointBatch(HJGL_Batch_PointBatch instance);
    partial void DeleteHJGL_Batch_PointBatch(HJGL_Batch_PointBatch instance);
    partial void InsertHJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem instance);
    partial void UpdateHJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem instance);
    partial void DeleteHJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem instance);
    partial void InsertHJGL_Hard_Report(HJGL_Hard_Report instance);
    partial void UpdateHJGL_Hard_Report(HJGL_Hard_Report instance);
    partial void DeleteHJGL_Hard_Report(HJGL_Hard_Report instance);
    partial void InsertHJGL_Hard_Trust(HJGL_Hard_Trust instance);
    partial void UpdateHJGL_Hard_Trust(HJGL_Hard_Trust instance);
    partial void DeleteHJGL_Hard_Trust(HJGL_Hard_Trust instance);
    partial void InsertHJGL_Hard_TrustItem(HJGL_Hard_TrustItem instance);
    partial void UpdateHJGL_Hard_TrustItem(HJGL_Hard_TrustItem instance);
    partial void DeleteHJGL_Hard_TrustItem(HJGL_Hard_TrustItem instance);
    partial void InsertHJGL_HotProess_Report(HJGL_HotProess_Report instance);
    partial void UpdateHJGL_HotProess_Report(HJGL_HotProess_Report instance);
    partial void DeleteHJGL_HotProess_Report(HJGL_HotProess_Report instance);
    partial void InsertHJGL_HotProess_Trust(HJGL_HotProess_Trust instance);
    partial void UpdateHJGL_HotProess_Trust(HJGL_HotProess_Trust instance);
    partial void DeleteHJGL_HotProess_Trust(HJGL_HotProess_Trust instance);
    partial void InsertHJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem instance);
    partial void UpdateHJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem instance);
    partial void DeleteHJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem instance);
    partial void InsertHJGL_Pipeline(HJGL_Pipeline instance);
    partial void UpdateHJGL_Pipeline(HJGL_Pipeline instance);
    partial void DeleteHJGL_Pipeline(HJGL_Pipeline instance);
    partial void InsertHJGL_PreWeldingDaily(HJGL_PreWeldingDaily instance);
    partial void UpdateHJGL_PreWeldingDaily(HJGL_PreWeldingDaily instance);
    partial void DeleteHJGL_PreWeldingDaily(HJGL_PreWeldingDaily instance);
    partial void InsertHJGL_RepairRecord(HJGL_RepairRecord instance);
    partial void UpdateHJGL_RepairRecord(HJGL_RepairRecord instance);
    partial void DeleteHJGL_RepairRecord(HJGL_RepairRecord instance);
    partial void InsertHJGL_WeldingDaily(HJGL_WeldingDaily instance);
    partial void UpdateHJGL_WeldingDaily(HJGL_WeldingDaily instance);
    partial void DeleteHJGL_WeldingDaily(HJGL_WeldingDaily instance);
    partial void InsertHJGL_WeldJoint(HJGL_WeldJoint instance);
    partial void UpdateHJGL_WeldJoint(HJGL_WeldJoint instance);
    partial void DeleteHJGL_WeldJoint(HJGL_WeldJoint instance);
    partial void InsertHSSESystem_HSSEMainDuty(HSSESystem_HSSEMainDuty instance);
    partial void UpdateHSSESystem_HSSEMainDuty(HSSESystem_HSSEMainDuty instance);
    partial void DeleteHSSESystem_HSSEMainDuty(HSSESystem_HSSEMainDuty instance);
    partial void InsertInformationProject_ConstructionStandardIdentify(InformationProject_ConstructionStandardIdentify instance);
    partial void UpdateInformationProject_ConstructionStandardIdentify(InformationProject_ConstructionStandardIdentify instance);
    partial void DeleteInformationProject_ConstructionStandardIdentify(InformationProject_ConstructionStandardIdentify instance);
    partial void InsertInformationProject_ConstructionStandardSelectedItem(InformationProject_ConstructionStandardSelectedItem instance);
    partial void UpdateInformationProject_ConstructionStandardSelectedItem(InformationProject_ConstructionStandardSelectedItem instance);
    partial void DeleteInformationProject_ConstructionStandardSelectedItem(InformationProject_ConstructionStandardSelectedItem instance);
    partial void InsertLaw_HSSEStandardsList(Law_HSSEStandardsList instance);
    partial void UpdateLaw_HSSEStandardsList(Law_HSSEStandardsList instance);
    partial void DeleteLaw_HSSEStandardsList(Law_HSSEStandardsList instance);
    partial void InsertLaw_LawRegulationIdentify(Law_LawRegulationIdentify instance);
    partial void UpdateLaw_LawRegulationIdentify(Law_LawRegulationIdentify instance);
    partial void DeleteLaw_LawRegulationIdentify(Law_LawRegulationIdentify instance);
    partial void InsertLaw_LawRegulationList(Law_LawRegulationList instance);
    partial void UpdateLaw_LawRegulationList(Law_LawRegulationList instance);
    partial void DeleteLaw_LawRegulationList(Law_LawRegulationList instance);
    partial void InsertLaw_LawRegulationSelectedItem(Law_LawRegulationSelectedItem instance);
    partial void UpdateLaw_LawRegulationSelectedItem(Law_LawRegulationSelectedItem instance);
    partial void DeleteLaw_LawRegulationSelectedItem(Law_LawRegulationSelectedItem instance);
    partial void InsertLaw_ManageRule(Law_ManageRule instance);
    partial void UpdateLaw_ManageRule(Law_ManageRule instance);
    partial void DeleteLaw_ManageRule(Law_ManageRule instance);
    partial void InsertLaw_RulesRegulations(Law_RulesRegulations instance);
    partial void UpdateLaw_RulesRegulations(Law_RulesRegulations instance);
    partial void DeleteLaw_RulesRegulations(Law_RulesRegulations instance);
    partial void InsertOccupationHealth_HazardDetection(OccupationHealth_HazardDetection instance);
    partial void UpdateOccupationHealth_HazardDetection(OccupationHealth_HazardDetection instance);
    partial void DeleteOccupationHealth_HazardDetection(OccupationHealth_HazardDetection instance);
    partial void InsertOccupationHealth_OccupationalDiseaseAccident(OccupationHealth_OccupationalDiseaseAccident instance);
    partial void UpdateOccupationHealth_OccupationalDiseaseAccident(OccupationHealth_OccupationalDiseaseAccident instance);
    partial void DeleteOccupationHealth_OccupationalDiseaseAccident(OccupationHealth_OccupationalDiseaseAccident instance);
    partial void InsertOccupationHealth_PhysicalExamination(OccupationHealth_PhysicalExamination instance);
    partial void UpdateOccupationHealth_PhysicalExamination(OccupationHealth_PhysicalExamination instance);
    partial void DeleteOccupationHealth_PhysicalExamination(OccupationHealth_PhysicalExamination instance);
    partial void InsertProject_FileCabinet(Project_FileCabinet instance);
    partial void UpdateProject_FileCabinet(Project_FileCabinet instance);
    partial void DeleteProject_FileCabinet(Project_FileCabinet instance);
    partial void InsertProject_ProjectUnit(Project_ProjectUnit instance);
    partial void UpdateProject_ProjectUnit(Project_ProjectUnit instance);
    partial void DeleteProject_ProjectUnit(Project_ProjectUnit instance);
    partial void InsertProject_ProjectUser(Project_ProjectUser instance);
    partial void UpdateProject_ProjectUser(Project_ProjectUser instance);
    partial void DeleteProject_ProjectUser(Project_ProjectUser instance);
    partial void InsertProject_Sys_Set(Project_Sys_Set instance);
    partial void UpdateProject_Sys_Set(Project_Sys_Set instance);
    partial void DeleteProject_Sys_Set(Project_Sys_Set instance);
    partial void InsertProjectData_FlowOperate(ProjectData_FlowOperate instance);
    partial void UpdateProjectData_FlowOperate(ProjectData_FlowOperate instance);
    partial void DeleteProjectData_FlowOperate(ProjectData_FlowOperate instance);
    partial void InsertProjectData_MainItem(ProjectData_MainItem instance);
    partial void UpdateProjectData_MainItem(ProjectData_MainItem instance);
    partial void DeleteProjectData_MainItem(ProjectData_MainItem instance);
    partial void InsertProjectData_TeamGroup(ProjectData_TeamGroup instance);
    partial void UpdateProjectData_TeamGroup(ProjectData_TeamGroup instance);
    partial void DeleteProjectData_TeamGroup(ProjectData_TeamGroup instance);
    partial void InsertPTP_AItemEndCheck(PTP_AItemEndCheck instance);
    partial void UpdatePTP_AItemEndCheck(PTP_AItemEndCheck instance);
    partial void DeletePTP_AItemEndCheck(PTP_AItemEndCheck instance);
    partial void InsertPTP_BItemEndCheck(PTP_BItemEndCheck instance);
    partial void UpdatePTP_BItemEndCheck(PTP_BItemEndCheck instance);
    partial void DeletePTP_BItemEndCheck(PTP_BItemEndCheck instance);
    partial void InsertPTP_PipelineList(PTP_PipelineList instance);
    partial void UpdatePTP_PipelineList(PTP_PipelineList instance);
    partial void DeletePTP_PipelineList(PTP_PipelineList instance);
    partial void InsertPTP_TestPackage(PTP_TestPackage instance);
    partial void UpdatePTP_TestPackage(PTP_TestPackage instance);
    partial void DeletePTP_TestPackage(PTP_TestPackage instance);
    partial void InsertQualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality instance);
    partial void UpdateQualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality instance);
    partial void DeleteQualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality instance);
    partial void InsertQualityAudit_PersonQuality(QualityAudit_PersonQuality instance);
    partial void UpdateQualityAudit_PersonQuality(QualityAudit_PersonQuality instance);
    partial void DeleteQualityAudit_PersonQuality(QualityAudit_PersonQuality instance);
    partial void InsertQualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality instance);
    partial void UpdateQualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality instance);
    partial void DeleteQualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality instance);
    partial void InsertQualityAudit_SubUnitQuality(QualityAudit_SubUnitQuality instance);
    partial void UpdateQualityAudit_SubUnitQuality(QualityAudit_SubUnitQuality instance);
    partial void DeleteQualityAudit_SubUnitQuality(QualityAudit_SubUnitQuality instance);
    partial void InsertQualityAudit_SubUnitQualityAuditDetail(QualityAudit_SubUnitQualityAuditDetail instance);
    partial void UpdateQualityAudit_SubUnitQualityAuditDetail(QualityAudit_SubUnitQualityAuditDetail instance);
    partial void DeleteQualityAudit_SubUnitQualityAuditDetail(QualityAudit_SubUnitQualityAuditDetail instance);
    partial void InsertResources_SignManage(Resources_SignManage instance);
    partial void UpdateResources_SignManage(Resources_SignManage instance);
    partial void DeleteResources_SignManage(Resources_SignManage instance);
    partial void InsertSecuritySystem_SafetyOrganization(SecuritySystem_SafetyOrganization instance);
    partial void UpdateSecuritySystem_SafetyOrganization(SecuritySystem_SafetyOrganization instance);
    partial void DeleteSecuritySystem_SafetyOrganization(SecuritySystem_SafetyOrganization instance);
    partial void InsertSitePerson_Checking(SitePerson_Checking instance);
    partial void UpdateSitePerson_Checking(SitePerson_Checking instance);
    partial void DeleteSitePerson_Checking(SitePerson_Checking instance);
    partial void InsertSitePerson_DayReport(SitePerson_DayReport instance);
    partial void UpdateSitePerson_DayReport(SitePerson_DayReport instance);
    partial void DeleteSitePerson_DayReport(SitePerson_DayReport instance);
    partial void InsertSitePerson_DayReportDetail(SitePerson_DayReportDetail instance);
    partial void UpdateSitePerson_DayReportDetail(SitePerson_DayReportDetail instance);
    partial void DeleteSitePerson_DayReportDetail(SitePerson_DayReportDetail instance);
    partial void InsertSitePerson_DayReportUnitDetail(SitePerson_DayReportUnitDetail instance);
    partial void UpdateSitePerson_DayReportUnitDetail(SitePerson_DayReportUnitDetail instance);
    partial void DeleteSitePerson_DayReportUnitDetail(SitePerson_DayReportUnitDetail instance);
    partial void InsertSitePerson_MonthReport(SitePerson_MonthReport instance);
    partial void UpdateSitePerson_MonthReport(SitePerson_MonthReport instance);
    partial void DeleteSitePerson_MonthReport(SitePerson_MonthReport instance);
    partial void InsertSitePerson_MonthReportDetail(SitePerson_MonthReportDetail instance);
    partial void UpdateSitePerson_MonthReportDetail(SitePerson_MonthReportDetail instance);
    partial void DeleteSitePerson_MonthReportDetail(SitePerson_MonthReportDetail instance);
    partial void InsertSitePerson_MonthReportUnitDetail(SitePerson_MonthReportUnitDetail instance);
    partial void UpdateSitePerson_MonthReportUnitDetail(SitePerson_MonthReportUnitDetail instance);
    partial void DeleteSitePerson_MonthReportUnitDetail(SitePerson_MonthReportUnitDetail instance);
    partial void InsertSitePerson_Person(SitePerson_Person instance);
    partial void UpdateSitePerson_Person(SitePerson_Person instance);
    partial void DeleteSitePerson_Person(SitePerson_Person instance);
    partial void InsertSitePerson_PersonInOut(SitePerson_PersonInOut instance);
    partial void UpdateSitePerson_PersonInOut(SitePerson_PersonInOut instance);
    partial void DeleteSitePerson_PersonInOut(SitePerson_PersonInOut instance);
    partial void InsertSitePerson_PersonInOutNumber(SitePerson_PersonInOutNumber instance);
    partial void UpdateSitePerson_PersonInOutNumber(SitePerson_PersonInOutNumber instance);
    partial void DeleteSitePerson_PersonInOutNumber(SitePerson_PersonInOutNumber instance);
    partial void InsertSolution_ConstructSolution(Solution_ConstructSolution instance);
    partial void UpdateSolution_ConstructSolution(Solution_ConstructSolution instance);
    partial void DeleteSolution_ConstructSolution(Solution_ConstructSolution instance);
    partial void InsertSolution_CQMSConstructSolution(Solution_CQMSConstructSolution instance);
    partial void UpdateSolution_CQMSConstructSolution(Solution_CQMSConstructSolution instance);
    partial void DeleteSolution_CQMSConstructSolution(Solution_CQMSConstructSolution instance);
    partial void InsertSolution_CQMSConstructSolutionApprove(Solution_CQMSConstructSolutionApprove instance);
    partial void UpdateSolution_CQMSConstructSolutionApprove(Solution_CQMSConstructSolutionApprove instance);
    partial void DeleteSolution_CQMSConstructSolutionApprove(Solution_CQMSConstructSolutionApprove instance);
    partial void InsertSolution_ExpertArgument(Solution_ExpertArgument instance);
    partial void UpdateSolution_ExpertArgument(Solution_ExpertArgument instance);
    partial void DeleteSolution_ExpertArgument(Solution_ExpertArgument instance);
    partial void InsertSolution_LargerHazard(Solution_LargerHazard instance);
    partial void UpdateSolution_LargerHazard(Solution_LargerHazard instance);
    partial void DeleteSolution_LargerHazard(Solution_LargerHazard instance);
    partial void InsertSolution_SolutionTemplate(Solution_SolutionTemplate instance);
    partial void UpdateSolution_SolutionTemplate(Solution_SolutionTemplate instance);
    partial void DeleteSolution_SolutionTemplate(Solution_SolutionTemplate instance);
    partial void InsertSys_ButtonPower(Sys_ButtonPower instance);
    partial void UpdateSys_ButtonPower(Sys_ButtonPower instance);
    partial void DeleteSys_ButtonPower(Sys_ButtonPower instance);
    partial void InsertSys_ButtonToMenu(Sys_ButtonToMenu instance);
    partial void UpdateSys_ButtonToMenu(Sys_ButtonToMenu instance);
    partial void DeleteSys_ButtonToMenu(Sys_ButtonToMenu instance);
    partial void InsertSys_CodeRecords(Sys_CodeRecords instance);
    partial void UpdateSys_CodeRecords(Sys_CodeRecords instance);
    partial void DeleteSys_CodeRecords(Sys_CodeRecords instance);
    partial void InsertSys_CodeTemplateRule(Sys_CodeTemplateRule instance);
    partial void UpdateSys_CodeTemplateRule(Sys_CodeTemplateRule instance);
    partial void DeleteSys_CodeTemplateRule(Sys_CodeTemplateRule instance);
    partial void InsertSys_Const(Sys_Const instance);
    partial void UpdateSys_Const(Sys_Const instance);
    partial void DeleteSys_Const(Sys_Const instance);
    partial void InsertSys_ErrLogInfo(Sys_ErrLogInfo instance);
    partial void UpdateSys_ErrLogInfo(Sys_ErrLogInfo instance);
    partial void DeleteSys_ErrLogInfo(Sys_ErrLogInfo instance);
    partial void InsertSys_FlowOperate(Sys_FlowOperate instance);
    partial void UpdateSys_FlowOperate(Sys_FlowOperate instance);
    partial void DeleteSys_FlowOperate(Sys_FlowOperate instance);
    partial void InsertSys_Log(Sys_Log instance);
    partial void UpdateSys_Log(Sys_Log instance);
    partial void DeleteSys_Log(Sys_Log instance);
    partial void InsertSys_Menu(Sys_Menu instance);
    partial void UpdateSys_Menu(Sys_Menu instance);
    partial void DeleteSys_Menu(Sys_Menu instance);
    partial void InsertSys_MenuFlowOperate(Sys_MenuFlowOperate instance);
    partial void UpdateSys_MenuFlowOperate(Sys_MenuFlowOperate instance);
    partial void DeleteSys_MenuFlowOperate(Sys_MenuFlowOperate instance);
    partial void InsertSys_Role(Sys_Role instance);
    partial void UpdateSys_Role(Sys_Role instance);
    partial void DeleteSys_Role(Sys_Role instance);
    partial void InsertSys_RolePower(Sys_RolePower instance);
    partial void UpdateSys_RolePower(Sys_RolePower instance);
    partial void DeleteSys_RolePower(Sys_RolePower instance);
    partial void InsertSys_TestRule(Sys_TestRule instance);
    partial void UpdateSys_TestRule(Sys_TestRule instance);
    partial void DeleteSys_TestRule(Sys_TestRule instance);
    partial void InsertSys_User(Sys_User instance);
    partial void UpdateSys_User(Sys_User instance);
    partial void DeleteSys_User(Sys_User instance);
    partial void InsertSys_UserRead(Sys_UserRead instance);
    partial void UpdateSys_UserRead(Sys_UserRead instance);
    partial void DeleteSys_UserRead(Sys_UserRead instance);
    partial void InsertSys_UserShowColumns(Sys_UserShowColumns instance);
    partial void UpdateSys_UserShowColumns(Sys_UserShowColumns instance);
    partial void DeleteSys_UserShowColumns(Sys_UserShowColumns instance);
    partial void InsertTechnique_CheckItemDetail(Technique_CheckItemDetail instance);
    partial void UpdateTechnique_CheckItemDetail(Technique_CheckItemDetail instance);
    partial void DeleteTechnique_CheckItemDetail(Technique_CheckItemDetail instance);
    partial void InsertTechnique_CheckItemSet(Technique_CheckItemSet instance);
    partial void UpdateTechnique_CheckItemSet(Technique_CheckItemSet instance);
    partial void DeleteTechnique_CheckItemSet(Technique_CheckItemSet instance);
    partial void InsertTechnique_Emergency(Technique_Emergency instance);
    partial void UpdateTechnique_Emergency(Technique_Emergency instance);
    partial void DeleteTechnique_Emergency(Technique_Emergency instance);
    partial void InsertTechnique_Environmental(Technique_Environmental instance);
    partial void UpdateTechnique_Environmental(Technique_Environmental instance);
    partial void DeleteTechnique_Environmental(Technique_Environmental instance);
    partial void InsertTechnique_HazardList(Technique_HazardList instance);
    partial void UpdateTechnique_HazardList(Technique_HazardList instance);
    partial void DeleteTechnique_HazardList(Technique_HazardList instance);
    partial void InsertTechnique_HazardListType(Technique_HazardListType instance);
    partial void UpdateTechnique_HazardListType(Technique_HazardListType instance);
    partial void DeleteTechnique_HazardListType(Technique_HazardListType instance);
    partial void InsertTechnique_ProjectSolutionTemplete(Technique_ProjectSolutionTemplete instance);
    partial void UpdateTechnique_ProjectSolutionTemplete(Technique_ProjectSolutionTemplete instance);
    partial void DeleteTechnique_ProjectSolutionTemplete(Technique_ProjectSolutionTemplete instance);
    partial void InsertTechnique_Rectify(Technique_Rectify instance);
    partial void UpdateTechnique_Rectify(Technique_Rectify instance);
    partial void DeleteTechnique_Rectify(Technique_Rectify instance);
    partial void InsertTechnique_RectifyItem(Technique_RectifyItem instance);
    partial void UpdateTechnique_RectifyItem(Technique_RectifyItem instance);
    partial void DeleteTechnique_RectifyItem(Technique_RectifyItem instance);
    partial void InsertTechnique_SpecialScheme(Technique_SpecialScheme instance);
    partial void UpdateTechnique_SpecialScheme(Technique_SpecialScheme instance);
    partial void DeleteTechnique_SpecialScheme(Technique_SpecialScheme instance);
    partial void InsertTraining_CompanyTraining(Training_CompanyTraining instance);
    partial void UpdateTraining_CompanyTraining(Training_CompanyTraining instance);
    partial void DeleteTraining_CompanyTraining(Training_CompanyTraining instance);
    partial void InsertTraining_CompanyTrainingItem(Training_CompanyTrainingItem instance);
    partial void UpdateTraining_CompanyTrainingItem(Training_CompanyTrainingItem instance);
    partial void DeleteTraining_CompanyTrainingItem(Training_CompanyTrainingItem instance);
    partial void InsertTraining_Plan(Training_Plan instance);
    partial void UpdateTraining_Plan(Training_Plan instance);
    partial void DeleteTraining_Plan(Training_Plan instance);
    partial void InsertTraining_TestTraining(Training_TestTraining instance);
    partial void UpdateTraining_TestTraining(Training_TestTraining instance);
    partial void DeleteTraining_TestTraining(Training_TestTraining instance);
    partial void InsertTraining_TestTrainingItem(Training_TestTrainingItem instance);
    partial void UpdateTraining_TestTrainingItem(Training_TestTrainingItem instance);
    partial void DeleteTraining_TestTrainingItem(Training_TestTrainingItem instance);
    partial void InsertTraining_Training(Training_Training instance);
    partial void UpdateTraining_Training(Training_Training instance);
    partial void DeleteTraining_Training(Training_Training instance);
    partial void InsertTraining_TrainingItem(Training_TrainingItem instance);
    partial void UpdateTraining_TrainingItem(Training_TrainingItem instance);
    partial void DeleteTraining_TrainingItem(Training_TrainingItem instance);
    partial void InsertTraining_TrainTestDB(Training_TrainTestDB instance);
    partial void UpdateTraining_TrainTestDB(Training_TrainTestDB instance);
    partial void DeleteTraining_TrainTestDB(Training_TrainTestDB instance);
    partial void InsertTraining_TrainTestDBItem(Training_TrainTestDBItem instance);
    partial void UpdateTraining_TrainTestDBItem(Training_TrainTestDBItem instance);
    partial void DeleteTraining_TrainTestDBItem(Training_TrainTestDBItem instance);
    partial void InsertUnqualified_WorkContact(Unqualified_WorkContact instance);
    partial void UpdateUnqualified_WorkContact(Unqualified_WorkContact instance);
    partial void DeleteUnqualified_WorkContact(Unqualified_WorkContact instance);
    partial void InsertUnqualified_WorkContactApprove(Unqualified_WorkContactApprove instance);
    partial void UpdateUnqualified_WorkContactApprove(Unqualified_WorkContactApprove instance);
    partial void DeleteUnqualified_WorkContactApprove(Unqualified_WorkContactApprove instance);
    partial void InsertWBS_ControlItemAndCycle(WBS_ControlItemAndCycle instance);
    partial void UpdateWBS_ControlItemAndCycle(WBS_ControlItemAndCycle instance);
    partial void DeleteWBS_ControlItemAndCycle(WBS_ControlItemAndCycle instance);
    partial void InsertWBS_ControlItemInit(WBS_ControlItemInit instance);
    partial void UpdateWBS_ControlItemInit(WBS_ControlItemInit instance);
    partial void DeleteWBS_ControlItemInit(WBS_ControlItemInit instance);
    partial void InsertWBS_ControlItemProject(WBS_ControlItemProject instance);
    partial void UpdateWBS_ControlItemProject(WBS_ControlItemProject instance);
    partial void DeleteWBS_ControlItemProject(WBS_ControlItemProject instance);
    partial void InsertWBS_UnitWork(WBS_UnitWork instance);
    partial void UpdateWBS_UnitWork(WBS_UnitWork instance);
    partial void DeleteWBS_UnitWork(WBS_UnitWork instance);
    partial void InsertWBS_WorkPackage(WBS_WorkPackage instance);
    partial void UpdateWBS_WorkPackage(WBS_WorkPackage instance);
    partial void DeleteWBS_WorkPackage(WBS_WorkPackage instance);
    partial void InsertWBS_WorkPackageInit(WBS_WorkPackageInit instance);
    partial void UpdateWBS_WorkPackageInit(WBS_WorkPackageInit instance);
    partial void DeleteWBS_WorkPackageInit(WBS_WorkPackageInit instance);
    partial void InsertWBS_WorkPackageProject(WBS_WorkPackageProject instance);
    partial void UpdateWBS_WorkPackageProject(WBS_WorkPackageProject instance);
    partial void DeleteWBS_WorkPackageProject(WBS_WorkPackageProject instance);
    partial void InsertWelder_WelderQualify(Welder_WelderQualify instance);
    partial void UpdateWelder_WelderQualify(Welder_WelderQualify instance);
    partial void DeleteWelder_WelderQualify(Welder_WelderQualify instance);
    partial void InsertWPQ_WPQList(WPQ_WPQList instance);
    partial void UpdateWPQ_WPQList(WPQ_WPQList instance);
    partial void DeleteWPQ_WPQList(WPQ_WPQList instance);
    #endregion
		
		public SGGLDB(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGGLDB(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGGLDB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGGLDB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActionPlan_ActionPlanList> ActionPlan_ActionPlanList
		{
			get
			{
				return this.GetTable<ActionPlan_ActionPlanList>();
			}
		}
		
		public System.Data.Linq.Table<ActionPlan_ManagerRule> ActionPlan_ManagerRule
		{
			get
			{
				return this.GetTable<ActionPlan_ManagerRule>();
			}
		}
		
		public System.Data.Linq.Table<AttachFile> AttachFile
		{
			get
			{
				return this.GetTable<AttachFile>();
			}
		}
		
		public System.Data.Linq.Table<Base_AccidentType> Base_AccidentType
		{
			get
			{
				return this.GetTable<Base_AccidentType>();
			}
		}
		
		public System.Data.Linq.Table<Base_Certificate> Base_Certificate
		{
			get
			{
				return this.GetTable<Base_Certificate>();
			}
		}
		
		public System.Data.Linq.Table<Base_CNProfessional> Base_CNProfessional
		{
			get
			{
				return this.GetTable<Base_CNProfessional>();
			}
		}
		
		public System.Data.Linq.Table<Base_Components> Base_Components
		{
			get
			{
				return this.GetTable<Base_Components>();
			}
		}
		
		public System.Data.Linq.Table<Base_Consumables> Base_Consumables
		{
			get
			{
				return this.GetTable<Base_Consumables>();
			}
		}
		
		public System.Data.Linq.Table<Base_CostType> Base_CostType
		{
			get
			{
				return this.GetTable<Base_CostType>();
			}
		}
		
		public System.Data.Linq.Table<Base_Defect> Base_Defect
		{
			get
			{
				return this.GetTable<Base_Defect>();
			}
		}
		
		public System.Data.Linq.Table<Base_Depart> Base_Depart
		{
			get
			{
				return this.GetTable<Base_Depart>();
			}
		}
		
		public System.Data.Linq.Table<Base_DesignProfessional> Base_DesignProfessional
		{
			get
			{
				return this.GetTable<Base_DesignProfessional>();
			}
		}
		
		public System.Data.Linq.Table<Base_DetectionRate> Base_DetectionRate
		{
			get
			{
				return this.GetTable<Base_DetectionRate>();
			}
		}
		
		public System.Data.Linq.Table<Base_DetectionType> Base_DetectionType
		{
			get
			{
				return this.GetTable<Base_DetectionType>();
			}
		}
		
		public System.Data.Linq.Table<Base_DNCompare> Base_DNCompare
		{
			get
			{
				return this.GetTable<Base_DNCompare>();
			}
		}
		
		public System.Data.Linq.Table<Base_EmergencyType> Base_EmergencyType
		{
			get
			{
				return this.GetTable<Base_EmergencyType>();
			}
		}
		
		public System.Data.Linq.Table<Base_GrooveType> Base_GrooveType
		{
			get
			{
				return this.GetTable<Base_GrooveType>();
			}
		}
		
		public System.Data.Linq.Table<Base_HSSEStandardListType> Base_HSSEStandardListType
		{
			get
			{
				return this.GetTable<Base_HSSEStandardListType>();
			}
		}
		
		public System.Data.Linq.Table<Base_LawsRegulationsType> Base_LawsRegulationsType
		{
			get
			{
				return this.GetTable<Base_LawsRegulationsType>();
			}
		}
		
		public System.Data.Linq.Table<Base_LicenseType> Base_LicenseType
		{
			get
			{
				return this.GetTable<Base_LicenseType>();
			}
		}
		
		public System.Data.Linq.Table<Base_ManageRuleType> Base_ManageRuleType
		{
			get
			{
				return this.GetTable<Base_ManageRuleType>();
			}
		}
		
		public System.Data.Linq.Table<Base_Material> Base_Material
		{
			get
			{
				return this.GetTable<Base_Material>();
			}
		}
		
		public System.Data.Linq.Table<Base_Medium> Base_Medium
		{
			get
			{
				return this.GetTable<Base_Medium>();
			}
		}
		
		public System.Data.Linq.Table<Base_PictureType> Base_PictureType
		{
			get
			{
				return this.GetTable<Base_PictureType>();
			}
		}
		
		public System.Data.Linq.Table<Base_PipingClass> Base_PipingClass
		{
			get
			{
				return this.GetTable<Base_PipingClass>();
			}
		}
		
		public System.Data.Linq.Table<Base_Position> Base_Position
		{
			get
			{
				return this.GetTable<Base_Position>();
			}
		}
		
		public System.Data.Linq.Table<Base_PostTitle> Base_PostTitle
		{
			get
			{
				return this.GetTable<Base_PostTitle>();
			}
		}
		
		public System.Data.Linq.Table<Base_Pressure> Base_Pressure
		{
			get
			{
				return this.GetTable<Base_Pressure>();
			}
		}
		
		public System.Data.Linq.Table<Base_Project> Base_Project
		{
			get
			{
				return this.GetTable<Base_Project>();
			}
		}
		
		public System.Data.Linq.Table<Base_QualityQuestionType> Base_QualityQuestionType
		{
			get
			{
				return this.GetTable<Base_QualityQuestionType>();
			}
		}
		
		public System.Data.Linq.Table<Base_RulesRegulationsType> Base_RulesRegulationsType
		{
			get
			{
				return this.GetTable<Base_RulesRegulationsType>();
			}
		}
		
		public System.Data.Linq.Table<Base_SafetyMeasures> Base_SafetyMeasures
		{
			get
			{
				return this.GetTable<Base_SafetyMeasures>();
			}
		}
		
		public System.Data.Linq.Table<Base_SolutionTempleteType> Base_SolutionTempleteType
		{
			get
			{
				return this.GetTable<Base_SolutionTempleteType>();
			}
		}
		
		public System.Data.Linq.Table<Base_SpecialEquipment> Base_SpecialEquipment
		{
			get
			{
				return this.GetTable<Base_SpecialEquipment>();
			}
		}
		
		public System.Data.Linq.Table<Base_SpecialSchemeType> Base_SpecialSchemeType
		{
			get
			{
				return this.GetTable<Base_SpecialSchemeType>();
			}
		}
		
		public System.Data.Linq.Table<Base_TrainLevel> Base_TrainLevel
		{
			get
			{
				return this.GetTable<Base_TrainLevel>();
			}
		}
		
		public System.Data.Linq.Table<Base_TrainType> Base_TrainType
		{
			get
			{
				return this.GetTable<Base_TrainType>();
			}
		}
		
		public System.Data.Linq.Table<Base_TrainTypeItem> Base_TrainTypeItem
		{
			get
			{
				return this.GetTable<Base_TrainTypeItem>();
			}
		}
		
		public System.Data.Linq.Table<Base_Unit> Base_Unit
		{
			get
			{
				return this.GetTable<Base_Unit>();
			}
		}
		
		public System.Data.Linq.Table<Base_UnitType> Base_UnitType
		{
			get
			{
				return this.GetTable<Base_UnitType>();
			}
		}
		
		public System.Data.Linq.Table<Base_WeldingLocation> Base_WeldingLocation
		{
			get
			{
				return this.GetTable<Base_WeldingLocation>();
			}
		}
		
		public System.Data.Linq.Table<Base_WeldingMethod> Base_WeldingMethod
		{
			get
			{
				return this.GetTable<Base_WeldingMethod>();
			}
		}
		
		public System.Data.Linq.Table<Base_WeldType> Base_WeldType
		{
			get
			{
				return this.GetTable<Base_WeldType>();
			}
		}
		
		public System.Data.Linq.Table<Base_WorkPost> Base_WorkPost
		{
			get
			{
				return this.GetTable<Base_WorkPost>();
			}
		}
		
		public System.Data.Linq.Table<Base_WorkStage> Base_WorkStage
		{
			get
			{
				return this.GetTable<Base_WorkStage>();
			}
		}
		
		public System.Data.Linq.Table<Check_CheckControl> Check_CheckControl
		{
			get
			{
				return this.GetTable<Check_CheckControl>();
			}
		}
		
		public System.Data.Linq.Table<Check_CheckControlApprove> Check_CheckControlApprove
		{
			get
			{
				return this.GetTable<Check_CheckControlApprove>();
			}
		}
		
		public System.Data.Linq.Table<Check_CheckEquipment> Check_CheckEquipment
		{
			get
			{
				return this.GetTable<Check_CheckEquipment>();
			}
		}
		
		public System.Data.Linq.Table<Check_CheckEquipmentApprove> Check_CheckEquipmentApprove
		{
			get
			{
				return this.GetTable<Check_CheckEquipmentApprove>();
			}
		}
		
		public System.Data.Linq.Table<Check_CheckMonth> Check_CheckMonth
		{
			get
			{
				return this.GetTable<Check_CheckMonth>();
			}
		}
		
		public System.Data.Linq.Table<Check_Design> Check_Design
		{
			get
			{
				return this.GetTable<Check_Design>();
			}
		}
		
		public System.Data.Linq.Table<Check_DesignApprove> Check_DesignApprove
		{
			get
			{
				return this.GetTable<Check_DesignApprove>();
			}
		}
		
		public System.Data.Linq.Table<Check_Draw> Check_Draw
		{
			get
			{
				return this.GetTable<Check_Draw>();
			}
		}
		
		public System.Data.Linq.Table<Check_JointCheck> Check_JointCheck
		{
			get
			{
				return this.GetTable<Check_JointCheck>();
			}
		}
		
		public System.Data.Linq.Table<Check_JointCheckApprove> Check_JointCheckApprove
		{
			get
			{
				return this.GetTable<Check_JointCheckApprove>();
			}
		}
		
		public System.Data.Linq.Table<Check_JointCheckDetail> Check_JointCheckDetail
		{
			get
			{
				return this.GetTable<Check_JointCheckDetail>();
			}
		}
		
		public System.Data.Linq.Table<Check_MonthSpotCheckDetail> Check_MonthSpotCheckDetail
		{
			get
			{
				return this.GetTable<Check_MonthSpotCheckDetail>();
			}
		}
		
		public System.Data.Linq.Table<Check_SpecialEquipmentDetail> Check_SpecialEquipmentDetail
		{
			get
			{
				return this.GetTable<Check_SpecialEquipmentDetail>();
			}
		}
		
		public System.Data.Linq.Table<Check_SpotCheck> Check_SpotCheck
		{
			get
			{
				return this.GetTable<Check_SpotCheck>();
			}
		}
		
		public System.Data.Linq.Table<Check_SpotCheckApprove> Check_SpotCheckApprove
		{
			get
			{
				return this.GetTable<Check_SpotCheckApprove>();
			}
		}
		
		public System.Data.Linq.Table<Check_SpotCheckDetail> Check_SpotCheckDetail
		{
			get
			{
				return this.GetTable<Check_SpotCheckDetail>();
			}
		}
		
		public System.Data.Linq.Table<Check_TechnicalContactList> Check_TechnicalContactList
		{
			get
			{
				return this.GetTable<Check_TechnicalContactList>();
			}
		}
		
		public System.Data.Linq.Table<Check_TechnicalContactListApprove> Check_TechnicalContactListApprove
		{
			get
			{
				return this.GetTable<Check_TechnicalContactListApprove>();
			}
		}
		
		public System.Data.Linq.Table<EduTrain_AccidentCase> EduTrain_AccidentCase
		{
			get
			{
				return this.GetTable<EduTrain_AccidentCase>();
			}
		}
		
		public System.Data.Linq.Table<EduTrain_AccidentCaseItem> EduTrain_AccidentCaseItem
		{
			get
			{
				return this.GetTable<EduTrain_AccidentCaseItem>();
			}
		}
		
		public System.Data.Linq.Table<EduTrain_TrainRecord> EduTrain_TrainRecord
		{
			get
			{
				return this.GetTable<EduTrain_TrainRecord>();
			}
		}
		
		public System.Data.Linq.Table<EduTrain_TrainRecordDetail> EduTrain_TrainRecordDetail
		{
			get
			{
				return this.GetTable<EduTrain_TrainRecordDetail>();
			}
		}
		
		public System.Data.Linq.Table<Environmental_EIAReport> Environmental_EIAReport
		{
			get
			{
				return this.GetTable<Environmental_EIAReport>();
			}
		}
		
		public System.Data.Linq.Table<Environmental_EnvironmentalEmergencyPlan> Environmental_EnvironmentalEmergencyPlan
		{
			get
			{
				return this.GetTable<Environmental_EnvironmentalEmergencyPlan>();
			}
		}
		
		public System.Data.Linq.Table<Environmental_EnvironmentalMonitoring> Environmental_EnvironmentalMonitoring
		{
			get
			{
				return this.GetTable<Environmental_EnvironmentalMonitoring>();
			}
		}
		
		public System.Data.Linq.Table<Environmental_UnexpectedEnvironmental> Environmental_UnexpectedEnvironmental
		{
			get
			{
				return this.GetTable<Environmental_UnexpectedEnvironmental>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_EnvironmentalRiskItem> Hazard_EnvironmentalRiskItem
		{
			get
			{
				return this.GetTable<Hazard_EnvironmentalRiskItem>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_EnvironmentalRiskList> Hazard_EnvironmentalRiskList
		{
			get
			{
				return this.GetTable<Hazard_EnvironmentalRiskList>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_HazardList> Hazard_HazardList
		{
			get
			{
				return this.GetTable<Hazard_HazardList>();
			}
		}
		
		public System.Data.Linq.Table<Hazard_HazardSelectedItem> Hazard_HazardSelectedItem
		{
			get
			{
				return this.GetTable<Hazard_HazardSelectedItem>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Batch_BatchTrust> HJGL_Batch_BatchTrust
		{
			get
			{
				return this.GetTable<HJGL_Batch_BatchTrust>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Batch_BatchTrustItem> HJGL_Batch_BatchTrustItem
		{
			get
			{
				return this.GetTable<HJGL_Batch_BatchTrustItem>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Batch_NDE> HJGL_Batch_NDE
		{
			get
			{
				return this.GetTable<HJGL_Batch_NDE>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Batch_NDEItem> HJGL_Batch_NDEItem
		{
			get
			{
				return this.GetTable<HJGL_Batch_NDEItem>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this.GetTable<HJGL_Batch_PointBatch>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Batch_PointBatchItem> HJGL_Batch_PointBatchItem
		{
			get
			{
				return this.GetTable<HJGL_Batch_PointBatchItem>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Hard_Report> HJGL_Hard_Report
		{
			get
			{
				return this.GetTable<HJGL_Hard_Report>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Hard_Trust> HJGL_Hard_Trust
		{
			get
			{
				return this.GetTable<HJGL_Hard_Trust>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Hard_TrustItem> HJGL_Hard_TrustItem
		{
			get
			{
				return this.GetTable<HJGL_Hard_TrustItem>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_HotProess_Report> HJGL_HotProess_Report
		{
			get
			{
				return this.GetTable<HJGL_HotProess_Report>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_HotProess_Trust> HJGL_HotProess_Trust
		{
			get
			{
				return this.GetTable<HJGL_HotProess_Trust>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_HotProess_TrustItem> HJGL_HotProess_TrustItem
		{
			get
			{
				return this.GetTable<HJGL_HotProess_TrustItem>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this.GetTable<HJGL_Pipeline>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_PreWeldingDaily> HJGL_PreWeldingDaily
		{
			get
			{
				return this.GetTable<HJGL_PreWeldingDaily>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this.GetTable<HJGL_RepairRecord>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_WeldingDaily> HJGL_WeldingDaily
		{
			get
			{
				return this.GetTable<HJGL_WeldingDaily>();
			}
		}
		
		public System.Data.Linq.Table<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this.GetTable<HJGL_WeldJoint>();
			}
		}
		
		public System.Data.Linq.Table<HSSESystem_HSSEMainDuty> HSSESystem_HSSEMainDuty
		{
			get
			{
				return this.GetTable<HSSESystem_HSSEMainDuty>();
			}
		}
		
		public System.Data.Linq.Table<InformationProject_ConstructionStandardIdentify> InformationProject_ConstructionStandardIdentify
		{
			get
			{
				return this.GetTable<InformationProject_ConstructionStandardIdentify>();
			}
		}
		
		public System.Data.Linq.Table<InformationProject_ConstructionStandardSelectedItem> InformationProject_ConstructionStandardSelectedItem
		{
			get
			{
				return this.GetTable<InformationProject_ConstructionStandardSelectedItem>();
			}
		}
		
		public System.Data.Linq.Table<Law_HSSEStandardsList> Law_HSSEStandardsList
		{
			get
			{
				return this.GetTable<Law_HSSEStandardsList>();
			}
		}
		
		public System.Data.Linq.Table<Law_LawRegulationIdentify> Law_LawRegulationIdentify
		{
			get
			{
				return this.GetTable<Law_LawRegulationIdentify>();
			}
		}
		
		public System.Data.Linq.Table<Law_LawRegulationList> Law_LawRegulationList
		{
			get
			{
				return this.GetTable<Law_LawRegulationList>();
			}
		}
		
		public System.Data.Linq.Table<Law_LawRegulationSelectedItem> Law_LawRegulationSelectedItem
		{
			get
			{
				return this.GetTable<Law_LawRegulationSelectedItem>();
			}
		}
		
		public System.Data.Linq.Table<Law_ManageRule> Law_ManageRule
		{
			get
			{
				return this.GetTable<Law_ManageRule>();
			}
		}
		
		public System.Data.Linq.Table<Law_RulesRegulations> Law_RulesRegulations
		{
			get
			{
				return this.GetTable<Law_RulesRegulations>();
			}
		}
		
		public System.Data.Linq.Table<OccupationHealth_HazardDetection> OccupationHealth_HazardDetection
		{
			get
			{
				return this.GetTable<OccupationHealth_HazardDetection>();
			}
		}
		
		public System.Data.Linq.Table<OccupationHealth_OccupationalDiseaseAccident> OccupationHealth_OccupationalDiseaseAccident
		{
			get
			{
				return this.GetTable<OccupationHealth_OccupationalDiseaseAccident>();
			}
		}
		
		public System.Data.Linq.Table<OccupationHealth_PhysicalExamination> OccupationHealth_PhysicalExamination
		{
			get
			{
				return this.GetTable<OccupationHealth_PhysicalExamination>();
			}
		}
		
		public System.Data.Linq.Table<Project_FileCabinet> Project_FileCabinet
		{
			get
			{
				return this.GetTable<Project_FileCabinet>();
			}
		}
		
		public System.Data.Linq.Table<Project_ProjectUnit> Project_ProjectUnit
		{
			get
			{
				return this.GetTable<Project_ProjectUnit>();
			}
		}
		
		public System.Data.Linq.Table<Project_ProjectUser> Project_ProjectUser
		{
			get
			{
				return this.GetTable<Project_ProjectUser>();
			}
		}
		
		public System.Data.Linq.Table<Project_Sys_Set> Project_Sys_Set
		{
			get
			{
				return this.GetTable<Project_Sys_Set>();
			}
		}
		
		public System.Data.Linq.Table<ProjectData_FlowOperate> ProjectData_FlowOperate
		{
			get
			{
				return this.GetTable<ProjectData_FlowOperate>();
			}
		}
		
		public System.Data.Linq.Table<ProjectData_MainItem> ProjectData_MainItem
		{
			get
			{
				return this.GetTable<ProjectData_MainItem>();
			}
		}
		
		public System.Data.Linq.Table<ProjectData_TeamGroup> ProjectData_TeamGroup
		{
			get
			{
				return this.GetTable<ProjectData_TeamGroup>();
			}
		}
		
		public System.Data.Linq.Table<PTP_AItemEndCheck> PTP_AItemEndCheck
		{
			get
			{
				return this.GetTable<PTP_AItemEndCheck>();
			}
		}
		
		public System.Data.Linq.Table<PTP_BItemEndCheck> PTP_BItemEndCheck
		{
			get
			{
				return this.GetTable<PTP_BItemEndCheck>();
			}
		}
		
		public System.Data.Linq.Table<PTP_PipelineList> PTP_PipelineList
		{
			get
			{
				return this.GetTable<PTP_PipelineList>();
			}
		}
		
		public System.Data.Linq.Table<PTP_TestPackage> PTP_TestPackage
		{
			get
			{
				return this.GetTable<PTP_TestPackage>();
			}
		}
		
		public System.Data.Linq.Table<QualityAudit_EquipmentPersonQuality> QualityAudit_EquipmentPersonQuality
		{
			get
			{
				return this.GetTable<QualityAudit_EquipmentPersonQuality>();
			}
		}
		
		public System.Data.Linq.Table<QualityAudit_PersonQuality> QualityAudit_PersonQuality
		{
			get
			{
				return this.GetTable<QualityAudit_PersonQuality>();
			}
		}
		
		public System.Data.Linq.Table<QualityAudit_SafePersonQuality> QualityAudit_SafePersonQuality
		{
			get
			{
				return this.GetTable<QualityAudit_SafePersonQuality>();
			}
		}
		
		public System.Data.Linq.Table<QualityAudit_SubUnitQuality> QualityAudit_SubUnitQuality
		{
			get
			{
				return this.GetTable<QualityAudit_SubUnitQuality>();
			}
		}
		
		public System.Data.Linq.Table<QualityAudit_SubUnitQualityAuditDetail> QualityAudit_SubUnitQualityAuditDetail
		{
			get
			{
				return this.GetTable<QualityAudit_SubUnitQualityAuditDetail>();
			}
		}
		
		public System.Data.Linq.Table<Resources_SignManage> Resources_SignManage
		{
			get
			{
				return this.GetTable<Resources_SignManage>();
			}
		}
		
		public System.Data.Linq.Table<SecuritySystem_SafetyOrganization> SecuritySystem_SafetyOrganization
		{
			get
			{
				return this.GetTable<SecuritySystem_SafetyOrganization>();
			}
		}
		
		public System.Data.Linq.Table<SitePerson_Checking> SitePerson_Checking
		{
			get
			{
				return this.GetTable<SitePerson_Checking>();
			}
		}
		
		public System.Data.Linq.Table<SitePerson_DayReport> SitePerson_DayReport
		{
			get
			{
				return this.GetTable<SitePerson_DayReport>();
			}
		}
		
		public System.Data.Linq.Table<SitePerson_DayReportDetail> SitePerson_DayReportDetail
		{
			get
			{
				return this.GetTable<SitePerson_DayReportDetail>();
			}
		}
		
		public System.Data.Linq.Table<SitePerson_DayReportUnitDetail> SitePerson_DayReportUnitDetail
		{
			get
			{
				return this.GetTable<SitePerson_DayReportUnitDetail>();
			}
		}
		
		public System.Data.Linq.Table<SitePerson_MonthReport> SitePerson_MonthReport
		{
			get
			{
				return this.GetTable<SitePerson_MonthReport>();
			}
		}
		
		public System.Data.Linq.Table<SitePerson_MonthReportDetail> SitePerson_MonthReportDetail
		{
			get
			{
				return this.GetTable<SitePerson_MonthReportDetail>();
			}
		}
		
		public System.Data.Linq.Table<SitePerson_MonthReportUnitDetail> SitePerson_MonthReportUnitDetail
		{
			get
			{
				return this.GetTable<SitePerson_MonthReportUnitDetail>();
			}
		}
		
		public System.Data.Linq.Table<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this.GetTable<SitePerson_Person>();
			}
		}
		
		public System.Data.Linq.Table<SitePerson_PersonInOut> SitePerson_PersonInOut
		{
			get
			{
				return this.GetTable<SitePerson_PersonInOut>();
			}
		}
		
		public System.Data.Linq.Table<SitePerson_PersonInOutNumber> SitePerson_PersonInOutNumber
		{
			get
			{
				return this.GetTable<SitePerson_PersonInOutNumber>();
			}
		}
		
		public System.Data.Linq.Table<Solution_ConstructSolution> Solution_ConstructSolution
		{
			get
			{
				return this.GetTable<Solution_ConstructSolution>();
			}
		}
		
		public System.Data.Linq.Table<Solution_CQMSConstructSolution> Solution_CQMSConstructSolution
		{
			get
			{
				return this.GetTable<Solution_CQMSConstructSolution>();
			}
		}
		
		public System.Data.Linq.Table<Solution_CQMSConstructSolutionApprove> Solution_CQMSConstructSolutionApprove
		{
			get
			{
				return this.GetTable<Solution_CQMSConstructSolutionApprove>();
			}
		}
		
		public System.Data.Linq.Table<Solution_ExpertArgument> Solution_ExpertArgument
		{
			get
			{
				return this.GetTable<Solution_ExpertArgument>();
			}
		}
		
		public System.Data.Linq.Table<Solution_LargerHazard> Solution_LargerHazard
		{
			get
			{
				return this.GetTable<Solution_LargerHazard>();
			}
		}
		
		public System.Data.Linq.Table<Solution_SolutionTemplate> Solution_SolutionTemplate
		{
			get
			{
				return this.GetTable<Solution_SolutionTemplate>();
			}
		}
		
		public System.Data.Linq.Table<Sys_ButtonPower> Sys_ButtonPower
		{
			get
			{
				return this.GetTable<Sys_ButtonPower>();
			}
		}
		
		public System.Data.Linq.Table<Sys_ButtonToMenu> Sys_ButtonToMenu
		{
			get
			{
				return this.GetTable<Sys_ButtonToMenu>();
			}
		}
		
		public System.Data.Linq.Table<Sys_CodeRecords> Sys_CodeRecords
		{
			get
			{
				return this.GetTable<Sys_CodeRecords>();
			}
		}
		
		public System.Data.Linq.Table<Sys_CodeTemplateRule> Sys_CodeTemplateRule
		{
			get
			{
				return this.GetTable<Sys_CodeTemplateRule>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Const> Sys_Const
		{
			get
			{
				return this.GetTable<Sys_Const>();
			}
		}
		
		public System.Data.Linq.Table<Sys_ErrLogInfo> Sys_ErrLogInfo
		{
			get
			{
				return this.GetTable<Sys_ErrLogInfo>();
			}
		}
		
		public System.Data.Linq.Table<Sys_FlowOperate> Sys_FlowOperate
		{
			get
			{
				return this.GetTable<Sys_FlowOperate>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Log> Sys_Log
		{
			get
			{
				return this.GetTable<Sys_Log>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Menu> Sys_Menu
		{
			get
			{
				return this.GetTable<Sys_Menu>();
			}
		}
		
		public System.Data.Linq.Table<Sys_MenuFlowOperate> Sys_MenuFlowOperate
		{
			get
			{
				return this.GetTable<Sys_MenuFlowOperate>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Role> Sys_Role
		{
			get
			{
				return this.GetTable<Sys_Role>();
			}
		}
		
		public System.Data.Linq.Table<Sys_RolePower> Sys_RolePower
		{
			get
			{
				return this.GetTable<Sys_RolePower>();
			}
		}
		
		public System.Data.Linq.Table<Sys_TestRule> Sys_TestRule
		{
			get
			{
				return this.GetTable<Sys_TestRule>();
			}
		}
		
		public System.Data.Linq.Table<Sys_User> Sys_User
		{
			get
			{
				return this.GetTable<Sys_User>();
			}
		}
		
		public System.Data.Linq.Table<Sys_UserRead> Sys_UserRead
		{
			get
			{
				return this.GetTable<Sys_UserRead>();
			}
		}
		
		public System.Data.Linq.Table<Sys_UserShowColumns> Sys_UserShowColumns
		{
			get
			{
				return this.GetTable<Sys_UserShowColumns>();
			}
		}
		
		public System.Data.Linq.Table<Technique_CheckItemDetail> Technique_CheckItemDetail
		{
			get
			{
				return this.GetTable<Technique_CheckItemDetail>();
			}
		}
		
		public System.Data.Linq.Table<Technique_CheckItemSet> Technique_CheckItemSet
		{
			get
			{
				return this.GetTable<Technique_CheckItemSet>();
			}
		}
		
		public System.Data.Linq.Table<Technique_Emergency> Technique_Emergency
		{
			get
			{
				return this.GetTable<Technique_Emergency>();
			}
		}
		
		public System.Data.Linq.Table<Technique_Environmental> Technique_Environmental
		{
			get
			{
				return this.GetTable<Technique_Environmental>();
			}
		}
		
		public System.Data.Linq.Table<Technique_HazardList> Technique_HazardList
		{
			get
			{
				return this.GetTable<Technique_HazardList>();
			}
		}
		
		public System.Data.Linq.Table<Technique_HazardListType> Technique_HazardListType
		{
			get
			{
				return this.GetTable<Technique_HazardListType>();
			}
		}
		
		public System.Data.Linq.Table<Technique_ProjectSolutionTemplete> Technique_ProjectSolutionTemplete
		{
			get
			{
				return this.GetTable<Technique_ProjectSolutionTemplete>();
			}
		}
		
		public System.Data.Linq.Table<Technique_Rectify> Technique_Rectify
		{
			get
			{
				return this.GetTable<Technique_Rectify>();
			}
		}
		
		public System.Data.Linq.Table<Technique_RectifyItem> Technique_RectifyItem
		{
			get
			{
				return this.GetTable<Technique_RectifyItem>();
			}
		}
		
		public System.Data.Linq.Table<Technique_SpecialScheme> Technique_SpecialScheme
		{
			get
			{
				return this.GetTable<Technique_SpecialScheme>();
			}
		}
		
		public System.Data.Linq.Table<Training_CompanyTraining> Training_CompanyTraining
		{
			get
			{
				return this.GetTable<Training_CompanyTraining>();
			}
		}
		
		public System.Data.Linq.Table<Training_CompanyTrainingItem> Training_CompanyTrainingItem
		{
			get
			{
				return this.GetTable<Training_CompanyTrainingItem>();
			}
		}
		
		public System.Data.Linq.Table<Training_Plan> Training_Plan
		{
			get
			{
				return this.GetTable<Training_Plan>();
			}
		}
		
		public System.Data.Linq.Table<Training_TestTraining> Training_TestTraining
		{
			get
			{
				return this.GetTable<Training_TestTraining>();
			}
		}
		
		public System.Data.Linq.Table<Training_TestTrainingItem> Training_TestTrainingItem
		{
			get
			{
				return this.GetTable<Training_TestTrainingItem>();
			}
		}
		
		public System.Data.Linq.Table<Training_Training> Training_Training
		{
			get
			{
				return this.GetTable<Training_Training>();
			}
		}
		
		public System.Data.Linq.Table<Training_TrainingItem> Training_TrainingItem
		{
			get
			{
				return this.GetTable<Training_TrainingItem>();
			}
		}
		
		public System.Data.Linq.Table<Training_TrainTestDB> Training_TrainTestDB
		{
			get
			{
				return this.GetTable<Training_TrainTestDB>();
			}
		}
		
		public System.Data.Linq.Table<Training_TrainTestDBItem> Training_TrainTestDBItem
		{
			get
			{
				return this.GetTable<Training_TrainTestDBItem>();
			}
		}
		
		public System.Data.Linq.Table<Unqualified_WorkContact> Unqualified_WorkContact
		{
			get
			{
				return this.GetTable<Unqualified_WorkContact>();
			}
		}
		
		public System.Data.Linq.Table<Unqualified_WorkContactApprove> Unqualified_WorkContactApprove
		{
			get
			{
				return this.GetTable<Unqualified_WorkContactApprove>();
			}
		}
		
		public System.Data.Linq.Table<View_ActionPlan_ManagerRule> View_ActionPlan_ManagerRule
		{
			get
			{
				return this.GetTable<View_ActionPlan_ManagerRule>();
			}
		}
		
		public System.Data.Linq.Table<View_Batch_BatchTrust> View_Batch_BatchTrust
		{
			get
			{
				return this.GetTable<View_Batch_BatchTrust>();
			}
		}
		
		public System.Data.Linq.Table<View_Batch_BatchTrustItem> View_Batch_BatchTrustItem
		{
			get
			{
				return this.GetTable<View_Batch_BatchTrustItem>();
			}
		}
		
		public System.Data.Linq.Table<View_Batch_NDE> View_Batch_NDE
		{
			get
			{
				return this.GetTable<View_Batch_NDE>();
			}
		}
		
		public System.Data.Linq.Table<View_Batch_NDEItem> View_Batch_NDEItem
		{
			get
			{
				return this.GetTable<View_Batch_NDEItem>();
			}
		}
		
		public System.Data.Linq.Table<View_Check_JointCheckDetail> View_Check_JointCheckDetail
		{
			get
			{
				return this.GetTable<View_Check_JointCheckDetail>();
			}
		}
		
		public System.Data.Linq.Table<View_Check_SoptCheckDetail> View_Check_SoptCheckDetail
		{
			get
			{
				return this.GetTable<View_Check_SoptCheckDetail>();
			}
		}
		
		public System.Data.Linq.Table<View_DayRportView> View_DayRportView
		{
			get
			{
				return this.GetTable<View_DayRportView>();
			}
		}
		
		public System.Data.Linq.Table<View_GenerateTrust> View_GenerateTrust
		{
			get
			{
				return this.GetTable<View_GenerateTrust>();
			}
		}
		
		public System.Data.Linq.Table<View_GenerateTrustItem> View_GenerateTrustItem
		{
			get
			{
				return this.GetTable<View_GenerateTrustItem>();
			}
		}
		
		public System.Data.Linq.Table<View_Hazard_EnvironmentalRiskItem> View_Hazard_EnvironmentalRiskItem
		{
			get
			{
				return this.GetTable<View_Hazard_EnvironmentalRiskItem>();
			}
		}
		
		public System.Data.Linq.Table<View_HJGL_Batch_PointBatch> View_HJGL_Batch_PointBatch
		{
			get
			{
				return this.GetTable<View_HJGL_Batch_PointBatch>();
			}
		}
		
		public System.Data.Linq.Table<View_HJGL_Batch_PointBatchItem> View_HJGL_Batch_PointBatchItem
		{
			get
			{
				return this.GetTable<View_HJGL_Batch_PointBatchItem>();
			}
		}
		
		public System.Data.Linq.Table<View_HJGL_Hard_Report> View_HJGL_Hard_Report
		{
			get
			{
				return this.GetTable<View_HJGL_Hard_Report>();
			}
		}
		
		public System.Data.Linq.Table<View_HJGL_Hard_Trust> View_HJGL_Hard_Trust
		{
			get
			{
				return this.GetTable<View_HJGL_Hard_Trust>();
			}
		}
		
		public System.Data.Linq.Table<View_HJGL_Hard_TrustItem> View_HJGL_Hard_TrustItem
		{
			get
			{
				return this.GetTable<View_HJGL_Hard_TrustItem>();
			}
		}
		
		public System.Data.Linq.Table<View_HJGL_HotProess_TrustItem> View_HJGL_HotProess_TrustItem
		{
			get
			{
				return this.GetTable<View_HJGL_HotProess_TrustItem>();
			}
		}
		
		public System.Data.Linq.Table<View_HJGL_HotProessTrustItemSearch> View_HJGL_HotProessTrustItemSearch
		{
			get
			{
				return this.GetTable<View_HJGL_HotProessTrustItemSearch>();
			}
		}
		
		public System.Data.Linq.Table<View_HJGL_Pipeline> View_HJGL_Pipeline
		{
			get
			{
				return this.GetTable<View_HJGL_Pipeline>();
			}
		}
		
		public System.Data.Linq.Table<View_HJGL_WeldJoint> View_HJGL_WeldJoint
		{
			get
			{
				return this.GetTable<View_HJGL_WeldJoint>();
			}
		}
		
		public System.Data.Linq.Table<View_InformationProject_ConstructionStandardIdentify> View_InformationProject_ConstructionStandardIdentify
		{
			get
			{
				return this.GetTable<View_InformationProject_ConstructionStandardIdentify>();
			}
		}
		
		public System.Data.Linq.Table<View_InformationProject_ConstructionStandardSelectedItem> View_InformationProject_ConstructionStandardSelectedItem
		{
			get
			{
				return this.GetTable<View_InformationProject_ConstructionStandardSelectedItem>();
			}
		}
		
		public System.Data.Linq.Table<View_Law_LawRegulationList> View_Law_LawRegulationList
		{
			get
			{
				return this.GetTable<View_Law_LawRegulationList>();
			}
		}
		
		public System.Data.Linq.Table<View_Law_LawRegulationSelectedItem> View_Law_LawRegulationSelectedItem
		{
			get
			{
				return this.GetTable<View_Law_LawRegulationSelectedItem>();
			}
		}
		
		public System.Data.Linq.Table<View_Law_ManageRule> View_Law_ManageRule
		{
			get
			{
				return this.GetTable<View_Law_ManageRule>();
			}
		}
		
		public System.Data.Linq.Table<View_Law_RulesRegulations> View_Law_RulesRegulations
		{
			get
			{
				return this.GetTable<View_Law_RulesRegulations>();
			}
		}
		
		public System.Data.Linq.Table<View_MonthReportView> View_MonthReportView
		{
			get
			{
				return this.GetTable<View_MonthReportView>();
			}
		}
		
		public System.Data.Linq.Table<View_ProjectData_FlowOperate> View_ProjectData_FlowOperate
		{
			get
			{
				return this.GetTable<View_ProjectData_FlowOperate>();
			}
		}
		
		public System.Data.Linq.Table<View_PTP_TestPackageAudit> View_PTP_TestPackageAudit
		{
			get
			{
				return this.GetTable<View_PTP_TestPackageAudit>();
			}
		}
		
		public System.Data.Linq.Table<View_QualityAudit_SubUnitQualityAuditDetail> View_QualityAudit_SubUnitQualityAuditDetail
		{
			get
			{
				return this.GetTable<View_QualityAudit_SubUnitQualityAuditDetail>();
			}
		}
		
		public System.Data.Linq.Table<View_SitePerson_Checking> View_SitePerson_Checking
		{
			get
			{
				return this.GetTable<View_SitePerson_Checking>();
			}
		}
		
		public System.Data.Linq.Table<View_SitePerson_DayReportUnitDetail> View_SitePerson_DayReportUnitDetail
		{
			get
			{
				return this.GetTable<View_SitePerson_DayReportUnitDetail>();
			}
		}
		
		public System.Data.Linq.Table<View_SitePerson_MonthReportUnitDetail> View_SitePerson_MonthReportUnitDetail
		{
			get
			{
				return this.GetTable<View_SitePerson_MonthReportUnitDetail>();
			}
		}
		
		public System.Data.Linq.Table<View_SitePerson_Person> View_SitePerson_Person
		{
			get
			{
				return this.GetTable<View_SitePerson_Person>();
			}
		}
		
		public System.Data.Linq.Table<View_Sys_User> View_Sys_User
		{
			get
			{
				return this.GetTable<View_Sys_User>();
			}
		}
		
		public System.Data.Linq.Table<View_Technique_Emergency> View_Technique_Emergency
		{
			get
			{
				return this.GetTable<View_Technique_Emergency>();
			}
		}
		
		public System.Data.Linq.Table<View_Technique_SpecialScheme> View_Technique_SpecialScheme
		{
			get
			{
				return this.GetTable<View_Technique_SpecialScheme>();
			}
		}
		
		public System.Data.Linq.Table<View_Training_TestTrainingItem> View_Training_TestTrainingItem
		{
			get
			{
				return this.GetTable<View_Training_TestTrainingItem>();
			}
		}
		
		public System.Data.Linq.Table<View_Training_TrainingItem> View_Training_TrainingItem
		{
			get
			{
				return this.GetTable<View_Training_TrainingItem>();
			}
		}
		
		public System.Data.Linq.Table<View_WBS_ControlItemAndCycle> View_WBS_ControlItemAndCycle
		{
			get
			{
				return this.GetTable<View_WBS_ControlItemAndCycle>();
			}
		}
		
		public System.Data.Linq.Table<View_Welder_WelderQualify> View_Welder_WelderQualify
		{
			get
			{
				return this.GetTable<View_Welder_WelderQualify>();
			}
		}
		
		public System.Data.Linq.Table<WBS_ControlItemAndCycle> WBS_ControlItemAndCycle
		{
			get
			{
				return this.GetTable<WBS_ControlItemAndCycle>();
			}
		}
		
		public System.Data.Linq.Table<WBS_ControlItemInit> WBS_ControlItemInit
		{
			get
			{
				return this.GetTable<WBS_ControlItemInit>();
			}
		}
		
		public System.Data.Linq.Table<WBS_ControlItemProject> WBS_ControlItemProject
		{
			get
			{
				return this.GetTable<WBS_ControlItemProject>();
			}
		}
		
		public System.Data.Linq.Table<WBS_UnitWork> WBS_UnitWork
		{
			get
			{
				return this.GetTable<WBS_UnitWork>();
			}
		}
		
		public System.Data.Linq.Table<WBS_WorkPackage> WBS_WorkPackage
		{
			get
			{
				return this.GetTable<WBS_WorkPackage>();
			}
		}
		
		public System.Data.Linq.Table<WBS_WorkPackageInit> WBS_WorkPackageInit
		{
			get
			{
				return this.GetTable<WBS_WorkPackageInit>();
			}
		}
		
		public System.Data.Linq.Table<WBS_WorkPackageProject> WBS_WorkPackageProject
		{
			get
			{
				return this.GetTable<WBS_WorkPackageProject>();
			}
		}
		
		public System.Data.Linq.Table<Welder_WelderQualify> Welder_WelderQualify
		{
			get
			{
				return this.GetTable<Welder_WelderQualify>();
			}
		}
		
		public System.Data.Linq.Table<WPQ_WPQList> WPQ_WPQList
		{
			get
			{
				return this.GetTable<WPQ_WPQList>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionPlan_ActionPlanList")]
	public partial class ActionPlan_ActionPlanList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ActionPlanListId;
		
		private string _ProjectId;
		
		private string _ActionPlanListCode;
		
		private string _ActionPlanListName;
		
		private string _VersionNo;
		
		private string _ProjectType;
		
		private string _ActionPlanListContents;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _States;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionPlanListIdChanging(string value);
    partial void OnActionPlanListIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnActionPlanListCodeChanging(string value);
    partial void OnActionPlanListCodeChanged();
    partial void OnActionPlanListNameChanging(string value);
    partial void OnActionPlanListNameChanged();
    partial void OnVersionNoChanging(string value);
    partial void OnVersionNoChanged();
    partial void OnProjectTypeChanging(string value);
    partial void OnProjectTypeChanged();
    partial void OnActionPlanListContentsChanging(string value);
    partial void OnActionPlanListContentsChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public ActionPlan_ActionPlanList()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionPlanListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ActionPlanListId
		{
			get
			{
				return this._ActionPlanListId;
			}
			set
			{
				if ((this._ActionPlanListId != value))
				{
					this.OnActionPlanListIdChanging(value);
					this.SendPropertyChanging();
					this._ActionPlanListId = value;
					this.SendPropertyChanged("ActionPlanListId");
					this.OnActionPlanListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionPlanListCode", DbType="NVarChar(50)")]
		public string ActionPlanListCode
		{
			get
			{
				return this._ActionPlanListCode;
			}
			set
			{
				if ((this._ActionPlanListCode != value))
				{
					this.OnActionPlanListCodeChanging(value);
					this.SendPropertyChanging();
					this._ActionPlanListCode = value;
					this.SendPropertyChanged("ActionPlanListCode");
					this.OnActionPlanListCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionPlanListName", DbType="NVarChar(50)")]
		public string ActionPlanListName
		{
			get
			{
				return this._ActionPlanListName;
			}
			set
			{
				if ((this._ActionPlanListName != value))
				{
					this.OnActionPlanListNameChanging(value);
					this.SendPropertyChanging();
					this._ActionPlanListName = value;
					this.SendPropertyChanged("ActionPlanListName");
					this.OnActionPlanListNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNo", DbType="NChar(10)")]
		public string VersionNo
		{
			get
			{
				return this._VersionNo;
			}
			set
			{
				if ((this._VersionNo != value))
				{
					this.OnVersionNoChanging(value);
					this.SendPropertyChanging();
					this._VersionNo = value;
					this.SendPropertyChanged("VersionNo");
					this.OnVersionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectType", DbType="Char(1)")]
		public string ProjectType
		{
			get
			{
				return this._ProjectType;
			}
			set
			{
				if ((this._ProjectType != value))
				{
					this.OnProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ProjectType = value;
					this.SendPropertyChanged("ProjectType");
					this.OnProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionPlanListContents", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ActionPlanListContents
		{
			get
			{
				return this._ActionPlanListContents;
			}
			set
			{
				if ((this._ActionPlanListContents != value))
				{
					this.OnActionPlanListContentsChanging(value);
					this.SendPropertyChanging();
					this._ActionPlanListContents = value;
					this.SendPropertyChanged("ActionPlanListContents");
					this.OnActionPlanListContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ActionPlan_ActionPlanList_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.ActionPlan_ActionPlanList.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.ActionPlan_ActionPlanList.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ActionPlan_ActionPlanList_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.ActionPlan_ActionPlanList.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.ActionPlan_ActionPlanList.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionPlan_ManagerRule")]
	public partial class ActionPlan_ManagerRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ManagerRuleId;
		
		private string _ManageRuleCode;
		
		private string _OldManageRuleId;
		
		private string _ProjectId;
		
		private string _ManageRuleName;
		
		private string _ManageRuleTypeId;
		
		private string _VersionNo;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _CompileMan;
		
		private string _AttachUrl;
		
		private string _Remark;
		
		private System.Nullable<bool> _IsIssue;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private System.Nullable<bool> _Flag;
		
		private string _State;
		
		private string _SeeFile;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManagerRuleIdChanging(string value);
    partial void OnManagerRuleIdChanged();
    partial void OnManageRuleCodeChanging(string value);
    partial void OnManageRuleCodeChanged();
    partial void OnOldManageRuleIdChanging(string value);
    partial void OnOldManageRuleIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnManageRuleNameChanging(string value);
    partial void OnManageRuleNameChanged();
    partial void OnManageRuleTypeIdChanging(string value);
    partial void OnManageRuleTypeIdChanged();
    partial void OnVersionNoChanging(string value);
    partial void OnVersionNoChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIsIssueChanging(System.Nullable<bool> value);
    partial void OnIsIssueChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnFlagChanging(System.Nullable<bool> value);
    partial void OnFlagChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnSeeFileChanging(string value);
    partial void OnSeeFileChanged();
    #endregion
		
		public ActionPlan_ManagerRule()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerRuleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ManagerRuleId
		{
			get
			{
				return this._ManagerRuleId;
			}
			set
			{
				if ((this._ManagerRuleId != value))
				{
					this.OnManagerRuleIdChanging(value);
					this.SendPropertyChanging();
					this._ManagerRuleId = value;
					this.SendPropertyChanged("ManagerRuleId");
					this.OnManagerRuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleCode", DbType="NVarChar(50)")]
		public string ManageRuleCode
		{
			get
			{
				return this._ManageRuleCode;
			}
			set
			{
				if ((this._ManageRuleCode != value))
				{
					this.OnManageRuleCodeChanging(value);
					this.SendPropertyChanging();
					this._ManageRuleCode = value;
					this.SendPropertyChanged("ManageRuleCode");
					this.OnManageRuleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldManageRuleId", DbType="NVarChar(50)")]
		public string OldManageRuleId
		{
			get
			{
				return this._OldManageRuleId;
			}
			set
			{
				if ((this._OldManageRuleId != value))
				{
					this.OnOldManageRuleIdChanging(value);
					this.SendPropertyChanging();
					this._OldManageRuleId = value;
					this.SendPropertyChanged("OldManageRuleId");
					this.OnOldManageRuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleName", DbType="NVarChar(50)")]
		public string ManageRuleName
		{
			get
			{
				return this._ManageRuleName;
			}
			set
			{
				if ((this._ManageRuleName != value))
				{
					this.OnManageRuleNameChanging(value);
					this.SendPropertyChanging();
					this._ManageRuleName = value;
					this.SendPropertyChanged("ManageRuleName");
					this.OnManageRuleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleTypeId", DbType="NVarChar(50)")]
		public string ManageRuleTypeId
		{
			get
			{
				return this._ManageRuleTypeId;
			}
			set
			{
				if ((this._ManageRuleTypeId != value))
				{
					this.OnManageRuleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ManageRuleTypeId = value;
					this.SendPropertyChanged("ManageRuleTypeId");
					this.OnManageRuleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNo", DbType="NVarChar(50)")]
		public string VersionNo
		{
			get
			{
				return this._VersionNo;
			}
			set
			{
				if ((this._VersionNo != value))
				{
					this.OnVersionNoChanging(value);
					this.SendPropertyChanging();
					this._VersionNo = value;
					this.SendPropertyChanged("VersionNo");
					this.OnVersionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIssue", DbType="Bit")]
		public System.Nullable<bool> IsIssue
		{
			get
			{
				return this._IsIssue;
			}
			set
			{
				if ((this._IsIssue != value))
				{
					this.OnIsIssueChanging(value);
					this.SendPropertyChanging();
					this._IsIssue = value;
					this.SendPropertyChanged("IsIssue");
					this.OnIsIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="Bit")]
		public System.Nullable<bool> Flag
		{
			get
			{
				return this._Flag;
			}
			set
			{
				if ((this._Flag != value))
				{
					this.OnFlagChanging(value);
					this.SendPropertyChanging();
					this._Flag = value;
					this.SendPropertyChanged("Flag");
					this.OnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeeFile", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SeeFile
		{
			get
			{
				return this._SeeFile;
			}
			set
			{
				if ((this._SeeFile != value))
				{
					this.OnSeeFileChanging(value);
					this.SendPropertyChanging();
					this._SeeFile = value;
					this.SendPropertyChanged("SeeFile");
					this.OnSeeFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ActionPlan_ManagerRule_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.ActionPlan_ManagerRule.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.ActionPlan_ManagerRule.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ActionPlan_ManagerRule_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.ActionPlan_ManagerRule.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.ActionPlan_ManagerRule.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttachFile")]
	public partial class AttachFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AttachFileId;
		
		private string _ToKeyId;
		
		private string _AttachSource;
		
		private string _AttachUrl;
		
		private string _MenuId;
		
		private string _AttachPath;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachFileIdChanging(string value);
    partial void OnAttachFileIdChanged();
    partial void OnToKeyIdChanging(string value);
    partial void OnToKeyIdChanged();
    partial void OnAttachSourceChanging(string value);
    partial void OnAttachSourceChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnAttachPathChanging(string value);
    partial void OnAttachPathChanged();
    #endregion
		
		public AttachFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachFileId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AttachFileId
		{
			get
			{
				return this._AttachFileId;
			}
			set
			{
				if ((this._AttachFileId != value))
				{
					this.OnAttachFileIdChanging(value);
					this.SendPropertyChanging();
					this._AttachFileId = value;
					this.SendPropertyChanged("AttachFileId");
					this.OnAttachFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToKeyId", DbType="NVarChar(50)")]
		public string ToKeyId
		{
			get
			{
				return this._ToKeyId;
			}
			set
			{
				if ((this._ToKeyId != value))
				{
					this.OnToKeyIdChanging(value);
					this.SendPropertyChanging();
					this._ToKeyId = value;
					this.SendPropertyChanged("ToKeyId");
					this.OnToKeyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachSource", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AttachSource
		{
			get
			{
				return this._AttachSource;
			}
			set
			{
				if ((this._AttachSource != value))
				{
					this.OnAttachSourceChanging(value);
					this.SendPropertyChanging();
					this._AttachSource = value;
					this.SendPropertyChanged("AttachSource");
					this.OnAttachSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachPath", DbType="NVarChar(50)")]
		public string AttachPath
		{
			get
			{
				return this._AttachPath;
			}
			set
			{
				if ((this._AttachPath != value))
				{
					this.OnAttachPathChanging(value);
					this.SendPropertyChanging();
					this._AttachPath = value;
					this.SendPropertyChanged("AttachPath");
					this.OnAttachPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_AccidentType")]
	public partial class Base_AccidentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccidentTypeId;
		
		private string _AccidentTypeCode;
		
		private string _AccidentTypeName;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccidentTypeIdChanging(string value);
    partial void OnAccidentTypeIdChanged();
    partial void OnAccidentTypeCodeChanging(string value);
    partial void OnAccidentTypeCodeChanged();
    partial void OnAccidentTypeNameChanging(string value);
    partial void OnAccidentTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_AccidentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccidentTypeId
		{
			get
			{
				return this._AccidentTypeId;
			}
			set
			{
				if ((this._AccidentTypeId != value))
				{
					this.OnAccidentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccidentTypeId = value;
					this.SendPropertyChanged("AccidentTypeId");
					this.OnAccidentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentTypeCode", DbType="NVarChar(50)")]
		public string AccidentTypeCode
		{
			get
			{
				return this._AccidentTypeCode;
			}
			set
			{
				if ((this._AccidentTypeCode != value))
				{
					this.OnAccidentTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._AccidentTypeCode = value;
					this.SendPropertyChanged("AccidentTypeCode");
					this.OnAccidentTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentTypeName", DbType="NVarChar(50)")]
		public string AccidentTypeName
		{
			get
			{
				return this._AccidentTypeName;
			}
			set
			{
				if ((this._AccidentTypeName != value))
				{
					this.OnAccidentTypeNameChanging(value);
					this.SendPropertyChanging();
					this._AccidentTypeName = value;
					this.SendPropertyChanged("AccidentTypeName");
					this.OnAccidentTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Certificate")]
	public partial class Base_Certificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CertificateId;
		
		private string _CertificateCode;
		
		private string _CertificateName;
		
		private string _Remark;
		
		private EntitySet<QualityAudit_EquipmentPersonQuality> _QualityAudit_EquipmentPersonQuality;
		
		private EntitySet<QualityAudit_PersonQuality> _QualityAudit_PersonQuality;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertificateIdChanging(string value);
    partial void OnCertificateIdChanged();
    partial void OnCertificateCodeChanging(string value);
    partial void OnCertificateCodeChanged();
    partial void OnCertificateNameChanging(string value);
    partial void OnCertificateNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Certificate()
		{
			this._QualityAudit_EquipmentPersonQuality = new EntitySet<QualityAudit_EquipmentPersonQuality>(new Action<QualityAudit_EquipmentPersonQuality>(this.attach_QualityAudit_EquipmentPersonQuality), new Action<QualityAudit_EquipmentPersonQuality>(this.detach_QualityAudit_EquipmentPersonQuality));
			this._QualityAudit_PersonQuality = new EntitySet<QualityAudit_PersonQuality>(new Action<QualityAudit_PersonQuality>(this.attach_QualityAudit_PersonQuality), new Action<QualityAudit_PersonQuality>(this.detach_QualityAudit_PersonQuality));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateCode", DbType="NVarChar(50)")]
		public string CertificateCode
		{
			get
			{
				return this._CertificateCode;
			}
			set
			{
				if ((this._CertificateCode != value))
				{
					this.OnCertificateCodeChanging(value);
					this.SendPropertyChanging();
					this._CertificateCode = value;
					this.SendPropertyChanged("CertificateCode");
					this.OnCertificateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateName", DbType="NVarChar(50)")]
		public string CertificateName
		{
			get
			{
				return this._CertificateName;
			}
			set
			{
				if ((this._CertificateName != value))
				{
					this.OnCertificateNameChanging(value);
					this.SendPropertyChanging();
					this._CertificateName = value;
					this.SendPropertyChanged("CertificateName");
					this.OnCertificateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_Base_Certificate", Storage="_QualityAudit_EquipmentPersonQuality", ThisKey="CertificateId", OtherKey="CertificateId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_EquipmentPersonQuality> QualityAudit_EquipmentPersonQuality
		{
			get
			{
				return this._QualityAudit_EquipmentPersonQuality;
			}
			set
			{
				this._QualityAudit_EquipmentPersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Base_Certificate", Storage="_QualityAudit_PersonQuality", ThisKey="CertificateId", OtherKey="CertificateId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQuality> QualityAudit_PersonQuality
		{
			get
			{
				return this._QualityAudit_PersonQuality;
			}
			set
			{
				this._QualityAudit_PersonQuality.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Certificate = this;
		}
		
		private void detach_QualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Certificate = null;
		}
		
		private void attach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Certificate = this;
		}
		
		private void detach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Certificate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_CNProfessional")]
	public partial class Base_CNProfessional : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CNProfessionalId;
		
		private string _CNProfessionalCode;
		
		private string _ProfessionalName;
		
		private System.Nullable<int> _SortIndex;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCNProfessionalIdChanging(string value);
    partial void OnCNProfessionalIdChanged();
    partial void OnCNProfessionalCodeChanging(string value);
    partial void OnCNProfessionalCodeChanged();
    partial void OnProfessionalNameChanging(string value);
    partial void OnProfessionalNameChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Base_CNProfessional()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNProfessionalId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CNProfessionalId
		{
			get
			{
				return this._CNProfessionalId;
			}
			set
			{
				if ((this._CNProfessionalId != value))
				{
					this.OnCNProfessionalIdChanging(value);
					this.SendPropertyChanging();
					this._CNProfessionalId = value;
					this.SendPropertyChanged("CNProfessionalId");
					this.OnCNProfessionalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNProfessionalCode", DbType="NVarChar(10)")]
		public string CNProfessionalCode
		{
			get
			{
				return this._CNProfessionalCode;
			}
			set
			{
				if ((this._CNProfessionalCode != value))
				{
					this.OnCNProfessionalCodeChanging(value);
					this.SendPropertyChanging();
					this._CNProfessionalCode = value;
					this.SendPropertyChanged("CNProfessionalCode");
					this.OnCNProfessionalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessionalName", DbType="NVarChar(30)")]
		public string ProfessionalName
		{
			get
			{
				return this._ProfessionalName;
			}
			set
			{
				if ((this._ProfessionalName != value))
				{
					this.OnProfessionalNameChanging(value);
					this.SendPropertyChanging();
					this._ProfessionalName = value;
					this.SendPropertyChanged("ProfessionalName");
					this.OnProfessionalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Components")]
	public partial class Base_Components : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ComponentsId;
		
		private string _ComponentsCode;
		
		private string _ComponentsName;
		
		private string _ProjeceId;
		
		private string _Remark;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComponentsIdChanging(string value);
    partial void OnComponentsIdChanged();
    partial void OnComponentsCodeChanging(string value);
    partial void OnComponentsCodeChanged();
    partial void OnComponentsNameChanging(string value);
    partial void OnComponentsNameChanged();
    partial void OnProjeceIdChanging(string value);
    partial void OnProjeceIdChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Components()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentsId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ComponentsId
		{
			get
			{
				return this._ComponentsId;
			}
			set
			{
				if ((this._ComponentsId != value))
				{
					this.OnComponentsIdChanging(value);
					this.SendPropertyChanging();
					this._ComponentsId = value;
					this.SendPropertyChanged("ComponentsId");
					this.OnComponentsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentsCode", DbType="NVarChar(50)")]
		public string ComponentsCode
		{
			get
			{
				return this._ComponentsCode;
			}
			set
			{
				if ((this._ComponentsCode != value))
				{
					this.OnComponentsCodeChanging(value);
					this.SendPropertyChanging();
					this._ComponentsCode = value;
					this.SendPropertyChanged("ComponentsCode");
					this.OnComponentsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentsName", DbType="NVarChar(50)")]
		public string ComponentsName
		{
			get
			{
				return this._ComponentsName;
			}
			set
			{
				if ((this._ComponentsName != value))
				{
					this.OnComponentsNameChanging(value);
					this.SendPropertyChanging();
					this._ComponentsName = value;
					this.SendPropertyChanged("ComponentsName");
					this.OnComponentsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjeceId", DbType="NVarChar(50)")]
		public string ProjeceId
		{
			get
			{
				return this._ProjeceId;
			}
			set
			{
				if ((this._ProjeceId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjeceIdChanging(value);
					this.SendPropertyChanging();
					this._ProjeceId = value;
					this.SendPropertyChanged("ProjeceId");
					this.OnProjeceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Components_Base_Project", Storage="_Base_Project", ThisKey="ProjeceId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Base_Components.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Base_Components.Add(this);
						this._ProjeceId = value.ProjectId;
					}
					else
					{
						this._ProjeceId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Consumables")]
	public partial class Base_Consumables : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConsumablesId;
		
		private string _ConsumablesCode;
		
		private string _ConsumablesName;
		
		private string _ConsumablesType;
		
		private string _SteelType;
		
		private string _SteelFormat;
		
		private string _Standard;
		
		private string _Remark;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<HJGL_WeldJoint> _Consumables;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConsumablesIdChanging(string value);
    partial void OnConsumablesIdChanged();
    partial void OnConsumablesCodeChanging(string value);
    partial void OnConsumablesCodeChanged();
    partial void OnConsumablesNameChanging(string value);
    partial void OnConsumablesNameChanged();
    partial void OnConsumablesTypeChanging(string value);
    partial void OnConsumablesTypeChanged();
    partial void OnSteelTypeChanging(string value);
    partial void OnSteelTypeChanged();
    partial void OnSteelFormatChanging(string value);
    partial void OnSteelFormatChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Consumables()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._Consumables = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_Consumables), new Action<HJGL_WeldJoint>(this.detach_Consumables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumablesId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConsumablesId
		{
			get
			{
				return this._ConsumablesId;
			}
			set
			{
				if ((this._ConsumablesId != value))
				{
					this.OnConsumablesIdChanging(value);
					this.SendPropertyChanging();
					this._ConsumablesId = value;
					this.SendPropertyChanged("ConsumablesId");
					this.OnConsumablesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumablesCode", DbType="NVarChar(50)")]
		public string ConsumablesCode
		{
			get
			{
				return this._ConsumablesCode;
			}
			set
			{
				if ((this._ConsumablesCode != value))
				{
					this.OnConsumablesCodeChanging(value);
					this.SendPropertyChanging();
					this._ConsumablesCode = value;
					this.SendPropertyChanged("ConsumablesCode");
					this.OnConsumablesCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumablesName", DbType="NVarChar(50)")]
		public string ConsumablesName
		{
			get
			{
				return this._ConsumablesName;
			}
			set
			{
				if ((this._ConsumablesName != value))
				{
					this.OnConsumablesNameChanging(value);
					this.SendPropertyChanging();
					this._ConsumablesName = value;
					this.SendPropertyChanged("ConsumablesName");
					this.OnConsumablesNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumablesType", DbType="NVarChar(50)")]
		public string ConsumablesType
		{
			get
			{
				return this._ConsumablesType;
			}
			set
			{
				if ((this._ConsumablesType != value))
				{
					this.OnConsumablesTypeChanging(value);
					this.SendPropertyChanging();
					this._ConsumablesType = value;
					this.SendPropertyChanged("ConsumablesType");
					this.OnConsumablesTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteelType", DbType="NVarChar(50)")]
		public string SteelType
		{
			get
			{
				return this._SteelType;
			}
			set
			{
				if ((this._SteelType != value))
				{
					this.OnSteelTypeChanging(value);
					this.SendPropertyChanging();
					this._SteelType = value;
					this.SendPropertyChanged("SteelType");
					this.OnSteelTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteelFormat", DbType="NVarChar(50)")]
		public string SteelFormat
		{
			get
			{
				return this._SteelFormat;
			}
			set
			{
				if ((this._SteelFormat != value))
				{
					this.OnSteelFormatChanging(value);
					this.SendPropertyChanging();
					this._SteelFormat = value;
					this.SendPropertyChanged("SteelFormat");
					this.OnSteelFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(50)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Consumables", Storage="_HJGL_WeldJoint", ThisKey="ConsumablesId", OtherKey="WeldingRod", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Consumables1", Storage="_Consumables", ThisKey="ConsumablesId", OtherKey="WeldingWire", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> Consumables
		{
			get
			{
				return this._Consumables;
			}
			set
			{
				this._Consumables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_Consumables = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_Consumables = null;
		}
		
		private void attach_Consumables(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.WeldingWireBase_Consumables = this;
		}
		
		private void detach_Consumables(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.WeldingWireBase_Consumables = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_CostType")]
	public partial class Base_CostType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CostTypeId;
		
		private string _CostTypeCode;
		
		private string _CostTypeName;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCostTypeIdChanging(string value);
    partial void OnCostTypeIdChanged();
    partial void OnCostTypeCodeChanging(string value);
    partial void OnCostTypeCodeChanged();
    partial void OnCostTypeNameChanging(string value);
    partial void OnCostTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_CostType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CostTypeId
		{
			get
			{
				return this._CostTypeId;
			}
			set
			{
				if ((this._CostTypeId != value))
				{
					this.OnCostTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CostTypeId = value;
					this.SendPropertyChanged("CostTypeId");
					this.OnCostTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTypeCode", DbType="NVarChar(50)")]
		public string CostTypeCode
		{
			get
			{
				return this._CostTypeCode;
			}
			set
			{
				if ((this._CostTypeCode != value))
				{
					this.OnCostTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._CostTypeCode = value;
					this.SendPropertyChanged("CostTypeCode");
					this.OnCostTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTypeName", DbType="NVarChar(50)")]
		public string CostTypeName
		{
			get
			{
				return this._CostTypeName;
			}
			set
			{
				if ((this._CostTypeName != value))
				{
					this.OnCostTypeNameChanging(value);
					this.SendPropertyChanging();
					this._CostTypeName = value;
					this.SendPropertyChanged("CostTypeName");
					this.OnCostTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Defect")]
	public partial class Base_Defect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DefectId;
		
		private string _DefectName;
		
		private string _DefectEngName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDefectIdChanging(int value);
    partial void OnDefectIdChanged();
    partial void OnDefectNameChanging(string value);
    partial void OnDefectNameChanged();
    partial void OnDefectEngNameChanging(string value);
    partial void OnDefectEngNameChanged();
    #endregion
		
		public Base_Defect()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefectId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DefectId
		{
			get
			{
				return this._DefectId;
			}
			set
			{
				if ((this._DefectId != value))
				{
					this.OnDefectIdChanging(value);
					this.SendPropertyChanging();
					this._DefectId = value;
					this.SendPropertyChanged("DefectId");
					this.OnDefectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefectName", DbType="NVarChar(60)")]
		public string DefectName
		{
			get
			{
				return this._DefectName;
			}
			set
			{
				if ((this._DefectName != value))
				{
					this.OnDefectNameChanging(value);
					this.SendPropertyChanging();
					this._DefectName = value;
					this.SendPropertyChanged("DefectName");
					this.OnDefectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefectEngName", DbType="NVarChar(60)")]
		public string DefectEngName
		{
			get
			{
				return this._DefectEngName;
			}
			set
			{
				if ((this._DefectEngName != value))
				{
					this.OnDefectEngNameChanging(value);
					this.SendPropertyChanging();
					this._DefectEngName = value;
					this.SendPropertyChanged("DefectEngName");
					this.OnDefectEngNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Depart")]
	public partial class Base_Depart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartId;
		
		private string _DepartCode;
		
		private string _DepartName;
		
		private string _Remark;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
		private EntitySet<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnDepartCodeChanging(string value);
    partial void OnDepartCodeChanged();
    partial void OnDepartNameChanging(string value);
    partial void OnDepartNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Depart()
		{
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			this._Sys_User = new EntitySet<Sys_User>(new Action<Sys_User>(this.attach_Sys_User), new Action<Sys_User>(this.detach_Sys_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartCode", DbType="NVarChar(50)")]
		public string DepartCode
		{
			get
			{
				return this._DepartCode;
			}
			set
			{
				if ((this._DepartCode != value))
				{
					this.OnDepartCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartCode = value;
					this.SendPropertyChanged("DepartCode");
					this.OnDepartCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartName
		{
			get
			{
				return this._DepartName;
			}
			set
			{
				if ((this._DepartName != value))
				{
					this.OnDepartNameChanging(value);
					this.SendPropertyChanging();
					this._DepartName = value;
					this.SendPropertyChanged("DepartName");
					this.OnDepartNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Depart", Storage="_SitePerson_Person", ThisKey="DepartId", OtherKey="DepartId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Depart", Storage="_Sys_User", ThisKey="DepartId", OtherKey="DepartId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_User> Sys_User
		{
			get
			{
				return this._Sys_User;
			}
			set
			{
				this._Sys_User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = null;
		}
		
		private void attach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = this;
		}
		
		private void detach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Depart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_DesignProfessional")]
	public partial class Base_DesignProfessional : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DesignProfessionalId;
		
		private string _DesignProfessionalCode;
		
		private string _ProfessionalName;
		
		private System.Nullable<int> _SortIndex;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesignProfessionalIdChanging(string value);
    partial void OnDesignProfessionalIdChanged();
    partial void OnDesignProfessionalCodeChanging(string value);
    partial void OnDesignProfessionalCodeChanged();
    partial void OnProfessionalNameChanging(string value);
    partial void OnProfessionalNameChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Base_DesignProfessional()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignProfessionalId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DesignProfessionalId
		{
			get
			{
				return this._DesignProfessionalId;
			}
			set
			{
				if ((this._DesignProfessionalId != value))
				{
					this.OnDesignProfessionalIdChanging(value);
					this.SendPropertyChanging();
					this._DesignProfessionalId = value;
					this.SendPropertyChanged("DesignProfessionalId");
					this.OnDesignProfessionalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignProfessionalCode", DbType="NVarChar(10)")]
		public string DesignProfessionalCode
		{
			get
			{
				return this._DesignProfessionalCode;
			}
			set
			{
				if ((this._DesignProfessionalCode != value))
				{
					this.OnDesignProfessionalCodeChanging(value);
					this.SendPropertyChanging();
					this._DesignProfessionalCode = value;
					this.SendPropertyChanged("DesignProfessionalCode");
					this.OnDesignProfessionalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessionalName", DbType="NVarChar(30)")]
		public string ProfessionalName
		{
			get
			{
				return this._ProfessionalName;
			}
			set
			{
				if ((this._ProfessionalName != value))
				{
					this.OnProfessionalNameChanging(value);
					this.SendPropertyChanging();
					this._ProfessionalName = value;
					this.SendPropertyChanged("ProfessionalName");
					this.OnProfessionalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_DetectionRate")]
	public partial class Base_DetectionRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DetectionRateId;
		
		private string _DetectionRateCode;
		
		private System.Nullable<int> _DetectionRateValue;
		
		private string _Remark;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<HJGL_Batch_BatchTrust> _HJGL_Batch_BatchTrust;
		
		private EntitySet<HJGL_Pipeline> _HJGL_Pipeline;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetectionRateIdChanging(string value);
    partial void OnDetectionRateIdChanged();
    partial void OnDetectionRateCodeChanging(string value);
    partial void OnDetectionRateCodeChanged();
    partial void OnDetectionRateValueChanging(System.Nullable<int> value);
    partial void OnDetectionRateValueChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_DetectionRate()
		{
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._HJGL_Batch_BatchTrust = new EntitySet<HJGL_Batch_BatchTrust>(new Action<HJGL_Batch_BatchTrust>(this.attach_HJGL_Batch_BatchTrust), new Action<HJGL_Batch_BatchTrust>(this.detach_HJGL_Batch_BatchTrust));
			this._HJGL_Pipeline = new EntitySet<HJGL_Pipeline>(new Action<HJGL_Pipeline>(this.attach_HJGL_Pipeline), new Action<HJGL_Pipeline>(this.detach_HJGL_Pipeline));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					this.OnDetectionRateIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionRateId = value;
					this.SendPropertyChanged("DetectionRateId");
					this.OnDetectionRateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateCode", DbType="NVarChar(50)")]
		public string DetectionRateCode
		{
			get
			{
				return this._DetectionRateCode;
			}
			set
			{
				if ((this._DetectionRateCode != value))
				{
					this.OnDetectionRateCodeChanging(value);
					this.SendPropertyChanging();
					this._DetectionRateCode = value;
					this.SendPropertyChanged("DetectionRateCode");
					this.OnDetectionRateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateValue", DbType="Int")]
		public System.Nullable<int> DetectionRateValue
		{
			get
			{
				return this._DetectionRateValue;
			}
			set
			{
				if ((this._DetectionRateValue != value))
				{
					this.OnDetectionRateValueChanging(value);
					this.SendPropertyChanging();
					this._DetectionRateValue = value;
					this.SendPropertyChanged("DetectionRateValue");
					this.OnDetectionRateValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Base_DetectionRate", Storage="_HJGL_Batch_PointBatch", ThisKey="DetectionRateId", OtherKey="DetectionRateId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrust_Base_DetectionRate", Storage="_HJGL_Batch_BatchTrust", ThisKey="DetectionRateId", OtherKey="DetectionRateId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_BatchTrust> HJGL_Batch_BatchTrust
		{
			get
			{
				return this._HJGL_Batch_BatchTrust;
			}
			set
			{
				this._HJGL_Batch_BatchTrust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_DetectionRate", Storage="_HJGL_Pipeline", ThisKey="DetectionRateId", OtherKey="DetectionRateId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline;
			}
			set
			{
				this._HJGL_Pipeline.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionRate = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionRate = null;
		}
		
		private void attach_HJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionRate = this;
		}
		
		private void detach_HJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionRate = null;
		}
		
		private void attach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionRate = this;
		}
		
		private void detach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionRate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_DetectionType")]
	public partial class Base_DetectionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DetectionTypeId;
		
		private string _DetectionTypeCode;
		
		private string _DetectionTypeName;
		
		private string _SysType;
		
		private System.Nullable<decimal> _SecuritySpace;
		
		private string _InjuryDegree;
		
		private string _Remark;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<HJGL_Batch_BatchTrust> _HJGL_Batch_BatchTrust;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetectionTypeIdChanging(string value);
    partial void OnDetectionTypeIdChanged();
    partial void OnDetectionTypeCodeChanging(string value);
    partial void OnDetectionTypeCodeChanged();
    partial void OnDetectionTypeNameChanging(string value);
    partial void OnDetectionTypeNameChanged();
    partial void OnSysTypeChanging(string value);
    partial void OnSysTypeChanged();
    partial void OnSecuritySpaceChanging(System.Nullable<decimal> value);
    partial void OnSecuritySpaceChanged();
    partial void OnInjuryDegreeChanging(string value);
    partial void OnInjuryDegreeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_DetectionType()
		{
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._HJGL_Batch_BatchTrust = new EntitySet<HJGL_Batch_BatchTrust>(new Action<HJGL_Batch_BatchTrust>(this.attach_HJGL_Batch_BatchTrust), new Action<HJGL_Batch_BatchTrust>(this.detach_HJGL_Batch_BatchTrust));
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					this.OnDetectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeId = value;
					this.SendPropertyChanged("DetectionTypeId");
					this.OnDetectionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeCode", DbType="NVarChar(50)")]
		public string DetectionTypeCode
		{
			get
			{
				return this._DetectionTypeCode;
			}
			set
			{
				if ((this._DetectionTypeCode != value))
				{
					this.OnDetectionTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeCode = value;
					this.SendPropertyChanged("DetectionTypeCode");
					this.OnDetectionTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeName", DbType="NVarChar(50)")]
		public string DetectionTypeName
		{
			get
			{
				return this._DetectionTypeName;
			}
			set
			{
				if ((this._DetectionTypeName != value))
				{
					this.OnDetectionTypeNameChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeName = value;
					this.SendPropertyChanged("DetectionTypeName");
					this.OnDetectionTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysType", DbType="NVarChar(50)")]
		public string SysType
		{
			get
			{
				return this._SysType;
			}
			set
			{
				if ((this._SysType != value))
				{
					this.OnSysTypeChanging(value);
					this.SendPropertyChanging();
					this._SysType = value;
					this.SendPropertyChanged("SysType");
					this.OnSysTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecuritySpace", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> SecuritySpace
		{
			get
			{
				return this._SecuritySpace;
			}
			set
			{
				if ((this._SecuritySpace != value))
				{
					this.OnSecuritySpaceChanging(value);
					this.SendPropertyChanging();
					this._SecuritySpace = value;
					this.SendPropertyChanged("SecuritySpace");
					this.OnSecuritySpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InjuryDegree", DbType="NVarChar(100)")]
		public string InjuryDegree
		{
			get
			{
				return this._InjuryDegree;
			}
			set
			{
				if ((this._InjuryDegree != value))
				{
					this.OnInjuryDegreeChanging(value);
					this.SendPropertyChanging();
					this._InjuryDegree = value;
					this.SendPropertyChanged("InjuryDegree");
					this.OnInjuryDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Base_DetectionType", Storage="_HJGL_Batch_PointBatch", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrust_Base_DetectionType", Storage="_HJGL_Batch_BatchTrust", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_BatchTrust> HJGL_Batch_BatchTrust
		{
			get
			{
				return this._HJGL_Batch_BatchTrust;
			}
			set
			{
				this._HJGL_Batch_BatchTrust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_Base_DetectionType", Storage="_HJGL_RepairRecord", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_DetectionType", Storage="_HJGL_WeldJoint", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = null;
		}
		
		private void attach_HJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = this;
		}
		
		private void detach_HJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = null;
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = null;
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_DetectionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_DNCompare")]
	public partial class Base_DNCompare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DNCompareId;
		
		private System.Nullable<int> _DN;
		
		private System.Nullable<decimal> _PipeSize;
		
		private System.Nullable<decimal> _OutSizeDia;
		
		private System.Nullable<decimal> _SCH10;
		
		private System.Nullable<decimal> _SCH20;
		
		private System.Nullable<decimal> _SCH30;
		
		private System.Nullable<decimal> _STD;
		
		private System.Nullable<decimal> _SCH40;
		
		private System.Nullable<decimal> _SCH60;
		
		private System.Nullable<decimal> _XS;
		
		private System.Nullable<decimal> _SCH80;
		
		private System.Nullable<decimal> _SCH100;
		
		private System.Nullable<decimal> _SCH120;
		
		private System.Nullable<decimal> _SCH140;
		
		private System.Nullable<decimal> _SCH160;
		
		private System.Nullable<decimal> _XXS;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDNCompareIdChanging(string value);
    partial void OnDNCompareIdChanged();
    partial void OnDNChanging(System.Nullable<int> value);
    partial void OnDNChanged();
    partial void OnPipeSizeChanging(System.Nullable<decimal> value);
    partial void OnPipeSizeChanged();
    partial void OnOutSizeDiaChanging(System.Nullable<decimal> value);
    partial void OnOutSizeDiaChanged();
    partial void OnSCH10Changing(System.Nullable<decimal> value);
    partial void OnSCH10Changed();
    partial void OnSCH20Changing(System.Nullable<decimal> value);
    partial void OnSCH20Changed();
    partial void OnSCH30Changing(System.Nullable<decimal> value);
    partial void OnSCH30Changed();
    partial void OnSTDChanging(System.Nullable<decimal> value);
    partial void OnSTDChanged();
    partial void OnSCH40Changing(System.Nullable<decimal> value);
    partial void OnSCH40Changed();
    partial void OnSCH60Changing(System.Nullable<decimal> value);
    partial void OnSCH60Changed();
    partial void OnXSChanging(System.Nullable<decimal> value);
    partial void OnXSChanged();
    partial void OnSCH80Changing(System.Nullable<decimal> value);
    partial void OnSCH80Changed();
    partial void OnSCH100Changing(System.Nullable<decimal> value);
    partial void OnSCH100Changed();
    partial void OnSCH120Changing(System.Nullable<decimal> value);
    partial void OnSCH120Changed();
    partial void OnSCH140Changing(System.Nullable<decimal> value);
    partial void OnSCH140Changed();
    partial void OnSCH160Changing(System.Nullable<decimal> value);
    partial void OnSCH160Changed();
    partial void OnXXSChanging(System.Nullable<decimal> value);
    partial void OnXXSChanged();
    #endregion
		
		public Base_DNCompare()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNCompareId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DNCompareId
		{
			get
			{
				return this._DNCompareId;
			}
			set
			{
				if ((this._DNCompareId != value))
				{
					this.OnDNCompareIdChanging(value);
					this.SendPropertyChanging();
					this._DNCompareId = value;
					this.SendPropertyChanged("DNCompareId");
					this.OnDNCompareIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DN", DbType="Int")]
		public System.Nullable<int> DN
		{
			get
			{
				return this._DN;
			}
			set
			{
				if ((this._DN != value))
				{
					this.OnDNChanging(value);
					this.SendPropertyChanging();
					this._DN = value;
					this.SendPropertyChanged("DN");
					this.OnDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipeSize", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> PipeSize
		{
			get
			{
				return this._PipeSize;
			}
			set
			{
				if ((this._PipeSize != value))
				{
					this.OnPipeSizeChanging(value);
					this.SendPropertyChanging();
					this._PipeSize = value;
					this.SendPropertyChanged("PipeSize");
					this.OnPipeSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutSizeDia", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> OutSizeDia
		{
			get
			{
				return this._OutSizeDia;
			}
			set
			{
				if ((this._OutSizeDia != value))
				{
					this.OnOutSizeDiaChanging(value);
					this.SendPropertyChanging();
					this._OutSizeDia = value;
					this.SendPropertyChanged("OutSizeDia");
					this.OnOutSizeDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH10", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH10
		{
			get
			{
				return this._SCH10;
			}
			set
			{
				if ((this._SCH10 != value))
				{
					this.OnSCH10Changing(value);
					this.SendPropertyChanging();
					this._SCH10 = value;
					this.SendPropertyChanged("SCH10");
					this.OnSCH10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH20", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH20
		{
			get
			{
				return this._SCH20;
			}
			set
			{
				if ((this._SCH20 != value))
				{
					this.OnSCH20Changing(value);
					this.SendPropertyChanging();
					this._SCH20 = value;
					this.SendPropertyChanged("SCH20");
					this.OnSCH20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH30", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH30
		{
			get
			{
				return this._SCH30;
			}
			set
			{
				if ((this._SCH30 != value))
				{
					this.OnSCH30Changing(value);
					this.SendPropertyChanging();
					this._SCH30 = value;
					this.SendPropertyChanged("SCH30");
					this.OnSCH30Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STD", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> STD
		{
			get
			{
				return this._STD;
			}
			set
			{
				if ((this._STD != value))
				{
					this.OnSTDChanging(value);
					this.SendPropertyChanging();
					this._STD = value;
					this.SendPropertyChanged("STD");
					this.OnSTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH40", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH40
		{
			get
			{
				return this._SCH40;
			}
			set
			{
				if ((this._SCH40 != value))
				{
					this.OnSCH40Changing(value);
					this.SendPropertyChanging();
					this._SCH40 = value;
					this.SendPropertyChanged("SCH40");
					this.OnSCH40Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH60", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH60
		{
			get
			{
				return this._SCH60;
			}
			set
			{
				if ((this._SCH60 != value))
				{
					this.OnSCH60Changing(value);
					this.SendPropertyChanging();
					this._SCH60 = value;
					this.SendPropertyChanged("SCH60");
					this.OnSCH60Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XS", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> XS
		{
			get
			{
				return this._XS;
			}
			set
			{
				if ((this._XS != value))
				{
					this.OnXSChanging(value);
					this.SendPropertyChanging();
					this._XS = value;
					this.SendPropertyChanged("XS");
					this.OnXSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH80", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH80
		{
			get
			{
				return this._SCH80;
			}
			set
			{
				if ((this._SCH80 != value))
				{
					this.OnSCH80Changing(value);
					this.SendPropertyChanging();
					this._SCH80 = value;
					this.SendPropertyChanged("SCH80");
					this.OnSCH80Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH100", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH100
		{
			get
			{
				return this._SCH100;
			}
			set
			{
				if ((this._SCH100 != value))
				{
					this.OnSCH100Changing(value);
					this.SendPropertyChanging();
					this._SCH100 = value;
					this.SendPropertyChanged("SCH100");
					this.OnSCH100Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH120", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH120
		{
			get
			{
				return this._SCH120;
			}
			set
			{
				if ((this._SCH120 != value))
				{
					this.OnSCH120Changing(value);
					this.SendPropertyChanging();
					this._SCH120 = value;
					this.SendPropertyChanged("SCH120");
					this.OnSCH120Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH140", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH140
		{
			get
			{
				return this._SCH140;
			}
			set
			{
				if ((this._SCH140 != value))
				{
					this.OnSCH140Changing(value);
					this.SendPropertyChanging();
					this._SCH140 = value;
					this.SendPropertyChanged("SCH140");
					this.OnSCH140Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCH160", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> SCH160
		{
			get
			{
				return this._SCH160;
			}
			set
			{
				if ((this._SCH160 != value))
				{
					this.OnSCH160Changing(value);
					this.SendPropertyChanging();
					this._SCH160 = value;
					this.SendPropertyChanged("SCH160");
					this.OnSCH160Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XXS", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> XXS
		{
			get
			{
				return this._XXS;
			}
			set
			{
				if ((this._XXS != value))
				{
					this.OnXXSChanging(value);
					this.SendPropertyChanging();
					this._XXS = value;
					this.SendPropertyChanged("XXS");
					this.OnXXSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_EmergencyType")]
	public partial class Base_EmergencyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmergencyTypeId;
		
		private string _EmergencyTypeCode;
		
		private string _EmergencyTypeName;
		
		private string _Remark;
		
		private EntitySet<Technique_Emergency> _Technique_Emergency;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmergencyTypeIdChanging(string value);
    partial void OnEmergencyTypeIdChanged();
    partial void OnEmergencyTypeCodeChanging(string value);
    partial void OnEmergencyTypeCodeChanged();
    partial void OnEmergencyTypeNameChanging(string value);
    partial void OnEmergencyTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_EmergencyType()
		{
			this._Technique_Emergency = new EntitySet<Technique_Emergency>(new Action<Technique_Emergency>(this.attach_Technique_Emergency), new Action<Technique_Emergency>(this.detach_Technique_Emergency));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmergencyTypeId
		{
			get
			{
				return this._EmergencyTypeId;
			}
			set
			{
				if ((this._EmergencyTypeId != value))
				{
					this.OnEmergencyTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmergencyTypeId = value;
					this.SendPropertyChanged("EmergencyTypeId");
					this.OnEmergencyTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyTypeCode", DbType="NVarChar(50)")]
		public string EmergencyTypeCode
		{
			get
			{
				return this._EmergencyTypeCode;
			}
			set
			{
				if ((this._EmergencyTypeCode != value))
				{
					this.OnEmergencyTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmergencyTypeCode = value;
					this.SendPropertyChanged("EmergencyTypeCode");
					this.OnEmergencyTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyTypeName", DbType="NVarChar(100)")]
		public string EmergencyTypeName
		{
			get
			{
				return this._EmergencyTypeName;
			}
			set
			{
				if ((this._EmergencyTypeName != value))
				{
					this.OnEmergencyTypeNameChanging(value);
					this.SendPropertyChanging();
					this._EmergencyTypeName = value;
					this.SendPropertyChanged("EmergencyTypeName");
					this.OnEmergencyTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_Emergency_Base_EmergencyType", Storage="_Technique_Emergency", ThisKey="EmergencyTypeId", OtherKey="EmergencyTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Technique_Emergency> Technique_Emergency
		{
			get
			{
				return this._Technique_Emergency;
			}
			set
			{
				this._Technique_Emergency.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Technique_Emergency(Technique_Emergency entity)
		{
			this.SendPropertyChanging();
			entity.Base_EmergencyType = this;
		}
		
		private void detach_Technique_Emergency(Technique_Emergency entity)
		{
			this.SendPropertyChanging();
			entity.Base_EmergencyType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_GrooveType")]
	public partial class Base_GrooveType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _GrooveTypeId;
		
		private string _GrooveTypeCode;
		
		private string _GrooveTypeName;
		
		private string _Remark;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGrooveTypeIdChanging(string value);
    partial void OnGrooveTypeIdChanged();
    partial void OnGrooveTypeCodeChanging(string value);
    partial void OnGrooveTypeCodeChanged();
    partial void OnGrooveTypeNameChanging(string value);
    partial void OnGrooveTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_GrooveType()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string GrooveTypeId
		{
			get
			{
				return this._GrooveTypeId;
			}
			set
			{
				if ((this._GrooveTypeId != value))
				{
					this.OnGrooveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._GrooveTypeId = value;
					this.SendPropertyChanged("GrooveTypeId");
					this.OnGrooveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveTypeCode", DbType="NVarChar(50)")]
		public string GrooveTypeCode
		{
			get
			{
				return this._GrooveTypeCode;
			}
			set
			{
				if ((this._GrooveTypeCode != value))
				{
					this.OnGrooveTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._GrooveTypeCode = value;
					this.SendPropertyChanged("GrooveTypeCode");
					this.OnGrooveTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveTypeName", DbType="NVarChar(50)")]
		public string GrooveTypeName
		{
			get
			{
				return this._GrooveTypeName;
			}
			set
			{
				if ((this._GrooveTypeName != value))
				{
					this.OnGrooveTypeNameChanging(value);
					this.SendPropertyChanging();
					this._GrooveTypeName = value;
					this.SendPropertyChanged("GrooveTypeName");
					this.OnGrooveTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_GrooveType", Storage="_HJGL_WeldJoint", ThisKey="GrooveTypeId", OtherKey="GrooveTypeId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_GrooveType = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_GrooveType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_HSSEStandardListType")]
	public partial class Base_HSSEStandardListType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TypeId;
		
		private string _TypeCode;
		
		private string _TypeName;
		
		private string _Remark;
		
		private EntitySet<Law_HSSEStandardsList> _Law_HSSEStandardsList;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIdChanging(string value);
    partial void OnTypeIdChanged();
    partial void OnTypeCodeChanging(string value);
    partial void OnTypeCodeChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_HSSEStandardListType()
		{
			this._Law_HSSEStandardsList = new EntitySet<Law_HSSEStandardsList>(new Action<Law_HSSEStandardsList>(this.attach_Law_HSSEStandardsList), new Action<Law_HSSEStandardsList>(this.detach_Law_HSSEStandardsList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCode", DbType="NVarChar(50)")]
		public string TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					this.OnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeCode = value;
					this.SendPropertyChanged("TypeCode");
					this.OnTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(50)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_HSSEStandardsList_Base_HSSEStandardListType", Storage="_Law_HSSEStandardsList", ThisKey="TypeId", OtherKey="TypeId", DeleteRule="NO ACTION")]
		public EntitySet<Law_HSSEStandardsList> Law_HSSEStandardsList
		{
			get
			{
				return this._Law_HSSEStandardsList;
			}
			set
			{
				this._Law_HSSEStandardsList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Law_HSSEStandardsList(Law_HSSEStandardsList entity)
		{
			this.SendPropertyChanging();
			entity.Base_HSSEStandardListType = this;
		}
		
		private void detach_Law_HSSEStandardsList(Law_HSSEStandardsList entity)
		{
			this.SendPropertyChanging();
			entity.Base_HSSEStandardListType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_LawsRegulationsType")]
	public partial class Base_LawsRegulationsType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _Remark;
		
		private EntitySet<Law_LawRegulationList> _Law_LawRegulationList;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_LawsRegulationsType()
		{
			this._Law_LawRegulationList = new EntitySet<Law_LawRegulationList>(new Action<Law_LawRegulationList>(this.attach_Law_LawRegulationList), new Action<Law_LawRegulationList>(this.detach_Law_LawRegulationList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_LawRegulationList_Base_LawsRegulationsType", Storage="_Law_LawRegulationList", ThisKey="Id", OtherKey="LawsRegulationsTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Law_LawRegulationList> Law_LawRegulationList
		{
			get
			{
				return this._Law_LawRegulationList;
			}
			set
			{
				this._Law_LawRegulationList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Law_LawRegulationList(Law_LawRegulationList entity)
		{
			this.SendPropertyChanging();
			entity.Base_LawsRegulationsType = this;
		}
		
		private void detach_Law_LawRegulationList(Law_LawRegulationList entity)
		{
			this.SendPropertyChanging();
			entity.Base_LawsRegulationsType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_LicenseType")]
	public partial class Base_LicenseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LicenseTypeId;
		
		private string _LicenseTypeCode;
		
		private string _LicenseTypeName;
		
		private string _Remark;
		
		private string _LicenseContents;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLicenseTypeIdChanging(string value);
    partial void OnLicenseTypeIdChanged();
    partial void OnLicenseTypeCodeChanging(string value);
    partial void OnLicenseTypeCodeChanged();
    partial void OnLicenseTypeNameChanging(string value);
    partial void OnLicenseTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnLicenseContentsChanging(string value);
    partial void OnLicenseContentsChanged();
    #endregion
		
		public Base_LicenseType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LicenseTypeId
		{
			get
			{
				return this._LicenseTypeId;
			}
			set
			{
				if ((this._LicenseTypeId != value))
				{
					this.OnLicenseTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LicenseTypeId = value;
					this.SendPropertyChanged("LicenseTypeId");
					this.OnLicenseTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseTypeCode", DbType="NVarChar(50)")]
		public string LicenseTypeCode
		{
			get
			{
				return this._LicenseTypeCode;
			}
			set
			{
				if ((this._LicenseTypeCode != value))
				{
					this.OnLicenseTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._LicenseTypeCode = value;
					this.SendPropertyChanged("LicenseTypeCode");
					this.OnLicenseTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseTypeName", DbType="NVarChar(50)")]
		public string LicenseTypeName
		{
			get
			{
				return this._LicenseTypeName;
			}
			set
			{
				if ((this._LicenseTypeName != value))
				{
					this.OnLicenseTypeNameChanging(value);
					this.SendPropertyChanging();
					this._LicenseTypeName = value;
					this.SendPropertyChanged("LicenseTypeName");
					this.OnLicenseTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseContents", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string LicenseContents
		{
			get
			{
				return this._LicenseContents;
			}
			set
			{
				if ((this._LicenseContents != value))
				{
					this.OnLicenseContentsChanging(value);
					this.SendPropertyChanging();
					this._LicenseContents = value;
					this.SendPropertyChanged("LicenseContents");
					this.OnLicenseContentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_ManageRuleType")]
	public partial class Base_ManageRuleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ManageRuleTypeId;
		
		private string _ManageRuleTypeCode;
		
		private string _ManageRuleTypeName;
		
		private string _Remark;
		
		private EntitySet<Law_ManageRule> _Law_ManageRule;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManageRuleTypeIdChanging(string value);
    partial void OnManageRuleTypeIdChanged();
    partial void OnManageRuleTypeCodeChanging(string value);
    partial void OnManageRuleTypeCodeChanged();
    partial void OnManageRuleTypeNameChanging(string value);
    partial void OnManageRuleTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_ManageRuleType()
		{
			this._Law_ManageRule = new EntitySet<Law_ManageRule>(new Action<Law_ManageRule>(this.attach_Law_ManageRule), new Action<Law_ManageRule>(this.detach_Law_ManageRule));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ManageRuleTypeId
		{
			get
			{
				return this._ManageRuleTypeId;
			}
			set
			{
				if ((this._ManageRuleTypeId != value))
				{
					this.OnManageRuleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ManageRuleTypeId = value;
					this.SendPropertyChanged("ManageRuleTypeId");
					this.OnManageRuleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleTypeCode", DbType="NVarChar(50)")]
		public string ManageRuleTypeCode
		{
			get
			{
				return this._ManageRuleTypeCode;
			}
			set
			{
				if ((this._ManageRuleTypeCode != value))
				{
					this.OnManageRuleTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._ManageRuleTypeCode = value;
					this.SendPropertyChanged("ManageRuleTypeCode");
					this.OnManageRuleTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleTypeName", DbType="NVarChar(50)")]
		public string ManageRuleTypeName
		{
			get
			{
				return this._ManageRuleTypeName;
			}
			set
			{
				if ((this._ManageRuleTypeName != value))
				{
					this.OnManageRuleTypeNameChanging(value);
					this.SendPropertyChanging();
					this._ManageRuleTypeName = value;
					this.SendPropertyChanged("ManageRuleTypeName");
					this.OnManageRuleTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_ManageRule_Base_ManageRuleType", Storage="_Law_ManageRule", ThisKey="ManageRuleTypeId", OtherKey="ManageRuleTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Law_ManageRule> Law_ManageRule
		{
			get
			{
				return this._Law_ManageRule;
			}
			set
			{
				this._Law_ManageRule.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Law_ManageRule(Law_ManageRule entity)
		{
			this.SendPropertyChanging();
			entity.Base_ManageRuleType = this;
		}
		
		private void detach_Law_ManageRule(Law_ManageRule entity)
		{
			this.SendPropertyChanging();
			entity.Base_ManageRuleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Material")]
	public partial class Base_Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaterialId;
		
		private string _MaterialCode;
		
		private string _MaterialType;
		
		private string _SteelType;
		
		private string _MaterialClass;
		
		private string _MaterialGroup;
		
		private string _Remark;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<HJGL_WeldJoint> _Material;
		
		private EntitySet<WPQ_WPQList> _WPQ_WPQList;
		
		private EntitySet<WPQ_WPQList> _WPQ_WPQList_Base_Material2;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaterialIdChanging(string value);
    partial void OnMaterialIdChanged();
    partial void OnMaterialCodeChanging(string value);
    partial void OnMaterialCodeChanged();
    partial void OnMaterialTypeChanging(string value);
    partial void OnMaterialTypeChanged();
    partial void OnSteelTypeChanging(string value);
    partial void OnSteelTypeChanged();
    partial void OnMaterialClassChanging(string value);
    partial void OnMaterialClassChanged();
    partial void OnMaterialGroupChanging(string value);
    partial void OnMaterialGroupChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Material()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._Material = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_Material), new Action<HJGL_WeldJoint>(this.detach_Material));
			this._WPQ_WPQList = new EntitySet<WPQ_WPQList>(new Action<WPQ_WPQList>(this.attach_WPQ_WPQList), new Action<WPQ_WPQList>(this.detach_WPQ_WPQList));
			this._WPQ_WPQList_Base_Material2 = new EntitySet<WPQ_WPQList>(new Action<WPQ_WPQList>(this.attach_WPQ_WPQList_Base_Material2), new Action<WPQ_WPQList>(this.detach_WPQ_WPQList_Base_Material2));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaterialId
		{
			get
			{
				return this._MaterialId;
			}
			set
			{
				if ((this._MaterialId != value))
				{
					this.OnMaterialIdChanging(value);
					this.SendPropertyChanging();
					this._MaterialId = value;
					this.SendPropertyChanged("MaterialId");
					this.OnMaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="NVarChar(50)")]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this.OnMaterialCodeChanging(value);
					this.SendPropertyChanging();
					this._MaterialCode = value;
					this.SendPropertyChanged("MaterialCode");
					this.OnMaterialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialType", DbType="NVarChar(50)")]
		public string MaterialType
		{
			get
			{
				return this._MaterialType;
			}
			set
			{
				if ((this._MaterialType != value))
				{
					this.OnMaterialTypeChanging(value);
					this.SendPropertyChanging();
					this._MaterialType = value;
					this.SendPropertyChanged("MaterialType");
					this.OnMaterialTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteelType", DbType="NVarChar(50)")]
		public string SteelType
		{
			get
			{
				return this._SteelType;
			}
			set
			{
				if ((this._SteelType != value))
				{
					this.OnSteelTypeChanging(value);
					this.SendPropertyChanging();
					this._SteelType = value;
					this.SendPropertyChanged("SteelType");
					this.OnSteelTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialClass", DbType="NVarChar(50)")]
		public string MaterialClass
		{
			get
			{
				return this._MaterialClass;
			}
			set
			{
				if ((this._MaterialClass != value))
				{
					this.OnMaterialClassChanging(value);
					this.SendPropertyChanging();
					this._MaterialClass = value;
					this.SendPropertyChanged("MaterialClass");
					this.OnMaterialClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialGroup", DbType="NVarChar(50)")]
		public string MaterialGroup
		{
			get
			{
				return this._MaterialGroup;
			}
			set
			{
				if ((this._MaterialGroup != value))
				{
					this.OnMaterialGroupChanging(value);
					this.SendPropertyChanging();
					this._MaterialGroup = value;
					this.SendPropertyChanged("MaterialGroup");
					this.OnMaterialGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Material", Storage="_HJGL_WeldJoint", ThisKey="MaterialId", OtherKey="Material1Id", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Material1", Storage="_Material", ThisKey="MaterialId", OtherKey="Material2Id", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				this._Material.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WPQ_WPQList_Base_Material1", Storage="_WPQ_WPQList", ThisKey="MaterialId", OtherKey="MaterialId1", DeleteRule="NO ACTION")]
		public EntitySet<WPQ_WPQList> WPQ_WPQList
		{
			get
			{
				return this._WPQ_WPQList;
			}
			set
			{
				this._WPQ_WPQList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WPQ_WPQList_Base_Material2", Storage="_WPQ_WPQList_Base_Material2", ThisKey="MaterialId", OtherKey="MaterialId2", DeleteRule="NO ACTION")]
		public EntitySet<WPQ_WPQList> WPQ_WPQList_Base_Material2
		{
			get
			{
				return this._WPQ_WPQList_Base_Material2;
			}
			set
			{
				this._WPQ_WPQList_Base_Material2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_Material = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_Material = null;
		}
		
		private void attach_Material(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Material2 = this;
		}
		
		private void detach_Material(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Material2 = null;
		}
		
		private void attach_WPQ_WPQList(WPQ_WPQList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Material = this;
		}
		
		private void detach_WPQ_WPQList(WPQ_WPQList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Material = null;
		}
		
		private void attach_WPQ_WPQList_Base_Material2(WPQ_WPQList entity)
		{
			this.SendPropertyChanging();
			entity.MaterialId2Base_Material = this;
		}
		
		private void detach_WPQ_WPQList_Base_Material2(WPQ_WPQList entity)
		{
			this.SendPropertyChanging();
			entity.MaterialId2Base_Material = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Medium")]
	public partial class Base_Medium : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MediumId;
		
		private string _ProjectId;
		
		private string _MediumCode;
		
		private string _MediumName;
		
		private string _MediumAbbreviation;
		
		private System.Nullable<bool> _IsTestMedium;
		
		private string _Remark;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntitySet<HJGL_Pipeline> _HJGL_Pipeline;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMediumIdChanging(string value);
    partial void OnMediumIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnMediumCodeChanging(string value);
    partial void OnMediumCodeChanged();
    partial void OnMediumNameChanging(string value);
    partial void OnMediumNameChanged();
    partial void OnMediumAbbreviationChanging(string value);
    partial void OnMediumAbbreviationChanged();
    partial void OnIsTestMediumChanging(System.Nullable<bool> value);
    partial void OnIsTestMediumChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Medium()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._HJGL_Pipeline = new EntitySet<HJGL_Pipeline>(new Action<HJGL_Pipeline>(this.attach_HJGL_Pipeline), new Action<HJGL_Pipeline>(this.detach_HJGL_Pipeline));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MediumId
		{
			get
			{
				return this._MediumId;
			}
			set
			{
				if ((this._MediumId != value))
				{
					this.OnMediumIdChanging(value);
					this.SendPropertyChanging();
					this._MediumId = value;
					this.SendPropertyChanged("MediumId");
					this.OnMediumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumCode", DbType="NVarChar(50)")]
		public string MediumCode
		{
			get
			{
				return this._MediumCode;
			}
			set
			{
				if ((this._MediumCode != value))
				{
					this.OnMediumCodeChanging(value);
					this.SendPropertyChanging();
					this._MediumCode = value;
					this.SendPropertyChanged("MediumCode");
					this.OnMediumCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumName", DbType="NVarChar(50)")]
		public string MediumName
		{
			get
			{
				return this._MediumName;
			}
			set
			{
				if ((this._MediumName != value))
				{
					this.OnMediumNameChanging(value);
					this.SendPropertyChanging();
					this._MediumName = value;
					this.SendPropertyChanged("MediumName");
					this.OnMediumNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumAbbreviation", DbType="NVarChar(50)")]
		public string MediumAbbreviation
		{
			get
			{
				return this._MediumAbbreviation;
			}
			set
			{
				if ((this._MediumAbbreviation != value))
				{
					this.OnMediumAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._MediumAbbreviation = value;
					this.SendPropertyChanged("MediumAbbreviation");
					this.OnMediumAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTestMedium", DbType="Bit")]
		public System.Nullable<bool> IsTestMedium
		{
			get
			{
				return this._IsTestMedium;
			}
			set
			{
				if ((this._IsTestMedium != value))
				{
					this.OnIsTestMediumChanging(value);
					this.SendPropertyChanging();
					this._IsTestMedium = value;
					this.SendPropertyChanged("IsTestMedium");
					this.OnIsTestMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Medium_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Base_Medium.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Base_Medium.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_Medium", Storage="_HJGL_Pipeline", ThisKey="MediumId", OtherKey="MediumId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline;
			}
			set
			{
				this._HJGL_Pipeline.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_Medium = this;
		}
		
		private void detach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_Medium = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_PictureType")]
	public partial class Base_PictureType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PictureTypeId;
		
		private string _Code;
		
		private string _Name;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPictureTypeIdChanging(string value);
    partial void OnPictureTypeIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_PictureType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PictureTypeId
		{
			get
			{
				return this._PictureTypeId;
			}
			set
			{
				if ((this._PictureTypeId != value))
				{
					this.OnPictureTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PictureTypeId = value;
					this.SendPropertyChanged("PictureTypeId");
					this.OnPictureTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_PipingClass")]
	public partial class Base_PipingClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PipingClassId;
		
		private string _ProjectId;
		
		private string _PipingClassCode;
		
		private string _PipingClassName;
		
		private string _Remark;
		
		private string _PNO;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<HJGL_Pipeline> _HJGL_Pipeline;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPipingClassIdChanging(string value);
    partial void OnPipingClassIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnPipingClassCodeChanging(string value);
    partial void OnPipingClassCodeChanged();
    partial void OnPipingClassNameChanging(string value);
    partial void OnPipingClassNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnPNOChanging(string value);
    partial void OnPNOChanged();
    #endregion
		
		public Base_PipingClass()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._HJGL_Pipeline = new EntitySet<HJGL_Pipeline>(new Action<HJGL_Pipeline>(this.attach_HJGL_Pipeline), new Action<HJGL_Pipeline>(this.detach_HJGL_Pipeline));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PipingClassId
		{
			get
			{
				return this._PipingClassId;
			}
			set
			{
				if ((this._PipingClassId != value))
				{
					this.OnPipingClassIdChanging(value);
					this.SendPropertyChanging();
					this._PipingClassId = value;
					this.SendPropertyChanged("PipingClassId");
					this.OnPipingClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassCode", DbType="NVarChar(50)")]
		public string PipingClassCode
		{
			get
			{
				return this._PipingClassCode;
			}
			set
			{
				if ((this._PipingClassCode != value))
				{
					this.OnPipingClassCodeChanging(value);
					this.SendPropertyChanging();
					this._PipingClassCode = value;
					this.SendPropertyChanged("PipingClassCode");
					this.OnPipingClassCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassName", DbType="NVarChar(50)")]
		public string PipingClassName
		{
			get
			{
				return this._PipingClassName;
			}
			set
			{
				if ((this._PipingClassName != value))
				{
					this.OnPipingClassNameChanging(value);
					this.SendPropertyChanging();
					this._PipingClassName = value;
					this.SendPropertyChanged("PipingClassName");
					this.OnPipingClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNO", DbType="NVarChar(50)")]
		public string PNO
		{
			get
			{
				return this._PNO;
			}
			set
			{
				if ((this._PNO != value))
				{
					this.OnPNOChanging(value);
					this.SendPropertyChanging();
					this._PNO = value;
					this.SendPropertyChanged("PNO");
					this.OnPNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_PipingClass_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Base_PipingClass.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Base_PipingClass.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_Base_PipingClass", Storage="_HJGL_Batch_PointBatch", ThisKey="PipingClassId", OtherKey="PipingClassId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_PipingClass", Storage="_HJGL_Pipeline", ThisKey="PipingClassId", OtherKey="PipingClassId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline;
			}
			set
			{
				this._HJGL_Pipeline.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_PipingClass = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_PipingClass = null;
		}
		
		private void attach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_PipingClass = this;
		}
		
		private void detach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_PipingClass = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Position")]
	public partial class Base_Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PositionId;
		
		private string _PositionCode;
		
		private string _PositionName;
		
		private string _Remark;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPositionIdChanging(string value);
    partial void OnPositionIdChanged();
    partial void OnPositionCodeChanging(string value);
    partial void OnPositionCodeChanged();
    partial void OnPositionNameChanging(string value);
    partial void OnPositionNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Position()
		{
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionCode", DbType="NVarChar(50)")]
		public string PositionCode
		{
			get
			{
				return this._PositionCode;
			}
			set
			{
				if ((this._PositionCode != value))
				{
					this.OnPositionCodeChanging(value);
					this.SendPropertyChanging();
					this._PositionCode = value;
					this.SendPropertyChanged("PositionCode");
					this.OnPositionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionName", DbType="NVarChar(50)")]
		public string PositionName
		{
			get
			{
				return this._PositionName;
			}
			set
			{
				if ((this._PositionName != value))
				{
					this.OnPositionNameChanging(value);
					this.SendPropertyChanging();
					this._PositionName = value;
					this.SendPropertyChanged("PositionName");
					this.OnPositionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Position", Storage="_SitePerson_Person", ThisKey="PositionId", OtherKey="PositionId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Position = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Position = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_PostTitle")]
	public partial class Base_PostTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PostTitleId;
		
		private string _PostTitleName;
		
		private string _PostTitleCode;
		
		private string _Remark;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPostTitleIdChanging(string value);
    partial void OnPostTitleIdChanged();
    partial void OnPostTitleNameChanging(string value);
    partial void OnPostTitleNameChanged();
    partial void OnPostTitleCodeChanging(string value);
    partial void OnPostTitleCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_PostTitle()
		{
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PostTitleId
		{
			get
			{
				return this._PostTitleId;
			}
			set
			{
				if ((this._PostTitleId != value))
				{
					this.OnPostTitleIdChanging(value);
					this.SendPropertyChanging();
					this._PostTitleId = value;
					this.SendPropertyChanged("PostTitleId");
					this.OnPostTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleName", DbType="NVarChar(100)")]
		public string PostTitleName
		{
			get
			{
				return this._PostTitleName;
			}
			set
			{
				if ((this._PostTitleName != value))
				{
					this.OnPostTitleNameChanging(value);
					this.SendPropertyChanging();
					this._PostTitleName = value;
					this.SendPropertyChanged("PostTitleName");
					this.OnPostTitleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleCode", DbType="NVarChar(50)")]
		public string PostTitleCode
		{
			get
			{
				return this._PostTitleCode;
			}
			set
			{
				if ((this._PostTitleCode != value))
				{
					this.OnPostTitleCodeChanging(value);
					this.SendPropertyChanging();
					this._PostTitleCode = value;
					this.SendPropertyChanged("PostTitleCode");
					this.OnPostTitleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_PostTitle", Storage="_SitePerson_Person", ThisKey="PostTitleId", OtherKey="PostTitleId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_PostTitle = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_PostTitle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Pressure")]
	public partial class Base_Pressure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PressureId;
		
		private string _PressureCode;
		
		private string _PressureName;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPressureIdChanging(string value);
    partial void OnPressureIdChanged();
    partial void OnPressureCodeChanging(string value);
    partial void OnPressureCodeChanged();
    partial void OnPressureNameChanging(string value);
    partial void OnPressureNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_Pressure()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PressureId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PressureId
		{
			get
			{
				return this._PressureId;
			}
			set
			{
				if ((this._PressureId != value))
				{
					this.OnPressureIdChanging(value);
					this.SendPropertyChanging();
					this._PressureId = value;
					this.SendPropertyChanged("PressureId");
					this.OnPressureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PressureCode", DbType="NVarChar(50)")]
		public string PressureCode
		{
			get
			{
				return this._PressureCode;
			}
			set
			{
				if ((this._PressureCode != value))
				{
					this.OnPressureCodeChanging(value);
					this.SendPropertyChanging();
					this._PressureCode = value;
					this.SendPropertyChanged("PressureCode");
					this.OnPressureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PressureName", DbType="NVarChar(50)")]
		public string PressureName
		{
			get
			{
				return this._PressureName;
			}
			set
			{
				if ((this._PressureName != value))
				{
					this.OnPressureNameChanging(value);
					this.SendPropertyChanging();
					this._PressureName = value;
					this.SendPropertyChanged("PressureName");
					this.OnPressureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Project")]
	public partial class Base_Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _ProjectCode;
		
		private string _ProjectName;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _ProjectAddress;
		
		private string _ShortName;
		
		private string _ProjectType;
		
		private string _PostCode;
		
		private string _Remark;
		
		private string _ProjectState;
		
		private string _ContractNo;
		
		private string _WorkRange;
		
		private System.Nullable<int> _Duration;
		
		private System.Nullable<bool> _IsUpTotalMonth;
		
		private string _ProjectMainPerson;
		
		private string _ProjectLiaisonPerson;
		
		private System.Nullable<bool> _IsForeign;
		
		private string _FromProjectId;
		
		private string _MapCoordinates;
		
		private EntitySet<ActionPlan_ActionPlanList> _ActionPlan_ActionPlanList;
		
		private EntitySet<ActionPlan_ManagerRule> _ActionPlan_ManagerRule;
		
		private EntitySet<Base_Components> _Base_Components;
		
		private EntitySet<Base_Medium> _Base_Medium;
		
		private EntitySet<Base_PipingClass> _Base_PipingClass;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<HJGL_Batch_NDE> _HJGL_Batch_NDE;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<Check_CheckControl> _Check_CheckControl;
		
		private EntitySet<Check_CheckMonth> _Check_CheckMonth;
		
		private EntitySet<Check_Design> _Check_Design;
		
		private EntitySet<Check_Draw> _Check_Draw;
		
		private EntitySet<Check_CheckEquipment> _Check_CheckEquipment;
		
		private EntitySet<Check_JointCheck> _Check_JointCheck;
		
		private EntitySet<Check_SpotCheck> _Check_SpotCheck;
		
		private EntitySet<Check_TechnicalContactList> _Check_TechnicalContactList;
		
		private EntitySet<InformationProject_ConstructionStandardIdentify> _InformationProject_ConstructionStandardIdentify;
		
		private EntitySet<EduTrain_TrainRecord> _EduTrain_TrainRecord;
		
		private EntitySet<HJGL_Hard_Trust> _HJGL_Hard_Trust;
		
		private EntitySet<Hazard_EnvironmentalRiskList> _Hazard_EnvironmentalRiskList;
		
		private EntitySet<Hazard_HazardList> _Hazard_HazardList;
		
		private EntitySet<HJGL_Batch_BatchTrust> _HJGL_Batch_BatchTrust;
		
		private EntitySet<HJGL_Pipeline> _HJGL_Pipeline;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<HJGL_HotProess_Trust> _HJGL_HotProess_Trust;
		
		private EntitySet<Law_LawRegulationIdentify> _Law_LawRegulationIdentify;
		
		private EntitySet<HJGL_WeldingDaily> _HJGL_WeldingDaily;
		
		private EntitySet<Project_FileCabinet> _Project_FileCabinet;
		
		private EntitySet<Project_ProjectUnit> _Project_ProjectUnit;
		
		private EntitySet<Project_ProjectUser> _Project_ProjectUser;
		
		private EntitySet<ProjectData_MainItem> _ProjectData_MainItem;
		
		private EntitySet<ProjectData_TeamGroup> _ProjectData_TeamGroup;
		
		private EntitySet<PTP_TestPackage> _PTP_TestPackage;
		
		private EntitySet<QualityAudit_SubUnitQualityAuditDetail> _QualityAudit_SubUnitQualityAuditDetail;
		
		private EntitySet<SecuritySystem_SafetyOrganization> _SecuritySystem_SafetyOrganization;
		
		private EntitySet<SitePerson_Checking> _SitePerson_Checking;
		
		private EntitySet<SitePerson_DayReport> _SitePerson_DayReport;
		
		private EntitySet<SitePerson_MonthReport> _SitePerson_MonthReport;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
		private EntitySet<SitePerson_PersonInOut> _SitePerson_PersonInOut;
		
		private EntitySet<SitePerson_PersonInOutNumber> _SitePerson_PersonInOutNumber;
		
		private EntitySet<Solution_ConstructSolution> _Solution_ConstructSolution;
		
		private EntitySet<Solution_CQMSConstructSolution> _Solution_CQMSConstructSolution;
		
		private EntitySet<Solution_ExpertArgument> _Solution_ExpertArgument;
		
		private EntitySet<Solution_LargerHazard> _Solution_LargerHazard;
		
		private EntitySet<Solution_SolutionTemplate> _Solution_SolutionTemplate;
		
		private EntitySet<Sys_CodeRecords> _Sys_CodeRecords;
		
		private EntitySet<Sys_FlowOperate> _Sys_FlowOperate;
		
		private EntitySet<Sys_Log> _Sys_Log;
		
		private EntitySet<Sys_UserRead> _Sys_UserRead;
		
		private EntitySet<Training_Plan> _Training_Plan;
		
		private EntitySet<Unqualified_WorkContact> _Unqualified_WorkContact;
		
		private EntitySet<WBS_WorkPackageProject> _WBS_WorkPackageProject;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnProjectCodeChanging(string value);
    partial void OnProjectCodeChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnProjectAddressChanging(string value);
    partial void OnProjectAddressChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnProjectTypeChanging(string value);
    partial void OnProjectTypeChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnProjectStateChanging(string value);
    partial void OnProjectStateChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnWorkRangeChanging(string value);
    partial void OnWorkRangeChanged();
    partial void OnDurationChanging(System.Nullable<int> value);
    partial void OnDurationChanged();
    partial void OnIsUpTotalMonthChanging(System.Nullable<bool> value);
    partial void OnIsUpTotalMonthChanged();
    partial void OnProjectMainPersonChanging(string value);
    partial void OnProjectMainPersonChanged();
    partial void OnProjectLiaisonPersonChanging(string value);
    partial void OnProjectLiaisonPersonChanged();
    partial void OnIsForeignChanging(System.Nullable<bool> value);
    partial void OnIsForeignChanged();
    partial void OnFromProjectIdChanging(string value);
    partial void OnFromProjectIdChanged();
    partial void OnMapCoordinatesChanging(string value);
    partial void OnMapCoordinatesChanged();
    #endregion
		
		public Base_Project()
		{
			this._ActionPlan_ActionPlanList = new EntitySet<ActionPlan_ActionPlanList>(new Action<ActionPlan_ActionPlanList>(this.attach_ActionPlan_ActionPlanList), new Action<ActionPlan_ActionPlanList>(this.detach_ActionPlan_ActionPlanList));
			this._ActionPlan_ManagerRule = new EntitySet<ActionPlan_ManagerRule>(new Action<ActionPlan_ManagerRule>(this.attach_ActionPlan_ManagerRule), new Action<ActionPlan_ManagerRule>(this.detach_ActionPlan_ManagerRule));
			this._Base_Components = new EntitySet<Base_Components>(new Action<Base_Components>(this.attach_Base_Components), new Action<Base_Components>(this.detach_Base_Components));
			this._Base_Medium = new EntitySet<Base_Medium>(new Action<Base_Medium>(this.attach_Base_Medium), new Action<Base_Medium>(this.detach_Base_Medium));
			this._Base_PipingClass = new EntitySet<Base_PipingClass>(new Action<Base_PipingClass>(this.attach_Base_PipingClass), new Action<Base_PipingClass>(this.detach_Base_PipingClass));
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._HJGL_Batch_NDE = new EntitySet<HJGL_Batch_NDE>(new Action<HJGL_Batch_NDE>(this.attach_HJGL_Batch_NDE), new Action<HJGL_Batch_NDE>(this.detach_HJGL_Batch_NDE));
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._Check_CheckControl = new EntitySet<Check_CheckControl>(new Action<Check_CheckControl>(this.attach_Check_CheckControl), new Action<Check_CheckControl>(this.detach_Check_CheckControl));
			this._Check_CheckMonth = new EntitySet<Check_CheckMonth>(new Action<Check_CheckMonth>(this.attach_Check_CheckMonth), new Action<Check_CheckMonth>(this.detach_Check_CheckMonth));
			this._Check_Design = new EntitySet<Check_Design>(new Action<Check_Design>(this.attach_Check_Design), new Action<Check_Design>(this.detach_Check_Design));
			this._Check_Draw = new EntitySet<Check_Draw>(new Action<Check_Draw>(this.attach_Check_Draw), new Action<Check_Draw>(this.detach_Check_Draw));
			this._Check_CheckEquipment = new EntitySet<Check_CheckEquipment>(new Action<Check_CheckEquipment>(this.attach_Check_CheckEquipment), new Action<Check_CheckEquipment>(this.detach_Check_CheckEquipment));
			this._Check_JointCheck = new EntitySet<Check_JointCheck>(new Action<Check_JointCheck>(this.attach_Check_JointCheck), new Action<Check_JointCheck>(this.detach_Check_JointCheck));
			this._Check_SpotCheck = new EntitySet<Check_SpotCheck>(new Action<Check_SpotCheck>(this.attach_Check_SpotCheck), new Action<Check_SpotCheck>(this.detach_Check_SpotCheck));
			this._Check_TechnicalContactList = new EntitySet<Check_TechnicalContactList>(new Action<Check_TechnicalContactList>(this.attach_Check_TechnicalContactList), new Action<Check_TechnicalContactList>(this.detach_Check_TechnicalContactList));
			this._InformationProject_ConstructionStandardIdentify = new EntitySet<InformationProject_ConstructionStandardIdentify>(new Action<InformationProject_ConstructionStandardIdentify>(this.attach_InformationProject_ConstructionStandardIdentify), new Action<InformationProject_ConstructionStandardIdentify>(this.detach_InformationProject_ConstructionStandardIdentify));
			this._EduTrain_TrainRecord = new EntitySet<EduTrain_TrainRecord>(new Action<EduTrain_TrainRecord>(this.attach_EduTrain_TrainRecord), new Action<EduTrain_TrainRecord>(this.detach_EduTrain_TrainRecord));
			this._HJGL_Hard_Trust = new EntitySet<HJGL_Hard_Trust>(new Action<HJGL_Hard_Trust>(this.attach_HJGL_Hard_Trust), new Action<HJGL_Hard_Trust>(this.detach_HJGL_Hard_Trust));
			this._Hazard_EnvironmentalRiskList = new EntitySet<Hazard_EnvironmentalRiskList>(new Action<Hazard_EnvironmentalRiskList>(this.attach_Hazard_EnvironmentalRiskList), new Action<Hazard_EnvironmentalRiskList>(this.detach_Hazard_EnvironmentalRiskList));
			this._Hazard_HazardList = new EntitySet<Hazard_HazardList>(new Action<Hazard_HazardList>(this.attach_Hazard_HazardList), new Action<Hazard_HazardList>(this.detach_Hazard_HazardList));
			this._HJGL_Batch_BatchTrust = new EntitySet<HJGL_Batch_BatchTrust>(new Action<HJGL_Batch_BatchTrust>(this.attach_HJGL_Batch_BatchTrust), new Action<HJGL_Batch_BatchTrust>(this.detach_HJGL_Batch_BatchTrust));
			this._HJGL_Pipeline = new EntitySet<HJGL_Pipeline>(new Action<HJGL_Pipeline>(this.attach_HJGL_Pipeline), new Action<HJGL_Pipeline>(this.detach_HJGL_Pipeline));
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._HJGL_HotProess_Trust = new EntitySet<HJGL_HotProess_Trust>(new Action<HJGL_HotProess_Trust>(this.attach_HJGL_HotProess_Trust), new Action<HJGL_HotProess_Trust>(this.detach_HJGL_HotProess_Trust));
			this._Law_LawRegulationIdentify = new EntitySet<Law_LawRegulationIdentify>(new Action<Law_LawRegulationIdentify>(this.attach_Law_LawRegulationIdentify), new Action<Law_LawRegulationIdentify>(this.detach_Law_LawRegulationIdentify));
			this._HJGL_WeldingDaily = new EntitySet<HJGL_WeldingDaily>(new Action<HJGL_WeldingDaily>(this.attach_HJGL_WeldingDaily), new Action<HJGL_WeldingDaily>(this.detach_HJGL_WeldingDaily));
			this._Project_FileCabinet = new EntitySet<Project_FileCabinet>(new Action<Project_FileCabinet>(this.attach_Project_FileCabinet), new Action<Project_FileCabinet>(this.detach_Project_FileCabinet));
			this._Project_ProjectUnit = new EntitySet<Project_ProjectUnit>(new Action<Project_ProjectUnit>(this.attach_Project_ProjectUnit), new Action<Project_ProjectUnit>(this.detach_Project_ProjectUnit));
			this._Project_ProjectUser = new EntitySet<Project_ProjectUser>(new Action<Project_ProjectUser>(this.attach_Project_ProjectUser), new Action<Project_ProjectUser>(this.detach_Project_ProjectUser));
			this._ProjectData_MainItem = new EntitySet<ProjectData_MainItem>(new Action<ProjectData_MainItem>(this.attach_ProjectData_MainItem), new Action<ProjectData_MainItem>(this.detach_ProjectData_MainItem));
			this._ProjectData_TeamGroup = new EntitySet<ProjectData_TeamGroup>(new Action<ProjectData_TeamGroup>(this.attach_ProjectData_TeamGroup), new Action<ProjectData_TeamGroup>(this.detach_ProjectData_TeamGroup));
			this._PTP_TestPackage = new EntitySet<PTP_TestPackage>(new Action<PTP_TestPackage>(this.attach_PTP_TestPackage), new Action<PTP_TestPackage>(this.detach_PTP_TestPackage));
			this._QualityAudit_SubUnitQualityAuditDetail = new EntitySet<QualityAudit_SubUnitQualityAuditDetail>(new Action<QualityAudit_SubUnitQualityAuditDetail>(this.attach_QualityAudit_SubUnitQualityAuditDetail), new Action<QualityAudit_SubUnitQualityAuditDetail>(this.detach_QualityAudit_SubUnitQualityAuditDetail));
			this._SecuritySystem_SafetyOrganization = new EntitySet<SecuritySystem_SafetyOrganization>(new Action<SecuritySystem_SafetyOrganization>(this.attach_SecuritySystem_SafetyOrganization), new Action<SecuritySystem_SafetyOrganization>(this.detach_SecuritySystem_SafetyOrganization));
			this._SitePerson_Checking = new EntitySet<SitePerson_Checking>(new Action<SitePerson_Checking>(this.attach_SitePerson_Checking), new Action<SitePerson_Checking>(this.detach_SitePerson_Checking));
			this._SitePerson_DayReport = new EntitySet<SitePerson_DayReport>(new Action<SitePerson_DayReport>(this.attach_SitePerson_DayReport), new Action<SitePerson_DayReport>(this.detach_SitePerson_DayReport));
			this._SitePerson_MonthReport = new EntitySet<SitePerson_MonthReport>(new Action<SitePerson_MonthReport>(this.attach_SitePerson_MonthReport), new Action<SitePerson_MonthReport>(this.detach_SitePerson_MonthReport));
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			this._SitePerson_PersonInOut = new EntitySet<SitePerson_PersonInOut>(new Action<SitePerson_PersonInOut>(this.attach_SitePerson_PersonInOut), new Action<SitePerson_PersonInOut>(this.detach_SitePerson_PersonInOut));
			this._SitePerson_PersonInOutNumber = new EntitySet<SitePerson_PersonInOutNumber>(new Action<SitePerson_PersonInOutNumber>(this.attach_SitePerson_PersonInOutNumber), new Action<SitePerson_PersonInOutNumber>(this.detach_SitePerson_PersonInOutNumber));
			this._Solution_ConstructSolution = new EntitySet<Solution_ConstructSolution>(new Action<Solution_ConstructSolution>(this.attach_Solution_ConstructSolution), new Action<Solution_ConstructSolution>(this.detach_Solution_ConstructSolution));
			this._Solution_CQMSConstructSolution = new EntitySet<Solution_CQMSConstructSolution>(new Action<Solution_CQMSConstructSolution>(this.attach_Solution_CQMSConstructSolution), new Action<Solution_CQMSConstructSolution>(this.detach_Solution_CQMSConstructSolution));
			this._Solution_ExpertArgument = new EntitySet<Solution_ExpertArgument>(new Action<Solution_ExpertArgument>(this.attach_Solution_ExpertArgument), new Action<Solution_ExpertArgument>(this.detach_Solution_ExpertArgument));
			this._Solution_LargerHazard = new EntitySet<Solution_LargerHazard>(new Action<Solution_LargerHazard>(this.attach_Solution_LargerHazard), new Action<Solution_LargerHazard>(this.detach_Solution_LargerHazard));
			this._Solution_SolutionTemplate = new EntitySet<Solution_SolutionTemplate>(new Action<Solution_SolutionTemplate>(this.attach_Solution_SolutionTemplate), new Action<Solution_SolutionTemplate>(this.detach_Solution_SolutionTemplate));
			this._Sys_CodeRecords = new EntitySet<Sys_CodeRecords>(new Action<Sys_CodeRecords>(this.attach_Sys_CodeRecords), new Action<Sys_CodeRecords>(this.detach_Sys_CodeRecords));
			this._Sys_FlowOperate = new EntitySet<Sys_FlowOperate>(new Action<Sys_FlowOperate>(this.attach_Sys_FlowOperate), new Action<Sys_FlowOperate>(this.detach_Sys_FlowOperate));
			this._Sys_Log = new EntitySet<Sys_Log>(new Action<Sys_Log>(this.attach_Sys_Log), new Action<Sys_Log>(this.detach_Sys_Log));
			this._Sys_UserRead = new EntitySet<Sys_UserRead>(new Action<Sys_UserRead>(this.attach_Sys_UserRead), new Action<Sys_UserRead>(this.detach_Sys_UserRead));
			this._Training_Plan = new EntitySet<Training_Plan>(new Action<Training_Plan>(this.attach_Training_Plan), new Action<Training_Plan>(this.detach_Training_Plan));
			this._Unqualified_WorkContact = new EntitySet<Unqualified_WorkContact>(new Action<Unqualified_WorkContact>(this.attach_Unqualified_WorkContact), new Action<Unqualified_WorkContact>(this.detach_Unqualified_WorkContact));
			this._WBS_WorkPackageProject = new EntitySet<WBS_WorkPackageProject>(new Action<WBS_WorkPackageProject>(this.attach_WBS_WorkPackageProject), new Action<WBS_WorkPackageProject>(this.detach_WBS_WorkPackageProject));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="NVarChar(50)")]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this.OnProjectCodeChanging(value);
					this.SendPropertyChanging();
					this._ProjectCode = value;
					this.SendPropertyChanged("ProjectCode");
					this.OnProjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectAddress", DbType="NVarChar(500)")]
		public string ProjectAddress
		{
			get
			{
				return this._ProjectAddress;
			}
			set
			{
				if ((this._ProjectAddress != value))
				{
					this.OnProjectAddressChanging(value);
					this.SendPropertyChanging();
					this._ProjectAddress = value;
					this.SendPropertyChanged("ProjectAddress");
					this.OnProjectAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(200)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectType", DbType="NVarChar(20)")]
		public string ProjectType
		{
			get
			{
				return this._ProjectType;
			}
			set
			{
				if ((this._ProjectType != value))
				{
					this.OnProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ProjectType = value;
					this.SendPropertyChanged("ProjectType");
					this.OnProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(20)")]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectState", DbType="Char(1)")]
		public string ProjectState
		{
			get
			{
				return this._ProjectState;
			}
			set
			{
				if ((this._ProjectState != value))
				{
					this.OnProjectStateChanging(value);
					this.SendPropertyChanging();
					this._ProjectState = value;
					this.SendPropertyChanged("ProjectState");
					this.OnProjectStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="NVarChar(50)")]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkRange", DbType="NVarChar(500)")]
		public string WorkRange
		{
			get
			{
				return this._WorkRange;
			}
			set
			{
				if ((this._WorkRange != value))
				{
					this.OnWorkRangeChanging(value);
					this.SendPropertyChanging();
					this._WorkRange = value;
					this.SendPropertyChanged("WorkRange");
					this.OnWorkRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUpTotalMonth", DbType="Bit")]
		public System.Nullable<bool> IsUpTotalMonth
		{
			get
			{
				return this._IsUpTotalMonth;
			}
			set
			{
				if ((this._IsUpTotalMonth != value))
				{
					this.OnIsUpTotalMonthChanging(value);
					this.SendPropertyChanging();
					this._IsUpTotalMonth = value;
					this.SendPropertyChanged("IsUpTotalMonth");
					this.OnIsUpTotalMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectMainPerson", DbType="NVarChar(500)")]
		public string ProjectMainPerson
		{
			get
			{
				return this._ProjectMainPerson;
			}
			set
			{
				if ((this._ProjectMainPerson != value))
				{
					this.OnProjectMainPersonChanging(value);
					this.SendPropertyChanging();
					this._ProjectMainPerson = value;
					this.SendPropertyChanged("ProjectMainPerson");
					this.OnProjectMainPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectLiaisonPerson", DbType="NVarChar(500)")]
		public string ProjectLiaisonPerson
		{
			get
			{
				return this._ProjectLiaisonPerson;
			}
			set
			{
				if ((this._ProjectLiaisonPerson != value))
				{
					this.OnProjectLiaisonPersonChanging(value);
					this.SendPropertyChanging();
					this._ProjectLiaisonPerson = value;
					this.SendPropertyChanged("ProjectLiaisonPerson");
					this.OnProjectLiaisonPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForeign", DbType="Bit")]
		public System.Nullable<bool> IsForeign
		{
			get
			{
				return this._IsForeign;
			}
			set
			{
				if ((this._IsForeign != value))
				{
					this.OnIsForeignChanging(value);
					this.SendPropertyChanging();
					this._IsForeign = value;
					this.SendPropertyChanged("IsForeign");
					this.OnIsForeignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromProjectId", DbType="NVarChar(50)")]
		public string FromProjectId
		{
			get
			{
				return this._FromProjectId;
			}
			set
			{
				if ((this._FromProjectId != value))
				{
					this.OnFromProjectIdChanging(value);
					this.SendPropertyChanging();
					this._FromProjectId = value;
					this.SendPropertyChanged("FromProjectId");
					this.OnFromProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapCoordinates", DbType="NVarChar(50)")]
		public string MapCoordinates
		{
			get
			{
				return this._MapCoordinates;
			}
			set
			{
				if ((this._MapCoordinates != value))
				{
					this.OnMapCoordinatesChanging(value);
					this.SendPropertyChanging();
					this._MapCoordinates = value;
					this.SendPropertyChanged("MapCoordinates");
					this.OnMapCoordinatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ActionPlan_ActionPlanList_Base_Project", Storage="_ActionPlan_ActionPlanList", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<ActionPlan_ActionPlanList> ActionPlan_ActionPlanList
		{
			get
			{
				return this._ActionPlan_ActionPlanList;
			}
			set
			{
				this._ActionPlan_ActionPlanList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ActionPlan_ManagerRule_Base_Project", Storage="_ActionPlan_ManagerRule", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<ActionPlan_ManagerRule> ActionPlan_ManagerRule
		{
			get
			{
				return this._ActionPlan_ManagerRule;
			}
			set
			{
				this._ActionPlan_ManagerRule.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Components_Base_Project", Storage="_Base_Components", ThisKey="ProjectId", OtherKey="ProjeceId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Components> Base_Components
		{
			get
			{
				return this._Base_Components;
			}
			set
			{
				this._Base_Components.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Medium_Base_Project", Storage="_Base_Medium", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Medium> Base_Medium
		{
			get
			{
				return this._Base_Medium;
			}
			set
			{
				this._Base_Medium.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_PipingClass_Base_Project", Storage="_Base_PipingClass", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Base_PipingClass> Base_PipingClass
		{
			get
			{
				return this._Base_PipingClass;
			}
			set
			{
				this._Base_PipingClass.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Project_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Base_Project.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Base_Project.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_NDECheck_Base_Project", Storage="_HJGL_Batch_NDE", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_NDE> HJGL_Batch_NDE
		{
			get
			{
				return this._HJGL_Batch_NDE;
			}
			set
			{
				this._HJGL_Batch_NDE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Batch_Base_Project", Storage="_HJGL_Batch_PointBatch", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckControl_Base_Project", Storage="_Check_CheckControl", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Check_CheckControl> Check_CheckControl
		{
			get
			{
				return this._Check_CheckControl;
			}
			set
			{
				this._Check_CheckControl.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckMonth_Base_Project", Storage="_Check_CheckMonth", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Check_CheckMonth> Check_CheckMonth
		{
			get
			{
				return this._Check_CheckMonth;
			}
			set
			{
				this._Check_CheckMonth.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Design_Base_Project", Storage="_Check_Design", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Check_Design> Check_Design
		{
			get
			{
				return this._Check_Design;
			}
			set
			{
				this._Check_Design.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Draw_Base_Project", Storage="_Check_Draw", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Check_Draw> Check_Draw
		{
			get
			{
				return this._Check_Draw;
			}
			set
			{
				this._Check_Draw.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Equipment_Base_Project", Storage="_Check_CheckEquipment", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Check_CheckEquipment> Check_CheckEquipment
		{
			get
			{
				return this._Check_CheckEquipment;
			}
			set
			{
				this._Check_CheckEquipment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_JointCheck_Base_Project", Storage="_Check_JointCheck", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Check_JointCheck> Check_JointCheck
		{
			get
			{
				return this._Check_JointCheck;
			}
			set
			{
				this._Check_JointCheck.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_SpotCheck_Base_Project", Storage="_Check_SpotCheck", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Check_SpotCheck> Check_SpotCheck
		{
			get
			{
				return this._Check_SpotCheck;
			}
			set
			{
				this._Check_SpotCheck.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_TechnicalContactList_Base_Project", Storage="_Check_TechnicalContactList", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Check_TechnicalContactList> Check_TechnicalContactList
		{
			get
			{
				return this._Check_TechnicalContactList;
			}
			set
			{
				this._Check_TechnicalContactList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Common_ConstructionStandardIdentify_Base_Project", Storage="_InformationProject_ConstructionStandardIdentify", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<InformationProject_ConstructionStandardIdentify> InformationProject_ConstructionStandardIdentify
		{
			get
			{
				return this._InformationProject_ConstructionStandardIdentify;
			}
			set
			{
				this._InformationProject_ConstructionStandardIdentify.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_Training_Base_Project", Storage="_EduTrain_TrainRecord", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<EduTrain_TrainRecord> EduTrain_TrainRecord
		{
			get
			{
				return this._EduTrain_TrainRecord;
			}
			set
			{
				this._EduTrain_TrainRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hard_Trust_Base_Project", Storage="_HJGL_Hard_Trust", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_Trust> HJGL_Hard_Trust
		{
			get
			{
				return this._HJGL_Hard_Trust;
			}
			set
			{
				this._HJGL_Hard_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_EnvironmentalRiskList_Base_Project", Storage="_Hazard_EnvironmentalRiskList", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_EnvironmentalRiskList> Hazard_EnvironmentalRiskList
		{
			get
			{
				return this._Hazard_EnvironmentalRiskList;
			}
			set
			{
				this._Hazard_EnvironmentalRiskList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HazardList_Base_Project", Storage="_Hazard_HazardList", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HazardList> Hazard_HazardList
		{
			get
			{
				return this._Hazard_HazardList;
			}
			set
			{
				this._Hazard_HazardList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrust_Base_Project", Storage="_HJGL_Batch_BatchTrust", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_BatchTrust> HJGL_Batch_BatchTrust
		{
			get
			{
				return this._HJGL_Batch_BatchTrust;
			}
			set
			{
				this._HJGL_Batch_BatchTrust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_Project", Storage="_HJGL_Pipeline", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline;
			}
			set
			{
				this._HJGL_Pipeline.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_Base_Project", Storage="_HJGL_RepairRecord", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Trust_Base_Project", Storage="_HJGL_HotProess_Trust", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_Trust> HJGL_HotProess_Trust
		{
			get
			{
				return this._HJGL_HotProess_Trust;
			}
			set
			{
				this._HJGL_HotProess_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_LawRegulationIdentify_Base_Project", Storage="_Law_LawRegulationIdentify", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Law_LawRegulationIdentify> Law_LawRegulationIdentify
		{
			get
			{
				return this._Law_LawRegulationIdentify;
			}
			set
			{
				this._Law_LawRegulationIdentify.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Pipeline_WeldingDaily_Base_Project", Storage="_HJGL_WeldingDaily", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldingDaily> HJGL_WeldingDaily
		{
			get
			{
				return this._HJGL_WeldingDaily;
			}
			set
			{
				this._HJGL_WeldingDaily.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_FileCabinet_Base_Project", Storage="_Project_FileCabinet", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Project_FileCabinet> Project_FileCabinet
		{
			get
			{
				return this._Project_FileCabinet;
			}
			set
			{
				this._Project_FileCabinet.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUnit_Base_Project", Storage="_Project_ProjectUnit", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Project_ProjectUnit> Project_ProjectUnit
		{
			get
			{
				return this._Project_ProjectUnit;
			}
			set
			{
				this._Project_ProjectUnit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUser_Base_Project", Storage="_Project_ProjectUser", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Project_ProjectUser> Project_ProjectUser
		{
			get
			{
				return this._Project_ProjectUser;
			}
			set
			{
				this._Project_ProjectUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_MainItem_Base_Project", Storage="_ProjectData_MainItem", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<ProjectData_MainItem> ProjectData_MainItem
		{
			get
			{
				return this._ProjectData_MainItem;
			}
			set
			{
				this._ProjectData_MainItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_TeamGroup_Base_Project", Storage="_ProjectData_TeamGroup", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<ProjectData_TeamGroup> ProjectData_TeamGroup
		{
			get
			{
				return this._ProjectData_TeamGroup;
			}
			set
			{
				this._ProjectData_TeamGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_TestPackage_Base_Project", Storage="_PTP_TestPackage", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<PTP_TestPackage> PTP_TestPackage
		{
			get
			{
				return this._PTP_TestPackage;
			}
			set
			{
				this._PTP_TestPackage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SubUnitQualityAuditDetail_Base_Project", Storage="_QualityAudit_SubUnitQualityAuditDetail", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_SubUnitQualityAuditDetail> QualityAudit_SubUnitQualityAuditDetail
		{
			get
			{
				return this._QualityAudit_SubUnitQualityAuditDetail;
			}
			set
			{
				this._QualityAudit_SubUnitQualityAuditDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SecuritySystem_SafetyOrganization_Base_Project", Storage="_SecuritySystem_SafetyOrganization", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<SecuritySystem_SafetyOrganization> SecuritySystem_SafetyOrganization
		{
			get
			{
				return this._SecuritySystem_SafetyOrganization;
			}
			set
			{
				this._SecuritySystem_SafetyOrganization.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Checking_Base_Project", Storage="_SitePerson_Checking", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Checking> SitePerson_Checking
		{
			get
			{
				return this._SitePerson_Checking;
			}
			set
			{
				this._SitePerson_Checking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_DayReport_Base_Project", Storage="_SitePerson_DayReport", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_DayReport> SitePerson_DayReport
		{
			get
			{
				return this._SitePerson_DayReport;
			}
			set
			{
				this._SitePerson_DayReport.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_MonthReport_Base_Project", Storage="_SitePerson_MonthReport", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_MonthReport> SitePerson_MonthReport
		{
			get
			{
				return this._SitePerson_MonthReport;
			}
			set
			{
				this._SitePerson_MonthReport.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Project", Storage="_SitePerson_Person", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_PersonInOut_Base_Project", Storage="_SitePerson_PersonInOut", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_PersonInOut> SitePerson_PersonInOut
		{
			get
			{
				return this._SitePerson_PersonInOut;
			}
			set
			{
				this._SitePerson_PersonInOut.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_PersonInOutNumber_Base_Project", Storage="_SitePerson_PersonInOutNumber", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_PersonInOutNumber> SitePerson_PersonInOutNumber
		{
			get
			{
				return this._SitePerson_PersonInOutNumber;
			}
			set
			{
				this._SitePerson_PersonInOutNumber.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_ConstructSolution_Base_Project", Storage="_Solution_ConstructSolution", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Solution_ConstructSolution> Solution_ConstructSolution
		{
			get
			{
				return this._Solution_ConstructSolution;
			}
			set
			{
				this._Solution_ConstructSolution.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_CQMSConstructSolution_Base_Project", Storage="_Solution_CQMSConstructSolution", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Solution_CQMSConstructSolution> Solution_CQMSConstructSolution
		{
			get
			{
				return this._Solution_CQMSConstructSolution;
			}
			set
			{
				this._Solution_CQMSConstructSolution.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_ExpertArgument_Base_Project", Storage="_Solution_ExpertArgument", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Solution_ExpertArgument> Solution_ExpertArgument
		{
			get
			{
				return this._Solution_ExpertArgument;
			}
			set
			{
				this._Solution_ExpertArgument.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_LargerSolution_Base_Project", Storage="_Solution_LargerHazard", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Solution_LargerHazard> Solution_LargerHazard
		{
			get
			{
				return this._Solution_LargerHazard;
			}
			set
			{
				this._Solution_LargerHazard.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_SolutionTemplate_Base_Project", Storage="_Solution_SolutionTemplate", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Solution_SolutionTemplate> Solution_SolutionTemplate
		{
			get
			{
				return this._Solution_SolutionTemplate;
			}
			set
			{
				this._Solution_SolutionTemplate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_CodeRecords_Base_Project", Storage="_Sys_CodeRecords", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_CodeRecords> Sys_CodeRecords
		{
			get
			{
				return this._Sys_CodeRecords;
			}
			set
			{
				this._Sys_CodeRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_FlowOperate_Base_Project", Storage="_Sys_FlowOperate", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_FlowOperate> Sys_FlowOperate
		{
			get
			{
				return this._Sys_FlowOperate;
			}
			set
			{
				this._Sys_FlowOperate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Log_Base_Project", Storage="_Sys_Log", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_Log> Sys_Log
		{
			get
			{
				return this._Sys_Log;
			}
			set
			{
				this._Sys_Log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserRead_Base_Project", Storage="_Sys_UserRead", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_UserRead> Sys_UserRead
		{
			get
			{
				return this._Sys_UserRead;
			}
			set
			{
				this._Sys_UserRead.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Plan_Base_Project", Storage="_Training_Plan", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Training_Plan> Training_Plan
		{
			get
			{
				return this._Training_Plan;
			}
			set
			{
				this._Training_Plan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Unqualified_WorkContact_Base_Project", Storage="_Unqualified_WorkContact", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<Unqualified_WorkContact> Unqualified_WorkContact
		{
			get
			{
				return this._Unqualified_WorkContact;
			}
			set
			{
				this._Unqualified_WorkContact.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_WorkPackageProject_Base_Project", Storage="_WBS_WorkPackageProject", ThisKey="ProjectId", OtherKey="ProjectId", DeleteRule="NO ACTION")]
		public EntitySet<WBS_WorkPackageProject> WBS_WorkPackageProject
		{
			get
			{
				return this._WBS_WorkPackageProject;
			}
			set
			{
				this._WBS_WorkPackageProject.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActionPlan_ActionPlanList(ActionPlan_ActionPlanList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_ActionPlan_ActionPlanList(ActionPlan_ActionPlanList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_ActionPlan_ManagerRule(ActionPlan_ManagerRule entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_ActionPlan_ManagerRule(ActionPlan_ManagerRule entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Base_Components(Base_Components entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Base_Components(Base_Components entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Base_Medium(Base_Medium entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Base_Medium(Base_Medium entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Base_PipingClass(Base_PipingClass entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Base_PipingClass(Base_PipingClass entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_Batch_NDE(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_Batch_NDE(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Check_CheckControl(Check_CheckControl entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Check_CheckControl(Check_CheckControl entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Check_CheckMonth(Check_CheckMonth entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Check_CheckMonth(Check_CheckMonth entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Check_Design(Check_Design entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Check_Design(Check_Design entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Check_Draw(Check_Draw entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Check_Draw(Check_Draw entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Check_CheckEquipment(Check_CheckEquipment entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Check_CheckEquipment(Check_CheckEquipment entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Check_JointCheck(Check_JointCheck entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Check_JointCheck(Check_JointCheck entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Check_SpotCheck(Check_SpotCheck entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Check_SpotCheck(Check_SpotCheck entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Check_TechnicalContactList(Check_TechnicalContactList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Check_TechnicalContactList(Check_TechnicalContactList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_InformationProject_ConstructionStandardIdentify(InformationProject_ConstructionStandardIdentify entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_InformationProject_ConstructionStandardIdentify(InformationProject_ConstructionStandardIdentify entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_EduTrain_TrainRecord(EduTrain_TrainRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_EduTrain_TrainRecord(EduTrain_TrainRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_Hard_Trust(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_Hard_Trust(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Hazard_EnvironmentalRiskList(Hazard_EnvironmentalRiskList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Hazard_EnvironmentalRiskList(Hazard_EnvironmentalRiskList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Hazard_HazardList(Hazard_HazardList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Hazard_HazardList(Hazard_HazardList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_HotProess_Trust(HJGL_HotProess_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_HotProess_Trust(HJGL_HotProess_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Law_LawRegulationIdentify(Law_LawRegulationIdentify entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Law_LawRegulationIdentify(Law_LawRegulationIdentify entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Project_FileCabinet(Project_FileCabinet entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Project_FileCabinet(Project_FileCabinet entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Project_ProjectUnit(Project_ProjectUnit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Project_ProjectUnit(Project_ProjectUnit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Project_ProjectUser(Project_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Project_ProjectUser(Project_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_ProjectData_MainItem(ProjectData_MainItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_ProjectData_MainItem(ProjectData_MainItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_ProjectData_TeamGroup(ProjectData_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_ProjectData_TeamGroup(ProjectData_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_PTP_TestPackage(PTP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_PTP_TestPackage(PTP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_QualityAudit_SubUnitQualityAuditDetail(QualityAudit_SubUnitQualityAuditDetail entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_QualityAudit_SubUnitQualityAuditDetail(QualityAudit_SubUnitQualityAuditDetail entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_SecuritySystem_SafetyOrganization(SecuritySystem_SafetyOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_SecuritySystem_SafetyOrganization(SecuritySystem_SafetyOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_SitePerson_Checking(SitePerson_Checking entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_SitePerson_Checking(SitePerson_Checking entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_SitePerson_DayReport(SitePerson_DayReport entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_SitePerson_DayReport(SitePerson_DayReport entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_SitePerson_MonthReport(SitePerson_MonthReport entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_SitePerson_MonthReport(SitePerson_MonthReport entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_SitePerson_PersonInOut(SitePerson_PersonInOut entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_SitePerson_PersonInOut(SitePerson_PersonInOut entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_SitePerson_PersonInOutNumber(SitePerson_PersonInOutNumber entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_SitePerson_PersonInOutNumber(SitePerson_PersonInOutNumber entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Solution_ConstructSolution(Solution_ConstructSolution entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Solution_ConstructSolution(Solution_ConstructSolution entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Solution_CQMSConstructSolution(Solution_CQMSConstructSolution entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Solution_CQMSConstructSolution(Solution_CQMSConstructSolution entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Solution_ExpertArgument(Solution_ExpertArgument entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Solution_ExpertArgument(Solution_ExpertArgument entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Solution_LargerHazard(Solution_LargerHazard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Solution_LargerHazard(Solution_LargerHazard entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Solution_SolutionTemplate(Solution_SolutionTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Solution_SolutionTemplate(Solution_SolutionTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Sys_CodeRecords(Sys_CodeRecords entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Sys_CodeRecords(Sys_CodeRecords entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Sys_FlowOperate(Sys_FlowOperate entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Sys_FlowOperate(Sys_FlowOperate entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Sys_Log(Sys_Log entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Sys_Log(Sys_Log entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Sys_UserRead(Sys_UserRead entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Sys_UserRead(Sys_UserRead entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Training_Plan(Training_Plan entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Training_Plan(Training_Plan entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_Unqualified_WorkContact(Unqualified_WorkContact entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_Unqualified_WorkContact(Unqualified_WorkContact entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
		
		private void attach_WBS_WorkPackageProject(WBS_WorkPackageProject entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = this;
		}
		
		private void detach_WBS_WorkPackageProject(WBS_WorkPackageProject entity)
		{
			this.SendPropertyChanging();
			entity.Base_Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_QualityQuestionType")]
	public partial class Base_QualityQuestionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _QualityQuestionTypeId;
		
		private string _QualityQuestionType;
		
		private System.Nullable<int> _SortIndex;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQualityQuestionTypeIdChanging(string value);
    partial void OnQualityQuestionTypeIdChanged();
    partial void OnQualityQuestionTypeChanging(string value);
    partial void OnQualityQuestionTypeChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Base_QualityQuestionType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualityQuestionTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string QualityQuestionTypeId
		{
			get
			{
				return this._QualityQuestionTypeId;
			}
			set
			{
				if ((this._QualityQuestionTypeId != value))
				{
					this.OnQualityQuestionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._QualityQuestionTypeId = value;
					this.SendPropertyChanged("QualityQuestionTypeId");
					this.OnQualityQuestionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualityQuestionType", DbType="NVarChar(50)")]
		public string QualityQuestionType
		{
			get
			{
				return this._QualityQuestionType;
			}
			set
			{
				if ((this._QualityQuestionType != value))
				{
					this.OnQualityQuestionTypeChanging(value);
					this.SendPropertyChanging();
					this._QualityQuestionType = value;
					this.SendPropertyChanged("QualityQuestionType");
					this.OnQualityQuestionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_RulesRegulationsType")]
	public partial class Base_RulesRegulationsType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RulesRegulationsTypeId;
		
		private string _RulesRegulationsTypeCode;
		
		private string _RulesRegulationsTypeName;
		
		private string _Remark;
		
		private EntitySet<Law_RulesRegulations> _Law_RulesRegulations;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRulesRegulationsTypeIdChanging(string value);
    partial void OnRulesRegulationsTypeIdChanged();
    partial void OnRulesRegulationsTypeCodeChanging(string value);
    partial void OnRulesRegulationsTypeCodeChanged();
    partial void OnRulesRegulationsTypeNameChanging(string value);
    partial void OnRulesRegulationsTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_RulesRegulationsType()
		{
			this._Law_RulesRegulations = new EntitySet<Law_RulesRegulations>(new Action<Law_RulesRegulations>(this.attach_Law_RulesRegulations), new Action<Law_RulesRegulations>(this.detach_Law_RulesRegulations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RulesRegulationsTypeId
		{
			get
			{
				return this._RulesRegulationsTypeId;
			}
			set
			{
				if ((this._RulesRegulationsTypeId != value))
				{
					this.OnRulesRegulationsTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RulesRegulationsTypeId = value;
					this.SendPropertyChanged("RulesRegulationsTypeId");
					this.OnRulesRegulationsTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RulesRegulationsTypeCode
		{
			get
			{
				return this._RulesRegulationsTypeCode;
			}
			set
			{
				if ((this._RulesRegulationsTypeCode != value))
				{
					this.OnRulesRegulationsTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._RulesRegulationsTypeCode = value;
					this.SendPropertyChanged("RulesRegulationsTypeCode");
					this.OnRulesRegulationsTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RulesRegulationsTypeName
		{
			get
			{
				return this._RulesRegulationsTypeName;
			}
			set
			{
				if ((this._RulesRegulationsTypeName != value))
				{
					this.OnRulesRegulationsTypeNameChanging(value);
					this.SendPropertyChanging();
					this._RulesRegulationsTypeName = value;
					this.SendPropertyChanged("RulesRegulationsTypeName");
					this.OnRulesRegulationsTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_RulesRegulations_Base_RulesRegulationsType", Storage="_Law_RulesRegulations", ThisKey="RulesRegulationsTypeId", OtherKey="RulesRegulationsTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Law_RulesRegulations> Law_RulesRegulations
		{
			get
			{
				return this._Law_RulesRegulations;
			}
			set
			{
				this._Law_RulesRegulations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Law_RulesRegulations(Law_RulesRegulations entity)
		{
			this.SendPropertyChanging();
			entity.Base_RulesRegulationsType = this;
		}
		
		private void detach_Law_RulesRegulations(Law_RulesRegulations entity)
		{
			this.SendPropertyChanging();
			entity.Base_RulesRegulationsType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_SafetyMeasures")]
	public partial class Base_SafetyMeasures : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SafetyMeasuresId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _SafetyMeasures;
		
		private string _LicenseType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSafetyMeasuresIdChanging(string value);
    partial void OnSafetyMeasuresIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnSafetyMeasuresChanging(string value);
    partial void OnSafetyMeasuresChanged();
    partial void OnLicenseTypeChanging(string value);
    partial void OnLicenseTypeChanged();
    #endregion
		
		public Base_SafetyMeasures()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasuresId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SafetyMeasuresId
		{
			get
			{
				return this._SafetyMeasuresId;
			}
			set
			{
				if ((this._SafetyMeasuresId != value))
				{
					this.OnSafetyMeasuresIdChanging(value);
					this.SendPropertyChanging();
					this._SafetyMeasuresId = value;
					this.SendPropertyChanged("SafetyMeasuresId");
					this.OnSafetyMeasuresIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyMeasures", DbType="NVarChar(2000)")]
		public string SafetyMeasures
		{
			get
			{
				return this._SafetyMeasures;
			}
			set
			{
				if ((this._SafetyMeasures != value))
				{
					this.OnSafetyMeasuresChanging(value);
					this.SendPropertyChanging();
					this._SafetyMeasures = value;
					this.SendPropertyChanged("SafetyMeasures");
					this.OnSafetyMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseType", DbType="NVarChar(50)")]
		public string LicenseType
		{
			get
			{
				return this._LicenseType;
			}
			set
			{
				if ((this._LicenseType != value))
				{
					this.OnLicenseTypeChanging(value);
					this.SendPropertyChanging();
					this._LicenseType = value;
					this.SendPropertyChanged("LicenseType");
					this.OnLicenseTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_SolutionTempleteType")]
	public partial class Base_SolutionTempleteType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SolutionTempleteTypeCode;
		
		private string _SolutionTempleteTypeName;
		
		private string _Remark;
		
		private System.Nullable<int> _SortIndex;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSolutionTempleteTypeCodeChanging(string value);
    partial void OnSolutionTempleteTypeCodeChanged();
    partial void OnSolutionTempleteTypeNameChanging(string value);
    partial void OnSolutionTempleteTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Base_SolutionTempleteType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionTempleteTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SolutionTempleteTypeCode
		{
			get
			{
				return this._SolutionTempleteTypeCode;
			}
			set
			{
				if ((this._SolutionTempleteTypeCode != value))
				{
					this.OnSolutionTempleteTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._SolutionTempleteTypeCode = value;
					this.SendPropertyChanged("SolutionTempleteTypeCode");
					this.OnSolutionTempleteTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionTempleteTypeName", DbType="NVarChar(50)")]
		public string SolutionTempleteTypeName
		{
			get
			{
				return this._SolutionTempleteTypeName;
			}
			set
			{
				if ((this._SolutionTempleteTypeName != value))
				{
					this.OnSolutionTempleteTypeNameChanging(value);
					this.SendPropertyChanging();
					this._SolutionTempleteTypeName = value;
					this.SendPropertyChanged("SolutionTempleteTypeName");
					this.OnSolutionTempleteTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_SpecialEquipment")]
	public partial class Base_SpecialEquipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SpecialEquipmentId;
		
		private string _SpecialEquipmentCode;
		
		private string _SpecialEquipmentName;
		
		private string _Remark;
		
		private System.Nullable<bool> _IsSpecial;
		
		private string _SpecialEquipmentType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialEquipmentIdChanging(string value);
    partial void OnSpecialEquipmentIdChanged();
    partial void OnSpecialEquipmentCodeChanging(string value);
    partial void OnSpecialEquipmentCodeChanged();
    partial void OnSpecialEquipmentNameChanging(string value);
    partial void OnSpecialEquipmentNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIsSpecialChanging(System.Nullable<bool> value);
    partial void OnIsSpecialChanged();
    partial void OnSpecialEquipmentTypeChanging(string value);
    partial void OnSpecialEquipmentTypeChanged();
    #endregion
		
		public Base_SpecialEquipment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialEquipmentId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SpecialEquipmentId
		{
			get
			{
				return this._SpecialEquipmentId;
			}
			set
			{
				if ((this._SpecialEquipmentId != value))
				{
					this.OnSpecialEquipmentIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialEquipmentId = value;
					this.SendPropertyChanged("SpecialEquipmentId");
					this.OnSpecialEquipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialEquipmentCode", DbType="NVarChar(50)")]
		public string SpecialEquipmentCode
		{
			get
			{
				return this._SpecialEquipmentCode;
			}
			set
			{
				if ((this._SpecialEquipmentCode != value))
				{
					this.OnSpecialEquipmentCodeChanging(value);
					this.SendPropertyChanging();
					this._SpecialEquipmentCode = value;
					this.SendPropertyChanged("SpecialEquipmentCode");
					this.OnSpecialEquipmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialEquipmentName", DbType="NVarChar(50)")]
		public string SpecialEquipmentName
		{
			get
			{
				return this._SpecialEquipmentName;
			}
			set
			{
				if ((this._SpecialEquipmentName != value))
				{
					this.OnSpecialEquipmentNameChanging(value);
					this.SendPropertyChanging();
					this._SpecialEquipmentName = value;
					this.SendPropertyChanged("SpecialEquipmentName");
					this.OnSpecialEquipmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpecial", DbType="Bit")]
		public System.Nullable<bool> IsSpecial
		{
			get
			{
				return this._IsSpecial;
			}
			set
			{
				if ((this._IsSpecial != value))
				{
					this.OnIsSpecialChanging(value);
					this.SendPropertyChanging();
					this._IsSpecial = value;
					this.SendPropertyChanged("IsSpecial");
					this.OnIsSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialEquipmentType", DbType="VarChar(2)")]
		public string SpecialEquipmentType
		{
			get
			{
				return this._SpecialEquipmentType;
			}
			set
			{
				if ((this._SpecialEquipmentType != value))
				{
					this.OnSpecialEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._SpecialEquipmentType = value;
					this.SendPropertyChanged("SpecialEquipmentType");
					this.OnSpecialEquipmentTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_SpecialSchemeType")]
	public partial class Base_SpecialSchemeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SpecialSchemeTypeId;
		
		private string _SpecialSchemeTypeCode;
		
		private string _SpecialSchemeTypeName;
		
		private string _Remark;
		
		private EntitySet<Technique_SpecialScheme> _Technique_SpecialScheme;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialSchemeTypeIdChanging(string value);
    partial void OnSpecialSchemeTypeIdChanged();
    partial void OnSpecialSchemeTypeCodeChanging(string value);
    partial void OnSpecialSchemeTypeCodeChanged();
    partial void OnSpecialSchemeTypeNameChanging(string value);
    partial void OnSpecialSchemeTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_SpecialSchemeType()
		{
			this._Technique_SpecialScheme = new EntitySet<Technique_SpecialScheme>(new Action<Technique_SpecialScheme>(this.attach_Technique_SpecialScheme), new Action<Technique_SpecialScheme>(this.detach_Technique_SpecialScheme));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SpecialSchemeTypeId
		{
			get
			{
				return this._SpecialSchemeTypeId;
			}
			set
			{
				if ((this._SpecialSchemeTypeId != value))
				{
					this.OnSpecialSchemeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeTypeId = value;
					this.SendPropertyChanged("SpecialSchemeTypeId");
					this.OnSpecialSchemeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeTypeCode", DbType="NVarChar(50)")]
		public string SpecialSchemeTypeCode
		{
			get
			{
				return this._SpecialSchemeTypeCode;
			}
			set
			{
				if ((this._SpecialSchemeTypeCode != value))
				{
					this.OnSpecialSchemeTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeTypeCode = value;
					this.SendPropertyChanged("SpecialSchemeTypeCode");
					this.OnSpecialSchemeTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeTypeName", DbType="NVarChar(500)")]
		public string SpecialSchemeTypeName
		{
			get
			{
				return this._SpecialSchemeTypeName;
			}
			set
			{
				if ((this._SpecialSchemeTypeName != value))
				{
					this.OnSpecialSchemeTypeNameChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeTypeName = value;
					this.SendPropertyChanged("SpecialSchemeTypeName");
					this.OnSpecialSchemeTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_SpecialScheme_Base_SpecialSchemeType", Storage="_Technique_SpecialScheme", ThisKey="SpecialSchemeTypeId", OtherKey="SpecialSchemeTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Technique_SpecialScheme> Technique_SpecialScheme
		{
			get
			{
				return this._Technique_SpecialScheme;
			}
			set
			{
				this._Technique_SpecialScheme.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Technique_SpecialScheme(Technique_SpecialScheme entity)
		{
			this.SendPropertyChanging();
			entity.Base_SpecialSchemeType = this;
		}
		
		private void detach_Technique_SpecialScheme(Technique_SpecialScheme entity)
		{
			this.SendPropertyChanging();
			entity.Base_SpecialSchemeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_TrainLevel")]
	public partial class Base_TrainLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainLevelId;
		
		private string _TrainLevelCode;
		
		private string _TrainLevelName;
		
		private string _Remark;
		
		private EntitySet<EduTrain_TrainRecord> _EduTrain_TrainRecord;
		
		private EntitySet<Training_Plan> _Training_Plan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainLevelIdChanging(string value);
    partial void OnTrainLevelIdChanged();
    partial void OnTrainLevelCodeChanging(string value);
    partial void OnTrainLevelCodeChanged();
    partial void OnTrainLevelNameChanging(string value);
    partial void OnTrainLevelNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_TrainLevel()
		{
			this._EduTrain_TrainRecord = new EntitySet<EduTrain_TrainRecord>(new Action<EduTrain_TrainRecord>(this.attach_EduTrain_TrainRecord), new Action<EduTrain_TrainRecord>(this.detach_EduTrain_TrainRecord));
			this._Training_Plan = new EntitySet<Training_Plan>(new Action<Training_Plan>(this.attach_Training_Plan), new Action<Training_Plan>(this.detach_Training_Plan));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainLevelId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainLevelId
		{
			get
			{
				return this._TrainLevelId;
			}
			set
			{
				if ((this._TrainLevelId != value))
				{
					this.OnTrainLevelIdChanging(value);
					this.SendPropertyChanging();
					this._TrainLevelId = value;
					this.SendPropertyChanged("TrainLevelId");
					this.OnTrainLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainLevelCode", DbType="NVarChar(50)")]
		public string TrainLevelCode
		{
			get
			{
				return this._TrainLevelCode;
			}
			set
			{
				if ((this._TrainLevelCode != value))
				{
					this.OnTrainLevelCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainLevelCode = value;
					this.SendPropertyChanged("TrainLevelCode");
					this.OnTrainLevelCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainLevelName", DbType="NVarChar(50)")]
		public string TrainLevelName
		{
			get
			{
				return this._TrainLevelName;
			}
			set
			{
				if ((this._TrainLevelName != value))
				{
					this.OnTrainLevelNameChanging(value);
					this.SendPropertyChanging();
					this._TrainLevelName = value;
					this.SendPropertyChanged("TrainLevelName");
					this.OnTrainLevelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_TrainRecord_Base_TrainLevel", Storage="_EduTrain_TrainRecord", ThisKey="TrainLevelId", OtherKey="TrainLevelId", DeleteRule="NO ACTION")]
		public EntitySet<EduTrain_TrainRecord> EduTrain_TrainRecord
		{
			get
			{
				return this._EduTrain_TrainRecord;
			}
			set
			{
				this._EduTrain_TrainRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Plan_Base_TrainLevel", Storage="_Training_Plan", ThisKey="TrainLevelId", OtherKey="TrainLevelId", DeleteRule="NO ACTION")]
		public EntitySet<Training_Plan> Training_Plan
		{
			get
			{
				return this._Training_Plan;
			}
			set
			{
				this._Training_Plan.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EduTrain_TrainRecord(EduTrain_TrainRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainLevel = this;
		}
		
		private void detach_EduTrain_TrainRecord(EduTrain_TrainRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainLevel = null;
		}
		
		private void attach_Training_Plan(Training_Plan entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainLevel = this;
		}
		
		private void detach_Training_Plan(Training_Plan entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_TrainType")]
	public partial class Base_TrainType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainTypeId;
		
		private string _TrainTypeCode;
		
		private string _TrainTypeName;
		
		private string _Remark;
		
		private System.Nullable<bool> _IsAboutSendCard;
		
		private System.Nullable<bool> _IsRepeat;
		
		private EntitySet<Base_TrainTypeItem> _Base_TrainTypeItem;
		
		private EntitySet<EduTrain_TrainRecord> _EduTrain_TrainRecord;
		
		private EntitySet<Training_Plan> _Training_Plan;
		
		private EntitySet<Training_TestTraining> _Training_TestTraining;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainTypeIdChanging(string value);
    partial void OnTrainTypeIdChanged();
    partial void OnTrainTypeCodeChanging(string value);
    partial void OnTrainTypeCodeChanged();
    partial void OnTrainTypeNameChanging(string value);
    partial void OnTrainTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIsAboutSendCardChanging(System.Nullable<bool> value);
    partial void OnIsAboutSendCardChanged();
    partial void OnIsRepeatChanging(System.Nullable<bool> value);
    partial void OnIsRepeatChanged();
    #endregion
		
		public Base_TrainType()
		{
			this._Base_TrainTypeItem = new EntitySet<Base_TrainTypeItem>(new Action<Base_TrainTypeItem>(this.attach_Base_TrainTypeItem), new Action<Base_TrainTypeItem>(this.detach_Base_TrainTypeItem));
			this._EduTrain_TrainRecord = new EntitySet<EduTrain_TrainRecord>(new Action<EduTrain_TrainRecord>(this.attach_EduTrain_TrainRecord), new Action<EduTrain_TrainRecord>(this.detach_EduTrain_TrainRecord));
			this._Training_Plan = new EntitySet<Training_Plan>(new Action<Training_Plan>(this.attach_Training_Plan), new Action<Training_Plan>(this.detach_Training_Plan));
			this._Training_TestTraining = new EntitySet<Training_TestTraining>(new Action<Training_TestTraining>(this.attach_Training_TestTraining), new Action<Training_TestTraining>(this.detach_Training_TestTraining));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainTypeId
		{
			get
			{
				return this._TrainTypeId;
			}
			set
			{
				if ((this._TrainTypeId != value))
				{
					this.OnTrainTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeId = value;
					this.SendPropertyChanged("TrainTypeId");
					this.OnTrainTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeCode", DbType="NVarChar(50)")]
		public string TrainTypeCode
		{
			get
			{
				return this._TrainTypeCode;
			}
			set
			{
				if ((this._TrainTypeCode != value))
				{
					this.OnTrainTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeCode = value;
					this.SendPropertyChanged("TrainTypeCode");
					this.OnTrainTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeName", DbType="NVarChar(50)")]
		public string TrainTypeName
		{
			get
			{
				return this._TrainTypeName;
			}
			set
			{
				if ((this._TrainTypeName != value))
				{
					this.OnTrainTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeName = value;
					this.SendPropertyChanged("TrainTypeName");
					this.OnTrainTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAboutSendCard", DbType="Bit")]
		public System.Nullable<bool> IsAboutSendCard
		{
			get
			{
				return this._IsAboutSendCard;
			}
			set
			{
				if ((this._IsAboutSendCard != value))
				{
					this.OnIsAboutSendCardChanging(value);
					this.SendPropertyChanging();
					this._IsAboutSendCard = value;
					this.SendPropertyChanged("IsAboutSendCard");
					this.OnIsAboutSendCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRepeat", DbType="Bit")]
		public System.Nullable<bool> IsRepeat
		{
			get
			{
				return this._IsRepeat;
			}
			set
			{
				if ((this._IsRepeat != value))
				{
					this.OnIsRepeatChanging(value);
					this.SendPropertyChanging();
					this._IsRepeat = value;
					this.SendPropertyChanged("IsRepeat");
					this.OnIsRepeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TrainTypeItem_Base_TrainType", Storage="_Base_TrainTypeItem", ThisKey="TrainTypeId", OtherKey="TrainTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Base_TrainTypeItem> Base_TrainTypeItem
		{
			get
			{
				return this._Base_TrainTypeItem;
			}
			set
			{
				this._Base_TrainTypeItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_TrainRecord_Base_TrainType", Storage="_EduTrain_TrainRecord", ThisKey="TrainTypeId", OtherKey="TrainTypeId", DeleteRule="NO ACTION")]
		public EntitySet<EduTrain_TrainRecord> EduTrain_TrainRecord
		{
			get
			{
				return this._EduTrain_TrainRecord;
			}
			set
			{
				this._EduTrain_TrainRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Plan_Base_TrainType", Storage="_Training_Plan", ThisKey="TrainTypeId", OtherKey="TrainTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Training_Plan> Training_Plan
		{
			get
			{
				return this._Training_Plan;
			}
			set
			{
				this._Training_Plan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestTraining_Base_TrainType", Storage="_Training_TestTraining", ThisKey="TrainTypeId", OtherKey="TrainTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TestTraining> Training_TestTraining
		{
			get
			{
				return this._Training_TestTraining;
			}
			set
			{
				this._Training_TestTraining.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_TrainTypeItem(Base_TrainTypeItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainType = this;
		}
		
		private void detach_Base_TrainTypeItem(Base_TrainTypeItem entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainType = null;
		}
		
		private void attach_EduTrain_TrainRecord(EduTrain_TrainRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainType = this;
		}
		
		private void detach_EduTrain_TrainRecord(EduTrain_TrainRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainType = null;
		}
		
		private void attach_Training_Plan(Training_Plan entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainType = this;
		}
		
		private void detach_Training_Plan(Training_Plan entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainType = null;
		}
		
		private void attach_Training_TestTraining(Training_TestTraining entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainType = this;
		}
		
		private void detach_Training_TestTraining(Training_TestTraining entity)
		{
			this.SendPropertyChanging();
			entity.Base_TrainType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_TrainTypeItem")]
	public partial class Base_TrainTypeItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainTypeItemId;
		
		private string _TrainTypeId;
		
		private string _TrainingId;
		
		private int _SCount;
		
		private int _MCount;
		
		private int _JCount;
		
		private EntityRef<Base_TrainType> _Base_TrainType;
		
		private EntityRef<Training_TestTraining> _Training_TestTraining;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainTypeItemIdChanging(string value);
    partial void OnTrainTypeItemIdChanged();
    partial void OnTrainTypeIdChanging(string value);
    partial void OnTrainTypeIdChanged();
    partial void OnTrainingIdChanging(string value);
    partial void OnTrainingIdChanged();
    partial void OnSCountChanging(int value);
    partial void OnSCountChanged();
    partial void OnMCountChanging(int value);
    partial void OnMCountChanged();
    partial void OnJCountChanging(int value);
    partial void OnJCountChanged();
    #endregion
		
		public Base_TrainTypeItem()
		{
			this._Base_TrainType = default(EntityRef<Base_TrainType>);
			this._Training_TestTraining = default(EntityRef<Training_TestTraining>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainTypeItemId
		{
			get
			{
				return this._TrainTypeItemId;
			}
			set
			{
				if ((this._TrainTypeItemId != value))
				{
					this.OnTrainTypeItemIdChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeItemId = value;
					this.SendPropertyChanged("TrainTypeItemId");
					this.OnTrainTypeItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainTypeId
		{
			get
			{
				return this._TrainTypeId;
			}
			set
			{
				if ((this._TrainTypeId != value))
				{
					if (this._Base_TrainType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeId = value;
					this.SendPropertyChanged("TrainTypeId");
					this.OnTrainTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					if (this._Training_TestTraining.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingId = value;
					this.SendPropertyChanged("TrainingId");
					this.OnTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCount", DbType="Int NOT NULL")]
		public int SCount
		{
			get
			{
				return this._SCount;
			}
			set
			{
				if ((this._SCount != value))
				{
					this.OnSCountChanging(value);
					this.SendPropertyChanging();
					this._SCount = value;
					this.SendPropertyChanged("SCount");
					this.OnSCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCount", DbType="Int NOT NULL")]
		public int MCount
		{
			get
			{
				return this._MCount;
			}
			set
			{
				if ((this._MCount != value))
				{
					this.OnMCountChanging(value);
					this.SendPropertyChanging();
					this._MCount = value;
					this.SendPropertyChanged("MCount");
					this.OnMCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JCount", DbType="Int NOT NULL")]
		public int JCount
		{
			get
			{
				return this._JCount;
			}
			set
			{
				if ((this._JCount != value))
				{
					this.OnJCountChanging(value);
					this.SendPropertyChanging();
					this._JCount = value;
					this.SendPropertyChanged("JCount");
					this.OnJCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TrainTypeItem_Base_TrainType", Storage="_Base_TrainType", ThisKey="TrainTypeId", OtherKey="TrainTypeId", IsForeignKey=true)]
		public Base_TrainType Base_TrainType
		{
			get
			{
				return this._Base_TrainType.Entity;
			}
			set
			{
				Base_TrainType previousValue = this._Base_TrainType.Entity;
				if (((previousValue != value) 
							|| (this._Base_TrainType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_TrainType.Entity = null;
						previousValue.Base_TrainTypeItem.Remove(this);
					}
					this._Base_TrainType.Entity = value;
					if ((value != null))
					{
						value.Base_TrainTypeItem.Add(this);
						this._TrainTypeId = value.TrainTypeId;
					}
					else
					{
						this._TrainTypeId = default(string);
					}
					this.SendPropertyChanged("Base_TrainType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TrainTypeItem_Training_TestTraining", Storage="_Training_TestTraining", ThisKey="TrainingId", OtherKey="TrainingId", IsForeignKey=true)]
		public Training_TestTraining Training_TestTraining
		{
			get
			{
				return this._Training_TestTraining.Entity;
			}
			set
			{
				Training_TestTraining previousValue = this._Training_TestTraining.Entity;
				if (((previousValue != value) 
							|| (this._Training_TestTraining.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_TestTraining.Entity = null;
						previousValue.Base_TrainTypeItem.Remove(this);
					}
					this._Training_TestTraining.Entity = value;
					if ((value != null))
					{
						value.Base_TrainTypeItem.Add(this);
						this._TrainingId = value.TrainingId;
					}
					else
					{
						this._TrainingId = default(string);
					}
					this.SendPropertyChanged("Training_TestTraining");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_Unit")]
	public partial class Base_Unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UnitId;
		
		private string _UnitCode;
		
		private string _UnitName;
		
		private string _ShortUnitName;
		
		private string _UnitTypeId;
		
		private string _ProjectRange;
		
		private string _Corporate;
		
		private string _Address;
		
		private string _Telephone;
		
		private string _Fax;
		
		private string _EMail;
		
		private System.Nullable<bool> _IsBuild;
		
		private System.Nullable<bool> _IsBranch;
		
		private string _DataSources;
		
		private string _FromUnitId;
		
		private string _SupUnitId;
		
		private EntitySet<Base_Project> _Base_Project;
		
		private EntitySet<HJGL_Batch_NDE> _HJGL_Batch_NDE;
		
		private EntitySet<HJGL_Batch_NDE> _Unit;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<Check_CheckEquipment> _Check_CheckEquipment;
		
		private EntitySet<Check_JointCheck> _Check_JointCheck;
		
		private EntitySet<Check_TechnicalContactList> _Check_TechnicalContactList;
		
		private EntitySet<HJGL_Hard_Trust> _HJGL_Hard_Trust;
		
		private EntitySet<HJGL_Batch_BatchTrust> _HJGL_Batch_BatchTrust;
		
		private EntitySet<HJGL_Hard_Trust> _HJGL_Hard_Trust_Base_Unit;
		
		private EntitySet<HJGL_Pipeline> _HJGL_Pipeline;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
		private EntitySet<HJGL_HotProess_Trust> _HJGL_HotProess_Trust;
		
		private EntitySet<HJGL_WeldingDaily> _HJGL_WeldingDaily;
		
		private EntitySet<Project_ProjectUnit> _Project_ProjectUnit;
		
		private EntitySet<Project_ProjectUser> _Project_ProjectUser;
		
		private EntitySet<ProjectData_TeamGroup> _ProjectData_TeamGroup;
		
		private EntitySet<PTP_TestPackage> _PTP_TestPackage;
		
		private EntitySet<QualityAudit_SubUnitQuality> _QualityAudit_SubUnitQuality;
		
		private EntitySet<QualityAudit_SubUnitQualityAuditDetail> _QualityAudit_SubUnitQualityAuditDetail;
		
		private EntitySet<SecuritySystem_SafetyOrganization> _SecuritySystem_SafetyOrganization;
		
		private EntitySet<SitePerson_DayReportDetail> _SitePerson_DayReportDetail;
		
		private EntitySet<SitePerson_MonthReportDetail> _SitePerson_MonthReportDetail;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
		private EntitySet<SitePerson_PersonInOut> _SitePerson_PersonInOut;
		
		private EntitySet<Solution_ConstructSolution> _Solution_ConstructSolution;
		
		private EntitySet<Solution_CQMSConstructSolution> _Solution_CQMSConstructSolution;
		
		private EntitySet<Sys_User> _Sys_User;
		
		private EntitySet<Technique_SpecialScheme> _Technique_SpecialScheme;
		
		private EntitySet<Unqualified_WorkContact> _Unqualified_WorkContact;
		
		private EntitySet<WBS_UnitWork> _WBS_UnitWork;
		
		private EntitySet<WBS_UnitWork> _WBS_UnitWork_Base_Unit_SupervisorUnit;
		
		private EntitySet<WBS_UnitWork> _WBS_UnitWork_Base_Unit_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitCodeChanging(string value);
    partial void OnUnitCodeChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnShortUnitNameChanging(string value);
    partial void OnShortUnitNameChanged();
    partial void OnUnitTypeIdChanging(string value);
    partial void OnUnitTypeIdChanged();
    partial void OnProjectRangeChanging(string value);
    partial void OnProjectRangeChanged();
    partial void OnCorporateChanging(string value);
    partial void OnCorporateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnIsBranchChanging(System.Nullable<bool> value);
    partial void OnIsBranchChanged();
    partial void OnDataSourcesChanging(string value);
    partial void OnDataSourcesChanged();
    partial void OnFromUnitIdChanging(string value);
    partial void OnFromUnitIdChanged();
    partial void OnSupUnitIdChanging(string value);
    partial void OnSupUnitIdChanged();
    #endregion
		
		public Base_Unit()
		{
			this._Base_Project = new EntitySet<Base_Project>(new Action<Base_Project>(this.attach_Base_Project), new Action<Base_Project>(this.detach_Base_Project));
			this._HJGL_Batch_NDE = new EntitySet<HJGL_Batch_NDE>(new Action<HJGL_Batch_NDE>(this.attach_HJGL_Batch_NDE), new Action<HJGL_Batch_NDE>(this.detach_HJGL_Batch_NDE));
			this._Unit = new EntitySet<HJGL_Batch_NDE>(new Action<HJGL_Batch_NDE>(this.attach_Unit), new Action<HJGL_Batch_NDE>(this.detach_Unit));
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._Check_CheckEquipment = new EntitySet<Check_CheckEquipment>(new Action<Check_CheckEquipment>(this.attach_Check_CheckEquipment), new Action<Check_CheckEquipment>(this.detach_Check_CheckEquipment));
			this._Check_JointCheck = new EntitySet<Check_JointCheck>(new Action<Check_JointCheck>(this.attach_Check_JointCheck), new Action<Check_JointCheck>(this.detach_Check_JointCheck));
			this._Check_TechnicalContactList = new EntitySet<Check_TechnicalContactList>(new Action<Check_TechnicalContactList>(this.attach_Check_TechnicalContactList), new Action<Check_TechnicalContactList>(this.detach_Check_TechnicalContactList));
			this._HJGL_Hard_Trust = new EntitySet<HJGL_Hard_Trust>(new Action<HJGL_Hard_Trust>(this.attach_HJGL_Hard_Trust), new Action<HJGL_Hard_Trust>(this.detach_HJGL_Hard_Trust));
			this._HJGL_Batch_BatchTrust = new EntitySet<HJGL_Batch_BatchTrust>(new Action<HJGL_Batch_BatchTrust>(this.attach_HJGL_Batch_BatchTrust), new Action<HJGL_Batch_BatchTrust>(this.detach_HJGL_Batch_BatchTrust));
			this._HJGL_Hard_Trust_Base_Unit = new EntitySet<HJGL_Hard_Trust>(new Action<HJGL_Hard_Trust>(this.attach_HJGL_Hard_Trust_Base_Unit), new Action<HJGL_Hard_Trust>(this.detach_HJGL_Hard_Trust_Base_Unit));
			this._HJGL_Pipeline = new EntitySet<HJGL_Pipeline>(new Action<HJGL_Pipeline>(this.attach_HJGL_Pipeline), new Action<HJGL_Pipeline>(this.detach_HJGL_Pipeline));
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			this._HJGL_HotProess_Trust = new EntitySet<HJGL_HotProess_Trust>(new Action<HJGL_HotProess_Trust>(this.attach_HJGL_HotProess_Trust), new Action<HJGL_HotProess_Trust>(this.detach_HJGL_HotProess_Trust));
			this._HJGL_WeldingDaily = new EntitySet<HJGL_WeldingDaily>(new Action<HJGL_WeldingDaily>(this.attach_HJGL_WeldingDaily), new Action<HJGL_WeldingDaily>(this.detach_HJGL_WeldingDaily));
			this._Project_ProjectUnit = new EntitySet<Project_ProjectUnit>(new Action<Project_ProjectUnit>(this.attach_Project_ProjectUnit), new Action<Project_ProjectUnit>(this.detach_Project_ProjectUnit));
			this._Project_ProjectUser = new EntitySet<Project_ProjectUser>(new Action<Project_ProjectUser>(this.attach_Project_ProjectUser), new Action<Project_ProjectUser>(this.detach_Project_ProjectUser));
			this._ProjectData_TeamGroup = new EntitySet<ProjectData_TeamGroup>(new Action<ProjectData_TeamGroup>(this.attach_ProjectData_TeamGroup), new Action<ProjectData_TeamGroup>(this.detach_ProjectData_TeamGroup));
			this._PTP_TestPackage = new EntitySet<PTP_TestPackage>(new Action<PTP_TestPackage>(this.attach_PTP_TestPackage), new Action<PTP_TestPackage>(this.detach_PTP_TestPackage));
			this._QualityAudit_SubUnitQuality = new EntitySet<QualityAudit_SubUnitQuality>(new Action<QualityAudit_SubUnitQuality>(this.attach_QualityAudit_SubUnitQuality), new Action<QualityAudit_SubUnitQuality>(this.detach_QualityAudit_SubUnitQuality));
			this._QualityAudit_SubUnitQualityAuditDetail = new EntitySet<QualityAudit_SubUnitQualityAuditDetail>(new Action<QualityAudit_SubUnitQualityAuditDetail>(this.attach_QualityAudit_SubUnitQualityAuditDetail), new Action<QualityAudit_SubUnitQualityAuditDetail>(this.detach_QualityAudit_SubUnitQualityAuditDetail));
			this._SecuritySystem_SafetyOrganization = new EntitySet<SecuritySystem_SafetyOrganization>(new Action<SecuritySystem_SafetyOrganization>(this.attach_SecuritySystem_SafetyOrganization), new Action<SecuritySystem_SafetyOrganization>(this.detach_SecuritySystem_SafetyOrganization));
			this._SitePerson_DayReportDetail = new EntitySet<SitePerson_DayReportDetail>(new Action<SitePerson_DayReportDetail>(this.attach_SitePerson_DayReportDetail), new Action<SitePerson_DayReportDetail>(this.detach_SitePerson_DayReportDetail));
			this._SitePerson_MonthReportDetail = new EntitySet<SitePerson_MonthReportDetail>(new Action<SitePerson_MonthReportDetail>(this.attach_SitePerson_MonthReportDetail), new Action<SitePerson_MonthReportDetail>(this.detach_SitePerson_MonthReportDetail));
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			this._SitePerson_PersonInOut = new EntitySet<SitePerson_PersonInOut>(new Action<SitePerson_PersonInOut>(this.attach_SitePerson_PersonInOut), new Action<SitePerson_PersonInOut>(this.detach_SitePerson_PersonInOut));
			this._Solution_ConstructSolution = new EntitySet<Solution_ConstructSolution>(new Action<Solution_ConstructSolution>(this.attach_Solution_ConstructSolution), new Action<Solution_ConstructSolution>(this.detach_Solution_ConstructSolution));
			this._Solution_CQMSConstructSolution = new EntitySet<Solution_CQMSConstructSolution>(new Action<Solution_CQMSConstructSolution>(this.attach_Solution_CQMSConstructSolution), new Action<Solution_CQMSConstructSolution>(this.detach_Solution_CQMSConstructSolution));
			this._Sys_User = new EntitySet<Sys_User>(new Action<Sys_User>(this.attach_Sys_User), new Action<Sys_User>(this.detach_Sys_User));
			this._Technique_SpecialScheme = new EntitySet<Technique_SpecialScheme>(new Action<Technique_SpecialScheme>(this.attach_Technique_SpecialScheme), new Action<Technique_SpecialScheme>(this.detach_Technique_SpecialScheme));
			this._Unqualified_WorkContact = new EntitySet<Unqualified_WorkContact>(new Action<Unqualified_WorkContact>(this.attach_Unqualified_WorkContact), new Action<Unqualified_WorkContact>(this.detach_Unqualified_WorkContact));
			this._WBS_UnitWork = new EntitySet<WBS_UnitWork>(new Action<WBS_UnitWork>(this.attach_WBS_UnitWork), new Action<WBS_UnitWork>(this.detach_WBS_UnitWork));
			this._WBS_UnitWork_Base_Unit_SupervisorUnit = new EntitySet<WBS_UnitWork>(new Action<WBS_UnitWork>(this.attach_WBS_UnitWork_Base_Unit_SupervisorUnit), new Action<WBS_UnitWork>(this.detach_WBS_UnitWork_Base_Unit_SupervisorUnit));
			this._WBS_UnitWork_Base_Unit_Unit = new EntitySet<WBS_UnitWork>(new Action<WBS_UnitWork>(this.attach_WBS_UnitWork_Base_Unit_Unit), new Action<WBS_UnitWork>(this.detach_WBS_UnitWork_Base_Unit_Unit));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(100)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this.OnUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitCode = value;
					this.SendPropertyChanged("UnitCode");
					this.OnUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortUnitName", DbType="NVarChar(50)")]
		public string ShortUnitName
		{
			get
			{
				return this._ShortUnitName;
			}
			set
			{
				if ((this._ShortUnitName != value))
				{
					this.OnShortUnitNameChanging(value);
					this.SendPropertyChanging();
					this._ShortUnitName = value;
					this.SendPropertyChanged("ShortUnitName");
					this.OnShortUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeId", DbType="NVarChar(50)")]
		public string UnitTypeId
		{
			get
			{
				return this._UnitTypeId;
			}
			set
			{
				if ((this._UnitTypeId != value))
				{
					this.OnUnitTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeId = value;
					this.SendPropertyChanged("UnitTypeId");
					this.OnUnitTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectRange", DbType="NVarChar(1000)")]
		public string ProjectRange
		{
			get
			{
				return this._ProjectRange;
			}
			set
			{
				if ((this._ProjectRange != value))
				{
					this.OnProjectRangeChanging(value);
					this.SendPropertyChanging();
					this._ProjectRange = value;
					this.SendPropertyChanged("ProjectRange");
					this.OnProjectRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corporate", DbType="NVarChar(100)")]
		public string Corporate
		{
			get
			{
				return this._Corporate;
			}
			set
			{
				if ((this._Corporate != value))
				{
					this.OnCorporateChanging(value);
					this.SendPropertyChanging();
					this._Corporate = value;
					this.SendPropertyChanged("Corporate");
					this.OnCorporateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(200)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBranch", DbType="Bit")]
		public System.Nullable<bool> IsBranch
		{
			get
			{
				return this._IsBranch;
			}
			set
			{
				if ((this._IsBranch != value))
				{
					this.OnIsBranchChanging(value);
					this.SendPropertyChanging();
					this._IsBranch = value;
					this.SendPropertyChanged("IsBranch");
					this.OnIsBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSources", DbType="NVarChar(50)")]
		public string DataSources
		{
			get
			{
				return this._DataSources;
			}
			set
			{
				if ((this._DataSources != value))
				{
					this.OnDataSourcesChanging(value);
					this.SendPropertyChanging();
					this._DataSources = value;
					this.SendPropertyChanged("DataSources");
					this.OnDataSourcesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUnitId", DbType="NVarChar(50)")]
		public string FromUnitId
		{
			get
			{
				return this._FromUnitId;
			}
			set
			{
				if ((this._FromUnitId != value))
				{
					this.OnFromUnitIdChanging(value);
					this.SendPropertyChanging();
					this._FromUnitId = value;
					this.SendPropertyChanged("FromUnitId");
					this.OnFromUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupUnitId", DbType="NVarChar(50)")]
		public string SupUnitId
		{
			get
			{
				return this._SupUnitId;
			}
			set
			{
				if ((this._SupUnitId != value))
				{
					this.OnSupUnitIdChanging(value);
					this.SendPropertyChanging();
					this._SupUnitId = value;
					this.SendPropertyChanged("SupUnitId");
					this.OnSupUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_Project_Base_Unit", Storage="_Base_Project", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Base_Project> Base_Project
		{
			get
			{
				return this._Base_Project;
			}
			set
			{
				this._Base_Project.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_NDECheck_Base_Unit", Storage="_HJGL_Batch_NDE", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_NDE> HJGL_Batch_NDE
		{
			get
			{
				return this._HJGL_Batch_NDE;
			}
			set
			{
				this._HJGL_Batch_NDE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_NDECheck_CheckUnit_Base_Unit", Storage="_Unit", ThisKey="UnitId", OtherKey="NDEUnit", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_NDE> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				this._Unit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Base_Unit", Storage="_HJGL_Batch_PointBatch", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Equipment_Base_Unit", Storage="_Check_CheckEquipment", ThisKey="UnitId", OtherKey="UserUnitId", DeleteRule="NO ACTION")]
		public EntitySet<Check_CheckEquipment> Check_CheckEquipment
		{
			get
			{
				return this._Check_CheckEquipment;
			}
			set
			{
				this._Check_CheckEquipment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_JointCheck_Base_Unit", Storage="_Check_JointCheck", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Check_JointCheck> Check_JointCheck
		{
			get
			{
				return this._Check_JointCheck;
			}
			set
			{
				this._Check_JointCheck.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_TechnicalContactList_Base_Unit", Storage="_Check_TechnicalContactList", ThisKey="UnitId", OtherKey="ProposedUnitId", DeleteRule="NO ACTION")]
		public EntitySet<Check_TechnicalContactList> Check_TechnicalContactList
		{
			get
			{
				return this._Check_TechnicalContactList;
			}
			set
			{
				this._Check_TechnicalContactList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hard_Trust_Base_Unit", Storage="_HJGL_Hard_Trust", ThisKey="UnitId", OtherKey="CheckUnit", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_Trust> HJGL_Hard_Trust
		{
			get
			{
				return this._HJGL_Hard_Trust;
			}
			set
			{
				this._HJGL_Hard_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrust_Base_Unit", Storage="_HJGL_Batch_BatchTrust", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_BatchTrust> HJGL_Batch_BatchTrust
		{
			get
			{
				return this._HJGL_Batch_BatchTrust;
			}
			set
			{
				this._HJGL_Batch_BatchTrust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Trust_Base_Unit", Storage="_HJGL_Hard_Trust_Base_Unit", ThisKey="UnitId", OtherKey="HardTrustUnit", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_Trust> HJGL_Hard_Trust_Base_Unit
		{
			get
			{
				return this._HJGL_Hard_Trust_Base_Unit;
			}
			set
			{
				this._HJGL_Hard_Trust_Base_Unit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_Unit", Storage="_HJGL_Pipeline", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline;
			}
			set
			{
				this._HJGL_Pipeline.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_Base_Unit", Storage="_HJGL_RepairRecord", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Trust_Base_Unit", Storage="_HJGL_HotProess_Trust", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_Trust> HJGL_HotProess_Trust
		{
			get
			{
				return this._HJGL_HotProess_Trust;
			}
			set
			{
				this._HJGL_HotProess_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Pipeline_WeldingDaily_Base_Unit", Storage="_HJGL_WeldingDaily", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldingDaily> HJGL_WeldingDaily
		{
			get
			{
				return this._HJGL_WeldingDaily;
			}
			set
			{
				this._HJGL_WeldingDaily.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUnit_Base_Unit", Storage="_Project_ProjectUnit", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Project_ProjectUnit> Project_ProjectUnit
		{
			get
			{
				return this._Project_ProjectUnit;
			}
			set
			{
				this._Project_ProjectUnit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUser_Base_Unit", Storage="_Project_ProjectUser", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Project_ProjectUser> Project_ProjectUser
		{
			get
			{
				return this._Project_ProjectUser;
			}
			set
			{
				this._Project_ProjectUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_TeamGroup_Base_Unit", Storage="_ProjectData_TeamGroup", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<ProjectData_TeamGroup> ProjectData_TeamGroup
		{
			get
			{
				return this._ProjectData_TeamGroup;
			}
			set
			{
				this._ProjectData_TeamGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_TestPackage_Base_Unit", Storage="_PTP_TestPackage", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<PTP_TestPackage> PTP_TestPackage
		{
			get
			{
				return this._PTP_TestPackage;
			}
			set
			{
				this._PTP_TestPackage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SubUnitQuality_Base_Unit", Storage="_QualityAudit_SubUnitQuality", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_SubUnitQuality> QualityAudit_SubUnitQuality
		{
			get
			{
				return this._QualityAudit_SubUnitQuality;
			}
			set
			{
				this._QualityAudit_SubUnitQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SubUnitQualityAuditDetail_Base_Unit", Storage="_QualityAudit_SubUnitQualityAuditDetail", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_SubUnitQualityAuditDetail> QualityAudit_SubUnitQualityAuditDetail
		{
			get
			{
				return this._QualityAudit_SubUnitQualityAuditDetail;
			}
			set
			{
				this._QualityAudit_SubUnitQualityAuditDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SecuritySystem_SafetyOrganization_Base_Unit", Storage="_SecuritySystem_SafetyOrganization", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<SecuritySystem_SafetyOrganization> SecuritySystem_SafetyOrganization
		{
			get
			{
				return this._SecuritySystem_SafetyOrganization;
			}
			set
			{
				this._SecuritySystem_SafetyOrganization.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_DayReportDetail_Base_Unit", Storage="_SitePerson_DayReportDetail", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_DayReportDetail> SitePerson_DayReportDetail
		{
			get
			{
				return this._SitePerson_DayReportDetail;
			}
			set
			{
				this._SitePerson_DayReportDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_MonthReportDetail_Base_Unit", Storage="_SitePerson_MonthReportDetail", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_MonthReportDetail> SitePerson_MonthReportDetail
		{
			get
			{
				return this._SitePerson_MonthReportDetail;
			}
			set
			{
				this._SitePerson_MonthReportDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Unit", Storage="_SitePerson_Person", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_PersonInOut_Base_Unit", Storage="_SitePerson_PersonInOut", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_PersonInOut> SitePerson_PersonInOut
		{
			get
			{
				return this._SitePerson_PersonInOut;
			}
			set
			{
				this._SitePerson_PersonInOut.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_ConstructSolution_Base_Unit", Storage="_Solution_ConstructSolution", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Solution_ConstructSolution> Solution_ConstructSolution
		{
			get
			{
				return this._Solution_ConstructSolution;
			}
			set
			{
				this._Solution_ConstructSolution.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_CQMSConstructSolution_Base_Unit", Storage="_Solution_CQMSConstructSolution", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Solution_CQMSConstructSolution> Solution_CQMSConstructSolution
		{
			get
			{
				return this._Solution_CQMSConstructSolution;
			}
			set
			{
				this._Solution_CQMSConstructSolution.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Unit", Storage="_Sys_User", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_User> Sys_User
		{
			get
			{
				return this._Sys_User;
			}
			set
			{
				this._Sys_User.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_SpecialScheme_Base_Unit", Storage="_Technique_SpecialScheme", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<Technique_SpecialScheme> Technique_SpecialScheme
		{
			get
			{
				return this._Technique_SpecialScheme;
			}
			set
			{
				this._Technique_SpecialScheme.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Unqualified_WorkContact_Base_Unit", Storage="_Unqualified_WorkContact", ThisKey="UnitId", OtherKey="ProposedUnitId", DeleteRule="NO ACTION")]
		public EntitySet<Unqualified_WorkContact> Unqualified_WorkContact
		{
			get
			{
				return this._Unqualified_WorkContact;
			}
			set
			{
				this._Unqualified_WorkContact.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_UnitWork_Base_Unit_NDEUnit", Storage="_WBS_UnitWork", ThisKey="UnitId", OtherKey="NDEUnit", DeleteRule="NO ACTION")]
		public EntitySet<WBS_UnitWork> WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork;
			}
			set
			{
				this._WBS_UnitWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_UnitWork_Base_Unit_SupervisorUnit", Storage="_WBS_UnitWork_Base_Unit_SupervisorUnit", ThisKey="UnitId", OtherKey="SupervisorUnitId", DeleteRule="NO ACTION")]
		public EntitySet<WBS_UnitWork> WBS_UnitWork_Base_Unit_SupervisorUnit
		{
			get
			{
				return this._WBS_UnitWork_Base_Unit_SupervisorUnit;
			}
			set
			{
				this._WBS_UnitWork_Base_Unit_SupervisorUnit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_UnitWork_Base_Unit_Unit", Storage="_WBS_UnitWork_Base_Unit_Unit", ThisKey="UnitId", OtherKey="UnitId", DeleteRule="NO ACTION")]
		public EntitySet<WBS_UnitWork> WBS_UnitWork_Base_Unit_Unit
		{
			get
			{
				return this._WBS_UnitWork_Base_Unit_Unit;
			}
			set
			{
				this._WBS_UnitWork_Base_Unit_Unit.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_Project(Base_Project entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Base_Project(Base_Project entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_Batch_NDE(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_Batch_NDE(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Unit(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.NDEUnitBase_Unit = this;
		}
		
		private void detach_Unit(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.NDEUnitBase_Unit = null;
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Check_CheckEquipment(Check_CheckEquipment entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Check_CheckEquipment(Check_CheckEquipment entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Check_JointCheck(Check_JointCheck entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Check_JointCheck(Check_JointCheck entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Check_TechnicalContactList(Check_TechnicalContactList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Check_TechnicalContactList(Check_TechnicalContactList entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_Hard_Trust(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_Hard_Trust(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_Hard_Trust_Base_Unit(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.HardTrustUnitBase_Unit = this;
		}
		
		private void detach_HJGL_Hard_Trust_Base_Unit(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.HardTrustUnitBase_Unit = null;
		}
		
		private void attach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_HotProess_Trust(HJGL_HotProess_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_HotProess_Trust(HJGL_HotProess_Trust entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Project_ProjectUnit(Project_ProjectUnit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Project_ProjectUnit(Project_ProjectUnit entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Project_ProjectUser(Project_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Project_ProjectUser(Project_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_ProjectData_TeamGroup(ProjectData_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_ProjectData_TeamGroup(ProjectData_TeamGroup entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_PTP_TestPackage(PTP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_PTP_TestPackage(PTP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_QualityAudit_SubUnitQuality(QualityAudit_SubUnitQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_QualityAudit_SubUnitQuality(QualityAudit_SubUnitQuality entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_QualityAudit_SubUnitQualityAuditDetail(QualityAudit_SubUnitQualityAuditDetail entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_QualityAudit_SubUnitQualityAuditDetail(QualityAudit_SubUnitQualityAuditDetail entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_SecuritySystem_SafetyOrganization(SecuritySystem_SafetyOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_SecuritySystem_SafetyOrganization(SecuritySystem_SafetyOrganization entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_SitePerson_DayReportDetail(SitePerson_DayReportDetail entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_SitePerson_DayReportDetail(SitePerson_DayReportDetail entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_SitePerson_MonthReportDetail(SitePerson_MonthReportDetail entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_SitePerson_MonthReportDetail(SitePerson_MonthReportDetail entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_SitePerson_PersonInOut(SitePerson_PersonInOut entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_SitePerson_PersonInOut(SitePerson_PersonInOut entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Solution_ConstructSolution(Solution_ConstructSolution entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Solution_ConstructSolution(Solution_ConstructSolution entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Solution_CQMSConstructSolution(Solution_CQMSConstructSolution entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Solution_CQMSConstructSolution(Solution_CQMSConstructSolution entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Sys_User(Sys_User entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Technique_SpecialScheme(Technique_SpecialScheme entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Technique_SpecialScheme(Technique_SpecialScheme entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_Unqualified_WorkContact(Unqualified_WorkContact entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_Unqualified_WorkContact(Unqualified_WorkContact entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_WBS_UnitWork(WBS_UnitWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = this;
		}
		
		private void detach_WBS_UnitWork(WBS_UnitWork entity)
		{
			this.SendPropertyChanging();
			entity.Base_Unit = null;
		}
		
		private void attach_WBS_UnitWork_Base_Unit_SupervisorUnit(WBS_UnitWork entity)
		{
			this.SendPropertyChanging();
			entity.SupervisorUnit = this;
		}
		
		private void detach_WBS_UnitWork_Base_Unit_SupervisorUnit(WBS_UnitWork entity)
		{
			this.SendPropertyChanging();
			entity.SupervisorUnit = null;
		}
		
		private void attach_WBS_UnitWork_Base_Unit_Unit(WBS_UnitWork entity)
		{
			this.SendPropertyChanging();
			entity.Unit = this;
		}
		
		private void detach_WBS_UnitWork_Base_Unit_Unit(WBS_UnitWork entity)
		{
			this.SendPropertyChanging();
			entity.Unit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_UnitType")]
	public partial class Base_UnitType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UnitTypeId;
		
		private string _UnitTypeCode;
		
		private string _UnitTypeName;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitTypeIdChanging(string value);
    partial void OnUnitTypeIdChanged();
    partial void OnUnitTypeCodeChanging(string value);
    partial void OnUnitTypeCodeChanged();
    partial void OnUnitTypeNameChanging(string value);
    partial void OnUnitTypeNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_UnitType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UnitTypeId
		{
			get
			{
				return this._UnitTypeId;
			}
			set
			{
				if ((this._UnitTypeId != value))
				{
					this.OnUnitTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeId = value;
					this.SendPropertyChanged("UnitTypeId");
					this.OnUnitTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeCode", DbType="NVarChar(50)")]
		public string UnitTypeCode
		{
			get
			{
				return this._UnitTypeCode;
			}
			set
			{
				if ((this._UnitTypeCode != value))
				{
					this.OnUnitTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeCode = value;
					this.SendPropertyChanged("UnitTypeCode");
					this.OnUnitTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitTypeName
		{
			get
			{
				return this._UnitTypeName;
			}
			set
			{
				if ((this._UnitTypeName != value))
				{
					this.OnUnitTypeNameChanging(value);
					this.SendPropertyChanging();
					this._UnitTypeName = value;
					this.SendPropertyChanged("UnitTypeName");
					this.OnUnitTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_WeldingLocation")]
	public partial class Base_WeldingLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldingLocationId;
		
		private string _WeldingLocationCode;
		
		private string _WeldingLocationName;
		
		private string _Remark;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldingLocationIdChanging(string value);
    partial void OnWeldingLocationIdChanged();
    partial void OnWeldingLocationCodeChanging(string value);
    partial void OnWeldingLocationCodeChanged();
    partial void OnWeldingLocationNameChanging(string value);
    partial void OnWeldingLocationNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_WeldingLocation()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingLocationId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldingLocationId
		{
			get
			{
				return this._WeldingLocationId;
			}
			set
			{
				if ((this._WeldingLocationId != value))
				{
					this.OnWeldingLocationIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingLocationId = value;
					this.SendPropertyChanged("WeldingLocationId");
					this.OnWeldingLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingLocationCode", DbType="NVarChar(50)")]
		public string WeldingLocationCode
		{
			get
			{
				return this._WeldingLocationCode;
			}
			set
			{
				if ((this._WeldingLocationCode != value))
				{
					this.OnWeldingLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldingLocationCode = value;
					this.SendPropertyChanged("WeldingLocationCode");
					this.OnWeldingLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingLocationName", DbType="NVarChar(50)")]
		public string WeldingLocationName
		{
			get
			{
				return this._WeldingLocationName;
			}
			set
			{
				if ((this._WeldingLocationName != value))
				{
					this.OnWeldingLocationNameChanging(value);
					this.SendPropertyChanging();
					this._WeldingLocationName = value;
					this.SendPropertyChanged("WeldingLocationName");
					this.OnWeldingLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_WeldingLocation", Storage="_HJGL_WeldJoint", ThisKey="WeldingLocationId", OtherKey="WeldingLocationId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldingLocation = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldingLocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_WeldingMethod")]
	public partial class Base_WeldingMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldingMethodId;
		
		private string _WeldingMethodCode;
		
		private string _WeldingMethodName;
		
		private string _ConsumablesType;
		
		private string _Remark;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<WPQ_WPQList> _WPQ_WPQList;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldingMethodIdChanging(string value);
    partial void OnWeldingMethodIdChanged();
    partial void OnWeldingMethodCodeChanging(string value);
    partial void OnWeldingMethodCodeChanged();
    partial void OnWeldingMethodNameChanging(string value);
    partial void OnWeldingMethodNameChanged();
    partial void OnConsumablesTypeChanging(string value);
    partial void OnConsumablesTypeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_WeldingMethod()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._WPQ_WPQList = new EntitySet<WPQ_WPQList>(new Action<WPQ_WPQList>(this.attach_WPQ_WPQList), new Action<WPQ_WPQList>(this.detach_WPQ_WPQList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldingMethodId
		{
			get
			{
				return this._WeldingMethodId;
			}
			set
			{
				if ((this._WeldingMethodId != value))
				{
					this.OnWeldingMethodIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingMethodId = value;
					this.SendPropertyChanged("WeldingMethodId");
					this.OnWeldingMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodCode", DbType="NVarChar(50)")]
		public string WeldingMethodCode
		{
			get
			{
				return this._WeldingMethodCode;
			}
			set
			{
				if ((this._WeldingMethodCode != value))
				{
					this.OnWeldingMethodCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldingMethodCode = value;
					this.SendPropertyChanged("WeldingMethodCode");
					this.OnWeldingMethodCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodName", DbType="NVarChar(50)")]
		public string WeldingMethodName
		{
			get
			{
				return this._WeldingMethodName;
			}
			set
			{
				if ((this._WeldingMethodName != value))
				{
					this.OnWeldingMethodNameChanging(value);
					this.SendPropertyChanging();
					this._WeldingMethodName = value;
					this.SendPropertyChanged("WeldingMethodName");
					this.OnWeldingMethodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumablesType", DbType="NVarChar(10)")]
		public string ConsumablesType
		{
			get
			{
				return this._ConsumablesType;
			}
			set
			{
				if ((this._ConsumablesType != value))
				{
					this.OnConsumablesTypeChanging(value);
					this.SendPropertyChanging();
					this._ConsumablesType = value;
					this.SendPropertyChanged("ConsumablesType");
					this.OnConsumablesTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_WeldingMethod", Storage="_HJGL_WeldJoint", ThisKey="WeldingMethodId", OtherKey="WeldingMethodId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WPQ_WPQList_Base_WeldingMethod", Storage="_WPQ_WPQList", ThisKey="WeldingMethodId", OtherKey="WeldingMethodId", DeleteRule="NO ACTION")]
		public EntitySet<WPQ_WPQList> WPQ_WPQList
		{
			get
			{
				return this._WPQ_WPQList;
			}
			set
			{
				this._WPQ_WPQList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldingMethod = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldingMethod = null;
		}
		
		private void attach_WPQ_WPQList(WPQ_WPQList entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldingMethod = this;
		}
		
		private void detach_WPQ_WPQList(WPQ_WPQList entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldingMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_WeldType")]
	public partial class Base_WeldType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldTypeId;
		
		private string _WeldTypeCode;
		
		private string _WeldTypeName;
		
		private string _DetectionType;
		
		private System.Nullable<decimal> _Thickness;
		
		private string _Remark;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldTypeIdChanging(string value);
    partial void OnWeldTypeIdChanged();
    partial void OnWeldTypeCodeChanging(string value);
    partial void OnWeldTypeCodeChanged();
    partial void OnWeldTypeNameChanging(string value);
    partial void OnWeldTypeNameChanged();
    partial void OnDetectionTypeChanging(string value);
    partial void OnDetectionTypeChanged();
    partial void OnThicknessChanging(System.Nullable<decimal> value);
    partial void OnThicknessChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Base_WeldType()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldTypeId
		{
			get
			{
				return this._WeldTypeId;
			}
			set
			{
				if ((this._WeldTypeId != value))
				{
					this.OnWeldTypeIdChanging(value);
					this.SendPropertyChanging();
					this._WeldTypeId = value;
					this.SendPropertyChanged("WeldTypeId");
					this.OnWeldTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldTypeCode", DbType="NVarChar(50)")]
		public string WeldTypeCode
		{
			get
			{
				return this._WeldTypeCode;
			}
			set
			{
				if ((this._WeldTypeCode != value))
				{
					this.OnWeldTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldTypeCode = value;
					this.SendPropertyChanged("WeldTypeCode");
					this.OnWeldTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldTypeName", DbType="NVarChar(50)")]
		public string WeldTypeName
		{
			get
			{
				return this._WeldTypeName;
			}
			set
			{
				if ((this._WeldTypeName != value))
				{
					this.OnWeldTypeNameChanging(value);
					this.SendPropertyChanging();
					this._WeldTypeName = value;
					this.SendPropertyChanged("WeldTypeName");
					this.OnWeldTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionType", DbType="NVarChar(150)")]
		public string DetectionType
		{
			get
			{
				return this._DetectionType;
			}
			set
			{
				if ((this._DetectionType != value))
				{
					this.OnDetectionTypeChanging(value);
					this.SendPropertyChanging();
					this._DetectionType = value;
					this.SendPropertyChanged("DetectionType");
					this.OnDetectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Thickness
		{
			get
			{
				return this._Thickness;
			}
			set
			{
				if ((this._Thickness != value))
				{
					this.OnThicknessChanging(value);
					this.SendPropertyChanging();
					this._Thickness = value;
					this.SendPropertyChanged("Thickness");
					this.OnThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_WeldType", Storage="_HJGL_WeldJoint", ThisKey="WeldTypeId", OtherKey="WeldTypeId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldType = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.Base_WeldType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_WorkPost")]
	public partial class Base_WorkPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkPostId;
		
		private string _WorkPostName;
		
		private string _WorkPostCode;
		
		private string _Remark;
		
		private string _PostType;
		
		private System.Nullable<bool> _IsHsse;
		
		private EntitySet<HSSESystem_HSSEMainDuty> _HSSESystem_HSSEMainDuty;
		
		private EntitySet<SitePerson_DayReportUnitDetail> _SitePerson_DayReportUnitDetail;
		
		private EntitySet<SitePerson_MonthReportUnitDetail> _SitePerson_MonthReportUnitDetail;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkPostIdChanging(string value);
    partial void OnWorkPostIdChanged();
    partial void OnWorkPostNameChanging(string value);
    partial void OnWorkPostNameChanged();
    partial void OnWorkPostCodeChanging(string value);
    partial void OnWorkPostCodeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnPostTypeChanging(string value);
    partial void OnPostTypeChanged();
    partial void OnIsHsseChanging(System.Nullable<bool> value);
    partial void OnIsHsseChanged();
    #endregion
		
		public Base_WorkPost()
		{
			this._HSSESystem_HSSEMainDuty = new EntitySet<HSSESystem_HSSEMainDuty>(new Action<HSSESystem_HSSEMainDuty>(this.attach_HSSESystem_HSSEMainDuty), new Action<HSSESystem_HSSEMainDuty>(this.detach_HSSESystem_HSSEMainDuty));
			this._SitePerson_DayReportUnitDetail = new EntitySet<SitePerson_DayReportUnitDetail>(new Action<SitePerson_DayReportUnitDetail>(this.attach_SitePerson_DayReportUnitDetail), new Action<SitePerson_DayReportUnitDetail>(this.detach_SitePerson_DayReportUnitDetail));
			this._SitePerson_MonthReportUnitDetail = new EntitySet<SitePerson_MonthReportUnitDetail>(new Action<SitePerson_MonthReportUnitDetail>(this.attach_SitePerson_MonthReportUnitDetail), new Action<SitePerson_MonthReportUnitDetail>(this.detach_SitePerson_MonthReportUnitDetail));
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					this.OnWorkPostIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPostId = value;
					this.SendPropertyChanged("WorkPostId");
					this.OnWorkPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostName", DbType="NVarChar(100)")]
		public string WorkPostName
		{
			get
			{
				return this._WorkPostName;
			}
			set
			{
				if ((this._WorkPostName != value))
				{
					this.OnWorkPostNameChanging(value);
					this.SendPropertyChanging();
					this._WorkPostName = value;
					this.SendPropertyChanged("WorkPostName");
					this.OnWorkPostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostCode", DbType="NVarChar(50)")]
		public string WorkPostCode
		{
			get
			{
				return this._WorkPostCode;
			}
			set
			{
				if ((this._WorkPostCode != value))
				{
					this.OnWorkPostCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkPostCode = value;
					this.SendPropertyChanged("WorkPostCode");
					this.OnWorkPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostType", DbType="NChar(1)")]
		public string PostType
		{
			get
			{
				return this._PostType;
			}
			set
			{
				if ((this._PostType != value))
				{
					this.OnPostTypeChanging(value);
					this.SendPropertyChanging();
					this._PostType = value;
					this.SendPropertyChanged("PostType");
					this.OnPostTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHsse", DbType="Bit")]
		public System.Nullable<bool> IsHsse
		{
			get
			{
				return this._IsHsse;
			}
			set
			{
				if ((this._IsHsse != value))
				{
					this.OnIsHsseChanging(value);
					this.SendPropertyChanging();
					this._IsHsse = value;
					this.SendPropertyChanged("IsHsse");
					this.OnIsHsseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HSSESystem_HSSEMainDuty_Base_WorkPost", Storage="_HSSESystem_HSSEMainDuty", ThisKey="WorkPostId", OtherKey="WorkPostId", DeleteRule="NO ACTION")]
		public EntitySet<HSSESystem_HSSEMainDuty> HSSESystem_HSSEMainDuty
		{
			get
			{
				return this._HSSESystem_HSSEMainDuty;
			}
			set
			{
				this._HSSESystem_HSSEMainDuty.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_DayReportUnitDetail_Base_WorkPost", Storage="_SitePerson_DayReportUnitDetail", ThisKey="WorkPostId", OtherKey="PostId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_DayReportUnitDetail> SitePerson_DayReportUnitDetail
		{
			get
			{
				return this._SitePerson_DayReportUnitDetail;
			}
			set
			{
				this._SitePerson_DayReportUnitDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_MonthReportUnitDetail_Base_WorkPost", Storage="_SitePerson_MonthReportUnitDetail", ThisKey="WorkPostId", OtherKey="PostId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_MonthReportUnitDetail> SitePerson_MonthReportUnitDetail
		{
			get
			{
				return this._SitePerson_MonthReportUnitDetail;
			}
			set
			{
				this._SitePerson_MonthReportUnitDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_WorkPost", Storage="_SitePerson_Person", ThisKey="WorkPostId", OtherKey="WorkPostId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HSSESystem_HSSEMainDuty(HSSESystem_HSSEMainDuty entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkPost = this;
		}
		
		private void detach_HSSESystem_HSSEMainDuty(HSSESystem_HSSEMainDuty entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkPost = null;
		}
		
		private void attach_SitePerson_DayReportUnitDetail(SitePerson_DayReportUnitDetail entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkPost = this;
		}
		
		private void detach_SitePerson_DayReportUnitDetail(SitePerson_DayReportUnitDetail entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkPost = null;
		}
		
		private void attach_SitePerson_MonthReportUnitDetail(SitePerson_MonthReportUnitDetail entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkPost = this;
		}
		
		private void detach_SitePerson_MonthReportUnitDetail(SitePerson_MonthReportUnitDetail entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkPost = null;
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkPost = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Base_WorkPost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Base_WorkStage")]
	public partial class Base_WorkStage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkStageId;
		
		private string _WorkStageCode;
		
		private string _WorkStageName;
		
		private string _Remarks;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkStageIdChanging(string value);
    partial void OnWorkStageIdChanged();
    partial void OnWorkStageCodeChanging(string value);
    partial void OnWorkStageCodeChanged();
    partial void OnWorkStageNameChanging(string value);
    partial void OnWorkStageNameChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public Base_WorkStage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkStageId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkStageId
		{
			get
			{
				return this._WorkStageId;
			}
			set
			{
				if ((this._WorkStageId != value))
				{
					this.OnWorkStageIdChanging(value);
					this.SendPropertyChanging();
					this._WorkStageId = value;
					this.SendPropertyChanged("WorkStageId");
					this.OnWorkStageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkStageCode", DbType="NVarChar(50)")]
		public string WorkStageCode
		{
			get
			{
				return this._WorkStageCode;
			}
			set
			{
				if ((this._WorkStageCode != value))
				{
					this.OnWorkStageCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkStageCode = value;
					this.SendPropertyChanged("WorkStageCode");
					this.OnWorkStageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkStageName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkStageName
		{
			get
			{
				return this._WorkStageName;
			}
			set
			{
				if ((this._WorkStageName != value))
				{
					this.OnWorkStageNameChanging(value);
					this.SendPropertyChanging();
					this._WorkStageName = value;
					this.SendPropertyChanged("WorkStageName");
					this.OnWorkStageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(150)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_CheckControl")]
	public partial class Check_CheckControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CheckControlCode;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _UnitId;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private string _CheckMan;
		
		private System.Nullable<bool> _IsSubmit;
		
		private string _SubmitMan;
		
		private System.Nullable<bool> _IsOK;
		
		private string _DocCode;
		
		private string _CNProfessionalCode;
		
		private string _QuestionType;
		
		private string _CheckSite;
		
		private string _QuestionDef;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private string _RectifyOpinion;
		
		private string _AttachUrl;
		
		private string _HandleWay;
		
		private System.Nullable<System.DateTime> _RectifyDate;
		
		private string _ReAttachUrl;
		
		private string _State;
		
		private string _ProposeUnitId;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<Check_CheckControlApprove> _Check_CheckControlApprove;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckControlCodeChanging(string value);
    partial void OnCheckControlCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnCheckManChanging(string value);
    partial void OnCheckManChanged();
    partial void OnIsSubmitChanging(System.Nullable<bool> value);
    partial void OnIsSubmitChanged();
    partial void OnSubmitManChanging(string value);
    partial void OnSubmitManChanged();
    partial void OnIsOKChanging(System.Nullable<bool> value);
    partial void OnIsOKChanged();
    partial void OnDocCodeChanging(string value);
    partial void OnDocCodeChanged();
    partial void OnCNProfessionalCodeChanging(string value);
    partial void OnCNProfessionalCodeChanged();
    partial void OnQuestionTypeChanging(string value);
    partial void OnQuestionTypeChanged();
    partial void OnCheckSiteChanging(string value);
    partial void OnCheckSiteChanged();
    partial void OnQuestionDefChanging(string value);
    partial void OnQuestionDefChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnRectifyOpinionChanging(string value);
    partial void OnRectifyOpinionChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnHandleWayChanging(string value);
    partial void OnHandleWayChanged();
    partial void OnRectifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRectifyDateChanged();
    partial void OnReAttachUrlChanging(string value);
    partial void OnReAttachUrlChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnProposeUnitIdChanging(string value);
    partial void OnProposeUnitIdChanged();
    #endregion
		
		public Check_CheckControl()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Check_CheckControlApprove = new EntitySet<Check_CheckControlApprove>(new Action<Check_CheckControlApprove>(this.attach_Check_CheckControlApprove), new Action<Check_CheckControlApprove>(this.detach_Check_CheckControlApprove));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckControlCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CheckControlCode
		{
			get
			{
				return this._CheckControlCode;
			}
			set
			{
				if ((this._CheckControlCode != value))
				{
					this.OnCheckControlCodeChanging(value);
					this.SendPropertyChanging();
					this._CheckControlCode = value;
					this.SendPropertyChanged("CheckControlCode");
					this.OnCheckControlCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckMan", DbType="NVarChar(50)")]
		public string CheckMan
		{
			get
			{
				return this._CheckMan;
			}
			set
			{
				if ((this._CheckMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckManChanging(value);
					this.SendPropertyChanging();
					this._CheckMan = value;
					this.SendPropertyChanged("CheckMan");
					this.OnCheckManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubmit", DbType="Bit")]
		public System.Nullable<bool> IsSubmit
		{
			get
			{
				return this._IsSubmit;
			}
			set
			{
				if ((this._IsSubmit != value))
				{
					this.OnIsSubmitChanging(value);
					this.SendPropertyChanging();
					this._IsSubmit = value;
					this.SendPropertyChanged("IsSubmit");
					this.OnIsSubmitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitMan", DbType="NVarChar(50)")]
		public string SubmitMan
		{
			get
			{
				return this._SubmitMan;
			}
			set
			{
				if ((this._SubmitMan != value))
				{
					this.OnSubmitManChanging(value);
					this.SendPropertyChanging();
					this._SubmitMan = value;
					this.SendPropertyChanged("SubmitMan");
					this.OnSubmitManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOK", DbType="Bit")]
		public System.Nullable<bool> IsOK
		{
			get
			{
				return this._IsOK;
			}
			set
			{
				if ((this._IsOK != value))
				{
					this.OnIsOKChanging(value);
					this.SendPropertyChanging();
					this._IsOK = value;
					this.SendPropertyChanged("IsOK");
					this.OnIsOKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocCode", DbType="NVarChar(50)")]
		public string DocCode
		{
			get
			{
				return this._DocCode;
			}
			set
			{
				if ((this._DocCode != value))
				{
					this.OnDocCodeChanging(value);
					this.SendPropertyChanging();
					this._DocCode = value;
					this.SendPropertyChanged("DocCode");
					this.OnDocCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNProfessionalCode", DbType="NVarChar(50)")]
		public string CNProfessionalCode
		{
			get
			{
				return this._CNProfessionalCode;
			}
			set
			{
				if ((this._CNProfessionalCode != value))
				{
					this.OnCNProfessionalCodeChanging(value);
					this.SendPropertyChanging();
					this._CNProfessionalCode = value;
					this.SendPropertyChanged("CNProfessionalCode");
					this.OnCNProfessionalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionType", DbType="NVarChar(50)")]
		public string QuestionType
		{
			get
			{
				return this._QuestionType;
			}
			set
			{
				if ((this._QuestionType != value))
				{
					this.OnQuestionTypeChanging(value);
					this.SendPropertyChanging();
					this._QuestionType = value;
					this.SendPropertyChanged("QuestionType");
					this.OnQuestionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckSite", DbType="NVarChar(50)")]
		public string CheckSite
		{
			get
			{
				return this._CheckSite;
			}
			set
			{
				if ((this._CheckSite != value))
				{
					this.OnCheckSiteChanging(value);
					this.SendPropertyChanging();
					this._CheckSite = value;
					this.SendPropertyChanged("CheckSite");
					this.OnCheckSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionDef", DbType="NVarChar(500)")]
		public string QuestionDef
		{
			get
			{
				return this._QuestionDef;
			}
			set
			{
				if ((this._QuestionDef != value))
				{
					this.OnQuestionDefChanging(value);
					this.SendPropertyChanging();
					this._QuestionDef = value;
					this.SendPropertyChanged("QuestionDef");
					this.OnQuestionDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyOpinion", DbType="NVarChar(500)")]
		public string RectifyOpinion
		{
			get
			{
				return this._RectifyOpinion;
			}
			set
			{
				if ((this._RectifyOpinion != value))
				{
					this.OnRectifyOpinionChanging(value);
					this.SendPropertyChanging();
					this._RectifyOpinion = value;
					this.SendPropertyChanged("RectifyOpinion");
					this.OnRectifyOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandleWay", DbType="NVarChar(500)")]
		public string HandleWay
		{
			get
			{
				return this._HandleWay;
			}
			set
			{
				if ((this._HandleWay != value))
				{
					this.OnHandleWayChanging(value);
					this.SendPropertyChanging();
					this._HandleWay = value;
					this.SendPropertyChanged("HandleWay");
					this.OnHandleWayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RectifyDate
		{
			get
			{
				return this._RectifyDate;
			}
			set
			{
				if ((this._RectifyDate != value))
				{
					this.OnRectifyDateChanging(value);
					this.SendPropertyChanging();
					this._RectifyDate = value;
					this.SendPropertyChanged("RectifyDate");
					this.OnRectifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReAttachUrl", DbType="NVarChar(2000)")]
		public string ReAttachUrl
		{
			get
			{
				return this._ReAttachUrl;
			}
			set
			{
				if ((this._ReAttachUrl != value))
				{
					this.OnReAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._ReAttachUrl = value;
					this.SendPropertyChanged("ReAttachUrl");
					this.OnReAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposeUnitId", DbType="NVarChar(50)")]
		public string ProposeUnitId
		{
			get
			{
				return this._ProposeUnitId;
			}
			set
			{
				if ((this._ProposeUnitId != value))
				{
					this.OnProposeUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ProposeUnitId = value;
					this.SendPropertyChanged("ProposeUnitId");
					this.OnProposeUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckControl_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Check_CheckControl.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Check_CheckControl.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckControl_Sys_User", Storage="_Sys_User", ThisKey="CheckMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Check_CheckControl.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Check_CheckControl.Add(this);
						this._CheckMan = value.UserId;
					}
					else
					{
						this._CheckMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckControlApprove_Check_CheckControl", Storage="_Check_CheckControlApprove", ThisKey="CheckControlCode", OtherKey="CheckControlCode", DeleteRule="NO ACTION")]
		public EntitySet<Check_CheckControlApprove> Check_CheckControlApprove
		{
			get
			{
				return this._Check_CheckControlApprove;
			}
			set
			{
				this._Check_CheckControlApprove.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Check_CheckControlApprove(Check_CheckControlApprove entity)
		{
			this.SendPropertyChanging();
			entity.Check_CheckControl = this;
		}
		
		private void detach_Check_CheckControlApprove(Check_CheckControlApprove entity)
		{
			this.SendPropertyChanging();
			entity.Check_CheckControl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_CheckControlApprove")]
	public partial class Check_CheckControlApprove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CheckControlApproveId;
		
		private string _CheckControlCode;
		
		private string _ApproveMan;
		
		private System.Nullable<System.DateTime> _ApproveDate;
		
		private System.Nullable<bool> _IsAgree;
		
		private string _ApproveIdea;
		
		private string _ApproveType;
		
		private string _AttachUrl;
		
		private EntityRef<Check_CheckControl> _Check_CheckControl;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckControlApproveIdChanging(string value);
    partial void OnCheckControlApproveIdChanged();
    partial void OnCheckControlCodeChanging(string value);
    partial void OnCheckControlCodeChanged();
    partial void OnApproveManChanging(string value);
    partial void OnApproveManChanged();
    partial void OnApproveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDateChanged();
    partial void OnIsAgreeChanging(System.Nullable<bool> value);
    partial void OnIsAgreeChanged();
    partial void OnApproveIdeaChanging(string value);
    partial void OnApproveIdeaChanged();
    partial void OnApproveTypeChanging(string value);
    partial void OnApproveTypeChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    #endregion
		
		public Check_CheckControlApprove()
		{
			this._Check_CheckControl = default(EntityRef<Check_CheckControl>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckControlApproveId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CheckControlApproveId
		{
			get
			{
				return this._CheckControlApproveId;
			}
			set
			{
				if ((this._CheckControlApproveId != value))
				{
					this.OnCheckControlApproveIdChanging(value);
					this.SendPropertyChanging();
					this._CheckControlApproveId = value;
					this.SendPropertyChanged("CheckControlApproveId");
					this.OnCheckControlApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckControlCode", DbType="NVarChar(50)")]
		public string CheckControlCode
		{
			get
			{
				return this._CheckControlCode;
			}
			set
			{
				if ((this._CheckControlCode != value))
				{
					if (this._Check_CheckControl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckControlCodeChanging(value);
					this.SendPropertyChanging();
					this._CheckControlCode = value;
					this.SendPropertyChanged("CheckControlCode");
					this.OnCheckControlCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveMan", DbType="NVarChar(50)")]
		public string ApproveMan
		{
			get
			{
				return this._ApproveMan;
			}
			set
			{
				if ((this._ApproveMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproveManChanging(value);
					this.SendPropertyChanging();
					this._ApproveMan = value;
					this.SendPropertyChanged("ApproveMan");
					this.OnApproveManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgree", DbType="Bit")]
		public System.Nullable<bool> IsAgree
		{
			get
			{
				return this._IsAgree;
			}
			set
			{
				if ((this._IsAgree != value))
				{
					this.OnIsAgreeChanging(value);
					this.SendPropertyChanging();
					this._IsAgree = value;
					this.SendPropertyChanged("IsAgree");
					this.OnIsAgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveIdea", DbType="NVarChar(200)")]
		public string ApproveIdea
		{
			get
			{
				return this._ApproveIdea;
			}
			set
			{
				if ((this._ApproveIdea != value))
				{
					this.OnApproveIdeaChanging(value);
					this.SendPropertyChanging();
					this._ApproveIdea = value;
					this.SendPropertyChanged("ApproveIdea");
					this.OnApproveIdeaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveType", DbType="Char(1)")]
		public string ApproveType
		{
			get
			{
				return this._ApproveType;
			}
			set
			{
				if ((this._ApproveType != value))
				{
					this.OnApproveTypeChanging(value);
					this.SendPropertyChanging();
					this._ApproveType = value;
					this.SendPropertyChanged("ApproveType");
					this.OnApproveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(200)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckControlApprove_Check_CheckControl", Storage="_Check_CheckControl", ThisKey="CheckControlCode", OtherKey="CheckControlCode", IsForeignKey=true)]
		public Check_CheckControl Check_CheckControl
		{
			get
			{
				return this._Check_CheckControl.Entity;
			}
			set
			{
				Check_CheckControl previousValue = this._Check_CheckControl.Entity;
				if (((previousValue != value) 
							|| (this._Check_CheckControl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Check_CheckControl.Entity = null;
						previousValue.Check_CheckControlApprove.Remove(this);
					}
					this._Check_CheckControl.Entity = value;
					if ((value != null))
					{
						value.Check_CheckControlApprove.Add(this);
						this._CheckControlCode = value.CheckControlCode;
					}
					else
					{
						this._CheckControlCode = default(string);
					}
					this.SendPropertyChanged("Check_CheckControl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckControlApprove_Sys_User", Storage="_Sys_User", ThisKey="ApproveMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Check_CheckControlApprove.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Check_CheckControlApprove.Add(this);
						this._ApproveMan = value.UserId;
					}
					else
					{
						this._ApproveMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_CheckEquipment")]
	public partial class Check_CheckEquipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CheckEquipmentId;
		
		private string _ProjectId;
		
		private string _UserUnitId;
		
		private string _EquipmentName;
		
		private string _Format;
		
		private string _SetAccuracyGrade;
		
		private string _RealAccuracyGrade;
		
		private System.Nullable<decimal> _CheckCycle;
		
		private System.Nullable<System.DateTime> _CheckDay;
		
		private System.Nullable<bool> _IsIdentification;
		
		private System.Nullable<bool> _IsCheckCertificate;
		
		private string _AttachUrl;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _State;
		
		private string _Isdamage;
		
		private EntitySet<Check_CheckEquipmentApprove> _Check_CheckEquipmentApprove;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckEquipmentIdChanging(string value);
    partial void OnCheckEquipmentIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUserUnitIdChanging(string value);
    partial void OnUserUnitIdChanged();
    partial void OnEquipmentNameChanging(string value);
    partial void OnEquipmentNameChanged();
    partial void OnFormatChanging(string value);
    partial void OnFormatChanged();
    partial void OnSetAccuracyGradeChanging(string value);
    partial void OnSetAccuracyGradeChanged();
    partial void OnRealAccuracyGradeChanging(string value);
    partial void OnRealAccuracyGradeChanged();
    partial void OnCheckCycleChanging(System.Nullable<decimal> value);
    partial void OnCheckCycleChanged();
    partial void OnCheckDayChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDayChanged();
    partial void OnIsIdentificationChanging(System.Nullable<bool> value);
    partial void OnIsIdentificationChanged();
    partial void OnIsCheckCertificateChanging(System.Nullable<bool> value);
    partial void OnIsCheckCertificateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnIsdamageChanging(string value);
    partial void OnIsdamageChanged();
    #endregion
		
		public Check_CheckEquipment()
		{
			this._Check_CheckEquipmentApprove = new EntitySet<Check_CheckEquipmentApprove>(new Action<Check_CheckEquipmentApprove>(this.attach_Check_CheckEquipmentApprove), new Action<Check_CheckEquipmentApprove>(this.detach_Check_CheckEquipmentApprove));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckEquipmentId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CheckEquipmentId
		{
			get
			{
				return this._CheckEquipmentId;
			}
			set
			{
				if ((this._CheckEquipmentId != value))
				{
					this.OnCheckEquipmentIdChanging(value);
					this.SendPropertyChanging();
					this._CheckEquipmentId = value;
					this.SendPropertyChanged("CheckEquipmentId");
					this.OnCheckEquipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUnitId", DbType="NVarChar(50)")]
		public string UserUnitId
		{
			get
			{
				return this._UserUnitId;
			}
			set
			{
				if ((this._UserUnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UserUnitId = value;
					this.SendPropertyChanged("UserUnitId");
					this.OnUserUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentName", DbType="NVarChar(50)")]
		public string EquipmentName
		{
			get
			{
				return this._EquipmentName;
			}
			set
			{
				if ((this._EquipmentName != value))
				{
					this.OnEquipmentNameChanging(value);
					this.SendPropertyChanging();
					this._EquipmentName = value;
					this.SendPropertyChanged("EquipmentName");
					this.OnEquipmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Format", DbType="NVarChar(50)")]
		public string Format
		{
			get
			{
				return this._Format;
			}
			set
			{
				if ((this._Format != value))
				{
					this.OnFormatChanging(value);
					this.SendPropertyChanging();
					this._Format = value;
					this.SendPropertyChanged("Format");
					this.OnFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetAccuracyGrade", DbType="NVarChar(50)")]
		public string SetAccuracyGrade
		{
			get
			{
				return this._SetAccuracyGrade;
			}
			set
			{
				if ((this._SetAccuracyGrade != value))
				{
					this.OnSetAccuracyGradeChanging(value);
					this.SendPropertyChanging();
					this._SetAccuracyGrade = value;
					this.SendPropertyChanged("SetAccuracyGrade");
					this.OnSetAccuracyGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealAccuracyGrade", DbType="NVarChar(50)")]
		public string RealAccuracyGrade
		{
			get
			{
				return this._RealAccuracyGrade;
			}
			set
			{
				if ((this._RealAccuracyGrade != value))
				{
					this.OnRealAccuracyGradeChanging(value);
					this.SendPropertyChanging();
					this._RealAccuracyGrade = value;
					this.SendPropertyChanged("RealAccuracyGrade");
					this.OnRealAccuracyGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckCycle", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> CheckCycle
		{
			get
			{
				return this._CheckCycle;
			}
			set
			{
				if ((this._CheckCycle != value))
				{
					this.OnCheckCycleChanging(value);
					this.SendPropertyChanging();
					this._CheckCycle = value;
					this.SendPropertyChanged("CheckCycle");
					this.OnCheckCycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDay
		{
			get
			{
				return this._CheckDay;
			}
			set
			{
				if ((this._CheckDay != value))
				{
					this.OnCheckDayChanging(value);
					this.SendPropertyChanging();
					this._CheckDay = value;
					this.SendPropertyChanged("CheckDay");
					this.OnCheckDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIdentification", DbType="Bit")]
		public System.Nullable<bool> IsIdentification
		{
			get
			{
				return this._IsIdentification;
			}
			set
			{
				if ((this._IsIdentification != value))
				{
					this.OnIsIdentificationChanging(value);
					this.SendPropertyChanging();
					this._IsIdentification = value;
					this.SendPropertyChanged("IsIdentification");
					this.OnIsIdentificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCheckCertificate", DbType="Bit")]
		public System.Nullable<bool> IsCheckCertificate
		{
			get
			{
				return this._IsCheckCertificate;
			}
			set
			{
				if ((this._IsCheckCertificate != value))
				{
					this.OnIsCheckCertificateChanging(value);
					this.SendPropertyChanging();
					this._IsCheckCertificate = value;
					this.SendPropertyChanged("IsCheckCertificate");
					this.OnIsCheckCertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isdamage", DbType="NVarChar(50)")]
		public string Isdamage
		{
			get
			{
				return this._Isdamage;
			}
			set
			{
				if ((this._Isdamage != value))
				{
					this.OnIsdamageChanging(value);
					this.SendPropertyChanging();
					this._Isdamage = value;
					this.SendPropertyChanged("Isdamage");
					this.OnIsdamageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckEquipmentApprove_Check_CheckEquipment", Storage="_Check_CheckEquipmentApprove", ThisKey="CheckEquipmentId", OtherKey="CheckEquipmentId", DeleteRule="NO ACTION")]
		public EntitySet<Check_CheckEquipmentApprove> Check_CheckEquipmentApprove
		{
			get
			{
				return this._Check_CheckEquipmentApprove;
			}
			set
			{
				this._Check_CheckEquipmentApprove.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Equipment_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Check_CheckEquipment.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Check_CheckEquipment.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Equipment_Base_Unit", Storage="_Base_Unit", ThisKey="UserUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Check_CheckEquipment.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Check_CheckEquipment.Add(this);
						this._UserUnitId = value.UnitId;
					}
					else
					{
						this._UserUnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Equipment_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Check_CheckEquipment.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Check_CheckEquipment.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Check_CheckEquipmentApprove(Check_CheckEquipmentApprove entity)
		{
			this.SendPropertyChanging();
			entity.Check_CheckEquipment = this;
		}
		
		private void detach_Check_CheckEquipmentApprove(Check_CheckEquipmentApprove entity)
		{
			this.SendPropertyChanging();
			entity.Check_CheckEquipment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_CheckEquipmentApprove")]
	public partial class Check_CheckEquipmentApprove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CheckEquipmentApproveId;
		
		private string _CheckEquipmentId;
		
		private string _ApproveMan;
		
		private System.Nullable<System.DateTime> _ApproveDate;
		
		private System.Nullable<bool> _IsAgree;
		
		private string _ApproveIdea;
		
		private string _ApproveType;
		
		private string _AttachUrl;
		
		private EntityRef<Check_CheckEquipment> _Check_CheckEquipment;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckEquipmentApproveIdChanging(string value);
    partial void OnCheckEquipmentApproveIdChanged();
    partial void OnCheckEquipmentIdChanging(string value);
    partial void OnCheckEquipmentIdChanged();
    partial void OnApproveManChanging(string value);
    partial void OnApproveManChanged();
    partial void OnApproveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDateChanged();
    partial void OnIsAgreeChanging(System.Nullable<bool> value);
    partial void OnIsAgreeChanged();
    partial void OnApproveIdeaChanging(string value);
    partial void OnApproveIdeaChanged();
    partial void OnApproveTypeChanging(string value);
    partial void OnApproveTypeChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    #endregion
		
		public Check_CheckEquipmentApprove()
		{
			this._Check_CheckEquipment = default(EntityRef<Check_CheckEquipment>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckEquipmentApproveId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CheckEquipmentApproveId
		{
			get
			{
				return this._CheckEquipmentApproveId;
			}
			set
			{
				if ((this._CheckEquipmentApproveId != value))
				{
					this.OnCheckEquipmentApproveIdChanging(value);
					this.SendPropertyChanging();
					this._CheckEquipmentApproveId = value;
					this.SendPropertyChanged("CheckEquipmentApproveId");
					this.OnCheckEquipmentApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckEquipmentId", DbType="NVarChar(50)")]
		public string CheckEquipmentId
		{
			get
			{
				return this._CheckEquipmentId;
			}
			set
			{
				if ((this._CheckEquipmentId != value))
				{
					if (this._Check_CheckEquipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckEquipmentIdChanging(value);
					this.SendPropertyChanging();
					this._CheckEquipmentId = value;
					this.SendPropertyChanged("CheckEquipmentId");
					this.OnCheckEquipmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveMan", DbType="NVarChar(50)")]
		public string ApproveMan
		{
			get
			{
				return this._ApproveMan;
			}
			set
			{
				if ((this._ApproveMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproveManChanging(value);
					this.SendPropertyChanging();
					this._ApproveMan = value;
					this.SendPropertyChanged("ApproveMan");
					this.OnApproveManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgree", DbType="Bit")]
		public System.Nullable<bool> IsAgree
		{
			get
			{
				return this._IsAgree;
			}
			set
			{
				if ((this._IsAgree != value))
				{
					this.OnIsAgreeChanging(value);
					this.SendPropertyChanging();
					this._IsAgree = value;
					this.SendPropertyChanged("IsAgree");
					this.OnIsAgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveIdea", DbType="NVarChar(200)")]
		public string ApproveIdea
		{
			get
			{
				return this._ApproveIdea;
			}
			set
			{
				if ((this._ApproveIdea != value))
				{
					this.OnApproveIdeaChanging(value);
					this.SendPropertyChanging();
					this._ApproveIdea = value;
					this.SendPropertyChanged("ApproveIdea");
					this.OnApproveIdeaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveType", DbType="Char(1)")]
		public string ApproveType
		{
			get
			{
				return this._ApproveType;
			}
			set
			{
				if ((this._ApproveType != value))
				{
					this.OnApproveTypeChanging(value);
					this.SendPropertyChanging();
					this._ApproveType = value;
					this.SendPropertyChanged("ApproveType");
					this.OnApproveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(200)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckEquipmentApprove_Check_CheckEquipment", Storage="_Check_CheckEquipment", ThisKey="CheckEquipmentId", OtherKey="CheckEquipmentId", IsForeignKey=true)]
		public Check_CheckEquipment Check_CheckEquipment
		{
			get
			{
				return this._Check_CheckEquipment.Entity;
			}
			set
			{
				Check_CheckEquipment previousValue = this._Check_CheckEquipment.Entity;
				if (((previousValue != value) 
							|| (this._Check_CheckEquipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Check_CheckEquipment.Entity = null;
						previousValue.Check_CheckEquipmentApprove.Remove(this);
					}
					this._Check_CheckEquipment.Entity = value;
					if ((value != null))
					{
						value.Check_CheckEquipmentApprove.Add(this);
						this._CheckEquipmentId = value.CheckEquipmentId;
					}
					else
					{
						this._CheckEquipmentId = default(string);
					}
					this.SendPropertyChanged("Check_CheckEquipment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckEquipmentApprove_Sys_User", Storage="_Sys_User", ThisKey="ApproveMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Check_CheckEquipmentApprove.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Check_CheckEquipmentApprove.Add(this);
						this._ApproveMan = value.UserId;
					}
					else
					{
						this._ApproveMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_CheckMonth")]
	public partial class Check_CheckMonth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CheckMonthId;
		
		private string _ProjectId;
		
		private System.Nullable<System.DateTime> _Months;
		
		private System.Nullable<int> _ThisRectifyNum;
		
		private System.Nullable<int> _ThisOKRectifyNum;
		
		private System.Nullable<int> _TotalRectifyNum;
		
		private System.Nullable<int> _TotalOKRectifyNum;
		
		private System.Nullable<int> _ThisSpotCheckNum;
		
		private System.Nullable<int> _TotalSpotCheckNum;
		
		private string _TotalCompletedRate;
		
		private string _OnesOKRate;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _ManagementOverview;
		
		private string _AccidentSituation;
		
		private string _ConstructionData;
		
		private string _NextMonthPlan;
		
		private string _NeedSolved;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntitySet<Check_MonthSpotCheckDetail> _Check_MonthSpotCheckDetail;
		
		private EntitySet<Check_SpecialEquipmentDetail> _Check_SpecialEquipmentDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckMonthIdChanging(string value);
    partial void OnCheckMonthIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnMonthsChanging(System.Nullable<System.DateTime> value);
    partial void OnMonthsChanged();
    partial void OnThisRectifyNumChanging(System.Nullable<int> value);
    partial void OnThisRectifyNumChanged();
    partial void OnThisOKRectifyNumChanging(System.Nullable<int> value);
    partial void OnThisOKRectifyNumChanged();
    partial void OnTotalRectifyNumChanging(System.Nullable<int> value);
    partial void OnTotalRectifyNumChanged();
    partial void OnTotalOKRectifyNumChanging(System.Nullable<int> value);
    partial void OnTotalOKRectifyNumChanged();
    partial void OnThisSpotCheckNumChanging(System.Nullable<int> value);
    partial void OnThisSpotCheckNumChanged();
    partial void OnTotalSpotCheckNumChanging(System.Nullable<int> value);
    partial void OnTotalSpotCheckNumChanged();
    partial void OnTotalCompletedRateChanging(string value);
    partial void OnTotalCompletedRateChanged();
    partial void OnOnesOKRateChanging(string value);
    partial void OnOnesOKRateChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnManagementOverviewChanging(string value);
    partial void OnManagementOverviewChanged();
    partial void OnAccidentSituationChanging(string value);
    partial void OnAccidentSituationChanged();
    partial void OnConstructionDataChanging(string value);
    partial void OnConstructionDataChanged();
    partial void OnNextMonthPlanChanging(string value);
    partial void OnNextMonthPlanChanged();
    partial void OnNeedSolvedChanging(string value);
    partial void OnNeedSolvedChanged();
    #endregion
		
		public Check_CheckMonth()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Check_MonthSpotCheckDetail = new EntitySet<Check_MonthSpotCheckDetail>(new Action<Check_MonthSpotCheckDetail>(this.attach_Check_MonthSpotCheckDetail), new Action<Check_MonthSpotCheckDetail>(this.detach_Check_MonthSpotCheckDetail));
			this._Check_SpecialEquipmentDetail = new EntitySet<Check_SpecialEquipmentDetail>(new Action<Check_SpecialEquipmentDetail>(this.attach_Check_SpecialEquipmentDetail), new Action<Check_SpecialEquipmentDetail>(this.detach_Check_SpecialEquipmentDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckMonthId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CheckMonthId
		{
			get
			{
				return this._CheckMonthId;
			}
			set
			{
				if ((this._CheckMonthId != value))
				{
					this.OnCheckMonthIdChanging(value);
					this.SendPropertyChanging();
					this._CheckMonthId = value;
					this.SendPropertyChanged("CheckMonthId");
					this.OnCheckMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Months", DbType="DateTime")]
		public System.Nullable<System.DateTime> Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this.OnMonthsChanging(value);
					this.SendPropertyChanging();
					this._Months = value;
					this.SendPropertyChanged("Months");
					this.OnMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThisRectifyNum", DbType="Int")]
		public System.Nullable<int> ThisRectifyNum
		{
			get
			{
				return this._ThisRectifyNum;
			}
			set
			{
				if ((this._ThisRectifyNum != value))
				{
					this.OnThisRectifyNumChanging(value);
					this.SendPropertyChanging();
					this._ThisRectifyNum = value;
					this.SendPropertyChanged("ThisRectifyNum");
					this.OnThisRectifyNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThisOKRectifyNum", DbType="Int")]
		public System.Nullable<int> ThisOKRectifyNum
		{
			get
			{
				return this._ThisOKRectifyNum;
			}
			set
			{
				if ((this._ThisOKRectifyNum != value))
				{
					this.OnThisOKRectifyNumChanging(value);
					this.SendPropertyChanging();
					this._ThisOKRectifyNum = value;
					this.SendPropertyChanged("ThisOKRectifyNum");
					this.OnThisOKRectifyNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRectifyNum", DbType="Int")]
		public System.Nullable<int> TotalRectifyNum
		{
			get
			{
				return this._TotalRectifyNum;
			}
			set
			{
				if ((this._TotalRectifyNum != value))
				{
					this.OnTotalRectifyNumChanging(value);
					this.SendPropertyChanging();
					this._TotalRectifyNum = value;
					this.SendPropertyChanged("TotalRectifyNum");
					this.OnTotalRectifyNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOKRectifyNum", DbType="Int")]
		public System.Nullable<int> TotalOKRectifyNum
		{
			get
			{
				return this._TotalOKRectifyNum;
			}
			set
			{
				if ((this._TotalOKRectifyNum != value))
				{
					this.OnTotalOKRectifyNumChanging(value);
					this.SendPropertyChanging();
					this._TotalOKRectifyNum = value;
					this.SendPropertyChanged("TotalOKRectifyNum");
					this.OnTotalOKRectifyNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThisSpotCheckNum", DbType="Int")]
		public System.Nullable<int> ThisSpotCheckNum
		{
			get
			{
				return this._ThisSpotCheckNum;
			}
			set
			{
				if ((this._ThisSpotCheckNum != value))
				{
					this.OnThisSpotCheckNumChanging(value);
					this.SendPropertyChanging();
					this._ThisSpotCheckNum = value;
					this.SendPropertyChanged("ThisSpotCheckNum");
					this.OnThisSpotCheckNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSpotCheckNum", DbType="Int")]
		public System.Nullable<int> TotalSpotCheckNum
		{
			get
			{
				return this._TotalSpotCheckNum;
			}
			set
			{
				if ((this._TotalSpotCheckNum != value))
				{
					this.OnTotalSpotCheckNumChanging(value);
					this.SendPropertyChanging();
					this._TotalSpotCheckNum = value;
					this.SendPropertyChanged("TotalSpotCheckNum");
					this.OnTotalSpotCheckNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCompletedRate", DbType="NVarChar(10)")]
		public string TotalCompletedRate
		{
			get
			{
				return this._TotalCompletedRate;
			}
			set
			{
				if ((this._TotalCompletedRate != value))
				{
					this.OnTotalCompletedRateChanging(value);
					this.SendPropertyChanging();
					this._TotalCompletedRate = value;
					this.SendPropertyChanged("TotalCompletedRate");
					this.OnTotalCompletedRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnesOKRate", DbType="NVarChar(10)")]
		public string OnesOKRate
		{
			get
			{
				return this._OnesOKRate;
			}
			set
			{
				if ((this._OnesOKRate != value))
				{
					this.OnOnesOKRateChanging(value);
					this.SendPropertyChanging();
					this._OnesOKRate = value;
					this.SendPropertyChanged("OnesOKRate");
					this.OnOnesOKRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementOverview", DbType="NVarChar(2000)")]
		public string ManagementOverview
		{
			get
			{
				return this._ManagementOverview;
			}
			set
			{
				if ((this._ManagementOverview != value))
				{
					this.OnManagementOverviewChanging(value);
					this.SendPropertyChanging();
					this._ManagementOverview = value;
					this.SendPropertyChanged("ManagementOverview");
					this.OnManagementOverviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentSituation", DbType="NVarChar(2000)")]
		public string AccidentSituation
		{
			get
			{
				return this._AccidentSituation;
			}
			set
			{
				if ((this._AccidentSituation != value))
				{
					this.OnAccidentSituationChanging(value);
					this.SendPropertyChanging();
					this._AccidentSituation = value;
					this.SendPropertyChanged("AccidentSituation");
					this.OnAccidentSituationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructionData", DbType="NVarChar(2000)")]
		public string ConstructionData
		{
			get
			{
				return this._ConstructionData;
			}
			set
			{
				if ((this._ConstructionData != value))
				{
					this.OnConstructionDataChanging(value);
					this.SendPropertyChanging();
					this._ConstructionData = value;
					this.SendPropertyChanged("ConstructionData");
					this.OnConstructionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextMonthPlan", DbType="NVarChar(2000)")]
		public string NextMonthPlan
		{
			get
			{
				return this._NextMonthPlan;
			}
			set
			{
				if ((this._NextMonthPlan != value))
				{
					this.OnNextMonthPlanChanging(value);
					this.SendPropertyChanging();
					this._NextMonthPlan = value;
					this.SendPropertyChanged("NextMonthPlan");
					this.OnNextMonthPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedSolved", DbType="NVarChar(2000)")]
		public string NeedSolved
		{
			get
			{
				return this._NeedSolved;
			}
			set
			{
				if ((this._NeedSolved != value))
				{
					this.OnNeedSolvedChanging(value);
					this.SendPropertyChanging();
					this._NeedSolved = value;
					this.SendPropertyChanged("NeedSolved");
					this.OnNeedSolvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckMonth_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Check_CheckMonth.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Check_CheckMonth.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_MonthSpotCheckDetail_Check_CheckMonth", Storage="_Check_MonthSpotCheckDetail", ThisKey="CheckMonthId", OtherKey="CheckMonthId", DeleteRule="NO ACTION")]
		public EntitySet<Check_MonthSpotCheckDetail> Check_MonthSpotCheckDetail
		{
			get
			{
				return this._Check_MonthSpotCheckDetail;
			}
			set
			{
				this._Check_MonthSpotCheckDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_SpecialEquipmentDetail_Check_CheckMonth", Storage="_Check_SpecialEquipmentDetail", ThisKey="CheckMonthId", OtherKey="CheckMonthId", DeleteRule="NO ACTION")]
		public EntitySet<Check_SpecialEquipmentDetail> Check_SpecialEquipmentDetail
		{
			get
			{
				return this._Check_SpecialEquipmentDetail;
			}
			set
			{
				this._Check_SpecialEquipmentDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Check_MonthSpotCheckDetail(Check_MonthSpotCheckDetail entity)
		{
			this.SendPropertyChanging();
			entity.Check_CheckMonth = this;
		}
		
		private void detach_Check_MonthSpotCheckDetail(Check_MonthSpotCheckDetail entity)
		{
			this.SendPropertyChanging();
			entity.Check_CheckMonth = null;
		}
		
		private void attach_Check_SpecialEquipmentDetail(Check_SpecialEquipmentDetail entity)
		{
			this.SendPropertyChanging();
			entity.Check_CheckMonth = this;
		}
		
		private void detach_Check_SpecialEquipmentDetail(Check_SpecialEquipmentDetail entity)
		{
			this.SendPropertyChanging();
			entity.Check_CheckMonth = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_Design")]
	public partial class Check_Design : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DesignId;
		
		private string _ProjectId;
		
		private string _DesignCode;
		
		private string _CNProfessionalCode;
		
		private string _DesignType;
		
		private string _DesignContents;
		
		private System.Nullable<System.DateTime> _DesignDate;
		
		private string _CarryUnitIds;
		
		private System.Nullable<bool> _IsNoChange;
		
		private System.Nullable<bool> _IsNeedMaterial;
		
		private string _BuyMaterialUnitIds;
		
		private System.Nullable<System.DateTime> _MaterialPlanReachDate;
		
		private System.Nullable<decimal> _PlanDay;
		
		private System.Nullable<System.DateTime> _PlanCompleteDate;
		
		private System.Nullable<System.DateTime> _MaterialRealReachDate;
		
		private System.Nullable<System.DateTime> _RealCompleteDate;
		
		private string _AttachUrl;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _State;
		
		private string _MainItemId;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<Check_DesignApprove> _Check_DesignApprove;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesignIdChanging(string value);
    partial void OnDesignIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnDesignCodeChanging(string value);
    partial void OnDesignCodeChanged();
    partial void OnCNProfessionalCodeChanging(string value);
    partial void OnCNProfessionalCodeChanged();
    partial void OnDesignTypeChanging(string value);
    partial void OnDesignTypeChanged();
    partial void OnDesignContentsChanging(string value);
    partial void OnDesignContentsChanged();
    partial void OnDesignDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDesignDateChanged();
    partial void OnCarryUnitIdsChanging(string value);
    partial void OnCarryUnitIdsChanged();
    partial void OnIsNoChangeChanging(System.Nullable<bool> value);
    partial void OnIsNoChangeChanged();
    partial void OnIsNeedMaterialChanging(System.Nullable<bool> value);
    partial void OnIsNeedMaterialChanged();
    partial void OnBuyMaterialUnitIdsChanging(string value);
    partial void OnBuyMaterialUnitIdsChanged();
    partial void OnMaterialPlanReachDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMaterialPlanReachDateChanged();
    partial void OnPlanDayChanging(System.Nullable<decimal> value);
    partial void OnPlanDayChanged();
    partial void OnPlanCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanCompleteDateChanged();
    partial void OnMaterialRealReachDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMaterialRealReachDateChanged();
    partial void OnRealCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRealCompleteDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnMainItemIdChanging(string value);
    partial void OnMainItemIdChanged();
    #endregion
		
		public Check_Design()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Check_DesignApprove = new EntitySet<Check_DesignApprove>(new Action<Check_DesignApprove>(this.attach_Check_DesignApprove), new Action<Check_DesignApprove>(this.detach_Check_DesignApprove));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DesignId
		{
			get
			{
				return this._DesignId;
			}
			set
			{
				if ((this._DesignId != value))
				{
					this.OnDesignIdChanging(value);
					this.SendPropertyChanging();
					this._DesignId = value;
					this.SendPropertyChanged("DesignId");
					this.OnDesignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignCode", DbType="NVarChar(50)")]
		public string DesignCode
		{
			get
			{
				return this._DesignCode;
			}
			set
			{
				if ((this._DesignCode != value))
				{
					this.OnDesignCodeChanging(value);
					this.SendPropertyChanging();
					this._DesignCode = value;
					this.SendPropertyChanged("DesignCode");
					this.OnDesignCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNProfessionalCode", DbType="NVarChar(50)")]
		public string CNProfessionalCode
		{
			get
			{
				return this._CNProfessionalCode;
			}
			set
			{
				if ((this._CNProfessionalCode != value))
				{
					this.OnCNProfessionalCodeChanging(value);
					this.SendPropertyChanging();
					this._CNProfessionalCode = value;
					this.SendPropertyChanged("CNProfessionalCode");
					this.OnCNProfessionalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignType", DbType="NVarChar(50)")]
		public string DesignType
		{
			get
			{
				return this._DesignType;
			}
			set
			{
				if ((this._DesignType != value))
				{
					this.OnDesignTypeChanging(value);
					this.SendPropertyChanging();
					this._DesignType = value;
					this.SendPropertyChanged("DesignType");
					this.OnDesignTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignContents", DbType="NVarChar(1000)")]
		public string DesignContents
		{
			get
			{
				return this._DesignContents;
			}
			set
			{
				if ((this._DesignContents != value))
				{
					this.OnDesignContentsChanging(value);
					this.SendPropertyChanging();
					this._DesignContents = value;
					this.SendPropertyChanged("DesignContents");
					this.OnDesignContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DesignDate
		{
			get
			{
				return this._DesignDate;
			}
			set
			{
				if ((this._DesignDate != value))
				{
					this.OnDesignDateChanging(value);
					this.SendPropertyChanging();
					this._DesignDate = value;
					this.SendPropertyChanged("DesignDate");
					this.OnDesignDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarryUnitIds", DbType="NVarChar(500)")]
		public string CarryUnitIds
		{
			get
			{
				return this._CarryUnitIds;
			}
			set
			{
				if ((this._CarryUnitIds != value))
				{
					this.OnCarryUnitIdsChanging(value);
					this.SendPropertyChanging();
					this._CarryUnitIds = value;
					this.SendPropertyChanged("CarryUnitIds");
					this.OnCarryUnitIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNoChange", DbType="Bit")]
		public System.Nullable<bool> IsNoChange
		{
			get
			{
				return this._IsNoChange;
			}
			set
			{
				if ((this._IsNoChange != value))
				{
					this.OnIsNoChangeChanging(value);
					this.SendPropertyChanging();
					this._IsNoChange = value;
					this.SendPropertyChanged("IsNoChange");
					this.OnIsNoChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNeedMaterial", DbType="Bit")]
		public System.Nullable<bool> IsNeedMaterial
		{
			get
			{
				return this._IsNeedMaterial;
			}
			set
			{
				if ((this._IsNeedMaterial != value))
				{
					this.OnIsNeedMaterialChanging(value);
					this.SendPropertyChanging();
					this._IsNeedMaterial = value;
					this.SendPropertyChanged("IsNeedMaterial");
					this.OnIsNeedMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyMaterialUnitIds", DbType="NVarChar(500)")]
		public string BuyMaterialUnitIds
		{
			get
			{
				return this._BuyMaterialUnitIds;
			}
			set
			{
				if ((this._BuyMaterialUnitIds != value))
				{
					this.OnBuyMaterialUnitIdsChanging(value);
					this.SendPropertyChanging();
					this._BuyMaterialUnitIds = value;
					this.SendPropertyChanged("BuyMaterialUnitIds");
					this.OnBuyMaterialUnitIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialPlanReachDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MaterialPlanReachDate
		{
			get
			{
				return this._MaterialPlanReachDate;
			}
			set
			{
				if ((this._MaterialPlanReachDate != value))
				{
					this.OnMaterialPlanReachDateChanging(value);
					this.SendPropertyChanging();
					this._MaterialPlanReachDate = value;
					this.SendPropertyChanged("MaterialPlanReachDate");
					this.OnMaterialPlanReachDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanDay", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> PlanDay
		{
			get
			{
				return this._PlanDay;
			}
			set
			{
				if ((this._PlanDay != value))
				{
					this.OnPlanDayChanging(value);
					this.SendPropertyChanging();
					this._PlanDay = value;
					this.SendPropertyChanged("PlanDay");
					this.OnPlanDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanCompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlanCompleteDate
		{
			get
			{
				return this._PlanCompleteDate;
			}
			set
			{
				if ((this._PlanCompleteDate != value))
				{
					this.OnPlanCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._PlanCompleteDate = value;
					this.SendPropertyChanged("PlanCompleteDate");
					this.OnPlanCompleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialRealReachDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MaterialRealReachDate
		{
			get
			{
				return this._MaterialRealReachDate;
			}
			set
			{
				if ((this._MaterialRealReachDate != value))
				{
					this.OnMaterialRealReachDateChanging(value);
					this.SendPropertyChanging();
					this._MaterialRealReachDate = value;
					this.SendPropertyChanged("MaterialRealReachDate");
					this.OnMaterialRealReachDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealCompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RealCompleteDate
		{
			get
			{
				return this._RealCompleteDate;
			}
			set
			{
				if ((this._RealCompleteDate != value))
				{
					this.OnRealCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._RealCompleteDate = value;
					this.SendPropertyChanged("RealCompleteDate");
					this.OnRealCompleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainItemId", DbType="NVarChar(50)")]
		public string MainItemId
		{
			get
			{
				return this._MainItemId;
			}
			set
			{
				if ((this._MainItemId != value))
				{
					this.OnMainItemIdChanging(value);
					this.SendPropertyChanging();
					this._MainItemId = value;
					this.SendPropertyChanged("MainItemId");
					this.OnMainItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Design_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Check_Design.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Check_Design.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Design_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Check_Design.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Check_Design.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_DesignApprove_Check_Design", Storage="_Check_DesignApprove", ThisKey="DesignId", OtherKey="DesignId", DeleteRule="NO ACTION")]
		public EntitySet<Check_DesignApprove> Check_DesignApprove
		{
			get
			{
				return this._Check_DesignApprove;
			}
			set
			{
				this._Check_DesignApprove.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Check_DesignApprove(Check_DesignApprove entity)
		{
			this.SendPropertyChanging();
			entity.Check_Design = this;
		}
		
		private void detach_Check_DesignApprove(Check_DesignApprove entity)
		{
			this.SendPropertyChanging();
			entity.Check_Design = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_DesignApprove")]
	public partial class Check_DesignApprove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DesignApproveId;
		
		private string _DesignId;
		
		private string _ApproveMan;
		
		private System.Nullable<System.DateTime> _ApproveDate;
		
		private System.Nullable<bool> _IsAgree;
		
		private string _ApproveIdea;
		
		private string _ApproveType;
		
		private string _AttachUrl;
		
		private EntityRef<Check_Design> _Check_Design;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesignApproveIdChanging(string value);
    partial void OnDesignApproveIdChanged();
    partial void OnDesignIdChanging(string value);
    partial void OnDesignIdChanged();
    partial void OnApproveManChanging(string value);
    partial void OnApproveManChanged();
    partial void OnApproveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDateChanged();
    partial void OnIsAgreeChanging(System.Nullable<bool> value);
    partial void OnIsAgreeChanged();
    partial void OnApproveIdeaChanging(string value);
    partial void OnApproveIdeaChanged();
    partial void OnApproveTypeChanging(string value);
    partial void OnApproveTypeChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    #endregion
		
		public Check_DesignApprove()
		{
			this._Check_Design = default(EntityRef<Check_Design>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignApproveId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DesignApproveId
		{
			get
			{
				return this._DesignApproveId;
			}
			set
			{
				if ((this._DesignApproveId != value))
				{
					this.OnDesignApproveIdChanging(value);
					this.SendPropertyChanging();
					this._DesignApproveId = value;
					this.SendPropertyChanged("DesignApproveId");
					this.OnDesignApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignId", DbType="NVarChar(50)")]
		public string DesignId
		{
			get
			{
				return this._DesignId;
			}
			set
			{
				if ((this._DesignId != value))
				{
					if (this._Check_Design.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesignIdChanging(value);
					this.SendPropertyChanging();
					this._DesignId = value;
					this.SendPropertyChanged("DesignId");
					this.OnDesignIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveMan", DbType="NVarChar(50)")]
		public string ApproveMan
		{
			get
			{
				return this._ApproveMan;
			}
			set
			{
				if ((this._ApproveMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproveManChanging(value);
					this.SendPropertyChanging();
					this._ApproveMan = value;
					this.SendPropertyChanged("ApproveMan");
					this.OnApproveManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgree", DbType="Bit")]
		public System.Nullable<bool> IsAgree
		{
			get
			{
				return this._IsAgree;
			}
			set
			{
				if ((this._IsAgree != value))
				{
					this.OnIsAgreeChanging(value);
					this.SendPropertyChanging();
					this._IsAgree = value;
					this.SendPropertyChanged("IsAgree");
					this.OnIsAgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveIdea", DbType="NVarChar(200)")]
		public string ApproveIdea
		{
			get
			{
				return this._ApproveIdea;
			}
			set
			{
				if ((this._ApproveIdea != value))
				{
					this.OnApproveIdeaChanging(value);
					this.SendPropertyChanging();
					this._ApproveIdea = value;
					this.SendPropertyChanged("ApproveIdea");
					this.OnApproveIdeaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveType", DbType="Char(1)")]
		public string ApproveType
		{
			get
			{
				return this._ApproveType;
			}
			set
			{
				if ((this._ApproveType != value))
				{
					this.OnApproveTypeChanging(value);
					this.SendPropertyChanging();
					this._ApproveType = value;
					this.SendPropertyChanged("ApproveType");
					this.OnApproveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(200)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_DesignApprove_Check_Design", Storage="_Check_Design", ThisKey="DesignId", OtherKey="DesignId", IsForeignKey=true)]
		public Check_Design Check_Design
		{
			get
			{
				return this._Check_Design.Entity;
			}
			set
			{
				Check_Design previousValue = this._Check_Design.Entity;
				if (((previousValue != value) 
							|| (this._Check_Design.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Check_Design.Entity = null;
						previousValue.Check_DesignApprove.Remove(this);
					}
					this._Check_Design.Entity = value;
					if ((value != null))
					{
						value.Check_DesignApprove.Add(this);
						this._DesignId = value.DesignId;
					}
					else
					{
						this._DesignId = default(string);
					}
					this.SendPropertyChanged("Check_Design");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_DesignApprove_Sys_User", Storage="_Sys_User", ThisKey="ApproveMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Check_DesignApprove.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Check_DesignApprove.Add(this);
						this._ApproveMan = value.UserId;
					}
					else
					{
						this._ApproveMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_Draw")]
	public partial class Check_Draw : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DrawId;
		
		private string _ProjectId;
		
		private string _DrawCode;
		
		private string _DrawName;
		
		private string _MainItem;
		
		private string _DesignCN;
		
		private string _Edition;
		
		private System.Nullable<System.DateTime> _AcceptDate;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<bool> _IsInvalid;
		
		private string _Recover;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDrawIdChanging(string value);
    partial void OnDrawIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnDrawCodeChanging(string value);
    partial void OnDrawCodeChanged();
    partial void OnDrawNameChanging(string value);
    partial void OnDrawNameChanged();
    partial void OnMainItemChanging(string value);
    partial void OnMainItemChanged();
    partial void OnDesignCNChanging(string value);
    partial void OnDesignCNChanged();
    partial void OnEditionChanging(string value);
    partial void OnEditionChanged();
    partial void OnAcceptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptDateChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnIsInvalidChanging(System.Nullable<bool> value);
    partial void OnIsInvalidChanged();
    partial void OnRecoverChanging(string value);
    partial void OnRecoverChanged();
    #endregion
		
		public Check_Draw()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DrawId
		{
			get
			{
				return this._DrawId;
			}
			set
			{
				if ((this._DrawId != value))
				{
					this.OnDrawIdChanging(value);
					this.SendPropertyChanging();
					this._DrawId = value;
					this.SendPropertyChanged("DrawId");
					this.OnDrawIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawCode", DbType="NVarChar(50)")]
		public string DrawCode
		{
			get
			{
				return this._DrawCode;
			}
			set
			{
				if ((this._DrawCode != value))
				{
					this.OnDrawCodeChanging(value);
					this.SendPropertyChanging();
					this._DrawCode = value;
					this.SendPropertyChanged("DrawCode");
					this.OnDrawCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrawName", DbType="NVarChar(50)")]
		public string DrawName
		{
			get
			{
				return this._DrawName;
			}
			set
			{
				if ((this._DrawName != value))
				{
					this.OnDrawNameChanging(value);
					this.SendPropertyChanging();
					this._DrawName = value;
					this.SendPropertyChanged("DrawName");
					this.OnDrawNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainItem", DbType="NVarChar(50)")]
		public string MainItem
		{
			get
			{
				return this._MainItem;
			}
			set
			{
				if ((this._MainItem != value))
				{
					this.OnMainItemChanging(value);
					this.SendPropertyChanging();
					this._MainItem = value;
					this.SendPropertyChanged("MainItem");
					this.OnMainItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignCN", DbType="NVarChar(50)")]
		public string DesignCN
		{
			get
			{
				return this._DesignCN;
			}
			set
			{
				if ((this._DesignCN != value))
				{
					this.OnDesignCNChanging(value);
					this.SendPropertyChanging();
					this._DesignCN = value;
					this.SendPropertyChanged("DesignCN");
					this.OnDesignCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edition", DbType="NVarChar(50)")]
		public string Edition
		{
			get
			{
				return this._Edition;
			}
			set
			{
				if ((this._Edition != value))
				{
					this.OnEditionChanging(value);
					this.SendPropertyChanging();
					this._Edition = value;
					this.SendPropertyChanged("Edition");
					this.OnEditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptDate
		{
			get
			{
				return this._AcceptDate;
			}
			set
			{
				if ((this._AcceptDate != value))
				{
					this.OnAcceptDateChanging(value);
					this.SendPropertyChanging();
					this._AcceptDate = value;
					this.SendPropertyChanged("AcceptDate");
					this.OnAcceptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvalid", DbType="Bit")]
		public System.Nullable<bool> IsInvalid
		{
			get
			{
				return this._IsInvalid;
			}
			set
			{
				if ((this._IsInvalid != value))
				{
					this.OnIsInvalidChanging(value);
					this.SendPropertyChanging();
					this._IsInvalid = value;
					this.SendPropertyChanged("IsInvalid");
					this.OnIsInvalidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="recover", Storage="_Recover", DbType="NVarChar(50)")]
		public string Recover
		{
			get
			{
				return this._Recover;
			}
			set
			{
				if ((this._Recover != value))
				{
					this.OnRecoverChanging(value);
					this.SendPropertyChanging();
					this._Recover = value;
					this.SendPropertyChanged("Recover");
					this.OnRecoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Draw_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Check_Draw.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Check_Draw.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Draw_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Check_Draw.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Check_Draw.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_JointCheck")]
	public partial class Check_JointCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JointCheckId;
		
		private string _JointCheckCode;
		
		private string _ProjectId;
		
		private string _CheckType;
		
		private string _UnitId;
		
		private string _CheckMan;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private string _State;
		
		private string _CheckName;
		
		private string _ProposeUnitId;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<Check_JointCheckApprove> _Check_JointCheckApprove;
		
		private EntitySet<Check_JointCheckDetail> _Check_JointCheckDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJointCheckIdChanging(string value);
    partial void OnJointCheckIdChanged();
    partial void OnJointCheckCodeChanging(string value);
    partial void OnJointCheckCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnCheckTypeChanging(string value);
    partial void OnCheckTypeChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnCheckManChanging(string value);
    partial void OnCheckManChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCheckNameChanging(string value);
    partial void OnCheckNameChanged();
    partial void OnProposeUnitIdChanging(string value);
    partial void OnProposeUnitIdChanged();
    #endregion
		
		public Check_JointCheck()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Check_JointCheckApprove = new EntitySet<Check_JointCheckApprove>(new Action<Check_JointCheckApprove>(this.attach_Check_JointCheckApprove), new Action<Check_JointCheckApprove>(this.detach_Check_JointCheckApprove));
			this._Check_JointCheckDetail = new EntitySet<Check_JointCheckDetail>(new Action<Check_JointCheckDetail>(this.attach_Check_JointCheckDetail), new Action<Check_JointCheckDetail>(this.detach_Check_JointCheckDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCheckId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JointCheckId
		{
			get
			{
				return this._JointCheckId;
			}
			set
			{
				if ((this._JointCheckId != value))
				{
					this.OnJointCheckIdChanging(value);
					this.SendPropertyChanging();
					this._JointCheckId = value;
					this.SendPropertyChanged("JointCheckId");
					this.OnJointCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCheckCode", DbType="NVarChar(50)")]
		public string JointCheckCode
		{
			get
			{
				return this._JointCheckCode;
			}
			set
			{
				if ((this._JointCheckCode != value))
				{
					this.OnJointCheckCodeChanging(value);
					this.SendPropertyChanging();
					this._JointCheckCode = value;
					this.SendPropertyChanged("JointCheckCode");
					this.OnJointCheckCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckType", DbType="Char(1)")]
		public string CheckType
		{
			get
			{
				return this._CheckType;
			}
			set
			{
				if ((this._CheckType != value))
				{
					this.OnCheckTypeChanging(value);
					this.SendPropertyChanging();
					this._CheckType = value;
					this.SendPropertyChanged("CheckType");
					this.OnCheckTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckMan", DbType="NVarChar(50)")]
		public string CheckMan
		{
			get
			{
				return this._CheckMan;
			}
			set
			{
				if ((this._CheckMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckManChanging(value);
					this.SendPropertyChanging();
					this._CheckMan = value;
					this.SendPropertyChanged("CheckMan");
					this.OnCheckManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckName", DbType="NVarChar(50)")]
		public string CheckName
		{
			get
			{
				return this._CheckName;
			}
			set
			{
				if ((this._CheckName != value))
				{
					this.OnCheckNameChanging(value);
					this.SendPropertyChanging();
					this._CheckName = value;
					this.SendPropertyChanged("CheckName");
					this.OnCheckNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposeUnitId", DbType="NVarChar(50)")]
		public string ProposeUnitId
		{
			get
			{
				return this._ProposeUnitId;
			}
			set
			{
				if ((this._ProposeUnitId != value))
				{
					this.OnProposeUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ProposeUnitId = value;
					this.SendPropertyChanged("ProposeUnitId");
					this.OnProposeUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_JointCheck_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Check_JointCheck.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Check_JointCheck.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_JointCheck_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Check_JointCheck.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Check_JointCheck.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_JointCheck_Sys_User", Storage="_Sys_User", ThisKey="CheckMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Check_JointCheck.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Check_JointCheck.Add(this);
						this._CheckMan = value.UserId;
					}
					else
					{
						this._CheckMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_JointCheckApprove_Check_JointCheck", Storage="_Check_JointCheckApprove", ThisKey="JointCheckId", OtherKey="JointCheckId", DeleteRule="NO ACTION")]
		public EntitySet<Check_JointCheckApprove> Check_JointCheckApprove
		{
			get
			{
				return this._Check_JointCheckApprove;
			}
			set
			{
				this._Check_JointCheckApprove.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_JointCheckDetail_Check_JointCheck", Storage="_Check_JointCheckDetail", ThisKey="JointCheckId", OtherKey="JointCheckId", DeleteRule="NO ACTION")]
		public EntitySet<Check_JointCheckDetail> Check_JointCheckDetail
		{
			get
			{
				return this._Check_JointCheckDetail;
			}
			set
			{
				this._Check_JointCheckDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Check_JointCheckApprove(Check_JointCheckApprove entity)
		{
			this.SendPropertyChanging();
			entity.Check_JointCheck = this;
		}
		
		private void detach_Check_JointCheckApprove(Check_JointCheckApprove entity)
		{
			this.SendPropertyChanging();
			entity.Check_JointCheck = null;
		}
		
		private void attach_Check_JointCheckDetail(Check_JointCheckDetail entity)
		{
			this.SendPropertyChanging();
			entity.Check_JointCheck = this;
		}
		
		private void detach_Check_JointCheckDetail(Check_JointCheckDetail entity)
		{
			this.SendPropertyChanging();
			entity.Check_JointCheck = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_JointCheckApprove")]
	public partial class Check_JointCheckApprove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JointCheckApproveId;
		
		private string _JointCheckId;
		
		private string _ApproveMan;
		
		private System.Nullable<System.DateTime> _ApproveDate;
		
		private System.Nullable<bool> _IsAgree;
		
		private string _ApproveIdea;
		
		private string _ApproveType;
		
		private string _AttachUrl;
		
		private string _JointCheckDetailId;
		
		private EntityRef<Check_JointCheck> _Check_JointCheck;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJointCheckApproveIdChanging(string value);
    partial void OnJointCheckApproveIdChanged();
    partial void OnJointCheckIdChanging(string value);
    partial void OnJointCheckIdChanged();
    partial void OnApproveManChanging(string value);
    partial void OnApproveManChanged();
    partial void OnApproveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDateChanged();
    partial void OnIsAgreeChanging(System.Nullable<bool> value);
    partial void OnIsAgreeChanged();
    partial void OnApproveIdeaChanging(string value);
    partial void OnApproveIdeaChanged();
    partial void OnApproveTypeChanging(string value);
    partial void OnApproveTypeChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnJointCheckDetailIdChanging(string value);
    partial void OnJointCheckDetailIdChanged();
    #endregion
		
		public Check_JointCheckApprove()
		{
			this._Check_JointCheck = default(EntityRef<Check_JointCheck>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCheckApproveId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JointCheckApproveId
		{
			get
			{
				return this._JointCheckApproveId;
			}
			set
			{
				if ((this._JointCheckApproveId != value))
				{
					this.OnJointCheckApproveIdChanging(value);
					this.SendPropertyChanging();
					this._JointCheckApproveId = value;
					this.SendPropertyChanged("JointCheckApproveId");
					this.OnJointCheckApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCheckId", DbType="NVarChar(50)")]
		public string JointCheckId
		{
			get
			{
				return this._JointCheckId;
			}
			set
			{
				if ((this._JointCheckId != value))
				{
					if (this._Check_JointCheck.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJointCheckIdChanging(value);
					this.SendPropertyChanging();
					this._JointCheckId = value;
					this.SendPropertyChanged("JointCheckId");
					this.OnJointCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveMan", DbType="NVarChar(50)")]
		public string ApproveMan
		{
			get
			{
				return this._ApproveMan;
			}
			set
			{
				if ((this._ApproveMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproveManChanging(value);
					this.SendPropertyChanging();
					this._ApproveMan = value;
					this.SendPropertyChanged("ApproveMan");
					this.OnApproveManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgree", DbType="Bit")]
		public System.Nullable<bool> IsAgree
		{
			get
			{
				return this._IsAgree;
			}
			set
			{
				if ((this._IsAgree != value))
				{
					this.OnIsAgreeChanging(value);
					this.SendPropertyChanging();
					this._IsAgree = value;
					this.SendPropertyChanged("IsAgree");
					this.OnIsAgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveIdea", DbType="NVarChar(200)")]
		public string ApproveIdea
		{
			get
			{
				return this._ApproveIdea;
			}
			set
			{
				if ((this._ApproveIdea != value))
				{
					this.OnApproveIdeaChanging(value);
					this.SendPropertyChanging();
					this._ApproveIdea = value;
					this.SendPropertyChanged("ApproveIdea");
					this.OnApproveIdeaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveType", DbType="Char(1)")]
		public string ApproveType
		{
			get
			{
				return this._ApproveType;
			}
			set
			{
				if ((this._ApproveType != value))
				{
					this.OnApproveTypeChanging(value);
					this.SendPropertyChanging();
					this._ApproveType = value;
					this.SendPropertyChanged("ApproveType");
					this.OnApproveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(200)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCheckDetailId", DbType="NVarChar(50)")]
		public string JointCheckDetailId
		{
			get
			{
				return this._JointCheckDetailId;
			}
			set
			{
				if ((this._JointCheckDetailId != value))
				{
					this.OnJointCheckDetailIdChanging(value);
					this.SendPropertyChanging();
					this._JointCheckDetailId = value;
					this.SendPropertyChanged("JointCheckDetailId");
					this.OnJointCheckDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_JointCheckApprove_Check_JointCheck", Storage="_Check_JointCheck", ThisKey="JointCheckId", OtherKey="JointCheckId", IsForeignKey=true)]
		public Check_JointCheck Check_JointCheck
		{
			get
			{
				return this._Check_JointCheck.Entity;
			}
			set
			{
				Check_JointCheck previousValue = this._Check_JointCheck.Entity;
				if (((previousValue != value) 
							|| (this._Check_JointCheck.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Check_JointCheck.Entity = null;
						previousValue.Check_JointCheckApprove.Remove(this);
					}
					this._Check_JointCheck.Entity = value;
					if ((value != null))
					{
						value.Check_JointCheckApprove.Add(this);
						this._JointCheckId = value.JointCheckId;
					}
					else
					{
						this._JointCheckId = default(string);
					}
					this.SendPropertyChanged("Check_JointCheck");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_JointCheckApprove_Sys_User", Storage="_Sys_User", ThisKey="ApproveMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Check_JointCheckApprove.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Check_JointCheckApprove.Add(this);
						this._ApproveMan = value.UserId;
					}
					else
					{
						this._ApproveMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_JointCheckDetail")]
	public partial class Check_JointCheckDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JointCheckDetailId;
		
		private string _JointCheckId;
		
		private string _UnitWorkId;
		
		private string _CNProfessionalCode;
		
		private string _QuestionDef;
		
		private string _QuestionType;
		
		private string _Standard;
		
		private string _RectifyOpinion;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private string _AttachUrl;
		
		private string _HandleWay;
		
		private System.Nullable<System.DateTime> _RectifyDate;
		
		private string _ReAttachUrl;
		
		private string _Feedback;
		
		private System.Nullable<bool> _IsOK;
		
		private string _CheckSite;
		
		private string _State;
		
		private string _HandleMan;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _SaveHandleMan;
		
		private EntityRef<Check_JointCheck> _Check_JointCheck;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJointCheckDetailIdChanging(string value);
    partial void OnJointCheckDetailIdChanged();
    partial void OnJointCheckIdChanging(string value);
    partial void OnJointCheckIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnCNProfessionalCodeChanging(string value);
    partial void OnCNProfessionalCodeChanged();
    partial void OnQuestionDefChanging(string value);
    partial void OnQuestionDefChanged();
    partial void OnQuestionTypeChanging(string value);
    partial void OnQuestionTypeChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnRectifyOpinionChanging(string value);
    partial void OnRectifyOpinionChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnHandleWayChanging(string value);
    partial void OnHandleWayChanged();
    partial void OnRectifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRectifyDateChanged();
    partial void OnReAttachUrlChanging(string value);
    partial void OnReAttachUrlChanged();
    partial void OnFeedbackChanging(string value);
    partial void OnFeedbackChanged();
    partial void OnIsOKChanging(System.Nullable<bool> value);
    partial void OnIsOKChanged();
    partial void OnCheckSiteChanging(string value);
    partial void OnCheckSiteChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnHandleManChanging(string value);
    partial void OnHandleManChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnSaveHandleManChanging(string value);
    partial void OnSaveHandleManChanged();
    #endregion
		
		public Check_JointCheckDetail()
		{
			this._Check_JointCheck = default(EntityRef<Check_JointCheck>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCheckDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JointCheckDetailId
		{
			get
			{
				return this._JointCheckDetailId;
			}
			set
			{
				if ((this._JointCheckDetailId != value))
				{
					this.OnJointCheckDetailIdChanging(value);
					this.SendPropertyChanging();
					this._JointCheckDetailId = value;
					this.SendPropertyChanged("JointCheckDetailId");
					this.OnJointCheckDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCheckId", DbType="NVarChar(50)")]
		public string JointCheckId
		{
			get
			{
				return this._JointCheckId;
			}
			set
			{
				if ((this._JointCheckId != value))
				{
					if (this._Check_JointCheck.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJointCheckIdChanging(value);
					this.SendPropertyChanging();
					this._JointCheckId = value;
					this.SendPropertyChanged("JointCheckId");
					this.OnJointCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNProfessionalCode", DbType="NVarChar(50)")]
		public string CNProfessionalCode
		{
			get
			{
				return this._CNProfessionalCode;
			}
			set
			{
				if ((this._CNProfessionalCode != value))
				{
					this.OnCNProfessionalCodeChanging(value);
					this.SendPropertyChanging();
					this._CNProfessionalCode = value;
					this.SendPropertyChanged("CNProfessionalCode");
					this.OnCNProfessionalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionDef", DbType="NVarChar(500)")]
		public string QuestionDef
		{
			get
			{
				return this._QuestionDef;
			}
			set
			{
				if ((this._QuestionDef != value))
				{
					this.OnQuestionDefChanging(value);
					this.SendPropertyChanging();
					this._QuestionDef = value;
					this.SendPropertyChanged("QuestionDef");
					this.OnQuestionDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionType", DbType="NVarChar(50)")]
		public string QuestionType
		{
			get
			{
				return this._QuestionType;
			}
			set
			{
				if ((this._QuestionType != value))
				{
					this.OnQuestionTypeChanging(value);
					this.SendPropertyChanging();
					this._QuestionType = value;
					this.SendPropertyChanged("QuestionType");
					this.OnQuestionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(50)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyOpinion", DbType="NVarChar(500)")]
		public string RectifyOpinion
		{
			get
			{
				return this._RectifyOpinion;
			}
			set
			{
				if ((this._RectifyOpinion != value))
				{
					this.OnRectifyOpinionChanging(value);
					this.SendPropertyChanging();
					this._RectifyOpinion = value;
					this.SendPropertyChanged("RectifyOpinion");
					this.OnRectifyOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandleWay", DbType="NVarChar(500)")]
		public string HandleWay
		{
			get
			{
				return this._HandleWay;
			}
			set
			{
				if ((this._HandleWay != value))
				{
					this.OnHandleWayChanging(value);
					this.SendPropertyChanging();
					this._HandleWay = value;
					this.SendPropertyChanged("HandleWay");
					this.OnHandleWayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RectifyDate
		{
			get
			{
				return this._RectifyDate;
			}
			set
			{
				if ((this._RectifyDate != value))
				{
					this.OnRectifyDateChanging(value);
					this.SendPropertyChanging();
					this._RectifyDate = value;
					this.SendPropertyChanged("RectifyDate");
					this.OnRectifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReAttachUrl", DbType="NVarChar(2000)")]
		public string ReAttachUrl
		{
			get
			{
				return this._ReAttachUrl;
			}
			set
			{
				if ((this._ReAttachUrl != value))
				{
					this.OnReAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._ReAttachUrl = value;
					this.SendPropertyChanged("ReAttachUrl");
					this.OnReAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="NVarChar(500)")]
		public string Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this.OnFeedbackChanging(value);
					this.SendPropertyChanging();
					this._Feedback = value;
					this.SendPropertyChanged("Feedback");
					this.OnFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOK", DbType="Bit")]
		public System.Nullable<bool> IsOK
		{
			get
			{
				return this._IsOK;
			}
			set
			{
				if ((this._IsOK != value))
				{
					this.OnIsOKChanging(value);
					this.SendPropertyChanging();
					this._IsOK = value;
					this.SendPropertyChanged("IsOK");
					this.OnIsOKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckSite", DbType="NVarChar(50)")]
		public string CheckSite
		{
			get
			{
				return this._CheckSite;
			}
			set
			{
				if ((this._CheckSite != value))
				{
					this.OnCheckSiteChanging(value);
					this.SendPropertyChanging();
					this._CheckSite = value;
					this.SendPropertyChanged("CheckSite");
					this.OnCheckSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandleMan", DbType="NVarChar(50)")]
		public string HandleMan
		{
			get
			{
				return this._HandleMan;
			}
			set
			{
				if ((this._HandleMan != value))
				{
					this.OnHandleManChanging(value);
					this.SendPropertyChanging();
					this._HandleMan = value;
					this.SendPropertyChanged("HandleMan");
					this.OnHandleManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveHandleMan", DbType="NVarChar(50)")]
		public string SaveHandleMan
		{
			get
			{
				return this._SaveHandleMan;
			}
			set
			{
				if ((this._SaveHandleMan != value))
				{
					this.OnSaveHandleManChanging(value);
					this.SendPropertyChanging();
					this._SaveHandleMan = value;
					this.SendPropertyChanged("SaveHandleMan");
					this.OnSaveHandleManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_JointCheckDetail_Check_JointCheck", Storage="_Check_JointCheck", ThisKey="JointCheckId", OtherKey="JointCheckId", IsForeignKey=true)]
		public Check_JointCheck Check_JointCheck
		{
			get
			{
				return this._Check_JointCheck.Entity;
			}
			set
			{
				Check_JointCheck previousValue = this._Check_JointCheck.Entity;
				if (((previousValue != value) 
							|| (this._Check_JointCheck.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Check_JointCheck.Entity = null;
						previousValue.Check_JointCheckDetail.Remove(this);
					}
					this._Check_JointCheck.Entity = value;
					if ((value != null))
					{
						value.Check_JointCheckDetail.Add(this);
						this._JointCheckId = value.JointCheckId;
					}
					else
					{
						this._JointCheckId = default(string);
					}
					this.SendPropertyChanged("Check_JointCheck");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_MonthSpotCheckDetail")]
	public partial class Check_MonthSpotCheckDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MonthSpotCheckDetailId;
		
		private string _CheckMonthId;
		
		private string _ControlPoint;
		
		private string _TotalNum;
		
		private string _ThisOKNum;
		
		private string _TotalOKNum;
		
		private string _TotalOKRate;
		
		private string _Remark;
		
		private EntityRef<Check_CheckMonth> _Check_CheckMonth;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMonthSpotCheckDetailIdChanging(string value);
    partial void OnMonthSpotCheckDetailIdChanged();
    partial void OnCheckMonthIdChanging(string value);
    partial void OnCheckMonthIdChanged();
    partial void OnControlPointChanging(string value);
    partial void OnControlPointChanged();
    partial void OnTotalNumChanging(string value);
    partial void OnTotalNumChanged();
    partial void OnThisOKNumChanging(string value);
    partial void OnThisOKNumChanged();
    partial void OnTotalOKNumChanging(string value);
    partial void OnTotalOKNumChanged();
    partial void OnTotalOKRateChanging(string value);
    partial void OnTotalOKRateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Check_MonthSpotCheckDetail()
		{
			this._Check_CheckMonth = default(EntityRef<Check_CheckMonth>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthSpotCheckDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MonthSpotCheckDetailId
		{
			get
			{
				return this._MonthSpotCheckDetailId;
			}
			set
			{
				if ((this._MonthSpotCheckDetailId != value))
				{
					this.OnMonthSpotCheckDetailIdChanging(value);
					this.SendPropertyChanging();
					this._MonthSpotCheckDetailId = value;
					this.SendPropertyChanged("MonthSpotCheckDetailId");
					this.OnMonthSpotCheckDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckMonthId", DbType="NVarChar(50)")]
		public string CheckMonthId
		{
			get
			{
				return this._CheckMonthId;
			}
			set
			{
				if ((this._CheckMonthId != value))
				{
					if (this._Check_CheckMonth.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckMonthIdChanging(value);
					this.SendPropertyChanging();
					this._CheckMonthId = value;
					this.SendPropertyChanged("CheckMonthId");
					this.OnCheckMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlPoint", DbType="NVarChar(10)")]
		public string ControlPoint
		{
			get
			{
				return this._ControlPoint;
			}
			set
			{
				if ((this._ControlPoint != value))
				{
					this.OnControlPointChanging(value);
					this.SendPropertyChanging();
					this._ControlPoint = value;
					this.SendPropertyChanged("ControlPoint");
					this.OnControlPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNum", DbType="NVarChar(10)")]
		public string TotalNum
		{
			get
			{
				return this._TotalNum;
			}
			set
			{
				if ((this._TotalNum != value))
				{
					this.OnTotalNumChanging(value);
					this.SendPropertyChanging();
					this._TotalNum = value;
					this.SendPropertyChanged("TotalNum");
					this.OnTotalNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThisOKNum", DbType="NVarChar(10)")]
		public string ThisOKNum
		{
			get
			{
				return this._ThisOKNum;
			}
			set
			{
				if ((this._ThisOKNum != value))
				{
					this.OnThisOKNumChanging(value);
					this.SendPropertyChanging();
					this._ThisOKNum = value;
					this.SendPropertyChanged("ThisOKNum");
					this.OnThisOKNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOKNum", DbType="NVarChar(10)")]
		public string TotalOKNum
		{
			get
			{
				return this._TotalOKNum;
			}
			set
			{
				if ((this._TotalOKNum != value))
				{
					this.OnTotalOKNumChanging(value);
					this.SendPropertyChanging();
					this._TotalOKNum = value;
					this.SendPropertyChanged("TotalOKNum");
					this.OnTotalOKNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOKRate", DbType="NVarChar(10)")]
		public string TotalOKRate
		{
			get
			{
				return this._TotalOKRate;
			}
			set
			{
				if ((this._TotalOKRate != value))
				{
					this.OnTotalOKRateChanging(value);
					this.SendPropertyChanging();
					this._TotalOKRate = value;
					this.SendPropertyChanged("TotalOKRate");
					this.OnTotalOKRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_MonthSpotCheckDetail_Check_CheckMonth", Storage="_Check_CheckMonth", ThisKey="CheckMonthId", OtherKey="CheckMonthId", IsForeignKey=true)]
		public Check_CheckMonth Check_CheckMonth
		{
			get
			{
				return this._Check_CheckMonth.Entity;
			}
			set
			{
				Check_CheckMonth previousValue = this._Check_CheckMonth.Entity;
				if (((previousValue != value) 
							|| (this._Check_CheckMonth.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Check_CheckMonth.Entity = null;
						previousValue.Check_MonthSpotCheckDetail.Remove(this);
					}
					this._Check_CheckMonth.Entity = value;
					if ((value != null))
					{
						value.Check_MonthSpotCheckDetail.Add(this);
						this._CheckMonthId = value.CheckMonthId;
					}
					else
					{
						this._CheckMonthId = default(string);
					}
					this.SendPropertyChanged("Check_CheckMonth");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_SpecialEquipmentDetail")]
	public partial class Check_SpecialEquipmentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SpecialEquipmentDetailId;
		
		private string _CheckMonthId;
		
		private string _SpecialEquipmentName;
		
		private string _TotalNum;
		
		private string _ThisCompleteNum1;
		
		private string _TotalCompleteNum1;
		
		private string _TotalRate1;
		
		private string _ThisCompleteNum2;
		
		private string _TotalCompleteNum2;
		
		private string _TotalRate2;
		
		private EntityRef<Check_CheckMonth> _Check_CheckMonth;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialEquipmentDetailIdChanging(string value);
    partial void OnSpecialEquipmentDetailIdChanged();
    partial void OnCheckMonthIdChanging(string value);
    partial void OnCheckMonthIdChanged();
    partial void OnSpecialEquipmentNameChanging(string value);
    partial void OnSpecialEquipmentNameChanged();
    partial void OnTotalNumChanging(string value);
    partial void OnTotalNumChanged();
    partial void OnThisCompleteNum1Changing(string value);
    partial void OnThisCompleteNum1Changed();
    partial void OnTotalCompleteNum1Changing(string value);
    partial void OnTotalCompleteNum1Changed();
    partial void OnTotalRate1Changing(string value);
    partial void OnTotalRate1Changed();
    partial void OnThisCompleteNum2Changing(string value);
    partial void OnThisCompleteNum2Changed();
    partial void OnTotalCompleteNum2Changing(string value);
    partial void OnTotalCompleteNum2Changed();
    partial void OnTotalRate2Changing(string value);
    partial void OnTotalRate2Changed();
    #endregion
		
		public Check_SpecialEquipmentDetail()
		{
			this._Check_CheckMonth = default(EntityRef<Check_CheckMonth>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialEquipmentDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SpecialEquipmentDetailId
		{
			get
			{
				return this._SpecialEquipmentDetailId;
			}
			set
			{
				if ((this._SpecialEquipmentDetailId != value))
				{
					this.OnSpecialEquipmentDetailIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialEquipmentDetailId = value;
					this.SendPropertyChanged("SpecialEquipmentDetailId");
					this.OnSpecialEquipmentDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckMonthId", DbType="NVarChar(50)")]
		public string CheckMonthId
		{
			get
			{
				return this._CheckMonthId;
			}
			set
			{
				if ((this._CheckMonthId != value))
				{
					if (this._Check_CheckMonth.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckMonthIdChanging(value);
					this.SendPropertyChanging();
					this._CheckMonthId = value;
					this.SendPropertyChanged("CheckMonthId");
					this.OnCheckMonthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialEquipmentName", DbType="NVarChar(50)")]
		public string SpecialEquipmentName
		{
			get
			{
				return this._SpecialEquipmentName;
			}
			set
			{
				if ((this._SpecialEquipmentName != value))
				{
					this.OnSpecialEquipmentNameChanging(value);
					this.SendPropertyChanging();
					this._SpecialEquipmentName = value;
					this.SendPropertyChanged("SpecialEquipmentName");
					this.OnSpecialEquipmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalNum", DbType="NVarChar(10)")]
		public string TotalNum
		{
			get
			{
				return this._TotalNum;
			}
			set
			{
				if ((this._TotalNum != value))
				{
					this.OnTotalNumChanging(value);
					this.SendPropertyChanging();
					this._TotalNum = value;
					this.SendPropertyChanged("TotalNum");
					this.OnTotalNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThisCompleteNum1", DbType="NVarChar(10)")]
		public string ThisCompleteNum1
		{
			get
			{
				return this._ThisCompleteNum1;
			}
			set
			{
				if ((this._ThisCompleteNum1 != value))
				{
					this.OnThisCompleteNum1Changing(value);
					this.SendPropertyChanging();
					this._ThisCompleteNum1 = value;
					this.SendPropertyChanged("ThisCompleteNum1");
					this.OnThisCompleteNum1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCompleteNum1", DbType="NVarChar(10)")]
		public string TotalCompleteNum1
		{
			get
			{
				return this._TotalCompleteNum1;
			}
			set
			{
				if ((this._TotalCompleteNum1 != value))
				{
					this.OnTotalCompleteNum1Changing(value);
					this.SendPropertyChanging();
					this._TotalCompleteNum1 = value;
					this.SendPropertyChanged("TotalCompleteNum1");
					this.OnTotalCompleteNum1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRate1", DbType="NVarChar(10)")]
		public string TotalRate1
		{
			get
			{
				return this._TotalRate1;
			}
			set
			{
				if ((this._TotalRate1 != value))
				{
					this.OnTotalRate1Changing(value);
					this.SendPropertyChanging();
					this._TotalRate1 = value;
					this.SendPropertyChanged("TotalRate1");
					this.OnTotalRate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThisCompleteNum2", DbType="NVarChar(10)")]
		public string ThisCompleteNum2
		{
			get
			{
				return this._ThisCompleteNum2;
			}
			set
			{
				if ((this._ThisCompleteNum2 != value))
				{
					this.OnThisCompleteNum2Changing(value);
					this.SendPropertyChanging();
					this._ThisCompleteNum2 = value;
					this.SendPropertyChanged("ThisCompleteNum2");
					this.OnThisCompleteNum2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCompleteNum2", DbType="NVarChar(10)")]
		public string TotalCompleteNum2
		{
			get
			{
				return this._TotalCompleteNum2;
			}
			set
			{
				if ((this._TotalCompleteNum2 != value))
				{
					this.OnTotalCompleteNum2Changing(value);
					this.SendPropertyChanging();
					this._TotalCompleteNum2 = value;
					this.SendPropertyChanged("TotalCompleteNum2");
					this.OnTotalCompleteNum2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRate2", DbType="NVarChar(10)")]
		public string TotalRate2
		{
			get
			{
				return this._TotalRate2;
			}
			set
			{
				if ((this._TotalRate2 != value))
				{
					this.OnTotalRate2Changing(value);
					this.SendPropertyChanging();
					this._TotalRate2 = value;
					this.SendPropertyChanged("TotalRate2");
					this.OnTotalRate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_SpecialEquipmentDetail_Check_CheckMonth", Storage="_Check_CheckMonth", ThisKey="CheckMonthId", OtherKey="CheckMonthId", IsForeignKey=true)]
		public Check_CheckMonth Check_CheckMonth
		{
			get
			{
				return this._Check_CheckMonth.Entity;
			}
			set
			{
				Check_CheckMonth previousValue = this._Check_CheckMonth.Entity;
				if (((previousValue != value) 
							|| (this._Check_CheckMonth.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Check_CheckMonth.Entity = null;
						previousValue.Check_SpecialEquipmentDetail.Remove(this);
					}
					this._Check_CheckMonth.Entity = value;
					if ((value != null))
					{
						value.Check_SpecialEquipmentDetail.Add(this);
						this._CheckMonthId = value.CheckMonthId;
					}
					else
					{
						this._CheckMonthId = default(string);
					}
					this.SendPropertyChanged("Check_CheckMonth");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_SpotCheck")]
	public partial class Check_SpotCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SpotCheckCode;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private System.Nullable<System.DateTime> _SpotCheckDate;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<bool> _IsOK;
		
		private string _DocCode;
		
		private string _JointCheckMans;
		
		private string _AttachUrl;
		
		private string _State;
		
		private string _CreateMan;
		
		private string _CheckDateType;
		
		private System.Nullable<System.DateTime> _SpotCheckDate2;
		
		private string _CheckArea;
		
		private string _CNProfessionalCode;
		
		private string _JointCheckMans2;
		
		private string _JointCheckMans3;
		
		private string _ControlPointType;
		
		private string _State2;
		
		private System.Nullable<bool> _IsShow;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntitySet<Check_SpotCheckApprove> _Check_SpotCheckApprove;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpotCheckCodeChanging(string value);
    partial void OnSpotCheckCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnSpotCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSpotCheckDateChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnIsOKChanging(System.Nullable<bool> value);
    partial void OnIsOKChanged();
    partial void OnDocCodeChanging(string value);
    partial void OnDocCodeChanged();
    partial void OnJointCheckMansChanging(string value);
    partial void OnJointCheckMansChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnCreateManChanging(string value);
    partial void OnCreateManChanged();
    partial void OnCheckDateTypeChanging(string value);
    partial void OnCheckDateTypeChanged();
    partial void OnSpotCheckDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnSpotCheckDate2Changed();
    partial void OnCheckAreaChanging(string value);
    partial void OnCheckAreaChanged();
    partial void OnCNProfessionalCodeChanging(string value);
    partial void OnCNProfessionalCodeChanged();
    partial void OnJointCheckMans2Changing(string value);
    partial void OnJointCheckMans2Changed();
    partial void OnJointCheckMans3Changing(string value);
    partial void OnJointCheckMans3Changed();
    partial void OnControlPointTypeChanging(string value);
    partial void OnControlPointTypeChanged();
    partial void OnState2Changing(string value);
    partial void OnState2Changed();
    partial void OnIsShowChanging(System.Nullable<bool> value);
    partial void OnIsShowChanged();
    #endregion
		
		public Check_SpotCheck()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Check_SpotCheckApprove = new EntitySet<Check_SpotCheckApprove>(new Action<Check_SpotCheckApprove>(this.attach_Check_SpotCheckApprove), new Action<Check_SpotCheckApprove>(this.detach_Check_SpotCheckApprove));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpotCheckCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SpotCheckCode
		{
			get
			{
				return this._SpotCheckCode;
			}
			set
			{
				if ((this._SpotCheckCode != value))
				{
					this.OnSpotCheckCodeChanging(value);
					this.SendPropertyChanging();
					this._SpotCheckCode = value;
					this.SendPropertyChanged("SpotCheckCode");
					this.OnSpotCheckCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(500)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpotCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SpotCheckDate
		{
			get
			{
				return this._SpotCheckDate;
			}
			set
			{
				if ((this._SpotCheckDate != value))
				{
					this.OnSpotCheckDateChanging(value);
					this.SendPropertyChanging();
					this._SpotCheckDate = value;
					this.SendPropertyChanged("SpotCheckDate");
					this.OnSpotCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOK", DbType="Bit")]
		public System.Nullable<bool> IsOK
		{
			get
			{
				return this._IsOK;
			}
			set
			{
				if ((this._IsOK != value))
				{
					this.OnIsOKChanging(value);
					this.SendPropertyChanging();
					this._IsOK = value;
					this.SendPropertyChanged("IsOK");
					this.OnIsOKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocCode", DbType="NVarChar(50)")]
		public string DocCode
		{
			get
			{
				return this._DocCode;
			}
			set
			{
				if ((this._DocCode != value))
				{
					this.OnDocCodeChanging(value);
					this.SendPropertyChanging();
					this._DocCode = value;
					this.SendPropertyChanged("DocCode");
					this.OnDocCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCheckMans", DbType="NVarChar(500)")]
		public string JointCheckMans
		{
			get
			{
				return this._JointCheckMans;
			}
			set
			{
				if ((this._JointCheckMans != value))
				{
					this.OnJointCheckMansChanging(value);
					this.SendPropertyChanging();
					this._JointCheckMans = value;
					this.SendPropertyChanged("JointCheckMans");
					this.OnJointCheckMansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(1000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateMan", DbType="NVarChar(50)")]
		public string CreateMan
		{
			get
			{
				return this._CreateMan;
			}
			set
			{
				if ((this._CreateMan != value))
				{
					this.OnCreateManChanging(value);
					this.SendPropertyChanging();
					this._CreateMan = value;
					this.SendPropertyChanged("CreateMan");
					this.OnCreateManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDateType", DbType="Char(1)")]
		public string CheckDateType
		{
			get
			{
				return this._CheckDateType;
			}
			set
			{
				if ((this._CheckDateType != value))
				{
					this.OnCheckDateTypeChanging(value);
					this.SendPropertyChanging();
					this._CheckDateType = value;
					this.SendPropertyChanged("CheckDateType");
					this.OnCheckDateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpotCheckDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> SpotCheckDate2
		{
			get
			{
				return this._SpotCheckDate2;
			}
			set
			{
				if ((this._SpotCheckDate2 != value))
				{
					this.OnSpotCheckDate2Changing(value);
					this.SendPropertyChanging();
					this._SpotCheckDate2 = value;
					this.SendPropertyChanged("SpotCheckDate2");
					this.OnSpotCheckDate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckArea", DbType="NVarChar(100)")]
		public string CheckArea
		{
			get
			{
				return this._CheckArea;
			}
			set
			{
				if ((this._CheckArea != value))
				{
					this.OnCheckAreaChanging(value);
					this.SendPropertyChanging();
					this._CheckArea = value;
					this.SendPropertyChanged("CheckArea");
					this.OnCheckAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNProfessionalCode", DbType="NVarChar(10)")]
		public string CNProfessionalCode
		{
			get
			{
				return this._CNProfessionalCode;
			}
			set
			{
				if ((this._CNProfessionalCode != value))
				{
					this.OnCNProfessionalCodeChanging(value);
					this.SendPropertyChanging();
					this._CNProfessionalCode = value;
					this.SendPropertyChanged("CNProfessionalCode");
					this.OnCNProfessionalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCheckMans2", DbType="NVarChar(500)")]
		public string JointCheckMans2
		{
			get
			{
				return this._JointCheckMans2;
			}
			set
			{
				if ((this._JointCheckMans2 != value))
				{
					this.OnJointCheckMans2Changing(value);
					this.SendPropertyChanging();
					this._JointCheckMans2 = value;
					this.SendPropertyChanged("JointCheckMans2");
					this.OnJointCheckMans2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCheckMans3", DbType="NVarChar(500)")]
		public string JointCheckMans3
		{
			get
			{
				return this._JointCheckMans3;
			}
			set
			{
				if ((this._JointCheckMans3 != value))
				{
					this.OnJointCheckMans3Changing(value);
					this.SendPropertyChanging();
					this._JointCheckMans3 = value;
					this.SendPropertyChanged("JointCheckMans3");
					this.OnJointCheckMans3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlPointType", DbType="Char(1)")]
		public string ControlPointType
		{
			get
			{
				return this._ControlPointType;
			}
			set
			{
				if ((this._ControlPointType != value))
				{
					this.OnControlPointTypeChanging(value);
					this.SendPropertyChanging();
					this._ControlPointType = value;
					this.SendPropertyChanged("ControlPointType");
					this.OnControlPointTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State2", DbType="Char(1)")]
		public string State2
		{
			get
			{
				return this._State2;
			}
			set
			{
				if ((this._State2 != value))
				{
					this.OnState2Changing(value);
					this.SendPropertyChanging();
					this._State2 = value;
					this.SendPropertyChanged("State2");
					this.OnState2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShow", DbType="Bit")]
		public System.Nullable<bool> IsShow
		{
			get
			{
				return this._IsShow;
			}
			set
			{
				if ((this._IsShow != value))
				{
					this.OnIsShowChanging(value);
					this.SendPropertyChanging();
					this._IsShow = value;
					this.SendPropertyChanged("IsShow");
					this.OnIsShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_SpotCheck_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Check_SpotCheck.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Check_SpotCheck.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_SpotCheckApprove_Check_SpotCheck", Storage="_Check_SpotCheckApprove", ThisKey="SpotCheckCode", OtherKey="SpotCheckCode", DeleteRule="NO ACTION")]
		public EntitySet<Check_SpotCheckApprove> Check_SpotCheckApprove
		{
			get
			{
				return this._Check_SpotCheckApprove;
			}
			set
			{
				this._Check_SpotCheckApprove.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Check_SpotCheckApprove(Check_SpotCheckApprove entity)
		{
			this.SendPropertyChanging();
			entity.Check_SpotCheck = this;
		}
		
		private void detach_Check_SpotCheckApprove(Check_SpotCheckApprove entity)
		{
			this.SendPropertyChanging();
			entity.Check_SpotCheck = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_SpotCheckApprove")]
	public partial class Check_SpotCheckApprove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SpotCheckApproveId;
		
		private string _SpotCheckCode;
		
		private string _ApproveMan;
		
		private System.Nullable<System.DateTime> _ApproveDate;
		
		private System.Nullable<bool> _IsAgree;
		
		private string _ApproveIdea;
		
		private string _ApproveType;
		
		private string _AttachUrl;
		
		private string _SpotCheckDetailId;
		
		private string _Sign;
		
		private EntityRef<Check_SpotCheck> _Check_SpotCheck;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpotCheckApproveIdChanging(string value);
    partial void OnSpotCheckApproveIdChanged();
    partial void OnSpotCheckCodeChanging(string value);
    partial void OnSpotCheckCodeChanged();
    partial void OnApproveManChanging(string value);
    partial void OnApproveManChanged();
    partial void OnApproveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDateChanged();
    partial void OnIsAgreeChanging(System.Nullable<bool> value);
    partial void OnIsAgreeChanged();
    partial void OnApproveIdeaChanging(string value);
    partial void OnApproveIdeaChanged();
    partial void OnApproveTypeChanging(string value);
    partial void OnApproveTypeChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnSpotCheckDetailIdChanging(string value);
    partial void OnSpotCheckDetailIdChanged();
    partial void OnSignChanging(string value);
    partial void OnSignChanged();
    #endregion
		
		public Check_SpotCheckApprove()
		{
			this._Check_SpotCheck = default(EntityRef<Check_SpotCheck>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpotCheckApproveId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SpotCheckApproveId
		{
			get
			{
				return this._SpotCheckApproveId;
			}
			set
			{
				if ((this._SpotCheckApproveId != value))
				{
					this.OnSpotCheckApproveIdChanging(value);
					this.SendPropertyChanging();
					this._SpotCheckApproveId = value;
					this.SendPropertyChanged("SpotCheckApproveId");
					this.OnSpotCheckApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpotCheckCode", DbType="NVarChar(50)")]
		public string SpotCheckCode
		{
			get
			{
				return this._SpotCheckCode;
			}
			set
			{
				if ((this._SpotCheckCode != value))
				{
					if (this._Check_SpotCheck.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpotCheckCodeChanging(value);
					this.SendPropertyChanging();
					this._SpotCheckCode = value;
					this.SendPropertyChanged("SpotCheckCode");
					this.OnSpotCheckCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveMan", DbType="NVarChar(50)")]
		public string ApproveMan
		{
			get
			{
				return this._ApproveMan;
			}
			set
			{
				if ((this._ApproveMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproveManChanging(value);
					this.SendPropertyChanging();
					this._ApproveMan = value;
					this.SendPropertyChanged("ApproveMan");
					this.OnApproveManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgree", DbType="Bit")]
		public System.Nullable<bool> IsAgree
		{
			get
			{
				return this._IsAgree;
			}
			set
			{
				if ((this._IsAgree != value))
				{
					this.OnIsAgreeChanging(value);
					this.SendPropertyChanging();
					this._IsAgree = value;
					this.SendPropertyChanged("IsAgree");
					this.OnIsAgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveIdea", DbType="NVarChar(200)")]
		public string ApproveIdea
		{
			get
			{
				return this._ApproveIdea;
			}
			set
			{
				if ((this._ApproveIdea != value))
				{
					this.OnApproveIdeaChanging(value);
					this.SendPropertyChanging();
					this._ApproveIdea = value;
					this.SendPropertyChanged("ApproveIdea");
					this.OnApproveIdeaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveType", DbType="Char(1)")]
		public string ApproveType
		{
			get
			{
				return this._ApproveType;
			}
			set
			{
				if ((this._ApproveType != value))
				{
					this.OnApproveTypeChanging(value);
					this.SendPropertyChanging();
					this._ApproveType = value;
					this.SendPropertyChanged("ApproveType");
					this.OnApproveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(200)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpotCheckDetailId", DbType="NVarChar(50)")]
		public string SpotCheckDetailId
		{
			get
			{
				return this._SpotCheckDetailId;
			}
			set
			{
				if ((this._SpotCheckDetailId != value))
				{
					this.OnSpotCheckDetailIdChanging(value);
					this.SendPropertyChanging();
					this._SpotCheckDetailId = value;
					this.SendPropertyChanged("SpotCheckDetailId");
					this.OnSpotCheckDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sign", DbType="Char(1)")]
		public string Sign
		{
			get
			{
				return this._Sign;
			}
			set
			{
				if ((this._Sign != value))
				{
					this.OnSignChanging(value);
					this.SendPropertyChanging();
					this._Sign = value;
					this.SendPropertyChanged("Sign");
					this.OnSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_SpotCheckApprove_Check_SpotCheck", Storage="_Check_SpotCheck", ThisKey="SpotCheckCode", OtherKey="SpotCheckCode", IsForeignKey=true)]
		public Check_SpotCheck Check_SpotCheck
		{
			get
			{
				return this._Check_SpotCheck.Entity;
			}
			set
			{
				Check_SpotCheck previousValue = this._Check_SpotCheck.Entity;
				if (((previousValue != value) 
							|| (this._Check_SpotCheck.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Check_SpotCheck.Entity = null;
						previousValue.Check_SpotCheckApprove.Remove(this);
					}
					this._Check_SpotCheck.Entity = value;
					if ((value != null))
					{
						value.Check_SpotCheckApprove.Add(this);
						this._SpotCheckCode = value.SpotCheckCode;
					}
					else
					{
						this._SpotCheckCode = default(string);
					}
					this.SendPropertyChanged("Check_SpotCheck");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_SpotCheckApprove_Sys_User", Storage="_Sys_User", ThisKey="ApproveMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Check_SpotCheckApprove.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Check_SpotCheckApprove.Add(this);
						this._ApproveMan = value.UserId;
					}
					else
					{
						this._ApproveMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_SpotCheckDetail")]
	public partial class Check_SpotCheckDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SpotCheckDetailId;
		
		private string _SpotCheckCode;
		
		private string _ControlItemAndCycleId;
		
		private System.Nullable<bool> _IsOnesOK;
		
		private System.Nullable<bool> _IsOK;
		
		private System.Nullable<System.DateTime> _ConfirmDate;
		
		private string _RectifyDescription;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _IsDataOK;
		
		private System.Nullable<System.DateTime> _DataConfirmDate;
		
		private string _State;
		
		private string _HandleMan;
		
		private System.Nullable<bool> _IsShow;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpotCheckDetailIdChanging(string value);
    partial void OnSpotCheckDetailIdChanged();
    partial void OnSpotCheckCodeChanging(string value);
    partial void OnSpotCheckCodeChanged();
    partial void OnControlItemAndCycleIdChanging(string value);
    partial void OnControlItemAndCycleIdChanged();
    partial void OnIsOnesOKChanging(System.Nullable<bool> value);
    partial void OnIsOnesOKChanged();
    partial void OnIsOKChanging(System.Nullable<bool> value);
    partial void OnIsOKChanged();
    partial void OnConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmDateChanged();
    partial void OnRectifyDescriptionChanging(string value);
    partial void OnRectifyDescriptionChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnIsDataOKChanging(string value);
    partial void OnIsDataOKChanged();
    partial void OnDataConfirmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDataConfirmDateChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnHandleManChanging(string value);
    partial void OnHandleManChanged();
    partial void OnIsShowChanging(System.Nullable<bool> value);
    partial void OnIsShowChanged();
    #endregion
		
		public Check_SpotCheckDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpotCheckDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SpotCheckDetailId
		{
			get
			{
				return this._SpotCheckDetailId;
			}
			set
			{
				if ((this._SpotCheckDetailId != value))
				{
					this.OnSpotCheckDetailIdChanging(value);
					this.SendPropertyChanging();
					this._SpotCheckDetailId = value;
					this.SendPropertyChanged("SpotCheckDetailId");
					this.OnSpotCheckDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpotCheckCode", DbType="NVarChar(50)")]
		public string SpotCheckCode
		{
			get
			{
				return this._SpotCheckCode;
			}
			set
			{
				if ((this._SpotCheckCode != value))
				{
					this.OnSpotCheckCodeChanging(value);
					this.SendPropertyChanging();
					this._SpotCheckCode = value;
					this.SendPropertyChanged("SpotCheckCode");
					this.OnSpotCheckCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemAndCycleId", DbType="NVarChar(50)")]
		public string ControlItemAndCycleId
		{
			get
			{
				return this._ControlItemAndCycleId;
			}
			set
			{
				if ((this._ControlItemAndCycleId != value))
				{
					this.OnControlItemAndCycleIdChanging(value);
					this.SendPropertyChanging();
					this._ControlItemAndCycleId = value;
					this.SendPropertyChanged("ControlItemAndCycleId");
					this.OnControlItemAndCycleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnesOK", DbType="Bit")]
		public System.Nullable<bool> IsOnesOK
		{
			get
			{
				return this._IsOnesOK;
			}
			set
			{
				if ((this._IsOnesOK != value))
				{
					this.OnIsOnesOKChanging(value);
					this.SendPropertyChanging();
					this._IsOnesOK = value;
					this.SendPropertyChanged("IsOnesOK");
					this.OnIsOnesOKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOK", DbType="Bit")]
		public System.Nullable<bool> IsOK
		{
			get
			{
				return this._IsOK;
			}
			set
			{
				if ((this._IsOK != value))
				{
					this.OnIsOKChanging(value);
					this.SendPropertyChanging();
					this._IsOK = value;
					this.SendPropertyChanged("IsOK");
					this.OnIsOKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this.OnConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDate = value;
					this.SendPropertyChanged("ConfirmDate");
					this.OnConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyDescription", DbType="NVarChar(500)")]
		public string RectifyDescription
		{
			get
			{
				return this._RectifyDescription;
			}
			set
			{
				if ((this._RectifyDescription != value))
				{
					this.OnRectifyDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RectifyDescription = value;
					this.SendPropertyChanged("RectifyDescription");
					this.OnRectifyDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDataOK", DbType="Char(1)")]
		public string IsDataOK
		{
			get
			{
				return this._IsDataOK;
			}
			set
			{
				if ((this._IsDataOK != value))
				{
					this.OnIsDataOKChanging(value);
					this.SendPropertyChanging();
					this._IsDataOK = value;
					this.SendPropertyChanged("IsDataOK");
					this.OnIsDataOKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataConfirmDate
		{
			get
			{
				return this._DataConfirmDate;
			}
			set
			{
				if ((this._DataConfirmDate != value))
				{
					this.OnDataConfirmDateChanging(value);
					this.SendPropertyChanging();
					this._DataConfirmDate = value;
					this.SendPropertyChanged("DataConfirmDate");
					this.OnDataConfirmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandleMan", DbType="NVarChar(50)")]
		public string HandleMan
		{
			get
			{
				return this._HandleMan;
			}
			set
			{
				if ((this._HandleMan != value))
				{
					this.OnHandleManChanging(value);
					this.SendPropertyChanging();
					this._HandleMan = value;
					this.SendPropertyChanged("HandleMan");
					this.OnHandleManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShow", DbType="Bit")]
		public System.Nullable<bool> IsShow
		{
			get
			{
				return this._IsShow;
			}
			set
			{
				if ((this._IsShow != value))
				{
					this.OnIsShowChanging(value);
					this.SendPropertyChanging();
					this._IsShow = value;
					this.SendPropertyChanged("IsShow");
					this.OnIsShowChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_TechnicalContactList")]
	public partial class Check_TechnicalContactList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TechnicalContactListId;
		
		private string _ProjectId;
		
		private string _Code;
		
		private string _ProposedUnitId;
		
		private string _MainSendUnitId;
		
		private string _CCUnitIds;
		
		private string _UnitWorkId;
		
		private string _CNProfessionalCode;
		
		private string _ContactListType;
		
		private string _IsReply;
		
		private string _Cause;
		
		private string _Contents;
		
		private string _AttachUrl;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _State;
		
		private string _ReAttachUrl;
		
		private string _ReturnAttachUrl;
		
		private string _ReOpinion;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<Check_TechnicalContactListApprove> _Check_TechnicalContactListApprove;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTechnicalContactListIdChanging(string value);
    partial void OnTechnicalContactListIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnProposedUnitIdChanging(string value);
    partial void OnProposedUnitIdChanged();
    partial void OnMainSendUnitIdChanging(string value);
    partial void OnMainSendUnitIdChanged();
    partial void OnCCUnitIdsChanging(string value);
    partial void OnCCUnitIdsChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnCNProfessionalCodeChanging(string value);
    partial void OnCNProfessionalCodeChanged();
    partial void OnContactListTypeChanging(string value);
    partial void OnContactListTypeChanged();
    partial void OnIsReplyChanging(string value);
    partial void OnIsReplyChanged();
    partial void OnCauseChanging(string value);
    partial void OnCauseChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnReAttachUrlChanging(string value);
    partial void OnReAttachUrlChanged();
    partial void OnReturnAttachUrlChanging(string value);
    partial void OnReturnAttachUrlChanged();
    partial void OnReOpinionChanging(string value);
    partial void OnReOpinionChanged();
    #endregion
		
		public Check_TechnicalContactList()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Check_TechnicalContactListApprove = new EntitySet<Check_TechnicalContactListApprove>(new Action<Check_TechnicalContactListApprove>(this.attach_Check_TechnicalContactListApprove), new Action<Check_TechnicalContactListApprove>(this.detach_Check_TechnicalContactListApprove));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalContactListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TechnicalContactListId
		{
			get
			{
				return this._TechnicalContactListId;
			}
			set
			{
				if ((this._TechnicalContactListId != value))
				{
					this.OnTechnicalContactListIdChanging(value);
					this.SendPropertyChanging();
					this._TechnicalContactListId = value;
					this.SendPropertyChanged("TechnicalContactListId");
					this.OnTechnicalContactListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedUnitId", DbType="NVarChar(50)")]
		public string ProposedUnitId
		{
			get
			{
				return this._ProposedUnitId;
			}
			set
			{
				if ((this._ProposedUnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProposedUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ProposedUnitId = value;
					this.SendPropertyChanged("ProposedUnitId");
					this.OnProposedUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainSendUnitId", DbType="NVarChar(500)")]
		public string MainSendUnitId
		{
			get
			{
				return this._MainSendUnitId;
			}
			set
			{
				if ((this._MainSendUnitId != value))
				{
					this.OnMainSendUnitIdChanging(value);
					this.SendPropertyChanging();
					this._MainSendUnitId = value;
					this.SendPropertyChanged("MainSendUnitId");
					this.OnMainSendUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCUnitIds", DbType="NVarChar(500)")]
		public string CCUnitIds
		{
			get
			{
				return this._CCUnitIds;
			}
			set
			{
				if ((this._CCUnitIds != value))
				{
					this.OnCCUnitIdsChanging(value);
					this.SendPropertyChanging();
					this._CCUnitIds = value;
					this.SendPropertyChanged("CCUnitIds");
					this.OnCCUnitIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(2000)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNProfessionalCode", DbType="NVarChar(500)")]
		public string CNProfessionalCode
		{
			get
			{
				return this._CNProfessionalCode;
			}
			set
			{
				if ((this._CNProfessionalCode != value))
				{
					this.OnCNProfessionalCodeChanging(value);
					this.SendPropertyChanging();
					this._CNProfessionalCode = value;
					this.SendPropertyChanged("CNProfessionalCode");
					this.OnCNProfessionalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactListType", DbType="Char(1)")]
		public string ContactListType
		{
			get
			{
				return this._ContactListType;
			}
			set
			{
				if ((this._ContactListType != value))
				{
					this.OnContactListTypeChanging(value);
					this.SendPropertyChanging();
					this._ContactListType = value;
					this.SendPropertyChanged("ContactListType");
					this.OnContactListTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReply", DbType="Char(1)")]
		public string IsReply
		{
			get
			{
				return this._IsReply;
			}
			set
			{
				if ((this._IsReply != value))
				{
					this.OnIsReplyChanging(value);
					this.SendPropertyChanging();
					this._IsReply = value;
					this.SendPropertyChanged("IsReply");
					this.OnIsReplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cause", DbType="NVarChar(200)")]
		public string Cause
		{
			get
			{
				return this._Cause;
			}
			set
			{
				if ((this._Cause != value))
				{
					this.OnCauseChanging(value);
					this.SendPropertyChanging();
					this._Cause = value;
					this.SendPropertyChanged("Cause");
					this.OnCauseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(2000)")]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReAttachUrl", DbType="NVarChar(2000)")]
		public string ReAttachUrl
		{
			get
			{
				return this._ReAttachUrl;
			}
			set
			{
				if ((this._ReAttachUrl != value))
				{
					this.OnReAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._ReAttachUrl = value;
					this.SendPropertyChanged("ReAttachUrl");
					this.OnReAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnAttachUrl", DbType="NVarChar(2000)")]
		public string ReturnAttachUrl
		{
			get
			{
				return this._ReturnAttachUrl;
			}
			set
			{
				if ((this._ReturnAttachUrl != value))
				{
					this.OnReturnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._ReturnAttachUrl = value;
					this.SendPropertyChanged("ReturnAttachUrl");
					this.OnReturnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReOpinion", DbType="NVarChar(2000)")]
		public string ReOpinion
		{
			get
			{
				return this._ReOpinion;
			}
			set
			{
				if ((this._ReOpinion != value))
				{
					this.OnReOpinionChanging(value);
					this.SendPropertyChanging();
					this._ReOpinion = value;
					this.SendPropertyChanged("ReOpinion");
					this.OnReOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_TechnicalContactList_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Check_TechnicalContactList.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Check_TechnicalContactList.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_TechnicalContactList_Base_Unit", Storage="_Base_Unit", ThisKey="ProposedUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Check_TechnicalContactList.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Check_TechnicalContactList.Add(this);
						this._ProposedUnitId = value.UnitId;
					}
					else
					{
						this._ProposedUnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_TechnicalContactListApprove_Check_TechnicalContactList", Storage="_Check_TechnicalContactListApprove", ThisKey="TechnicalContactListId", OtherKey="TechnicalContactListId", DeleteRule="NO ACTION")]
		public EntitySet<Check_TechnicalContactListApprove> Check_TechnicalContactListApprove
		{
			get
			{
				return this._Check_TechnicalContactListApprove;
			}
			set
			{
				this._Check_TechnicalContactListApprove.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Check_TechnicalContactListApprove(Check_TechnicalContactListApprove entity)
		{
			this.SendPropertyChanging();
			entity.Check_TechnicalContactList = this;
		}
		
		private void detach_Check_TechnicalContactListApprove(Check_TechnicalContactListApprove entity)
		{
			this.SendPropertyChanging();
			entity.Check_TechnicalContactList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Check_TechnicalContactListApprove")]
	public partial class Check_TechnicalContactListApprove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TechnicalContactListApproveId;
		
		private string _TechnicalContactListId;
		
		private string _ApproveMan;
		
		private System.Nullable<System.DateTime> _ApproveDate;
		
		private System.Nullable<bool> _IsAgree;
		
		private string _ApproveIdea;
		
		private string _ApproveType;
		
		private string _AttachUrl;
		
		private EntityRef<Check_TechnicalContactList> _Check_TechnicalContactList;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTechnicalContactListApproveIdChanging(string value);
    partial void OnTechnicalContactListApproveIdChanged();
    partial void OnTechnicalContactListIdChanging(string value);
    partial void OnTechnicalContactListIdChanged();
    partial void OnApproveManChanging(string value);
    partial void OnApproveManChanged();
    partial void OnApproveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDateChanged();
    partial void OnIsAgreeChanging(System.Nullable<bool> value);
    partial void OnIsAgreeChanged();
    partial void OnApproveIdeaChanging(string value);
    partial void OnApproveIdeaChanged();
    partial void OnApproveTypeChanging(string value);
    partial void OnApproveTypeChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    #endregion
		
		public Check_TechnicalContactListApprove()
		{
			this._Check_TechnicalContactList = default(EntityRef<Check_TechnicalContactList>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalContactListApproveId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TechnicalContactListApproveId
		{
			get
			{
				return this._TechnicalContactListApproveId;
			}
			set
			{
				if ((this._TechnicalContactListApproveId != value))
				{
					this.OnTechnicalContactListApproveIdChanging(value);
					this.SendPropertyChanging();
					this._TechnicalContactListApproveId = value;
					this.SendPropertyChanged("TechnicalContactListApproveId");
					this.OnTechnicalContactListApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalContactListId", DbType="NVarChar(50)")]
		public string TechnicalContactListId
		{
			get
			{
				return this._TechnicalContactListId;
			}
			set
			{
				if ((this._TechnicalContactListId != value))
				{
					if (this._Check_TechnicalContactList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnicalContactListIdChanging(value);
					this.SendPropertyChanging();
					this._TechnicalContactListId = value;
					this.SendPropertyChanged("TechnicalContactListId");
					this.OnTechnicalContactListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveMan", DbType="NVarChar(50)")]
		public string ApproveMan
		{
			get
			{
				return this._ApproveMan;
			}
			set
			{
				if ((this._ApproveMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproveManChanging(value);
					this.SendPropertyChanging();
					this._ApproveMan = value;
					this.SendPropertyChanged("ApproveMan");
					this.OnApproveManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgree", DbType="Bit")]
		public System.Nullable<bool> IsAgree
		{
			get
			{
				return this._IsAgree;
			}
			set
			{
				if ((this._IsAgree != value))
				{
					this.OnIsAgreeChanging(value);
					this.SendPropertyChanging();
					this._IsAgree = value;
					this.SendPropertyChanged("IsAgree");
					this.OnIsAgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveIdea", DbType="NVarChar(200)")]
		public string ApproveIdea
		{
			get
			{
				return this._ApproveIdea;
			}
			set
			{
				if ((this._ApproveIdea != value))
				{
					this.OnApproveIdeaChanging(value);
					this.SendPropertyChanging();
					this._ApproveIdea = value;
					this.SendPropertyChanged("ApproveIdea");
					this.OnApproveIdeaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveType", DbType="Char(1)")]
		public string ApproveType
		{
			get
			{
				return this._ApproveType;
			}
			set
			{
				if ((this._ApproveType != value))
				{
					this.OnApproveTypeChanging(value);
					this.SendPropertyChanging();
					this._ApproveType = value;
					this.SendPropertyChanged("ApproveType");
					this.OnApproveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(200)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_TechnicalContactListApprove_Check_TechnicalContactList", Storage="_Check_TechnicalContactList", ThisKey="TechnicalContactListId", OtherKey="TechnicalContactListId", IsForeignKey=true)]
		public Check_TechnicalContactList Check_TechnicalContactList
		{
			get
			{
				return this._Check_TechnicalContactList.Entity;
			}
			set
			{
				Check_TechnicalContactList previousValue = this._Check_TechnicalContactList.Entity;
				if (((previousValue != value) 
							|| (this._Check_TechnicalContactList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Check_TechnicalContactList.Entity = null;
						previousValue.Check_TechnicalContactListApprove.Remove(this);
					}
					this._Check_TechnicalContactList.Entity = value;
					if ((value != null))
					{
						value.Check_TechnicalContactListApprove.Add(this);
						this._TechnicalContactListId = value.TechnicalContactListId;
					}
					else
					{
						this._TechnicalContactListId = default(string);
					}
					this.SendPropertyChanged("Check_TechnicalContactList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_TechnicalContactListApprove_Sys_User", Storage="_Sys_User", ThisKey="ApproveMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Check_TechnicalContactListApprove.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Check_TechnicalContactListApprove.Add(this);
						this._ApproveMan = value.UserId;
					}
					else
					{
						this._ApproveMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EduTrain_AccidentCase")]
	public partial class EduTrain_AccidentCase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccidentCaseId;
		
		private string _AccidentCaseCode;
		
		private string _AccidentCaseName;
		
		private string _SupAccidentCaseId;
		
		private System.Nullable<bool> _IsEndLever;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private EntitySet<EduTrain_AccidentCaseItem> _EduTrain_AccidentCaseItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccidentCaseIdChanging(string value);
    partial void OnAccidentCaseIdChanged();
    partial void OnAccidentCaseCodeChanging(string value);
    partial void OnAccidentCaseCodeChanged();
    partial void OnAccidentCaseNameChanging(string value);
    partial void OnAccidentCaseNameChanged();
    partial void OnSupAccidentCaseIdChanging(string value);
    partial void OnSupAccidentCaseIdChanged();
    partial void OnIsEndLeverChanging(System.Nullable<bool> value);
    partial void OnIsEndLeverChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    #endregion
		
		public EduTrain_AccidentCase()
		{
			this._EduTrain_AccidentCaseItem = new EntitySet<EduTrain_AccidentCaseItem>(new Action<EduTrain_AccidentCaseItem>(this.attach_EduTrain_AccidentCaseItem), new Action<EduTrain_AccidentCaseItem>(this.detach_EduTrain_AccidentCaseItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccidentCaseId
		{
			get
			{
				return this._AccidentCaseId;
			}
			set
			{
				if ((this._AccidentCaseId != value))
				{
					this.OnAccidentCaseIdChanging(value);
					this.SendPropertyChanging();
					this._AccidentCaseId = value;
					this.SendPropertyChanged("AccidentCaseId");
					this.OnAccidentCaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseCode", DbType="NVarChar(50)")]
		public string AccidentCaseCode
		{
			get
			{
				return this._AccidentCaseCode;
			}
			set
			{
				if ((this._AccidentCaseCode != value))
				{
					this.OnAccidentCaseCodeChanging(value);
					this.SendPropertyChanging();
					this._AccidentCaseCode = value;
					this.SendPropertyChanged("AccidentCaseCode");
					this.OnAccidentCaseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseName", DbType="NVarChar(50)")]
		public string AccidentCaseName
		{
			get
			{
				return this._AccidentCaseName;
			}
			set
			{
				if ((this._AccidentCaseName != value))
				{
					this.OnAccidentCaseNameChanging(value);
					this.SendPropertyChanging();
					this._AccidentCaseName = value;
					this.SendPropertyChanged("AccidentCaseName");
					this.OnAccidentCaseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupAccidentCaseId", DbType="NVarChar(50)")]
		public string SupAccidentCaseId
		{
			get
			{
				return this._SupAccidentCaseId;
			}
			set
			{
				if ((this._SupAccidentCaseId != value))
				{
					this.OnSupAccidentCaseIdChanging(value);
					this.SendPropertyChanging();
					this._SupAccidentCaseId = value;
					this.SendPropertyChanged("SupAccidentCaseId");
					this.OnSupAccidentCaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLever", DbType="Bit")]
		public System.Nullable<bool> IsEndLever
		{
			get
			{
				return this._IsEndLever;
			}
			set
			{
				if ((this._IsEndLever != value))
				{
					this.OnIsEndLeverChanging(value);
					this.SendPropertyChanging();
					this._IsEndLever = value;
					this.SendPropertyChanged("IsEndLever");
					this.OnIsEndLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_AccidentCaseItem_EduTrain_AccidentCase", Storage="_EduTrain_AccidentCaseItem", ThisKey="AccidentCaseId", OtherKey="AccidentCaseId", DeleteRule="NO ACTION")]
		public EntitySet<EduTrain_AccidentCaseItem> EduTrain_AccidentCaseItem
		{
			get
			{
				return this._EduTrain_AccidentCaseItem;
			}
			set
			{
				this._EduTrain_AccidentCaseItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EduTrain_AccidentCaseItem(EduTrain_AccidentCaseItem entity)
		{
			this.SendPropertyChanging();
			entity.EduTrain_AccidentCase = this;
		}
		
		private void detach_EduTrain_AccidentCaseItem(EduTrain_AccidentCaseItem entity)
		{
			this.SendPropertyChanging();
			entity.EduTrain_AccidentCase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EduTrain_AccidentCaseItem")]
	public partial class EduTrain_AccidentCaseItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccidentCaseItemId;
		
		private string _AccidentCaseId;
		
		private string _Activities;
		
		private string _AccidentName;
		
		private string _AccidentProfiles;
		
		private string _AccidentReview;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private string _UpState;
		
		private EntityRef<EduTrain_AccidentCase> _EduTrain_AccidentCase;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccidentCaseItemIdChanging(string value);
    partial void OnAccidentCaseItemIdChanged();
    partial void OnAccidentCaseIdChanging(string value);
    partial void OnAccidentCaseIdChanged();
    partial void OnActivitiesChanging(string value);
    partial void OnActivitiesChanged();
    partial void OnAccidentNameChanging(string value);
    partial void OnAccidentNameChanged();
    partial void OnAccidentProfilesChanging(string value);
    partial void OnAccidentProfilesChanged();
    partial void OnAccidentReviewChanging(string value);
    partial void OnAccidentReviewChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    #endregion
		
		public EduTrain_AccidentCaseItem()
		{
			this._EduTrain_AccidentCase = default(EntityRef<EduTrain_AccidentCase>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccidentCaseItemId
		{
			get
			{
				return this._AccidentCaseItemId;
			}
			set
			{
				if ((this._AccidentCaseItemId != value))
				{
					this.OnAccidentCaseItemIdChanging(value);
					this.SendPropertyChanging();
					this._AccidentCaseItemId = value;
					this.SendPropertyChanged("AccidentCaseItemId");
					this.OnAccidentCaseItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentCaseId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccidentCaseId
		{
			get
			{
				return this._AccidentCaseId;
			}
			set
			{
				if ((this._AccidentCaseId != value))
				{
					if (this._EduTrain_AccidentCase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccidentCaseIdChanging(value);
					this.SendPropertyChanging();
					this._AccidentCaseId = value;
					this.SendPropertyChanged("AccidentCaseId");
					this.OnAccidentCaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="NVarChar(50)")]
		public string Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this.OnActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Activities = value;
					this.SendPropertyChanged("Activities");
					this.OnActivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentName", DbType="NVarChar(50)")]
		public string AccidentName
		{
			get
			{
				return this._AccidentName;
			}
			set
			{
				if ((this._AccidentName != value))
				{
					this.OnAccidentNameChanging(value);
					this.SendPropertyChanging();
					this._AccidentName = value;
					this.SendPropertyChanged("AccidentName");
					this.OnAccidentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentProfiles", DbType="NVarChar(2000)")]
		public string AccidentProfiles
		{
			get
			{
				return this._AccidentProfiles;
			}
			set
			{
				if ((this._AccidentProfiles != value))
				{
					this.OnAccidentProfilesChanging(value);
					this.SendPropertyChanging();
					this._AccidentProfiles = value;
					this.SendPropertyChanged("AccidentProfiles");
					this.OnAccidentProfilesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccidentReview", DbType="NVarChar(2000)")]
		public string AccidentReview
		{
			get
			{
				return this._AccidentReview;
			}
			set
			{
				if ((this._AccidentReview != value))
				{
					this.OnAccidentReviewChanging(value);
					this.SendPropertyChanging();
					this._AccidentReview = value;
					this.SendPropertyChanged("AccidentReview");
					this.OnAccidentReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_AccidentCaseItem_EduTrain_AccidentCase", Storage="_EduTrain_AccidentCase", ThisKey="AccidentCaseId", OtherKey="AccidentCaseId", IsForeignKey=true)]
		public EduTrain_AccidentCase EduTrain_AccidentCase
		{
			get
			{
				return this._EduTrain_AccidentCase.Entity;
			}
			set
			{
				EduTrain_AccidentCase previousValue = this._EduTrain_AccidentCase.Entity;
				if (((previousValue != value) 
							|| (this._EduTrain_AccidentCase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EduTrain_AccidentCase.Entity = null;
						previousValue.EduTrain_AccidentCaseItem.Remove(this);
					}
					this._EduTrain_AccidentCase.Entity = value;
					if ((value != null))
					{
						value.EduTrain_AccidentCaseItem.Add(this);
						this._AccidentCaseId = value.AccidentCaseId;
					}
					else
					{
						this._AccidentCaseId = default(string);
					}
					this.SendPropertyChanged("EduTrain_AccidentCase");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_AccidentCaseItem_Sys_User1", Storage="_Sys_User", ThisKey="AuditMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.EduTrain_AccidentCaseItem.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.EduTrain_AccidentCaseItem.Add(this);
						this._AuditMan = value.UserId;
					}
					else
					{
						this._AuditMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EduTrain_TrainRecord")]
	public partial class EduTrain_TrainRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainingId;
		
		private string _TrainingCode;
		
		private string _ProjectId;
		
		private string _TrainTitle;
		
		private string _TrainContent;
		
		private System.Nullable<System.DateTime> _TrainStartDate;
		
		private System.Nullable<System.DateTime> _TrainEndDate;
		
		private System.Nullable<decimal> _TeachHour;
		
		private string _TeachMan;
		
		private string _TeachAddress;
		
		private string _Remark;
		
		private string _TrainTypeId;
		
		private string _TrainLevelId;
		
		private string _AttachUrl;
		
		private string _UnitIds;
		
		private string _States;
		
		private string _CompileMan;
		
		private System.Nullable<int> _TrainPersonNum;
		
		private string _FromRecordId;
		
		private string _WorkPostIds;
		
		private string _PlanId;
		
		private EntitySet<EduTrain_TrainRecordDetail> _EduTrain_TrainRecordDetail;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_TrainLevel> _Base_TrainLevel;
		
		private EntityRef<Base_TrainType> _Base_TrainType;
		
		private EntityRef<Training_Plan> _Training_Plan;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainingIdChanging(string value);
    partial void OnTrainingIdChanged();
    partial void OnTrainingCodeChanging(string value);
    partial void OnTrainingCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnTrainTitleChanging(string value);
    partial void OnTrainTitleChanged();
    partial void OnTrainContentChanging(string value);
    partial void OnTrainContentChanged();
    partial void OnTrainStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrainStartDateChanged();
    partial void OnTrainEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrainEndDateChanged();
    partial void OnTeachHourChanging(System.Nullable<decimal> value);
    partial void OnTeachHourChanged();
    partial void OnTeachManChanging(string value);
    partial void OnTeachManChanged();
    partial void OnTeachAddressChanging(string value);
    partial void OnTeachAddressChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnTrainTypeIdChanging(string value);
    partial void OnTrainTypeIdChanged();
    partial void OnTrainLevelIdChanging(string value);
    partial void OnTrainLevelIdChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnUnitIdsChanging(string value);
    partial void OnUnitIdsChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnTrainPersonNumChanging(System.Nullable<int> value);
    partial void OnTrainPersonNumChanged();
    partial void OnFromRecordIdChanging(string value);
    partial void OnFromRecordIdChanged();
    partial void OnWorkPostIdsChanging(string value);
    partial void OnWorkPostIdsChanged();
    partial void OnPlanIdChanging(string value);
    partial void OnPlanIdChanged();
    #endregion
		
		public EduTrain_TrainRecord()
		{
			this._EduTrain_TrainRecordDetail = new EntitySet<EduTrain_TrainRecordDetail>(new Action<EduTrain_TrainRecordDetail>(this.attach_EduTrain_TrainRecordDetail), new Action<EduTrain_TrainRecordDetail>(this.detach_EduTrain_TrainRecordDetail));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_TrainLevel = default(EntityRef<Base_TrainLevel>);
			this._Base_TrainType = default(EntityRef<Base_TrainType>);
			this._Training_Plan = default(EntityRef<Training_Plan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					this.OnTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingId = value;
					this.SendPropertyChanged("TrainingId");
					this.OnTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingCode", DbType="NVarChar(50)")]
		public string TrainingCode
		{
			get
			{
				return this._TrainingCode;
			}
			set
			{
				if ((this._TrainingCode != value))
				{
					this.OnTrainingCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainingCode = value;
					this.SendPropertyChanged("TrainingCode");
					this.OnTrainingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTitle", DbType="NVarChar(200)")]
		public string TrainTitle
		{
			get
			{
				return this._TrainTitle;
			}
			set
			{
				if ((this._TrainTitle != value))
				{
					this.OnTrainTitleChanging(value);
					this.SendPropertyChanging();
					this._TrainTitle = value;
					this.SendPropertyChanged("TrainTitle");
					this.OnTrainTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainContent", DbType="NVarChar(500)")]
		public string TrainContent
		{
			get
			{
				return this._TrainContent;
			}
			set
			{
				if ((this._TrainContent != value))
				{
					this.OnTrainContentChanging(value);
					this.SendPropertyChanging();
					this._TrainContent = value;
					this.SendPropertyChanged("TrainContent");
					this.OnTrainContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrainStartDate
		{
			get
			{
				return this._TrainStartDate;
			}
			set
			{
				if ((this._TrainStartDate != value))
				{
					this.OnTrainStartDateChanging(value);
					this.SendPropertyChanging();
					this._TrainStartDate = value;
					this.SendPropertyChanged("TrainStartDate");
					this.OnTrainStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrainEndDate
		{
			get
			{
				return this._TrainEndDate;
			}
			set
			{
				if ((this._TrainEndDate != value))
				{
					this.OnTrainEndDateChanging(value);
					this.SendPropertyChanging();
					this._TrainEndDate = value;
					this.SendPropertyChanged("TrainEndDate");
					this.OnTrainEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachHour", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> TeachHour
		{
			get
			{
				return this._TeachHour;
			}
			set
			{
				if ((this._TeachHour != value))
				{
					this.OnTeachHourChanging(value);
					this.SendPropertyChanging();
					this._TeachHour = value;
					this.SendPropertyChanged("TeachHour");
					this.OnTeachHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachMan", DbType="NVarChar(50)")]
		public string TeachMan
		{
			get
			{
				return this._TeachMan;
			}
			set
			{
				if ((this._TeachMan != value))
				{
					this.OnTeachManChanging(value);
					this.SendPropertyChanging();
					this._TeachMan = value;
					this.SendPropertyChanged("TeachMan");
					this.OnTeachManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachAddress", DbType="NVarChar(100)")]
		public string TeachAddress
		{
			get
			{
				return this._TeachAddress;
			}
			set
			{
				if ((this._TeachAddress != value))
				{
					this.OnTeachAddressChanging(value);
					this.SendPropertyChanging();
					this._TeachAddress = value;
					this.SendPropertyChanged("TeachAddress");
					this.OnTeachAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeId", DbType="NVarChar(50)")]
		public string TrainTypeId
		{
			get
			{
				return this._TrainTypeId;
			}
			set
			{
				if ((this._TrainTypeId != value))
				{
					if (this._Base_TrainType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeId = value;
					this.SendPropertyChanged("TrainTypeId");
					this.OnTrainTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainLevelId", DbType="NVarChar(50)")]
		public string TrainLevelId
		{
			get
			{
				return this._TrainLevelId;
			}
			set
			{
				if ((this._TrainLevelId != value))
				{
					if (this._Base_TrainLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainLevelIdChanging(value);
					this.SendPropertyChanging();
					this._TrainLevelId = value;
					this.SendPropertyChanged("TrainLevelId");
					this.OnTrainLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(1000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitIds", DbType="NVarChar(800)")]
		public string UnitIds
		{
			get
			{
				return this._UnitIds;
			}
			set
			{
				if ((this._UnitIds != value))
				{
					this.OnUnitIdsChanging(value);
					this.SendPropertyChanging();
					this._UnitIds = value;
					this.SendPropertyChanged("UnitIds");
					this.OnUnitIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainPersonNum", DbType="Int")]
		public System.Nullable<int> TrainPersonNum
		{
			get
			{
				return this._TrainPersonNum;
			}
			set
			{
				if ((this._TrainPersonNum != value))
				{
					this.OnTrainPersonNumChanging(value);
					this.SendPropertyChanging();
					this._TrainPersonNum = value;
					this.SendPropertyChanged("TrainPersonNum");
					this.OnTrainPersonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromRecordId", DbType="NVarChar(50)")]
		public string FromRecordId
		{
			get
			{
				return this._FromRecordId;
			}
			set
			{
				if ((this._FromRecordId != value))
				{
					this.OnFromRecordIdChanging(value);
					this.SendPropertyChanging();
					this._FromRecordId = value;
					this.SendPropertyChanged("FromRecordId");
					this.OnFromRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostIds
		{
			get
			{
				return this._WorkPostIds;
			}
			set
			{
				if ((this._WorkPostIds != value))
				{
					this.OnWorkPostIdsChanging(value);
					this.SendPropertyChanging();
					this._WorkPostIds = value;
					this.SendPropertyChanged("WorkPostIds");
					this.OnWorkPostIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanId", DbType="NVarChar(50)")]
		public string PlanId
		{
			get
			{
				return this._PlanId;
			}
			set
			{
				if ((this._PlanId != value))
				{
					if (this._Training_Plan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PlanId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_TrainDetail_EduTrain_Training", Storage="_EduTrain_TrainRecordDetail", ThisKey="TrainingId", OtherKey="TrainingId", DeleteRule="NO ACTION")]
		public EntitySet<EduTrain_TrainRecordDetail> EduTrain_TrainRecordDetail
		{
			get
			{
				return this._EduTrain_TrainRecordDetail;
			}
			set
			{
				this._EduTrain_TrainRecordDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_Training_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.EduTrain_TrainRecord.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.EduTrain_TrainRecord.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_TrainRecord_Base_TrainLevel", Storage="_Base_TrainLevel", ThisKey="TrainLevelId", OtherKey="TrainLevelId", IsForeignKey=true)]
		public Base_TrainLevel Base_TrainLevel
		{
			get
			{
				return this._Base_TrainLevel.Entity;
			}
			set
			{
				Base_TrainLevel previousValue = this._Base_TrainLevel.Entity;
				if (((previousValue != value) 
							|| (this._Base_TrainLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_TrainLevel.Entity = null;
						previousValue.EduTrain_TrainRecord.Remove(this);
					}
					this._Base_TrainLevel.Entity = value;
					if ((value != null))
					{
						value.EduTrain_TrainRecord.Add(this);
						this._TrainLevelId = value.TrainLevelId;
					}
					else
					{
						this._TrainLevelId = default(string);
					}
					this.SendPropertyChanged("Base_TrainLevel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_TrainRecord_Base_TrainType", Storage="_Base_TrainType", ThisKey="TrainTypeId", OtherKey="TrainTypeId", IsForeignKey=true)]
		public Base_TrainType Base_TrainType
		{
			get
			{
				return this._Base_TrainType.Entity;
			}
			set
			{
				Base_TrainType previousValue = this._Base_TrainType.Entity;
				if (((previousValue != value) 
							|| (this._Base_TrainType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_TrainType.Entity = null;
						previousValue.EduTrain_TrainRecord.Remove(this);
					}
					this._Base_TrainType.Entity = value;
					if ((value != null))
					{
						value.EduTrain_TrainRecord.Add(this);
						this._TrainTypeId = value.TrainTypeId;
					}
					else
					{
						this._TrainTypeId = default(string);
					}
					this.SendPropertyChanged("Base_TrainType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_TrainRecord_Training_Plan", Storage="_Training_Plan", ThisKey="PlanId", OtherKey="PlanId", IsForeignKey=true)]
		public Training_Plan Training_Plan
		{
			get
			{
				return this._Training_Plan.Entity;
			}
			set
			{
				Training_Plan previousValue = this._Training_Plan.Entity;
				if (((previousValue != value) 
							|| (this._Training_Plan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_Plan.Entity = null;
						previousValue.EduTrain_TrainRecord.Remove(this);
					}
					this._Training_Plan.Entity = value;
					if ((value != null))
					{
						value.EduTrain_TrainRecord.Add(this);
						this._PlanId = value.PlanId;
					}
					else
					{
						this._PlanId = default(string);
					}
					this.SendPropertyChanged("Training_Plan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EduTrain_TrainRecordDetail(EduTrain_TrainRecordDetail entity)
		{
			this.SendPropertyChanging();
			entity.EduTrain_TrainRecord = this;
		}
		
		private void detach_EduTrain_TrainRecordDetail(EduTrain_TrainRecordDetail entity)
		{
			this.SendPropertyChanging();
			entity.EduTrain_TrainRecord = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EduTrain_TrainRecordDetail")]
	public partial class EduTrain_TrainRecordDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainDetailId;
		
		private string _TrainingId;
		
		private string _PersonId;
		
		private System.Nullable<decimal> _CheckScore;
		
		private bool _CheckResult;
		
		private EntityRef<EduTrain_TrainRecord> _EduTrain_TrainRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainDetailIdChanging(string value);
    partial void OnTrainDetailIdChanged();
    partial void OnTrainingIdChanging(string value);
    partial void OnTrainingIdChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnCheckScoreChanging(System.Nullable<decimal> value);
    partial void OnCheckScoreChanged();
    partial void OnCheckResultChanging(bool value);
    partial void OnCheckResultChanged();
    #endregion
		
		public EduTrain_TrainRecordDetail()
		{
			this._EduTrain_TrainRecord = default(EntityRef<EduTrain_TrainRecord>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainDetailId
		{
			get
			{
				return this._TrainDetailId;
			}
			set
			{
				if ((this._TrainDetailId != value))
				{
					this.OnTrainDetailIdChanging(value);
					this.SendPropertyChanging();
					this._TrainDetailId = value;
					this.SendPropertyChanged("TrainDetailId");
					this.OnTrainDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					if (this._EduTrain_TrainRecord.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingId = value;
					this.SendPropertyChanged("TrainingId");
					this.OnTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckScore", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> CheckScore
		{
			get
			{
				return this._CheckScore;
			}
			set
			{
				if ((this._CheckScore != value))
				{
					this.OnCheckScoreChanging(value);
					this.SendPropertyChanging();
					this._CheckScore = value;
					this.SendPropertyChanged("CheckScore");
					this.OnCheckScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckResult", DbType="Bit NOT NULL")]
		public bool CheckResult
		{
			get
			{
				return this._CheckResult;
			}
			set
			{
				if ((this._CheckResult != value))
				{
					this.OnCheckResultChanging(value);
					this.SendPropertyChanging();
					this._CheckResult = value;
					this.SendPropertyChanged("CheckResult");
					this.OnCheckResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_TrainDetail_EduTrain_Training", Storage="_EduTrain_TrainRecord", ThisKey="TrainingId", OtherKey="TrainingId", IsForeignKey=true)]
		public EduTrain_TrainRecord EduTrain_TrainRecord
		{
			get
			{
				return this._EduTrain_TrainRecord.Entity;
			}
			set
			{
				EduTrain_TrainRecord previousValue = this._EduTrain_TrainRecord.Entity;
				if (((previousValue != value) 
							|| (this._EduTrain_TrainRecord.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EduTrain_TrainRecord.Entity = null;
						previousValue.EduTrain_TrainRecordDetail.Remove(this);
					}
					this._EduTrain_TrainRecord.Entity = value;
					if ((value != null))
					{
						value.EduTrain_TrainRecordDetail.Add(this);
						this._TrainingId = value.TrainingId;
					}
					else
					{
						this._TrainingId = default(string);
					}
					this.SendPropertyChanged("EduTrain_TrainRecord");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Environmental_EIAReport")]
	public partial class Environmental_EIAReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FileId;
		
		private string _FileCode;
		
		private string _FileName;
		
		private string _FileContent;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _ProjectId;
		
		private string _States;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(string value);
    partial void OnFileIdChanged();
    partial void OnFileCodeChanging(string value);
    partial void OnFileCodeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileContentChanging(string value);
    partial void OnFileContentChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public Environmental_EIAReport()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCode", DbType="NVarChar(50)")]
		public string FileCode
		{
			get
			{
				return this._FileCode;
			}
			set
			{
				if ((this._FileCode != value))
				{
					this.OnFileCodeChanging(value);
					this.SendPropertyChanging();
					this._FileCode = value;
					this.SendPropertyChanged("FileCode");
					this.OnFileCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(200)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(4000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Environmental_EIAReport_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Environmental_EIAReport.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Environmental_EIAReport.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Environmental_EnvironmentalEmergencyPlan")]
	public partial class Environmental_EnvironmentalEmergencyPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FileId;
		
		private string _FileCode;
		
		private string _FileName;
		
		private string _FileContent;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _ProjectId;
		
		private string _States;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(string value);
    partial void OnFileIdChanged();
    partial void OnFileCodeChanging(string value);
    partial void OnFileCodeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileContentChanging(string value);
    partial void OnFileContentChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public Environmental_EnvironmentalEmergencyPlan()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCode", DbType="NVarChar(50)")]
		public string FileCode
		{
			get
			{
				return this._FileCode;
			}
			set
			{
				if ((this._FileCode != value))
				{
					this.OnFileCodeChanging(value);
					this.SendPropertyChanging();
					this._FileCode = value;
					this.SendPropertyChanged("FileCode");
					this.OnFileCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(200)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(4000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Environmental_EnvironmentalEmergencyPlan_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Environmental_EnvironmentalEmergencyPlan.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Environmental_EnvironmentalEmergencyPlan.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Environmental_EnvironmentalMonitoring")]
	public partial class Environmental_EnvironmentalMonitoring : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FileId;
		
		private string _FileCode;
		
		private string _FileName;
		
		private string _FileContent;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _ProjectId;
		
		private string _States;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(string value);
    partial void OnFileIdChanged();
    partial void OnFileCodeChanging(string value);
    partial void OnFileCodeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileContentChanging(string value);
    partial void OnFileContentChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public Environmental_EnvironmentalMonitoring()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCode", DbType="NVarChar(50)")]
		public string FileCode
		{
			get
			{
				return this._FileCode;
			}
			set
			{
				if ((this._FileCode != value))
				{
					this.OnFileCodeChanging(value);
					this.SendPropertyChanging();
					this._FileCode = value;
					this.SendPropertyChanged("FileCode");
					this.OnFileCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(200)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(4000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Environmental_EnvironmentalMonitoring_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Environmental_EnvironmentalMonitoring.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Environmental_EnvironmentalMonitoring.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Environmental_UnexpectedEnvironmental")]
	public partial class Environmental_UnexpectedEnvironmental : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FileId;
		
		private string _FileCode;
		
		private string _FileName;
		
		private string _FileContent;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _ProjectId;
		
		private string _States;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(string value);
    partial void OnFileIdChanged();
    partial void OnFileCodeChanging(string value);
    partial void OnFileCodeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileContentChanging(string value);
    partial void OnFileContentChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public Environmental_UnexpectedEnvironmental()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCode", DbType="NVarChar(50)")]
		public string FileCode
		{
			get
			{
				return this._FileCode;
			}
			set
			{
				if ((this._FileCode != value))
				{
					this.OnFileCodeChanging(value);
					this.SendPropertyChanging();
					this._FileCode = value;
					this.SendPropertyChanged("FileCode");
					this.OnFileCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(200)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(4000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Environmental_UnexpectedEnvironmental_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Environmental_UnexpectedEnvironmental.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Environmental_UnexpectedEnvironmental.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_EnvironmentalRiskItem")]
	public partial class Hazard_EnvironmentalRiskItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EnvironmentalRiskItemId;
		
		private string _EnvironmentalRiskListId;
		
		private string _EType;
		
		private string _ActivePoint;
		
		private string _EnvironmentalFactors;
		
		private System.Nullable<int> _AValue;
		
		private System.Nullable<int> _BValue;
		
		private System.Nullable<int> _CValue;
		
		private System.Nullable<int> _DValue;
		
		private System.Nullable<int> _EValue;
		
		private System.Nullable<int> _ZValue;
		
		private string _SmallType;
		
		private System.Nullable<bool> _IsImportant;
		
		private string _Code;
		
		private System.Nullable<int> _FValue;
		
		private System.Nullable<int> _GValue;
		
		private string _EnvironmentalId;
		
		private string _ControlMeasures;
		
		private string _Remark;
		
		private string _EnvironmentEffect;
		
		private EntityRef<Hazard_EnvironmentalRiskList> _Hazard_EnvironmentalRiskList;
		
		private EntityRef<Technique_Environmental> _Technique_Environmental;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEnvironmentalRiskItemIdChanging(string value);
    partial void OnEnvironmentalRiskItemIdChanged();
    partial void OnEnvironmentalRiskListIdChanging(string value);
    partial void OnEnvironmentalRiskListIdChanged();
    partial void OnETypeChanging(string value);
    partial void OnETypeChanged();
    partial void OnActivePointChanging(string value);
    partial void OnActivePointChanged();
    partial void OnEnvironmentalFactorsChanging(string value);
    partial void OnEnvironmentalFactorsChanged();
    partial void OnAValueChanging(System.Nullable<int> value);
    partial void OnAValueChanged();
    partial void OnBValueChanging(System.Nullable<int> value);
    partial void OnBValueChanged();
    partial void OnCValueChanging(System.Nullable<int> value);
    partial void OnCValueChanged();
    partial void OnDValueChanging(System.Nullable<int> value);
    partial void OnDValueChanged();
    partial void OnEValueChanging(System.Nullable<int> value);
    partial void OnEValueChanged();
    partial void OnZValueChanging(System.Nullable<int> value);
    partial void OnZValueChanged();
    partial void OnSmallTypeChanging(string value);
    partial void OnSmallTypeChanged();
    partial void OnIsImportantChanging(System.Nullable<bool> value);
    partial void OnIsImportantChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnFValueChanging(System.Nullable<int> value);
    partial void OnFValueChanged();
    partial void OnGValueChanging(System.Nullable<int> value);
    partial void OnGValueChanged();
    partial void OnEnvironmentalIdChanging(string value);
    partial void OnEnvironmentalIdChanged();
    partial void OnControlMeasuresChanging(string value);
    partial void OnControlMeasuresChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnEnvironmentEffectChanging(string value);
    partial void OnEnvironmentEffectChanged();
    #endregion
		
		public Hazard_EnvironmentalRiskItem()
		{
			this._Hazard_EnvironmentalRiskList = default(EntityRef<Hazard_EnvironmentalRiskList>);
			this._Technique_Environmental = default(EntityRef<Technique_Environmental>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalRiskItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EnvironmentalRiskItemId
		{
			get
			{
				return this._EnvironmentalRiskItemId;
			}
			set
			{
				if ((this._EnvironmentalRiskItemId != value))
				{
					this.OnEnvironmentalRiskItemIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentalRiskItemId = value;
					this.SendPropertyChanged("EnvironmentalRiskItemId");
					this.OnEnvironmentalRiskItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalRiskListId", DbType="NVarChar(50)")]
		public string EnvironmentalRiskListId
		{
			get
			{
				return this._EnvironmentalRiskListId;
			}
			set
			{
				if ((this._EnvironmentalRiskListId != value))
				{
					if (this._Hazard_EnvironmentalRiskList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnvironmentalRiskListIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentalRiskListId = value;
					this.SendPropertyChanged("EnvironmentalRiskListId");
					this.OnEnvironmentalRiskListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EType", DbType="NVarChar(100)")]
		public string EType
		{
			get
			{
				return this._EType;
			}
			set
			{
				if ((this._EType != value))
				{
					this.OnETypeChanging(value);
					this.SendPropertyChanging();
					this._EType = value;
					this.SendPropertyChanged("EType");
					this.OnETypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivePoint", DbType="NVarChar(500)")]
		public string ActivePoint
		{
			get
			{
				return this._ActivePoint;
			}
			set
			{
				if ((this._ActivePoint != value))
				{
					this.OnActivePointChanging(value);
					this.SendPropertyChanging();
					this._ActivePoint = value;
					this.SendPropertyChanged("ActivePoint");
					this.OnActivePointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalFactors", DbType="NVarChar(500)")]
		public string EnvironmentalFactors
		{
			get
			{
				return this._EnvironmentalFactors;
			}
			set
			{
				if ((this._EnvironmentalFactors != value))
				{
					this.OnEnvironmentalFactorsChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentalFactors = value;
					this.SendPropertyChanged("EnvironmentalFactors");
					this.OnEnvironmentalFactorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AValue", DbType="Int")]
		public System.Nullable<int> AValue
		{
			get
			{
				return this._AValue;
			}
			set
			{
				if ((this._AValue != value))
				{
					this.OnAValueChanging(value);
					this.SendPropertyChanging();
					this._AValue = value;
					this.SendPropertyChanged("AValue");
					this.OnAValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BValue", DbType="Int")]
		public System.Nullable<int> BValue
		{
			get
			{
				return this._BValue;
			}
			set
			{
				if ((this._BValue != value))
				{
					this.OnBValueChanging(value);
					this.SendPropertyChanging();
					this._BValue = value;
					this.SendPropertyChanged("BValue");
					this.OnBValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CValue", DbType="Int")]
		public System.Nullable<int> CValue
		{
			get
			{
				return this._CValue;
			}
			set
			{
				if ((this._CValue != value))
				{
					this.OnCValueChanging(value);
					this.SendPropertyChanging();
					this._CValue = value;
					this.SendPropertyChanged("CValue");
					this.OnCValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DValue", DbType="Int")]
		public System.Nullable<int> DValue
		{
			get
			{
				return this._DValue;
			}
			set
			{
				if ((this._DValue != value))
				{
					this.OnDValueChanging(value);
					this.SendPropertyChanging();
					this._DValue = value;
					this.SendPropertyChanged("DValue");
					this.OnDValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EValue", DbType="Int")]
		public System.Nullable<int> EValue
		{
			get
			{
				return this._EValue;
			}
			set
			{
				if ((this._EValue != value))
				{
					this.OnEValueChanging(value);
					this.SendPropertyChanging();
					this._EValue = value;
					this.SendPropertyChanged("EValue");
					this.OnEValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZValue", DbType="Int")]
		public System.Nullable<int> ZValue
		{
			get
			{
				return this._ZValue;
			}
			set
			{
				if ((this._ZValue != value))
				{
					this.OnZValueChanging(value);
					this.SendPropertyChanging();
					this._ZValue = value;
					this.SendPropertyChanged("ZValue");
					this.OnZValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallType", DbType="NVarChar(50)")]
		public string SmallType
		{
			get
			{
				return this._SmallType;
			}
			set
			{
				if ((this._SmallType != value))
				{
					this.OnSmallTypeChanging(value);
					this.SendPropertyChanging();
					this._SmallType = value;
					this.SendPropertyChanged("SmallType");
					this.OnSmallTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsImportant", DbType="Bit")]
		public System.Nullable<bool> IsImportant
		{
			get
			{
				return this._IsImportant;
			}
			set
			{
				if ((this._IsImportant != value))
				{
					this.OnIsImportantChanging(value);
					this.SendPropertyChanging();
					this._IsImportant = value;
					this.SendPropertyChanged("IsImportant");
					this.OnIsImportantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FValue", DbType="Int")]
		public System.Nullable<int> FValue
		{
			get
			{
				return this._FValue;
			}
			set
			{
				if ((this._FValue != value))
				{
					this.OnFValueChanging(value);
					this.SendPropertyChanging();
					this._FValue = value;
					this.SendPropertyChanged("FValue");
					this.OnFValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GValue", DbType="Int")]
		public System.Nullable<int> GValue
		{
			get
			{
				return this._GValue;
			}
			set
			{
				if ((this._GValue != value))
				{
					this.OnGValueChanging(value);
					this.SendPropertyChanging();
					this._GValue = value;
					this.SendPropertyChanged("GValue");
					this.OnGValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalId", DbType="NVarChar(50)")]
		public string EnvironmentalId
		{
			get
			{
				return this._EnvironmentalId;
			}
			set
			{
				if ((this._EnvironmentalId != value))
				{
					if (this._Technique_Environmental.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnvironmentalIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentalId = value;
					this.SendPropertyChanged("EnvironmentalId");
					this.OnEnvironmentalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(800)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this.OnControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ControlMeasures = value;
					this.SendPropertyChanged("ControlMeasures");
					this.OnControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(800)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentEffect", DbType="NVarChar(200)")]
		public string EnvironmentEffect
		{
			get
			{
				return this._EnvironmentEffect;
			}
			set
			{
				if ((this._EnvironmentEffect != value))
				{
					this.OnEnvironmentEffectChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentEffect = value;
					this.SendPropertyChanged("EnvironmentEffect");
					this.OnEnvironmentEffectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_EnvironmentalRiskItem_Hazard_EnvironmentalRiskList", Storage="_Hazard_EnvironmentalRiskList", ThisKey="EnvironmentalRiskListId", OtherKey="EnvironmentalRiskListId", IsForeignKey=true)]
		public Hazard_EnvironmentalRiskList Hazard_EnvironmentalRiskList
		{
			get
			{
				return this._Hazard_EnvironmentalRiskList.Entity;
			}
			set
			{
				Hazard_EnvironmentalRiskList previousValue = this._Hazard_EnvironmentalRiskList.Entity;
				if (((previousValue != value) 
							|| (this._Hazard_EnvironmentalRiskList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hazard_EnvironmentalRiskList.Entity = null;
						previousValue.Hazard_EnvironmentalRiskItem.Remove(this);
					}
					this._Hazard_EnvironmentalRiskList.Entity = value;
					if ((value != null))
					{
						value.Hazard_EnvironmentalRiskItem.Add(this);
						this._EnvironmentalRiskListId = value.EnvironmentalRiskListId;
					}
					else
					{
						this._EnvironmentalRiskListId = default(string);
					}
					this.SendPropertyChanged("Hazard_EnvironmentalRiskList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_EnvironmentalRiskItem_Technique_Environmental", Storage="_Technique_Environmental", ThisKey="EnvironmentalId", OtherKey="EnvironmentalId", IsForeignKey=true)]
		public Technique_Environmental Technique_Environmental
		{
			get
			{
				return this._Technique_Environmental.Entity;
			}
			set
			{
				Technique_Environmental previousValue = this._Technique_Environmental.Entity;
				if (((previousValue != value) 
							|| (this._Technique_Environmental.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Technique_Environmental.Entity = null;
						previousValue.Hazard_EnvironmentalRiskItem.Remove(this);
					}
					this._Technique_Environmental.Entity = value;
					if ((value != null))
					{
						value.Hazard_EnvironmentalRiskItem.Add(this);
						this._EnvironmentalId = value.EnvironmentalId;
					}
					else
					{
						this._EnvironmentalId = default(string);
					}
					this.SendPropertyChanged("Technique_Environmental");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_EnvironmentalRiskList")]
	public partial class Hazard_EnvironmentalRiskList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EnvironmentalRiskListId;
		
		private string _ProjectId;
		
		private string _RiskCode;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _States;
		
		private string _Contents;
		
		private string _WorkAreaName;
		
		private System.Nullable<System.DateTime> _IdentificationDate;
		
		private string _ControllingPerson;
		
		private EntitySet<Hazard_EnvironmentalRiskItem> _Hazard_EnvironmentalRiskItem;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _CompileManSys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEnvironmentalRiskListIdChanging(string value);
    partial void OnEnvironmentalRiskListIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnRiskCodeChanging(string value);
    partial void OnRiskCodeChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnWorkAreaNameChanging(string value);
    partial void OnWorkAreaNameChanged();
    partial void OnIdentificationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIdentificationDateChanged();
    partial void OnControllingPersonChanging(string value);
    partial void OnControllingPersonChanged();
    #endregion
		
		public Hazard_EnvironmentalRiskList()
		{
			this._Hazard_EnvironmentalRiskItem = new EntitySet<Hazard_EnvironmentalRiskItem>(new Action<Hazard_EnvironmentalRiskItem>(this.attach_Hazard_EnvironmentalRiskItem), new Action<Hazard_EnvironmentalRiskItem>(this.detach_Hazard_EnvironmentalRiskItem));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._CompileManSys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalRiskListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EnvironmentalRiskListId
		{
			get
			{
				return this._EnvironmentalRiskListId;
			}
			set
			{
				if ((this._EnvironmentalRiskListId != value))
				{
					this.OnEnvironmentalRiskListIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentalRiskListId = value;
					this.SendPropertyChanged("EnvironmentalRiskListId");
					this.OnEnvironmentalRiskListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskCode", DbType="NVarChar(50)")]
		public string RiskCode
		{
			get
			{
				return this._RiskCode;
			}
			set
			{
				if ((this._RiskCode != value))
				{
					this.OnRiskCodeChanging(value);
					this.SendPropertyChanging();
					this._RiskCode = value;
					this.SendPropertyChanged("RiskCode");
					this.OnRiskCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._CompileManSys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(500)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaName", DbType="NVarChar(500)")]
		public string WorkAreaName
		{
			get
			{
				return this._WorkAreaName;
			}
			set
			{
				if ((this._WorkAreaName != value))
				{
					this.OnWorkAreaNameChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaName = value;
					this.SendPropertyChanged("WorkAreaName");
					this.OnWorkAreaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IdentificationDate
		{
			get
			{
				return this._IdentificationDate;
			}
			set
			{
				if ((this._IdentificationDate != value))
				{
					this.OnIdentificationDateChanging(value);
					this.SendPropertyChanging();
					this._IdentificationDate = value;
					this.SendPropertyChanged("IdentificationDate");
					this.OnIdentificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControllingPerson", DbType="NVarChar(50)")]
		public string ControllingPerson
		{
			get
			{
				return this._ControllingPerson;
			}
			set
			{
				if ((this._ControllingPerson != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnControllingPersonChanging(value);
					this.SendPropertyChanging();
					this._ControllingPerson = value;
					this.SendPropertyChanged("ControllingPerson");
					this.OnControllingPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_EnvironmentalRiskItem_Hazard_EnvironmentalRiskList", Storage="_Hazard_EnvironmentalRiskItem", ThisKey="EnvironmentalRiskListId", OtherKey="EnvironmentalRiskListId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_EnvironmentalRiskItem> Hazard_EnvironmentalRiskItem
		{
			get
			{
				return this._Hazard_EnvironmentalRiskItem;
			}
			set
			{
				this._Hazard_EnvironmentalRiskItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_EnvironmentalRiskList_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Hazard_EnvironmentalRiskList.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Hazard_EnvironmentalRiskList.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_EnvironmentalRiskList_Sys_User", Storage="_Sys_User", ThisKey="ControllingPerson", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Hazard_EnvironmentalRiskList.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Hazard_EnvironmentalRiskList.Add(this);
						this._ControllingPerson = value.UserId;
					}
					else
					{
						this._ControllingPerson = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_EnvironmentalRiskList_Sys_User1", Storage="_CompileManSys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User CompileManSys_User
		{
			get
			{
				return this._CompileManSys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._CompileManSys_User.Entity;
				if (((previousValue != value) 
							|| (this._CompileManSys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompileManSys_User.Entity = null;
						previousValue.User.Remove(this);
					}
					this._CompileManSys_User.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("CompileManSys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hazard_EnvironmentalRiskItem(Hazard_EnvironmentalRiskItem entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_EnvironmentalRiskList = this;
		}
		
		private void detach_Hazard_EnvironmentalRiskItem(Hazard_EnvironmentalRiskItem entity)
		{
			this.SendPropertyChanging();
			entity.Hazard_EnvironmentalRiskList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_HazardList")]
	public partial class Hazard_HazardList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HazardListId;
		
		private string _HazardListCode;
		
		private string _ProjectId;
		
		private string _VersionNo;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _States;
		
		private string _WorkStage;
		
		private string _Contents;
		
		private string _WorkAreaName;
		
		private System.Nullable<System.DateTime> _IdentificationDate;
		
		private string _ControllingPerson;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _ControllingPersonSys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHazardListIdChanging(string value);
    partial void OnHazardListIdChanged();
    partial void OnHazardListCodeChanging(string value);
    partial void OnHazardListCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnVersionNoChanging(string value);
    partial void OnVersionNoChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnWorkStageChanging(string value);
    partial void OnWorkStageChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnWorkAreaNameChanging(string value);
    partial void OnWorkAreaNameChanged();
    partial void OnIdentificationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIdentificationDateChanged();
    partial void OnControllingPersonChanging(string value);
    partial void OnControllingPersonChanged();
    #endregion
		
		public Hazard_HazardList()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._ControllingPersonSys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HazardListId
		{
			get
			{
				return this._HazardListId;
			}
			set
			{
				if ((this._HazardListId != value))
				{
					this.OnHazardListIdChanging(value);
					this.SendPropertyChanging();
					this._HazardListId = value;
					this.SendPropertyChanged("HazardListId");
					this.OnHazardListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardListCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HazardListCode
		{
			get
			{
				return this._HazardListCode;
			}
			set
			{
				if ((this._HazardListCode != value))
				{
					this.OnHazardListCodeChanging(value);
					this.SendPropertyChanging();
					this._HazardListCode = value;
					this.SendPropertyChanged("HazardListCode");
					this.OnHazardListCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNo", DbType="NVarChar(5)")]
		public string VersionNo
		{
			get
			{
				return this._VersionNo;
			}
			set
			{
				if ((this._VersionNo != value))
				{
					this.OnVersionNoChanging(value);
					this.SendPropertyChanging();
					this._VersionNo = value;
					this.SendPropertyChanged("VersionNo");
					this.OnVersionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkStage", DbType="NVarChar(2000)")]
		public string WorkStage
		{
			get
			{
				return this._WorkStage;
			}
			set
			{
				if ((this._WorkStage != value))
				{
					this.OnWorkStageChanging(value);
					this.SendPropertyChanging();
					this._WorkStage = value;
					this.SendPropertyChanged("WorkStage");
					this.OnWorkStageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaName", DbType="NVarChar(500)")]
		public string WorkAreaName
		{
			get
			{
				return this._WorkAreaName;
			}
			set
			{
				if ((this._WorkAreaName != value))
				{
					this.OnWorkAreaNameChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaName = value;
					this.SendPropertyChanged("WorkAreaName");
					this.OnWorkAreaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IdentificationDate
		{
			get
			{
				return this._IdentificationDate;
			}
			set
			{
				if ((this._IdentificationDate != value))
				{
					this.OnIdentificationDateChanging(value);
					this.SendPropertyChanging();
					this._IdentificationDate = value;
					this.SendPropertyChanged("IdentificationDate");
					this.OnIdentificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControllingPerson", DbType="NVarChar(50)")]
		public string ControllingPerson
		{
			get
			{
				return this._ControllingPerson;
			}
			set
			{
				if ((this._ControllingPerson != value))
				{
					if (this._ControllingPersonSys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnControllingPersonChanging(value);
					this.SendPropertyChanging();
					this._ControllingPerson = value;
					this.SendPropertyChanged("ControllingPerson");
					this.OnControllingPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HazardList_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Hazard_HazardList.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Hazard_HazardList.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HazardList_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Hazard_HazardList.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Hazard_HazardList.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HazardList_Sys_User1", Storage="_ControllingPersonSys_User", ThisKey="ControllingPerson", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User ControllingPersonSys_User
		{
			get
			{
				return this._ControllingPersonSys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._ControllingPersonSys_User.Entity;
				if (((previousValue != value) 
							|| (this._ControllingPersonSys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ControllingPersonSys_User.Entity = null;
						previousValue.Hazard_HazardList_Sys_User1.Remove(this);
					}
					this._ControllingPersonSys_User.Entity = value;
					if ((value != null))
					{
						value.Hazard_HazardList_Sys_User1.Add(this);
						this._ControllingPerson = value.UserId;
					}
					else
					{
						this._ControllingPerson = default(string);
					}
					this.SendPropertyChanged("ControllingPersonSys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hazard_HazardSelectedItem")]
	public partial class Hazard_HazardSelectedItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HazardId;
		
		private string _HazardListTypeId;
		
		private string _HazardListId;
		
		private string _HazardItems;
		
		private string _DefectsType;
		
		private string _MayLeadAccidents;
		
		private string _HelperMethod;
		
		private System.Nullable<decimal> _HazardJudge_L;
		
		private System.Nullable<decimal> _HazardJudge_E;
		
		private System.Nullable<decimal> _HazardJudge_C;
		
		private System.Nullable<decimal> _HazardJudge_D;
		
		private string _HazardLevel;
		
		private string _ControlMeasures;
		
		private System.Nullable<bool> _IsResponse;
		
		private string _ResponseRecode;
		
		private System.Nullable<int> _PromptTime;
		
		private string _Remark;
		
		private string _WorkStage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHazardIdChanging(string value);
    partial void OnHazardIdChanged();
    partial void OnHazardListTypeIdChanging(string value);
    partial void OnHazardListTypeIdChanged();
    partial void OnHazardListIdChanging(string value);
    partial void OnHazardListIdChanged();
    partial void OnHazardItemsChanging(string value);
    partial void OnHazardItemsChanged();
    partial void OnDefectsTypeChanging(string value);
    partial void OnDefectsTypeChanged();
    partial void OnMayLeadAccidentsChanging(string value);
    partial void OnMayLeadAccidentsChanged();
    partial void OnHelperMethodChanging(string value);
    partial void OnHelperMethodChanged();
    partial void OnHazardJudge_LChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_LChanged();
    partial void OnHazardJudge_EChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_EChanged();
    partial void OnHazardJudge_CChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_CChanged();
    partial void OnHazardJudge_DChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_DChanged();
    partial void OnHazardLevelChanging(string value);
    partial void OnHazardLevelChanged();
    partial void OnControlMeasuresChanging(string value);
    partial void OnControlMeasuresChanged();
    partial void OnIsResponseChanging(System.Nullable<bool> value);
    partial void OnIsResponseChanged();
    partial void OnResponseRecodeChanging(string value);
    partial void OnResponseRecodeChanged();
    partial void OnPromptTimeChanging(System.Nullable<int> value);
    partial void OnPromptTimeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnWorkStageChanging(string value);
    partial void OnWorkStageChanged();
    #endregion
		
		public Hazard_HazardSelectedItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HazardId
		{
			get
			{
				return this._HazardId;
			}
			set
			{
				if ((this._HazardId != value))
				{
					this.OnHazardIdChanging(value);
					this.SendPropertyChanging();
					this._HazardId = value;
					this.SendPropertyChanged("HazardId");
					this.OnHazardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardListTypeId", DbType="NVarChar(50)")]
		public string HazardListTypeId
		{
			get
			{
				return this._HazardListTypeId;
			}
			set
			{
				if ((this._HazardListTypeId != value))
				{
					this.OnHazardListTypeIdChanging(value);
					this.SendPropertyChanging();
					this._HazardListTypeId = value;
					this.SendPropertyChanged("HazardListTypeId");
					this.OnHazardListTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HazardListId
		{
			get
			{
				return this._HazardListId;
			}
			set
			{
				if ((this._HazardListId != value))
				{
					this.OnHazardListIdChanging(value);
					this.SendPropertyChanging();
					this._HazardListId = value;
					this.SendPropertyChanged("HazardListId");
					this.OnHazardListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardItems", DbType="NVarChar(100)")]
		public string HazardItems
		{
			get
			{
				return this._HazardItems;
			}
			set
			{
				if ((this._HazardItems != value))
				{
					this.OnHazardItemsChanging(value);
					this.SendPropertyChanging();
					this._HazardItems = value;
					this.SendPropertyChanged("HazardItems");
					this.OnHazardItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefectsType", DbType="NVarChar(50)")]
		public string DefectsType
		{
			get
			{
				return this._DefectsType;
			}
			set
			{
				if ((this._DefectsType != value))
				{
					this.OnDefectsTypeChanging(value);
					this.SendPropertyChanging();
					this._DefectsType = value;
					this.SendPropertyChanged("DefectsType");
					this.OnDefectsTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayLeadAccidents", DbType="NVarChar(100)")]
		public string MayLeadAccidents
		{
			get
			{
				return this._MayLeadAccidents;
			}
			set
			{
				if ((this._MayLeadAccidents != value))
				{
					this.OnMayLeadAccidentsChanging(value);
					this.SendPropertyChanging();
					this._MayLeadAccidents = value;
					this.SendPropertyChanged("MayLeadAccidents");
					this.OnMayLeadAccidentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelperMethod", DbType="NVarChar(50)")]
		public string HelperMethod
		{
			get
			{
				return this._HelperMethod;
			}
			set
			{
				if ((this._HelperMethod != value))
				{
					this.OnHelperMethodChanging(value);
					this.SendPropertyChanging();
					this._HelperMethod = value;
					this.SendPropertyChanged("HelperMethod");
					this.OnHelperMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L
		{
			get
			{
				return this._HazardJudge_L;
			}
			set
			{
				if ((this._HazardJudge_L != value))
				{
					this.OnHazardJudge_LChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_L = value;
					this.SendPropertyChanged("HazardJudge_L");
					this.OnHazardJudge_LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_E", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_E
		{
			get
			{
				return this._HazardJudge_E;
			}
			set
			{
				if ((this._HazardJudge_E != value))
				{
					this.OnHazardJudge_EChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_E = value;
					this.SendPropertyChanged("HazardJudge_E");
					this.OnHazardJudge_EChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_C", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_C
		{
			get
			{
				return this._HazardJudge_C;
			}
			set
			{
				if ((this._HazardJudge_C != value))
				{
					this.OnHazardJudge_CChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_C = value;
					this.SendPropertyChanged("HazardJudge_C");
					this.OnHazardJudge_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_D", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_D
		{
			get
			{
				return this._HazardJudge_D;
			}
			set
			{
				if ((this._HazardJudge_D != value))
				{
					this.OnHazardJudge_DChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_D = value;
					this.SendPropertyChanged("HazardJudge_D");
					this.OnHazardJudge_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardLevel", DbType="NVarChar(50)")]
		public string HazardLevel
		{
			get
			{
				return this._HazardLevel;
			}
			set
			{
				if ((this._HazardLevel != value))
				{
					this.OnHazardLevelChanging(value);
					this.SendPropertyChanging();
					this._HazardLevel = value;
					this.SendPropertyChanged("HazardLevel");
					this.OnHazardLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(200)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this.OnControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ControlMeasures = value;
					this.SendPropertyChanged("ControlMeasures");
					this.OnControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsResponse", DbType="Bit")]
		public System.Nullable<bool> IsResponse
		{
			get
			{
				return this._IsResponse;
			}
			set
			{
				if ((this._IsResponse != value))
				{
					this.OnIsResponseChanging(value);
					this.SendPropertyChanging();
					this._IsResponse = value;
					this.SendPropertyChanged("IsResponse");
					this.OnIsResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseRecode", DbType="NVarChar(100)")]
		public string ResponseRecode
		{
			get
			{
				return this._ResponseRecode;
			}
			set
			{
				if ((this._ResponseRecode != value))
				{
					this.OnResponseRecodeChanging(value);
					this.SendPropertyChanging();
					this._ResponseRecode = value;
					this.SendPropertyChanged("ResponseRecode");
					this.OnResponseRecodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromptTime", DbType="Int")]
		public System.Nullable<int> PromptTime
		{
			get
			{
				return this._PromptTime;
			}
			set
			{
				if ((this._PromptTime != value))
				{
					this.OnPromptTimeChanging(value);
					this.SendPropertyChanging();
					this._PromptTime = value;
					this.SendPropertyChanged("PromptTime");
					this.OnPromptTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkStage", DbType="NVarChar(2000)")]
		public string WorkStage
		{
			get
			{
				return this._WorkStage;
			}
			set
			{
				if ((this._WorkStage != value))
				{
					this.OnWorkStageChanging(value);
					this.SendPropertyChanging();
					this._WorkStage = value;
					this.SendPropertyChanged("WorkStage");
					this.OnWorkStageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Batch_BatchTrust")]
	public partial class HJGL_Batch_BatchTrust : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrustBatchId;
		
		private string _TrustBatchCode;
		
		private System.Nullable<System.DateTime> _TrustDate;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _UnitWorkId;
		
		private string _DetectionTypeId;
		
		private string _DetectionRateId;
		
		private string _TrustType;
		
		private System.Nullable<bool> _IsAudit;
		
		private System.Nullable<bool> _IsCheck;
		
		private string _TopointBatch;
		
		private string _NDEUuit;
		
		private EntityRef<Base_DetectionRate> _Base_DetectionRate;
		
		private EntityRef<Base_DetectionType> _Base_DetectionType;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrustBatchIdChanging(string value);
    partial void OnTrustBatchIdChanged();
    partial void OnTrustBatchCodeChanging(string value);
    partial void OnTrustBatchCodeChanged();
    partial void OnTrustDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrustDateChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnDetectionTypeIdChanging(string value);
    partial void OnDetectionTypeIdChanged();
    partial void OnDetectionRateIdChanging(string value);
    partial void OnDetectionRateIdChanged();
    partial void OnTrustTypeChanging(string value);
    partial void OnTrustTypeChanged();
    partial void OnIsAuditChanging(System.Nullable<bool> value);
    partial void OnIsAuditChanged();
    partial void OnIsCheckChanging(System.Nullable<bool> value);
    partial void OnIsCheckChanged();
    partial void OnTopointBatchChanging(string value);
    partial void OnTopointBatchChanged();
    partial void OnNDEUuitChanging(string value);
    partial void OnNDEUuitChanged();
    #endregion
		
		public HJGL_Batch_BatchTrust()
		{
			this._Base_DetectionRate = default(EntityRef<Base_DetectionRate>);
			this._Base_DetectionType = default(EntityRef<Base_DetectionType>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrustBatchId
		{
			get
			{
				return this._TrustBatchId;
			}
			set
			{
				if ((this._TrustBatchId != value))
				{
					this.OnTrustBatchIdChanging(value);
					this.SendPropertyChanging();
					this._TrustBatchId = value;
					this.SendPropertyChanged("TrustBatchId");
					this.OnTrustBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchCode", DbType="NVarChar(50)")]
		public string TrustBatchCode
		{
			get
			{
				return this._TrustBatchCode;
			}
			set
			{
				if ((this._TrustBatchCode != value))
				{
					this.OnTrustBatchCodeChanging(value);
					this.SendPropertyChanging();
					this._TrustBatchCode = value;
					this.SendPropertyChanged("TrustBatchCode");
					this.OnTrustBatchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrustDate
		{
			get
			{
				return this._TrustDate;
			}
			set
			{
				if ((this._TrustDate != value))
				{
					this.OnTrustDateChanging(value);
					this.SendPropertyChanging();
					this._TrustDate = value;
					this.SendPropertyChanged("TrustDate");
					this.OnTrustDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					if (this._Base_DetectionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeId = value;
					this.SendPropertyChanged("DetectionTypeId");
					this.OnDetectionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50)")]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					if (this._Base_DetectionRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetectionRateIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionRateId = value;
					this.SendPropertyChanged("DetectionRateId");
					this.OnDetectionRateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustType", DbType="NVarChar(1)")]
		public string TrustType
		{
			get
			{
				return this._TrustType;
			}
			set
			{
				if ((this._TrustType != value))
				{
					this.OnTrustTypeChanging(value);
					this.SendPropertyChanging();
					this._TrustType = value;
					this.SendPropertyChanged("TrustType");
					this.OnTrustTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAudit", DbType="Bit")]
		public System.Nullable<bool> IsAudit
		{
			get
			{
				return this._IsAudit;
			}
			set
			{
				if ((this._IsAudit != value))
				{
					this.OnIsAuditChanging(value);
					this.SendPropertyChanging();
					this._IsAudit = value;
					this.SendPropertyChanged("IsAudit");
					this.OnIsAuditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCheck", DbType="Bit")]
		public System.Nullable<bool> IsCheck
		{
			get
			{
				return this._IsCheck;
			}
			set
			{
				if ((this._IsCheck != value))
				{
					this.OnIsCheckChanging(value);
					this.SendPropertyChanging();
					this._IsCheck = value;
					this.SendPropertyChanged("IsCheck");
					this.OnIsCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopointBatch", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string TopointBatch
		{
			get
			{
				return this._TopointBatch;
			}
			set
			{
				if ((this._TopointBatch != value))
				{
					this.OnTopointBatchChanging(value);
					this.SendPropertyChanging();
					this._TopointBatch = value;
					this.SendPropertyChanged("TopointBatch");
					this.OnTopointBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEUuit", DbType="NVarChar(50)")]
		public string NDEUuit
		{
			get
			{
				return this._NDEUuit;
			}
			set
			{
				if ((this._NDEUuit != value))
				{
					this.OnNDEUuitChanging(value);
					this.SendPropertyChanging();
					this._NDEUuit = value;
					this.SendPropertyChanged("NDEUuit");
					this.OnNDEUuitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrust_Base_DetectionRate", Storage="_Base_DetectionRate", ThisKey="DetectionRateId", OtherKey="DetectionRateId", IsForeignKey=true)]
		public Base_DetectionRate Base_DetectionRate
		{
			get
			{
				return this._Base_DetectionRate.Entity;
			}
			set
			{
				Base_DetectionRate previousValue = this._Base_DetectionRate.Entity;
				if (((previousValue != value) 
							|| (this._Base_DetectionRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_DetectionRate.Entity = null;
						previousValue.HJGL_Batch_BatchTrust.Remove(this);
					}
					this._Base_DetectionRate.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_BatchTrust.Add(this);
						this._DetectionRateId = value.DetectionRateId;
					}
					else
					{
						this._DetectionRateId = default(string);
					}
					this.SendPropertyChanged("Base_DetectionRate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrust_Base_DetectionType", Storage="_Base_DetectionType", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", IsForeignKey=true)]
		public Base_DetectionType Base_DetectionType
		{
			get
			{
				return this._Base_DetectionType.Entity;
			}
			set
			{
				Base_DetectionType previousValue = this._Base_DetectionType.Entity;
				if (((previousValue != value) 
							|| (this._Base_DetectionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_DetectionType.Entity = null;
						previousValue.HJGL_Batch_BatchTrust.Remove(this);
					}
					this._Base_DetectionType.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_BatchTrust.Add(this);
						this._DetectionTypeId = value.DetectionTypeId;
					}
					else
					{
						this._DetectionTypeId = default(string);
					}
					this.SendPropertyChanged("Base_DetectionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrust_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_Batch_BatchTrust.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_BatchTrust.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrust_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_Batch_BatchTrust.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_BatchTrust.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrust_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_Batch_BatchTrust.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_BatchTrust.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Batch_BatchTrustItem")]
	public partial class HJGL_Batch_BatchTrustItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrustBatchItemId;
		
		private string _TrustBatchId;
		
		private string _PointBatchItemId;
		
		private string _RepairRecordId;
		
		private string _WeldJointId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _RepairNum;
		
		private System.Nullable<int> _TrustNum;
		
		private EntityRef<HJGL_Batch_PointBatchItem> _HJGL_Batch_PointBatchItem;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<HJGL_Batch_NDEItem> _HJGL_Batch_NDEItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrustBatchItemIdChanging(string value);
    partial void OnTrustBatchItemIdChanged();
    partial void OnTrustBatchIdChanging(string value);
    partial void OnTrustBatchIdChanged();
    partial void OnPointBatchItemIdChanging(string value);
    partial void OnPointBatchItemIdChanged();
    partial void OnRepairRecordIdChanging(string value);
    partial void OnRepairRecordIdChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnRepairNumChanging(System.Nullable<int> value);
    partial void OnRepairNumChanged();
    partial void OnTrustNumChanging(System.Nullable<int> value);
    partial void OnTrustNumChanged();
    #endregion
		
		public HJGL_Batch_BatchTrustItem()
		{
			this._HJGL_Batch_PointBatchItem = default(EntityRef<HJGL_Batch_PointBatchItem>);
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			this._HJGL_Batch_NDEItem = new EntitySet<HJGL_Batch_NDEItem>(new Action<HJGL_Batch_NDEItem>(this.attach_HJGL_Batch_NDEItem), new Action<HJGL_Batch_NDEItem>(this.detach_HJGL_Batch_NDEItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrustBatchItemId
		{
			get
			{
				return this._TrustBatchItemId;
			}
			set
			{
				if ((this._TrustBatchItemId != value))
				{
					this.OnTrustBatchItemIdChanging(value);
					this.SendPropertyChanging();
					this._TrustBatchItemId = value;
					this.SendPropertyChanged("TrustBatchItemId");
					this.OnTrustBatchItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchId", DbType="NVarChar(50)")]
		public string TrustBatchId
		{
			get
			{
				return this._TrustBatchId;
			}
			set
			{
				if ((this._TrustBatchId != value))
				{
					this.OnTrustBatchIdChanging(value);
					this.SendPropertyChanging();
					this._TrustBatchId = value;
					this.SendPropertyChanged("TrustBatchId");
					this.OnTrustBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchItemId", DbType="NVarChar(50)")]
		public string PointBatchItemId
		{
			get
			{
				return this._PointBatchItemId;
			}
			set
			{
				if ((this._PointBatchItemId != value))
				{
					if (this._HJGL_Batch_PointBatchItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointBatchItemIdChanging(value);
					this.SendPropertyChanging();
					this._PointBatchItemId = value;
					this.SendPropertyChanged("PointBatchItemId");
					this.OnPointBatchItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairRecordId", DbType="NVarChar(50)")]
		public string RepairRecordId
		{
			get
			{
				return this._RepairRecordId;
			}
			set
			{
				if ((this._RepairRecordId != value))
				{
					this.OnRepairRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RepairRecordId = value;
					this.SendPropertyChanged("RepairRecordId");
					this.OnRepairRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairNum", DbType="Int")]
		public System.Nullable<int> RepairNum
		{
			get
			{
				return this._RepairNum;
			}
			set
			{
				if ((this._RepairNum != value))
				{
					this.OnRepairNumChanging(value);
					this.SendPropertyChanging();
					this._RepairNum = value;
					this.SendPropertyChanged("RepairNum");
					this.OnRepairNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustNum", DbType="Int")]
		public System.Nullable<int> TrustNum
		{
			get
			{
				return this._TrustNum;
			}
			set
			{
				if ((this._TrustNum != value))
				{
					this.OnTrustNumChanging(value);
					this.SendPropertyChanging();
					this._TrustNum = value;
					this.SendPropertyChanged("TrustNum");
					this.OnTrustNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrustItem_HJGL_Batch_PointBatchItem", Storage="_HJGL_Batch_PointBatchItem", ThisKey="PointBatchItemId", OtherKey="PointBatchItemId", IsForeignKey=true)]
		public HJGL_Batch_PointBatchItem HJGL_Batch_PointBatchItem
		{
			get
			{
				return this._HJGL_Batch_PointBatchItem.Entity;
			}
			set
			{
				HJGL_Batch_PointBatchItem previousValue = this._HJGL_Batch_PointBatchItem.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Batch_PointBatchItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Batch_PointBatchItem.Entity = null;
						previousValue.HJGL_Batch_BatchTrustItem.Remove(this);
					}
					this._HJGL_Batch_PointBatchItem.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_BatchTrustItem.Add(this);
						this._PointBatchItemId = value.PointBatchItemId;
					}
					else
					{
						this._PointBatchItemId = default(string);
					}
					this.SendPropertyChanged("HJGL_Batch_PointBatchItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrustItem_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_Batch_BatchTrustItem.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_BatchTrustItem.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_NDEItem_HJGL_Batch_BatchTrustItem", Storage="_HJGL_Batch_NDEItem", ThisKey="TrustBatchItemId", OtherKey="TrustBatchItemId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_NDEItem> HJGL_Batch_NDEItem
		{
			get
			{
				return this._HJGL_Batch_NDEItem;
			}
			set
			{
				this._HJGL_Batch_NDEItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_NDEItem(HJGL_Batch_NDEItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_BatchTrustItem = this;
		}
		
		private void detach_HJGL_Batch_NDEItem(HJGL_Batch_NDEItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_BatchTrustItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Batch_NDE")]
	public partial class HJGL_Batch_NDE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NDEID;
		
		private string _TrustBatchId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _UnitWorkId;
		
		private string _NDEUnit;
		
		private string _NDECode;
		
		private System.Nullable<System.DateTime> _NDEDate;
		
		private string _NDEMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _Remark;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Unit> _NDEUnitBase_Unit;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
		private EntitySet<HJGL_Batch_NDEItem> _HJGL_Batch_NDEItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNDEIDChanging(string value);
    partial void OnNDEIDChanged();
    partial void OnTrustBatchIdChanging(string value);
    partial void OnTrustBatchIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnNDEUnitChanging(string value);
    partial void OnNDEUnitChanged();
    partial void OnNDECodeChanging(string value);
    partial void OnNDECodeChanged();
    partial void OnNDEDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNDEDateChanged();
    partial void OnNDEManChanging(string value);
    partial void OnNDEManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_Batch_NDE()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._NDEUnitBase_Unit = default(EntityRef<Base_Unit>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			this._HJGL_Batch_NDEItem = new EntitySet<HJGL_Batch_NDEItem>(new Action<HJGL_Batch_NDEItem>(this.attach_HJGL_Batch_NDEItem), new Action<HJGL_Batch_NDEItem>(this.detach_HJGL_Batch_NDEItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NDEID
		{
			get
			{
				return this._NDEID;
			}
			set
			{
				if ((this._NDEID != value))
				{
					this.OnNDEIDChanging(value);
					this.SendPropertyChanging();
					this._NDEID = value;
					this.SendPropertyChanged("NDEID");
					this.OnNDEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchId", DbType="NVarChar(50)")]
		public string TrustBatchId
		{
			get
			{
				return this._TrustBatchId;
			}
			set
			{
				if ((this._TrustBatchId != value))
				{
					this.OnTrustBatchIdChanging(value);
					this.SendPropertyChanging();
					this._TrustBatchId = value;
					this.SendPropertyChanged("TrustBatchId");
					this.OnTrustBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEUnit", DbType="NVarChar(50)")]
		public string NDEUnit
		{
			get
			{
				return this._NDEUnit;
			}
			set
			{
				if ((this._NDEUnit != value))
				{
					if (this._NDEUnitBase_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDEUnitChanging(value);
					this.SendPropertyChanging();
					this._NDEUnit = value;
					this.SendPropertyChanged("NDEUnit");
					this.OnNDEUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDECode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NDECode
		{
			get
			{
				return this._NDECode;
			}
			set
			{
				if ((this._NDECode != value))
				{
					this.OnNDECodeChanging(value);
					this.SendPropertyChanging();
					this._NDECode = value;
					this.SendPropertyChanged("NDECode");
					this.OnNDECodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NDEDate
		{
			get
			{
				return this._NDEDate;
			}
			set
			{
				if ((this._NDEDate != value))
				{
					this.OnNDEDateChanging(value);
					this.SendPropertyChanging();
					this._NDEDate = value;
					this.SendPropertyChanged("NDEDate");
					this.OnNDEDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEMan", DbType="VarChar(50)")]
		public string NDEMan
		{
			get
			{
				return this._NDEMan;
			}
			set
			{
				if ((this._NDEMan != value))
				{
					this.OnNDEManChanging(value);
					this.SendPropertyChanging();
					this._NDEMan = value;
					this.SendPropertyChanged("NDEMan");
					this.OnNDEManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_NDECheck_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_Batch_NDE.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_NDE.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_NDECheck_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_Batch_NDE.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_NDE.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_NDECheck_CheckUnit_Base_Unit", Storage="_NDEUnitBase_Unit", ThisKey="NDEUnit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit NDEUnitBase_Unit
		{
			get
			{
				return this._NDEUnitBase_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._NDEUnitBase_Unit.Entity;
				if (((previousValue != value) 
							|| (this._NDEUnitBase_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NDEUnitBase_Unit.Entity = null;
						previousValue.Unit.Remove(this);
					}
					this._NDEUnitBase_Unit.Entity = value;
					if ((value != null))
					{
						value.Unit.Add(this);
						this._NDEUnit = value.UnitId;
					}
					else
					{
						this._NDEUnit = default(string);
					}
					this.SendPropertyChanged("NDEUnitBase_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_NDE_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_Batch_NDE.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_NDE.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_NDEItem_HJGL_Batch_NDE", Storage="_HJGL_Batch_NDEItem", ThisKey="NDEID", OtherKey="NDEID", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_NDEItem> HJGL_Batch_NDEItem
		{
			get
			{
				return this._HJGL_Batch_NDEItem;
			}
			set
			{
				this._HJGL_Batch_NDEItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_NDEItem(HJGL_Batch_NDEItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_NDE = this;
		}
		
		private void detach_HJGL_Batch_NDEItem(HJGL_Batch_NDEItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_NDE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Batch_NDEItem")]
	public partial class HJGL_Batch_NDEItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NDEItemID;
		
		private string _NDEID;
		
		private string _TrustBatchItemId;
		
		private string _DetectionTypeId;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private string _RepairLocation;
		
		private System.Nullable<int> _TotalFilm;
		
		private System.Nullable<int> _PassFilm;
		
		private string _CheckResult;
		
		private string _NDEReportNo;
		
		private System.Nullable<System.DateTime> _FilmDate;
		
		private System.Nullable<System.DateTime> _ReportDate;
		
		private System.Nullable<System.DateTime> _SubmitDate;
		
		private string _CheckDefects;
		
		private string _JudgeGrade;
		
		private string _Remark;
		
		private EntityRef<HJGL_Batch_BatchTrustItem> _HJGL_Batch_BatchTrustItem;
		
		private EntityRef<HJGL_Batch_NDE> _HJGL_Batch_NDE;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNDEItemIDChanging(string value);
    partial void OnNDEItemIDChanged();
    partial void OnNDEIDChanging(string value);
    partial void OnNDEIDChanged();
    partial void OnTrustBatchItemIdChanging(string value);
    partial void OnTrustBatchItemIdChanged();
    partial void OnDetectionTypeIdChanging(string value);
    partial void OnDetectionTypeIdChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    partial void OnRepairLocationChanging(string value);
    partial void OnRepairLocationChanged();
    partial void OnTotalFilmChanging(System.Nullable<int> value);
    partial void OnTotalFilmChanged();
    partial void OnPassFilmChanging(System.Nullable<int> value);
    partial void OnPassFilmChanged();
    partial void OnCheckResultChanging(string value);
    partial void OnCheckResultChanged();
    partial void OnNDEReportNoChanging(string value);
    partial void OnNDEReportNoChanged();
    partial void OnFilmDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFilmDateChanged();
    partial void OnReportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReportDateChanged();
    partial void OnSubmitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmitDateChanged();
    partial void OnCheckDefectsChanging(string value);
    partial void OnCheckDefectsChanged();
    partial void OnJudgeGradeChanging(string value);
    partial void OnJudgeGradeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_Batch_NDEItem()
		{
			this._HJGL_Batch_BatchTrustItem = default(EntityRef<HJGL_Batch_BatchTrustItem>);
			this._HJGL_Batch_NDE = default(EntityRef<HJGL_Batch_NDE>);
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEItemID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NDEItemID
		{
			get
			{
				return this._NDEItemID;
			}
			set
			{
				if ((this._NDEItemID != value))
				{
					this.OnNDEItemIDChanging(value);
					this.SendPropertyChanging();
					this._NDEItemID = value;
					this.SendPropertyChanged("NDEItemID");
					this.OnNDEItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NDEID
		{
			get
			{
				return this._NDEID;
			}
			set
			{
				if ((this._NDEID != value))
				{
					if (this._HJGL_Batch_NDE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDEIDChanging(value);
					this.SendPropertyChanging();
					this._NDEID = value;
					this.SendPropertyChanged("NDEID");
					this.OnNDEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchItemId", DbType="NVarChar(50)")]
		public string TrustBatchItemId
		{
			get
			{
				return this._TrustBatchItemId;
			}
			set
			{
				if ((this._TrustBatchItemId != value))
				{
					if (this._HJGL_Batch_BatchTrustItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrustBatchItemIdChanging(value);
					this.SendPropertyChanging();
					this._TrustBatchItemId = value;
					this.SendPropertyChanged("TrustBatchItemId");
					this.OnTrustBatchItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					this.OnDetectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeId = value;
					this.SendPropertyChanged("DetectionTypeId");
					this.OnDetectionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairLocation", DbType="NVarChar(50)")]
		public string RepairLocation
		{
			get
			{
				return this._RepairLocation;
			}
			set
			{
				if ((this._RepairLocation != value))
				{
					this.OnRepairLocationChanging(value);
					this.SendPropertyChanging();
					this._RepairLocation = value;
					this.SendPropertyChanged("RepairLocation");
					this.OnRepairLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFilm", DbType="Int")]
		public System.Nullable<int> TotalFilm
		{
			get
			{
				return this._TotalFilm;
			}
			set
			{
				if ((this._TotalFilm != value))
				{
					this.OnTotalFilmChanging(value);
					this.SendPropertyChanging();
					this._TotalFilm = value;
					this.SendPropertyChanged("TotalFilm");
					this.OnTotalFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassFilm", DbType="Int")]
		public System.Nullable<int> PassFilm
		{
			get
			{
				return this._PassFilm;
			}
			set
			{
				if ((this._PassFilm != value))
				{
					this.OnPassFilmChanging(value);
					this.SendPropertyChanging();
					this._PassFilm = value;
					this.SendPropertyChanged("PassFilm");
					this.OnPassFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckResult", DbType="VarChar(20)")]
		public string CheckResult
		{
			get
			{
				return this._CheckResult;
			}
			set
			{
				if ((this._CheckResult != value))
				{
					this.OnCheckResultChanging(value);
					this.SendPropertyChanging();
					this._CheckResult = value;
					this.SendPropertyChanged("CheckResult");
					this.OnCheckResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEReportNo", DbType="VarChar(30)")]
		public string NDEReportNo
		{
			get
			{
				return this._NDEReportNo;
			}
			set
			{
				if ((this._NDEReportNo != value))
				{
					this.OnNDEReportNoChanging(value);
					this.SendPropertyChanging();
					this._NDEReportNo = value;
					this.SendPropertyChanged("NDEReportNo");
					this.OnNDEReportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FilmDate
		{
			get
			{
				return this._FilmDate;
			}
			set
			{
				if ((this._FilmDate != value))
				{
					this.OnFilmDateChanging(value);
					this.SendPropertyChanging();
					this._FilmDate = value;
					this.SendPropertyChanged("FilmDate");
					this.OnFilmDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReportDate
		{
			get
			{
				return this._ReportDate;
			}
			set
			{
				if ((this._ReportDate != value))
				{
					this.OnReportDateChanging(value);
					this.SendPropertyChanging();
					this._ReportDate = value;
					this.SendPropertyChanged("ReportDate");
					this.OnReportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubmitDate
		{
			get
			{
				return this._SubmitDate;
			}
			set
			{
				if ((this._SubmitDate != value))
				{
					this.OnSubmitDateChanging(value);
					this.SendPropertyChanging();
					this._SubmitDate = value;
					this.SendPropertyChanged("SubmitDate");
					this.OnSubmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDefects", DbType="NVarChar(100)")]
		public string CheckDefects
		{
			get
			{
				return this._CheckDefects;
			}
			set
			{
				if ((this._CheckDefects != value))
				{
					this.OnCheckDefectsChanging(value);
					this.SendPropertyChanging();
					this._CheckDefects = value;
					this.SendPropertyChanged("CheckDefects");
					this.OnCheckDefectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JudgeGrade", DbType="NVarChar(10)")]
		public string JudgeGrade
		{
			get
			{
				return this._JudgeGrade;
			}
			set
			{
				if ((this._JudgeGrade != value))
				{
					this.OnJudgeGradeChanging(value);
					this.SendPropertyChanging();
					this._JudgeGrade = value;
					this.SendPropertyChanged("JudgeGrade");
					this.OnJudgeGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_NDEItem_HJGL_Batch_BatchTrustItem", Storage="_HJGL_Batch_BatchTrustItem", ThisKey="TrustBatchItemId", OtherKey="TrustBatchItemId", IsForeignKey=true)]
		public HJGL_Batch_BatchTrustItem HJGL_Batch_BatchTrustItem
		{
			get
			{
				return this._HJGL_Batch_BatchTrustItem.Entity;
			}
			set
			{
				HJGL_Batch_BatchTrustItem previousValue = this._HJGL_Batch_BatchTrustItem.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Batch_BatchTrustItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Batch_BatchTrustItem.Entity = null;
						previousValue.HJGL_Batch_NDEItem.Remove(this);
					}
					this._HJGL_Batch_BatchTrustItem.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_NDEItem.Add(this);
						this._TrustBatchItemId = value.TrustBatchItemId;
					}
					else
					{
						this._TrustBatchItemId = default(string);
					}
					this.SendPropertyChanged("HJGL_Batch_BatchTrustItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_NDEItem_HJGL_Batch_NDE", Storage="_HJGL_Batch_NDE", ThisKey="NDEID", OtherKey="NDEID", IsForeignKey=true)]
		public HJGL_Batch_NDE HJGL_Batch_NDE
		{
			get
			{
				return this._HJGL_Batch_NDE.Entity;
			}
			set
			{
				HJGL_Batch_NDE previousValue = this._HJGL_Batch_NDE.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Batch_NDE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Batch_NDE.Entity = null;
						previousValue.HJGL_Batch_NDEItem.Remove(this);
					}
					this._HJGL_Batch_NDE.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_NDEItem.Add(this);
						this._NDEID = value.NDEID;
					}
					else
					{
						this._NDEID = default(string);
					}
					this.SendPropertyChanged("HJGL_Batch_NDE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_HJGL_Batch_NDEItem", Storage="_HJGL_RepairRecord", ThisKey="NDEItemID", OtherKey="NDEItemID", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_NDEItem = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_NDEItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Batch_PointBatch")]
	public partial class HJGL_Batch_PointBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PointBatchId;
		
		private string _PointBatchCode;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _UnitWorkId;
		
		private string _DetectionTypeId;
		
		private string _DetectionRateId;
		
		private string _WelderId;
		
		private string _PipelineId;
		
		private string _PipingClassId;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _BatchCondition;
		
		private EntityRef<Base_DetectionRate> _Base_DetectionRate;
		
		private EntityRef<Base_DetectionType> _Base_DetectionType;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_PipingClass> _Base_PipingClass;
		
		private EntityRef<HJGL_Pipeline> _HJGL_Pipeline;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
		private EntitySet<HJGL_Batch_PointBatchItem> _HJGL_Batch_PointBatchItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPointBatchIdChanging(string value);
    partial void OnPointBatchIdChanged();
    partial void OnPointBatchCodeChanging(string value);
    partial void OnPointBatchCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnDetectionTypeIdChanging(string value);
    partial void OnDetectionTypeIdChanged();
    partial void OnDetectionRateIdChanging(string value);
    partial void OnDetectionRateIdChanged();
    partial void OnWelderIdChanging(string value);
    partial void OnWelderIdChanged();
    partial void OnPipelineIdChanging(string value);
    partial void OnPipelineIdChanged();
    partial void OnPipingClassIdChanging(string value);
    partial void OnPipingClassIdChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnBatchConditionChanging(string value);
    partial void OnBatchConditionChanged();
    #endregion
		
		public HJGL_Batch_PointBatch()
		{
			this._Base_DetectionRate = default(EntityRef<Base_DetectionRate>);
			this._Base_DetectionType = default(EntityRef<Base_DetectionType>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_PipingClass = default(EntityRef<Base_PipingClass>);
			this._HJGL_Pipeline = default(EntityRef<HJGL_Pipeline>);
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			this._HJGL_Batch_PointBatchItem = new EntitySet<HJGL_Batch_PointBatchItem>(new Action<HJGL_Batch_PointBatchItem>(this.attach_HJGL_Batch_PointBatchItem), new Action<HJGL_Batch_PointBatchItem>(this.detach_HJGL_Batch_PointBatchItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PointBatchId
		{
			get
			{
				return this._PointBatchId;
			}
			set
			{
				if ((this._PointBatchId != value))
				{
					this.OnPointBatchIdChanging(value);
					this.SendPropertyChanging();
					this._PointBatchId = value;
					this.SendPropertyChanged("PointBatchId");
					this.OnPointBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchCode", DbType="NVarChar(100)")]
		public string PointBatchCode
		{
			get
			{
				return this._PointBatchCode;
			}
			set
			{
				if ((this._PointBatchCode != value))
				{
					this.OnPointBatchCodeChanging(value);
					this.SendPropertyChanging();
					this._PointBatchCode = value;
					this.SendPropertyChanged("PointBatchCode");
					this.OnPointBatchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					if (this._Base_DetectionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeId = value;
					this.SendPropertyChanged("DetectionTypeId");
					this.OnDetectionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50)")]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					if (this._Base_DetectionRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetectionRateIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionRateId = value;
					this.SendPropertyChanged("DetectionRateId");
					this.OnDetectionRateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderId", DbType="NVarChar(50)")]
		public string WelderId
		{
			get
			{
				return this._WelderId;
			}
			set
			{
				if ((this._WelderId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWelderIdChanging(value);
					this.SendPropertyChanging();
					this._WelderId = value;
					this.SendPropertyChanged("WelderId");
					this.OnWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					if (this._HJGL_Pipeline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipelineIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineId = value;
					this.SendPropertyChanged("PipelineId");
					this.OnPipelineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassId", DbType="NVarChar(50)")]
		public string PipingClassId
		{
			get
			{
				return this._PipingClassId;
			}
			set
			{
				if ((this._PipingClassId != value))
				{
					if (this._Base_PipingClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipingClassIdChanging(value);
					this.SendPropertyChanging();
					this._PipingClassId = value;
					this.SendPropertyChanged("PipingClassId");
					this.OnPipingClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchCondition", DbType="NVarChar(50)")]
		public string BatchCondition
		{
			get
			{
				return this._BatchCondition;
			}
			set
			{
				if ((this._BatchCondition != value))
				{
					this.OnBatchConditionChanging(value);
					this.SendPropertyChanging();
					this._BatchCondition = value;
					this.SendPropertyChanged("BatchCondition");
					this.OnBatchConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Base_DetectionRate", Storage="_Base_DetectionRate", ThisKey="DetectionRateId", OtherKey="DetectionRateId", IsForeignKey=true)]
		public Base_DetectionRate Base_DetectionRate
		{
			get
			{
				return this._Base_DetectionRate.Entity;
			}
			set
			{
				Base_DetectionRate previousValue = this._Base_DetectionRate.Entity;
				if (((previousValue != value) 
							|| (this._Base_DetectionRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_DetectionRate.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._Base_DetectionRate.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._DetectionRateId = value.DetectionRateId;
					}
					else
					{
						this._DetectionRateId = default(string);
					}
					this.SendPropertyChanged("Base_DetectionRate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Base_DetectionType", Storage="_Base_DetectionType", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", IsForeignKey=true)]
		public Base_DetectionType Base_DetectionType
		{
			get
			{
				return this._Base_DetectionType.Entity;
			}
			set
			{
				Base_DetectionType previousValue = this._Base_DetectionType.Entity;
				if (((previousValue != value) 
							|| (this._Base_DetectionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_DetectionType.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._Base_DetectionType.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._DetectionTypeId = value.DetectionTypeId;
					}
					else
					{
						this._DetectionTypeId = default(string);
					}
					this.SendPropertyChanged("Base_DetectionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Batch_PointBatch_Batch_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_Base_PipingClass", Storage="_Base_PipingClass", ThisKey="PipingClassId", OtherKey="PipingClassId", IsForeignKey=true)]
		public Base_PipingClass Base_PipingClass
		{
			get
			{
				return this._Base_PipingClass.Entity;
			}
			set
			{
				Base_PipingClass previousValue = this._Base_PipingClass.Entity;
				if (((previousValue != value) 
							|| (this._Base_PipingClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_PipingClass.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._Base_PipingClass.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._PipingClassId = value.PipingClassId;
					}
					else
					{
						this._PipingClassId = default(string);
					}
					this.SendPropertyChanged("Base_PipingClass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_HJGL_Pipeline", Storage="_HJGL_Pipeline", ThisKey="PipelineId", OtherKey="PipelineId", IsForeignKey=true)]
		public HJGL_Pipeline HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline.Entity;
			}
			set
			{
				HJGL_Pipeline previousValue = this._HJGL_Pipeline.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Pipeline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Pipeline.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._HJGL_Pipeline.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._PipelineId = value.PipelineId;
					}
					else
					{
						this._PipelineId = default(string);
					}
					this.SendPropertyChanged("HJGL_Pipeline");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="WelderId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._WelderId = value.PersonId;
					}
					else
					{
						this._WelderId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_Batch_PointBatch.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatch.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatchItem_HJGL_Batch_PointBatch", Storage="_HJGL_Batch_PointBatchItem", ThisKey="PointBatchId", OtherKey="PointBatchId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatchItem> HJGL_Batch_PointBatchItem
		{
			get
			{
				return this._HJGL_Batch_PointBatchItem;
			}
			set
			{
				this._HJGL_Batch_PointBatchItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_PointBatch = this;
		}
		
		private void detach_HJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_PointBatch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Batch_PointBatchItem")]
	public partial class HJGL_Batch_PointBatchItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PointBatchItemId;
		
		private string _PointBatchId;
		
		private string _WeldJointId;
		
		private string _PointState;
		
		private System.Nullable<System.DateTime> _PointDate;
		
		private System.Nullable<System.DateTime> _WeldingDate;
		
		private System.Nullable<System.DateTime> _RepairDate;
		
		private string _RepairRecordId;
		
		private System.Nullable<System.DateTime> _CutDate;
		
		private System.Nullable<System.DateTime> _CreatDate;
		
		private System.Nullable<bool> _IsBuildTrust;
		
		private System.Nullable<bool> _IsWelderFirst;
		
		private System.Nullable<bool> _IsPipelineFirst;
		
		private string _ToPointBatchItemId;
		
		private System.Nullable<bool> _IsAudit;
		
		private string _Remark;
		
		private EntitySet<HJGL_Batch_BatchTrustItem> _HJGL_Batch_BatchTrustItem;
		
		private EntityRef<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPointBatchItemIdChanging(string value);
    partial void OnPointBatchItemIdChanged();
    partial void OnPointBatchIdChanging(string value);
    partial void OnPointBatchIdChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnPointStateChanging(string value);
    partial void OnPointStateChanged();
    partial void OnPointDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPointDateChanged();
    partial void OnWeldingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWeldingDateChanged();
    partial void OnRepairDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRepairDateChanged();
    partial void OnRepairRecordIdChanging(string value);
    partial void OnRepairRecordIdChanged();
    partial void OnCutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCutDateChanged();
    partial void OnCreatDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatDateChanged();
    partial void OnIsBuildTrustChanging(System.Nullable<bool> value);
    partial void OnIsBuildTrustChanged();
    partial void OnIsWelderFirstChanging(System.Nullable<bool> value);
    partial void OnIsWelderFirstChanged();
    partial void OnIsPipelineFirstChanging(System.Nullable<bool> value);
    partial void OnIsPipelineFirstChanged();
    partial void OnToPointBatchItemIdChanging(string value);
    partial void OnToPointBatchItemIdChanged();
    partial void OnIsAuditChanging(System.Nullable<bool> value);
    partial void OnIsAuditChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_Batch_PointBatchItem()
		{
			this._HJGL_Batch_BatchTrustItem = new EntitySet<HJGL_Batch_BatchTrustItem>(new Action<HJGL_Batch_BatchTrustItem>(this.attach_HJGL_Batch_BatchTrustItem), new Action<HJGL_Batch_BatchTrustItem>(this.detach_HJGL_Batch_BatchTrustItem));
			this._HJGL_Batch_PointBatch = default(EntityRef<HJGL_Batch_PointBatch>);
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PointBatchItemId
		{
			get
			{
				return this._PointBatchItemId;
			}
			set
			{
				if ((this._PointBatchItemId != value))
				{
					this.OnPointBatchItemIdChanging(value);
					this.SendPropertyChanging();
					this._PointBatchItemId = value;
					this.SendPropertyChanged("PointBatchItemId");
					this.OnPointBatchItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchId", DbType="NVarChar(50)")]
		public string PointBatchId
		{
			get
			{
				return this._PointBatchId;
			}
			set
			{
				if ((this._PointBatchId != value))
				{
					if (this._HJGL_Batch_PointBatch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointBatchIdChanging(value);
					this.SendPropertyChanging();
					this._PointBatchId = value;
					this.SendPropertyChanged("PointBatchId");
					this.OnPointBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointState", DbType="Char(1)")]
		public string PointState
		{
			get
			{
				return this._PointState;
			}
			set
			{
				if ((this._PointState != value))
				{
					this.OnPointStateChanging(value);
					this.SendPropertyChanging();
					this._PointState = value;
					this.SendPropertyChanged("PointState");
					this.OnPointStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PointDate
		{
			get
			{
				return this._PointDate;
			}
			set
			{
				if ((this._PointDate != value))
				{
					this.OnPointDateChanging(value);
					this.SendPropertyChanging();
					this._PointDate = value;
					this.SendPropertyChanged("PointDate");
					this.OnPointDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WeldingDate
		{
			get
			{
				return this._WeldingDate;
			}
			set
			{
				if ((this._WeldingDate != value))
				{
					this.OnWeldingDateChanging(value);
					this.SendPropertyChanging();
					this._WeldingDate = value;
					this.SendPropertyChanged("WeldingDate");
					this.OnWeldingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RepairDate
		{
			get
			{
				return this._RepairDate;
			}
			set
			{
				if ((this._RepairDate != value))
				{
					this.OnRepairDateChanging(value);
					this.SendPropertyChanging();
					this._RepairDate = value;
					this.SendPropertyChanged("RepairDate");
					this.OnRepairDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairRecordId", DbType="NVarChar(50)")]
		public string RepairRecordId
		{
			get
			{
				return this._RepairRecordId;
			}
			set
			{
				if ((this._RepairRecordId != value))
				{
					this.OnRepairRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RepairRecordId = value;
					this.SendPropertyChanged("RepairRecordId");
					this.OnRepairRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CutDate
		{
			get
			{
				return this._CutDate;
			}
			set
			{
				if ((this._CutDate != value))
				{
					this.OnCutDateChanging(value);
					this.SendPropertyChanging();
					this._CutDate = value;
					this.SendPropertyChanged("CutDate");
					this.OnCutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatDate
		{
			get
			{
				return this._CreatDate;
			}
			set
			{
				if ((this._CreatDate != value))
				{
					this.OnCreatDateChanging(value);
					this.SendPropertyChanging();
					this._CreatDate = value;
					this.SendPropertyChanged("CreatDate");
					this.OnCreatDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuildTrust", DbType="Bit")]
		public System.Nullable<bool> IsBuildTrust
		{
			get
			{
				return this._IsBuildTrust;
			}
			set
			{
				if ((this._IsBuildTrust != value))
				{
					this.OnIsBuildTrustChanging(value);
					this.SendPropertyChanging();
					this._IsBuildTrust = value;
					this.SendPropertyChanged("IsBuildTrust");
					this.OnIsBuildTrustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWelderFirst", DbType="Bit")]
		public System.Nullable<bool> IsWelderFirst
		{
			get
			{
				return this._IsWelderFirst;
			}
			set
			{
				if ((this._IsWelderFirst != value))
				{
					this.OnIsWelderFirstChanging(value);
					this.SendPropertyChanging();
					this._IsWelderFirst = value;
					this.SendPropertyChanged("IsWelderFirst");
					this.OnIsWelderFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPipelineFirst", DbType="Bit")]
		public System.Nullable<bool> IsPipelineFirst
		{
			get
			{
				return this._IsPipelineFirst;
			}
			set
			{
				if ((this._IsPipelineFirst != value))
				{
					this.OnIsPipelineFirstChanging(value);
					this.SendPropertyChanging();
					this._IsPipelineFirst = value;
					this.SendPropertyChanged("IsPipelineFirst");
					this.OnIsPipelineFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPointBatchItemId", DbType="NVarChar(50)")]
		public string ToPointBatchItemId
		{
			get
			{
				return this._ToPointBatchItemId;
			}
			set
			{
				if ((this._ToPointBatchItemId != value))
				{
					this.OnToPointBatchItemIdChanging(value);
					this.SendPropertyChanging();
					this._ToPointBatchItemId = value;
					this.SendPropertyChanged("ToPointBatchItemId");
					this.OnToPointBatchItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAudit", DbType="Bit")]
		public System.Nullable<bool> IsAudit
		{
			get
			{
				return this._IsAudit;
			}
			set
			{
				if ((this._IsAudit != value))
				{
					this.OnIsAuditChanging(value);
					this.SendPropertyChanging();
					this._IsAudit = value;
					this.SendPropertyChanged("IsAudit");
					this.OnIsAuditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(150)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrustItem_HJGL_Batch_PointBatchItem", Storage="_HJGL_Batch_BatchTrustItem", ThisKey="PointBatchItemId", OtherKey="PointBatchItemId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_BatchTrustItem> HJGL_Batch_BatchTrustItem
		{
			get
			{
				return this._HJGL_Batch_BatchTrustItem;
			}
			set
			{
				this._HJGL_Batch_BatchTrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatchItem_HJGL_Batch_PointBatch", Storage="_HJGL_Batch_PointBatch", ThisKey="PointBatchId", OtherKey="PointBatchId", IsForeignKey=true)]
		public HJGL_Batch_PointBatch HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch.Entity;
			}
			set
			{
				HJGL_Batch_PointBatch previousValue = this._HJGL_Batch_PointBatch.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Batch_PointBatch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Batch_PointBatch.Entity = null;
						previousValue.HJGL_Batch_PointBatchItem.Remove(this);
					}
					this._HJGL_Batch_PointBatch.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatchItem.Add(this);
						this._PointBatchId = value.PointBatchId;
					}
					else
					{
						this._PointBatchId = default(string);
					}
					this.SendPropertyChanged("HJGL_Batch_PointBatch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatchItem_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_Batch_PointBatchItem.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_Batch_PointBatchItem.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_PointBatchItem = this;
		}
		
		private void detach_HJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Batch_PointBatchItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Hard_Report")]
	public partial class HJGL_Hard_Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HardReportId;
		
		private string _HardTrustItemID;
		
		private string _WeldJointId;
		
		private string _HardReportNo;
		
		private string _TestingPointNo;
		
		private System.Nullable<int> _HardNessValue1;
		
		private System.Nullable<int> _HardNessValue2;
		
		private System.Nullable<int> _HardNessValue3;
		
		private string _Remark;
		
		private EntityRef<HJGL_Hard_TrustItem> _HJGL_Hard_TrustItem;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHardReportIdChanging(string value);
    partial void OnHardReportIdChanged();
    partial void OnHardTrustItemIDChanging(string value);
    partial void OnHardTrustItemIDChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnHardReportNoChanging(string value);
    partial void OnHardReportNoChanged();
    partial void OnTestingPointNoChanging(string value);
    partial void OnTestingPointNoChanged();
    partial void OnHardNessValue1Changing(System.Nullable<int> value);
    partial void OnHardNessValue1Changed();
    partial void OnHardNessValue2Changing(System.Nullable<int> value);
    partial void OnHardNessValue2Changed();
    partial void OnHardNessValue3Changing(System.Nullable<int> value);
    partial void OnHardNessValue3Changed();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_Hard_Report()
		{
			this._HJGL_Hard_TrustItem = default(EntityRef<HJGL_Hard_TrustItem>);
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardReportId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HardReportId
		{
			get
			{
				return this._HardReportId;
			}
			set
			{
				if ((this._HardReportId != value))
				{
					this.OnHardReportIdChanging(value);
					this.SendPropertyChanging();
					this._HardReportId = value;
					this.SendPropertyChanged("HardReportId");
					this.OnHardReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustItemID", DbType="NVarChar(50)")]
		public string HardTrustItemID
		{
			get
			{
				return this._HardTrustItemID;
			}
			set
			{
				if ((this._HardTrustItemID != value))
				{
					if (this._HJGL_Hard_TrustItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHardTrustItemIDChanging(value);
					this.SendPropertyChanging();
					this._HardTrustItemID = value;
					this.SendPropertyChanged("HardTrustItemID");
					this.OnHardTrustItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardReportNo", DbType="NChar(10)")]
		public string HardReportNo
		{
			get
			{
				return this._HardReportNo;
			}
			set
			{
				if ((this._HardReportNo != value))
				{
					this.OnHardReportNoChanging(value);
					this.SendPropertyChanging();
					this._HardReportNo = value;
					this.SendPropertyChanged("HardReportNo");
					this.OnHardReportNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingPointNo", DbType="NVarChar(20)")]
		public string TestingPointNo
		{
			get
			{
				return this._TestingPointNo;
			}
			set
			{
				if ((this._TestingPointNo != value))
				{
					this.OnTestingPointNoChanging(value);
					this.SendPropertyChanging();
					this._TestingPointNo = value;
					this.SendPropertyChanged("TestingPointNo");
					this.OnTestingPointNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardNessValue1", DbType="Int")]
		public System.Nullable<int> HardNessValue1
		{
			get
			{
				return this._HardNessValue1;
			}
			set
			{
				if ((this._HardNessValue1 != value))
				{
					this.OnHardNessValue1Changing(value);
					this.SendPropertyChanging();
					this._HardNessValue1 = value;
					this.SendPropertyChanged("HardNessValue1");
					this.OnHardNessValue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardNessValue2", DbType="Int")]
		public System.Nullable<int> HardNessValue2
		{
			get
			{
				return this._HardNessValue2;
			}
			set
			{
				if ((this._HardNessValue2 != value))
				{
					this.OnHardNessValue2Changing(value);
					this.SendPropertyChanging();
					this._HardNessValue2 = value;
					this.SendPropertyChanged("HardNessValue2");
					this.OnHardNessValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardNessValue3", DbType="Int")]
		public System.Nullable<int> HardNessValue3
		{
			get
			{
				return this._HardNessValue3;
			}
			set
			{
				if ((this._HardNessValue3 != value))
				{
					this.OnHardNessValue3Changing(value);
					this.SendPropertyChanging();
					this._HardNessValue3 = value;
					this.SendPropertyChanged("HardNessValue3");
					this.OnHardNessValue3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Report_HJGL_Hard_TrustItem", Storage="_HJGL_Hard_TrustItem", ThisKey="HardTrustItemID", OtherKey="HardTrustItemID", IsForeignKey=true)]
		public HJGL_Hard_TrustItem HJGL_Hard_TrustItem
		{
			get
			{
				return this._HJGL_Hard_TrustItem.Entity;
			}
			set
			{
				HJGL_Hard_TrustItem previousValue = this._HJGL_Hard_TrustItem.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Hard_TrustItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Hard_TrustItem.Entity = null;
						previousValue.HJGL_Hard_Report.Remove(this);
					}
					this._HJGL_Hard_TrustItem.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_Report.Add(this);
						this._HardTrustItemID = value.HardTrustItemID;
					}
					else
					{
						this._HardTrustItemID = default(string);
					}
					this.SendPropertyChanged("HJGL_Hard_TrustItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Report_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_Hard_Report.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_Report.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Hard_Trust")]
	public partial class HJGL_Hard_Trust : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HardTrustID;
		
		private string _HardTrustNo;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private System.Nullable<System.DateTime> _HardTrustDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _HardnessRate;
		
		private string _HardnessMethod;
		
		private string _CheckUnit;
		
		private string _HardTrustUnit;
		
		private string _DetectionTime;
		
		private string _Sendee;
		
		private string _Standards;
		
		private string _InspectionNum;
		
		private string _CheckNum;
		
		private string _TestWeldNum;
		
		private string _HardTrustMan;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<HJGL_Hard_TrustItem> _HJGL_Hard_TrustItem;
		
		private EntityRef<Base_Unit> _HardTrustUnitBase_Unit;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHardTrustIDChanging(string value);
    partial void OnHardTrustIDChanged();
    partial void OnHardTrustNoChanging(string value);
    partial void OnHardTrustNoChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnHardTrustDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHardTrustDateChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnHardnessRateChanging(string value);
    partial void OnHardnessRateChanged();
    partial void OnHardnessMethodChanging(string value);
    partial void OnHardnessMethodChanged();
    partial void OnCheckUnitChanging(string value);
    partial void OnCheckUnitChanged();
    partial void OnHardTrustUnitChanging(string value);
    partial void OnHardTrustUnitChanged();
    partial void OnDetectionTimeChanging(string value);
    partial void OnDetectionTimeChanged();
    partial void OnSendeeChanging(string value);
    partial void OnSendeeChanged();
    partial void OnStandardsChanging(string value);
    partial void OnStandardsChanged();
    partial void OnInspectionNumChanging(string value);
    partial void OnInspectionNumChanged();
    partial void OnCheckNumChanging(string value);
    partial void OnCheckNumChanged();
    partial void OnTestWeldNumChanging(string value);
    partial void OnTestWeldNumChanged();
    partial void OnHardTrustManChanging(string value);
    partial void OnHardTrustManChanged();
    #endregion
		
		public HJGL_Hard_Trust()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._HJGL_Hard_TrustItem = new EntitySet<HJGL_Hard_TrustItem>(new Action<HJGL_Hard_TrustItem>(this.attach_HJGL_Hard_TrustItem), new Action<HJGL_Hard_TrustItem>(this.detach_HJGL_Hard_TrustItem));
			this._HardTrustUnitBase_Unit = default(EntityRef<Base_Unit>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HardTrustID
		{
			get
			{
				return this._HardTrustID;
			}
			set
			{
				if ((this._HardTrustID != value))
				{
					this.OnHardTrustIDChanging(value);
					this.SendPropertyChanging();
					this._HardTrustID = value;
					this.SendPropertyChanged("HardTrustID");
					this.OnHardTrustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustNo", DbType="NVarChar(50)")]
		public string HardTrustNo
		{
			get
			{
				return this._HardTrustNo;
			}
			set
			{
				if ((this._HardTrustNo != value))
				{
					this.OnHardTrustNoChanging(value);
					this.SendPropertyChanging();
					this._HardTrustNo = value;
					this.SendPropertyChanged("HardTrustNo");
					this.OnHardTrustNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HardTrustDate
		{
			get
			{
				return this._HardTrustDate;
			}
			set
			{
				if ((this._HardTrustDate != value))
				{
					this.OnHardTrustDateChanging(value);
					this.SendPropertyChanging();
					this._HardTrustDate = value;
					this.SendPropertyChanged("HardTrustDate");
					this.OnHardTrustDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardnessRate", DbType="NVarChar(50)")]
		public string HardnessRate
		{
			get
			{
				return this._HardnessRate;
			}
			set
			{
				if ((this._HardnessRate != value))
				{
					this.OnHardnessRateChanging(value);
					this.SendPropertyChanging();
					this._HardnessRate = value;
					this.SendPropertyChanged("HardnessRate");
					this.OnHardnessRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardnessMethod", DbType="NVarChar(50)")]
		public string HardnessMethod
		{
			get
			{
				return this._HardnessMethod;
			}
			set
			{
				if ((this._HardnessMethod != value))
				{
					this.OnHardnessMethodChanging(value);
					this.SendPropertyChanging();
					this._HardnessMethod = value;
					this.SendPropertyChanged("HardnessMethod");
					this.OnHardnessMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckUnit", DbType="NVarChar(50)")]
		public string CheckUnit
		{
			get
			{
				return this._CheckUnit;
			}
			set
			{
				if ((this._CheckUnit != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckUnitChanging(value);
					this.SendPropertyChanging();
					this._CheckUnit = value;
					this.SendPropertyChanged("CheckUnit");
					this.OnCheckUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustUnit", DbType="NVarChar(50)")]
		public string HardTrustUnit
		{
			get
			{
				return this._HardTrustUnit;
			}
			set
			{
				if ((this._HardTrustUnit != value))
				{
					if (this._HardTrustUnitBase_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHardTrustUnitChanging(value);
					this.SendPropertyChanging();
					this._HardTrustUnit = value;
					this.SendPropertyChanged("HardTrustUnit");
					this.OnHardTrustUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTime", DbType="NVarChar(50)")]
		public string DetectionTime
		{
			get
			{
				return this._DetectionTime;
			}
			set
			{
				if ((this._DetectionTime != value))
				{
					this.OnDetectionTimeChanging(value);
					this.SendPropertyChanging();
					this._DetectionTime = value;
					this.SendPropertyChanged("DetectionTime");
					this.OnDetectionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sendee", DbType="NVarChar(50)")]
		public string Sendee
		{
			get
			{
				return this._Sendee;
			}
			set
			{
				if ((this._Sendee != value))
				{
					this.OnSendeeChanging(value);
					this.SendPropertyChanging();
					this._Sendee = value;
					this.SendPropertyChanged("Sendee");
					this.OnSendeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standards", DbType="NVarChar(50)")]
		public string Standards
		{
			get
			{
				return this._Standards;
			}
			set
			{
				if ((this._Standards != value))
				{
					this.OnStandardsChanging(value);
					this.SendPropertyChanging();
					this._Standards = value;
					this.SendPropertyChanged("Standards");
					this.OnStandardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionNum", DbType="NVarChar(50)")]
		public string InspectionNum
		{
			get
			{
				return this._InspectionNum;
			}
			set
			{
				if ((this._InspectionNum != value))
				{
					this.OnInspectionNumChanging(value);
					this.SendPropertyChanging();
					this._InspectionNum = value;
					this.SendPropertyChanged("InspectionNum");
					this.OnInspectionNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNum", DbType="NVarChar(50)")]
		public string CheckNum
		{
			get
			{
				return this._CheckNum;
			}
			set
			{
				if ((this._CheckNum != value))
				{
					this.OnCheckNumChanging(value);
					this.SendPropertyChanging();
					this._CheckNum = value;
					this.SendPropertyChanged("CheckNum");
					this.OnCheckNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestWeldNum", DbType="NVarChar(50)")]
		public string TestWeldNum
		{
			get
			{
				return this._TestWeldNum;
			}
			set
			{
				if ((this._TestWeldNum != value))
				{
					this.OnTestWeldNumChanging(value);
					this.SendPropertyChanging();
					this._TestWeldNum = value;
					this.SendPropertyChanged("TestWeldNum");
					this.OnTestWeldNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustMan", DbType="VarChar(50)")]
		public string HardTrustMan
		{
			get
			{
				return this._HardTrustMan;
			}
			set
			{
				if ((this._HardTrustMan != value))
				{
					this.OnHardTrustManChanging(value);
					this.SendPropertyChanging();
					this._HardTrustMan = value;
					this.SendPropertyChanged("HardTrustMan");
					this.OnHardTrustManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hard_Trust_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_Hard_Trust.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_Trust.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hard_Trust_Base_Unit", Storage="_Base_Unit", ThisKey="CheckUnit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_Hard_Trust.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_Trust.Add(this);
						this._CheckUnit = value.UnitId;
					}
					else
					{
						this._CheckUnit = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hard_TrustItem_Hard_Trust", Storage="_HJGL_Hard_TrustItem", ThisKey="HardTrustID", OtherKey="HardTrustID", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_TrustItem> HJGL_Hard_TrustItem
		{
			get
			{
				return this._HJGL_Hard_TrustItem;
			}
			set
			{
				this._HJGL_Hard_TrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Trust_Base_Unit", Storage="_HardTrustUnitBase_Unit", ThisKey="HardTrustUnit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit HardTrustUnitBase_Unit
		{
			get
			{
				return this._HardTrustUnitBase_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._HardTrustUnitBase_Unit.Entity;
				if (((previousValue != value) 
							|| (this._HardTrustUnitBase_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HardTrustUnitBase_Unit.Entity = null;
						previousValue.HJGL_Hard_Trust_Base_Unit.Remove(this);
					}
					this._HardTrustUnitBase_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_Trust_Base_Unit.Add(this);
						this._HardTrustUnit = value.UnitId;
					}
					else
					{
						this._HardTrustUnit = default(string);
					}
					this.SendPropertyChanged("HardTrustUnitBase_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Trust_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_Hard_Trust.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_Trust.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Hard_TrustItem(HJGL_Hard_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Hard_Trust = this;
		}
		
		private void detach_HJGL_Hard_TrustItem(HJGL_Hard_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Hard_Trust = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Hard_TrustItem")]
	public partial class HJGL_Hard_TrustItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HardTrustItemID;
		
		private string _HardTrustID;
		
		private string _HotProessTrustItemId;
		
		private string _WeldJointId;
		
		private System.Nullable<bool> _IsPass;
		
		private System.Nullable<bool> _IsTrust;
		
		private EntityRef<HJGL_Hard_Trust> _HJGL_Hard_Trust;
		
		private EntitySet<HJGL_Hard_Report> _HJGL_Hard_Report;
		
		private EntityRef<HJGL_HotProess_TrustItem> _HJGL_HotProess_TrustItem;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHardTrustItemIDChanging(string value);
    partial void OnHardTrustItemIDChanged();
    partial void OnHardTrustIDChanging(string value);
    partial void OnHardTrustIDChanged();
    partial void OnHotProessTrustItemIdChanging(string value);
    partial void OnHotProessTrustItemIdChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnIsTrustChanging(System.Nullable<bool> value);
    partial void OnIsTrustChanged();
    #endregion
		
		public HJGL_Hard_TrustItem()
		{
			this._HJGL_Hard_Trust = default(EntityRef<HJGL_Hard_Trust>);
			this._HJGL_Hard_Report = new EntitySet<HJGL_Hard_Report>(new Action<HJGL_Hard_Report>(this.attach_HJGL_Hard_Report), new Action<HJGL_Hard_Report>(this.detach_HJGL_Hard_Report));
			this._HJGL_HotProess_TrustItem = default(EntityRef<HJGL_HotProess_TrustItem>);
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustItemID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HardTrustItemID
		{
			get
			{
				return this._HardTrustItemID;
			}
			set
			{
				if ((this._HardTrustItemID != value))
				{
					this.OnHardTrustItemIDChanging(value);
					this.SendPropertyChanging();
					this._HardTrustItemID = value;
					this.SendPropertyChanged("HardTrustItemID");
					this.OnHardTrustItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustID", DbType="NVarChar(50)")]
		public string HardTrustID
		{
			get
			{
				return this._HardTrustID;
			}
			set
			{
				if ((this._HardTrustID != value))
				{
					if (this._HJGL_Hard_Trust.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHardTrustIDChanging(value);
					this.SendPropertyChanging();
					this._HardTrustID = value;
					this.SendPropertyChanged("HardTrustID");
					this.OnHardTrustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustItemId", DbType="NVarChar(50)")]
		public string HotProessTrustItemId
		{
			get
			{
				return this._HotProessTrustItemId;
			}
			set
			{
				if ((this._HotProessTrustItemId != value))
				{
					if (this._HJGL_HotProess_TrustItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotProessTrustItemIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessTrustItemId = value;
					this.SendPropertyChanged("HotProessTrustItemId");
					this.OnHotProessTrustItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTrust", DbType="Bit")]
		public System.Nullable<bool> IsTrust
		{
			get
			{
				return this._IsTrust;
			}
			set
			{
				if ((this._IsTrust != value))
				{
					this.OnIsTrustChanging(value);
					this.SendPropertyChanging();
					this._IsTrust = value;
					this.SendPropertyChanged("IsTrust");
					this.OnIsTrustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hard_TrustItem_Hard_Trust", Storage="_HJGL_Hard_Trust", ThisKey="HardTrustID", OtherKey="HardTrustID", IsForeignKey=true)]
		public HJGL_Hard_Trust HJGL_Hard_Trust
		{
			get
			{
				return this._HJGL_Hard_Trust.Entity;
			}
			set
			{
				HJGL_Hard_Trust previousValue = this._HJGL_Hard_Trust.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Hard_Trust.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Hard_Trust.Entity = null;
						previousValue.HJGL_Hard_TrustItem.Remove(this);
					}
					this._HJGL_Hard_Trust.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_TrustItem.Add(this);
						this._HardTrustID = value.HardTrustID;
					}
					else
					{
						this._HardTrustID = default(string);
					}
					this.SendPropertyChanged("HJGL_Hard_Trust");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Report_HJGL_Hard_TrustItem", Storage="_HJGL_Hard_Report", ThisKey="HardTrustItemID", OtherKey="HardTrustItemID", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_Report> HJGL_Hard_Report
		{
			get
			{
				return this._HJGL_Hard_Report;
			}
			set
			{
				this._HJGL_Hard_Report.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_TrustItem_HJGL_HotProess_TrustItem", Storage="_HJGL_HotProess_TrustItem", ThisKey="HotProessTrustItemId", OtherKey="HotProessTrustItemId", IsForeignKey=true)]
		public HJGL_HotProess_TrustItem HJGL_HotProess_TrustItem
		{
			get
			{
				return this._HJGL_HotProess_TrustItem.Entity;
			}
			set
			{
				HJGL_HotProess_TrustItem previousValue = this._HJGL_HotProess_TrustItem.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_HotProess_TrustItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_HotProess_TrustItem.Entity = null;
						previousValue.HJGL_Hard_TrustItem.Remove(this);
					}
					this._HJGL_HotProess_TrustItem.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_TrustItem.Add(this);
						this._HotProessTrustItemId = value.HotProessTrustItemId;
					}
					else
					{
						this._HotProessTrustItemId = default(string);
					}
					this.SendPropertyChanged("HJGL_HotProess_TrustItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_TrustItem_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_Hard_TrustItem.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_Hard_TrustItem.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Hard_Report(HJGL_Hard_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Hard_TrustItem = this;
		}
		
		private void detach_HJGL_Hard_Report(HJGL_Hard_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Hard_TrustItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_HotProess_Report")]
	public partial class HJGL_HotProess_Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HotProessReportId;
		
		private string _HotProessTrustItemId;
		
		private string _WeldJointId;
		
		private System.Nullable<int> _PointCount;
		
		private string _RequiredT;
		
		private string _ActualT;
		
		private string _RequestTime;
		
		private string _ActualTime;
		
		private string _RecordChartNo;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntityRef<HJGL_HotProess_TrustItem> _HJGL_HotProess_TrustItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHotProessReportIdChanging(string value);
    partial void OnHotProessReportIdChanged();
    partial void OnHotProessTrustItemIdChanging(string value);
    partial void OnHotProessTrustItemIdChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnPointCountChanging(System.Nullable<int> value);
    partial void OnPointCountChanged();
    partial void OnRequiredTChanging(string value);
    partial void OnRequiredTChanged();
    partial void OnActualTChanging(string value);
    partial void OnActualTChanged();
    partial void OnRequestTimeChanging(string value);
    partial void OnRequestTimeChanged();
    partial void OnActualTimeChanging(string value);
    partial void OnActualTimeChanged();
    partial void OnRecordChartNoChanging(string value);
    partial void OnRecordChartNoChanged();
    #endregion
		
		public HJGL_HotProess_Report()
		{
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			this._HJGL_HotProess_TrustItem = default(EntityRef<HJGL_HotProess_TrustItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessReportId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HotProessReportId
		{
			get
			{
				return this._HotProessReportId;
			}
			set
			{
				if ((this._HotProessReportId != value))
				{
					this.OnHotProessReportIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessReportId = value;
					this.SendPropertyChanged("HotProessReportId");
					this.OnHotProessReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustItemId", DbType="NVarChar(50)")]
		public string HotProessTrustItemId
		{
			get
			{
				return this._HotProessTrustItemId;
			}
			set
			{
				if ((this._HotProessTrustItemId != value))
				{
					if (this._HJGL_HotProess_TrustItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotProessTrustItemIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessTrustItemId = value;
					this.SendPropertyChanged("HotProessTrustItemId");
					this.OnHotProessTrustItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointCount", DbType="Int")]
		public System.Nullable<int> PointCount
		{
			get
			{
				return this._PointCount;
			}
			set
			{
				if ((this._PointCount != value))
				{
					this.OnPointCountChanging(value);
					this.SendPropertyChanging();
					this._PointCount = value;
					this.SendPropertyChanged("PointCount");
					this.OnPointCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredT", DbType="VarChar(20)")]
		public string RequiredT
		{
			get
			{
				return this._RequiredT;
			}
			set
			{
				if ((this._RequiredT != value))
				{
					this.OnRequiredTChanging(value);
					this.SendPropertyChanging();
					this._RequiredT = value;
					this.SendPropertyChanged("RequiredT");
					this.OnRequiredTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualT", DbType="VarChar(20)")]
		public string ActualT
		{
			get
			{
				return this._ActualT;
			}
			set
			{
				if ((this._ActualT != value))
				{
					this.OnActualTChanging(value);
					this.SendPropertyChanging();
					this._ActualT = value;
					this.SendPropertyChanged("ActualT");
					this.OnActualTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTime", DbType="VarChar(20)")]
		public string RequestTime
		{
			get
			{
				return this._RequestTime;
			}
			set
			{
				if ((this._RequestTime != value))
				{
					this.OnRequestTimeChanging(value);
					this.SendPropertyChanging();
					this._RequestTime = value;
					this.SendPropertyChanged("RequestTime");
					this.OnRequestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualTime", DbType="VarChar(20)")]
		public string ActualTime
		{
			get
			{
				return this._ActualTime;
			}
			set
			{
				if ((this._ActualTime != value))
				{
					this.OnActualTimeChanging(value);
					this.SendPropertyChanging();
					this._ActualTime = value;
					this.SendPropertyChanged("ActualTime");
					this.OnActualTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordChartNo", DbType="VarChar(20)")]
		public string RecordChartNo
		{
			get
			{
				return this._RecordChartNo;
			}
			set
			{
				if ((this._RecordChartNo != value))
				{
					this.OnRecordChartNoChanging(value);
					this.SendPropertyChanging();
					this._RecordChartNo = value;
					this.SendPropertyChanged("RecordChartNo");
					this.OnRecordChartNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Report_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_HotProess_Report.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_Report.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Report_HotProess_TrustItem", Storage="_HJGL_HotProess_TrustItem", ThisKey="HotProessTrustItemId", OtherKey="HotProessTrustItemId", IsForeignKey=true)]
		public HJGL_HotProess_TrustItem HJGL_HotProess_TrustItem
		{
			get
			{
				return this._HJGL_HotProess_TrustItem.Entity;
			}
			set
			{
				HJGL_HotProess_TrustItem previousValue = this._HJGL_HotProess_TrustItem.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_HotProess_TrustItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_HotProess_TrustItem.Entity = null;
						previousValue.HJGL_HotProess_Report.Remove(this);
					}
					this._HJGL_HotProess_TrustItem.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_Report.Add(this);
						this._HotProessTrustItemId = value.HotProessTrustItemId;
					}
					else
					{
						this._HotProessTrustItemId = default(string);
					}
					this.SendPropertyChanged("HJGL_HotProess_TrustItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_HotProess_Trust")]
	public partial class HJGL_HotProess_Trust : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HotProessTrustId;
		
		private string _HotProessTrustNo;
		
		private System.Nullable<System.DateTime> _ProessDate;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _UnitId;
		
		private string _Tabler;
		
		private string _Remark;
		
		private string _ProessMethod;
		
		private string _ProessEquipment;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<HJGL_HotProess_TrustItem> _HJGL_HotProess_TrustItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHotProessTrustIdChanging(string value);
    partial void OnHotProessTrustIdChanged();
    partial void OnHotProessTrustNoChanging(string value);
    partial void OnHotProessTrustNoChanged();
    partial void OnProessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProessDateChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnTablerChanging(string value);
    partial void OnTablerChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnProessMethodChanging(string value);
    partial void OnProessMethodChanged();
    partial void OnProessEquipmentChanging(string value);
    partial void OnProessEquipmentChanged();
    #endregion
		
		public HJGL_HotProess_Trust()
		{
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._HJGL_HotProess_TrustItem = new EntitySet<HJGL_HotProess_TrustItem>(new Action<HJGL_HotProess_TrustItem>(this.attach_HJGL_HotProess_TrustItem), new Action<HJGL_HotProess_TrustItem>(this.detach_HJGL_HotProess_TrustItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HotProessTrustId
		{
			get
			{
				return this._HotProessTrustId;
			}
			set
			{
				if ((this._HotProessTrustId != value))
				{
					this.OnHotProessTrustIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessTrustId = value;
					this.SendPropertyChanged("HotProessTrustId");
					this.OnHotProessTrustIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustNo", DbType="NVarChar(50)")]
		public string HotProessTrustNo
		{
			get
			{
				return this._HotProessTrustNo;
			}
			set
			{
				if ((this._HotProessTrustNo != value))
				{
					this.OnHotProessTrustNoChanging(value);
					this.SendPropertyChanging();
					this._HotProessTrustNo = value;
					this.SendPropertyChanged("HotProessTrustNo");
					this.OnHotProessTrustNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProessDate
		{
			get
			{
				return this._ProessDate;
			}
			set
			{
				if ((this._ProessDate != value))
				{
					this.OnProessDateChanging(value);
					this.SendPropertyChanging();
					this._ProessDate = value;
					this.SendPropertyChanged("ProessDate");
					this.OnProessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabler", DbType="NVarChar(50)")]
		public string Tabler
		{
			get
			{
				return this._Tabler;
			}
			set
			{
				if ((this._Tabler != value))
				{
					this.OnTablerChanging(value);
					this.SendPropertyChanging();
					this._Tabler = value;
					this.SendPropertyChanged("Tabler");
					this.OnTablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProessMethod", DbType="NVarChar(50)")]
		public string ProessMethod
		{
			get
			{
				return this._ProessMethod;
			}
			set
			{
				if ((this._ProessMethod != value))
				{
					this.OnProessMethodChanging(value);
					this.SendPropertyChanging();
					this._ProessMethod = value;
					this.SendPropertyChanged("ProessMethod");
					this.OnProessMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProessEquipment", DbType="NVarChar(50)")]
		public string ProessEquipment
		{
			get
			{
				return this._ProessEquipment;
			}
			set
			{
				if ((this._ProessEquipment != value))
				{
					this.OnProessEquipmentChanging(value);
					this.SendPropertyChanging();
					this._ProessEquipment = value;
					this.SendPropertyChanged("ProessEquipment");
					this.OnProessEquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_HotProess_Trust_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_HotProess_Trust.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_Trust.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Trust_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_HotProess_Trust.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_Trust.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Trust_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_HotProess_Trust.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_Trust.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_TrustItem_HotProess_Trust", Storage="_HJGL_HotProess_TrustItem", ThisKey="HotProessTrustId", OtherKey="HotProessTrustId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_TrustItem> HJGL_HotProess_TrustItem
		{
			get
			{
				return this._HJGL_HotProess_TrustItem;
			}
			set
			{
				this._HJGL_HotProess_TrustItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_HotProess_Trust = this;
		}
		
		private void detach_HJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_HotProess_Trust = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_HotProess_TrustItem")]
	public partial class HJGL_HotProess_TrustItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HotProessTrustItemId;
		
		private string _HotProessTrustId;
		
		private string _WeldJointId;
		
		private System.Nullable<bool> _IsPass;
		
		private System.Nullable<bool> _IsHardness;
		
		private System.Nullable<bool> _IsTrust;
		
		private string _HardTrustItemID;
		
		private System.Nullable<bool> _IsCompleted;
		
		private EntitySet<HJGL_Hard_TrustItem> _HJGL_Hard_TrustItem;
		
		private EntitySet<HJGL_HotProess_Report> _HJGL_HotProess_Report;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntityRef<HJGL_HotProess_Trust> _HJGL_HotProess_Trust;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHotProessTrustItemIdChanging(string value);
    partial void OnHotProessTrustItemIdChanged();
    partial void OnHotProessTrustIdChanging(string value);
    partial void OnHotProessTrustIdChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnIsHardnessChanging(System.Nullable<bool> value);
    partial void OnIsHardnessChanged();
    partial void OnIsTrustChanging(System.Nullable<bool> value);
    partial void OnIsTrustChanged();
    partial void OnHardTrustItemIDChanging(string value);
    partial void OnHardTrustItemIDChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    #endregion
		
		public HJGL_HotProess_TrustItem()
		{
			this._HJGL_Hard_TrustItem = new EntitySet<HJGL_Hard_TrustItem>(new Action<HJGL_Hard_TrustItem>(this.attach_HJGL_Hard_TrustItem), new Action<HJGL_Hard_TrustItem>(this.detach_HJGL_Hard_TrustItem));
			this._HJGL_HotProess_Report = new EntitySet<HJGL_HotProess_Report>(new Action<HJGL_HotProess_Report>(this.attach_HJGL_HotProess_Report), new Action<HJGL_HotProess_Report>(this.detach_HJGL_HotProess_Report));
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			this._HJGL_HotProess_Trust = default(EntityRef<HJGL_HotProess_Trust>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HotProessTrustItemId
		{
			get
			{
				return this._HotProessTrustItemId;
			}
			set
			{
				if ((this._HotProessTrustItemId != value))
				{
					this.OnHotProessTrustItemIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessTrustItemId = value;
					this.SendPropertyChanged("HotProessTrustItemId");
					this.OnHotProessTrustItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustId", DbType="NVarChar(50)")]
		public string HotProessTrustId
		{
			get
			{
				return this._HotProessTrustId;
			}
			set
			{
				if ((this._HotProessTrustId != value))
				{
					if (this._HJGL_HotProess_Trust.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotProessTrustIdChanging(value);
					this.SendPropertyChanging();
					this._HotProessTrustId = value;
					this.SendPropertyChanged("HotProessTrustId");
					this.OnHotProessTrustIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHardness", DbType="Bit")]
		public System.Nullable<bool> IsHardness
		{
			get
			{
				return this._IsHardness;
			}
			set
			{
				if ((this._IsHardness != value))
				{
					this.OnIsHardnessChanging(value);
					this.SendPropertyChanging();
					this._IsHardness = value;
					this.SendPropertyChanged("IsHardness");
					this.OnIsHardnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTrust", DbType="Bit")]
		public System.Nullable<bool> IsTrust
		{
			get
			{
				return this._IsTrust;
			}
			set
			{
				if ((this._IsTrust != value))
				{
					this.OnIsTrustChanging(value);
					this.SendPropertyChanging();
					this._IsTrust = value;
					this.SendPropertyChanged("IsTrust");
					this.OnIsTrustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustItemID", DbType="NVarChar(50)")]
		public string HardTrustItemID
		{
			get
			{
				return this._HardTrustItemID;
			}
			set
			{
				if ((this._HardTrustItemID != value))
				{
					this.OnHardTrustItemIDChanging(value);
					this.SendPropertyChanging();
					this._HardTrustItemID = value;
					this.SendPropertyChanged("HardTrustItemID");
					this.OnHardTrustItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_TrustItem_HJGL_HotProess_TrustItem", Storage="_HJGL_Hard_TrustItem", ThisKey="HotProessTrustItemId", OtherKey="HotProessTrustItemId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_TrustItem> HJGL_Hard_TrustItem
		{
			get
			{
				return this._HJGL_Hard_TrustItem;
			}
			set
			{
				this._HJGL_Hard_TrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Report_HotProess_TrustItem", Storage="_HJGL_HotProess_Report", ThisKey="HotProessTrustItemId", OtherKey="HotProessTrustItemId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_Report> HJGL_HotProess_Report
		{
			get
			{
				return this._HJGL_HotProess_Report;
			}
			set
			{
				this._HJGL_HotProess_Report.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_TrustItem_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_HotProess_TrustItem.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_TrustItem.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_TrustItem_HotProess_Trust", Storage="_HJGL_HotProess_Trust", ThisKey="HotProessTrustId", OtherKey="HotProessTrustId", IsForeignKey=true)]
		public HJGL_HotProess_Trust HJGL_HotProess_Trust
		{
			get
			{
				return this._HJGL_HotProess_Trust.Entity;
			}
			set
			{
				HJGL_HotProess_Trust previousValue = this._HJGL_HotProess_Trust.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_HotProess_Trust.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_HotProess_Trust.Entity = null;
						previousValue.HJGL_HotProess_TrustItem.Remove(this);
					}
					this._HJGL_HotProess_Trust.Entity = value;
					if ((value != null))
					{
						value.HJGL_HotProess_TrustItem.Add(this);
						this._HotProessTrustId = value.HotProessTrustId;
					}
					else
					{
						this._HotProessTrustId = default(string);
					}
					this.SendPropertyChanged("HJGL_HotProess_Trust");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Hard_TrustItem(HJGL_Hard_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_HotProess_TrustItem = this;
		}
		
		private void detach_HJGL_Hard_TrustItem(HJGL_Hard_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_HotProess_TrustItem = null;
		}
		
		private void attach_HJGL_HotProess_Report(HJGL_HotProess_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_HotProess_TrustItem = this;
		}
		
		private void detach_HJGL_HotProess_Report(HJGL_HotProess_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_HotProess_TrustItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_Pipeline")]
	public partial class HJGL_Pipeline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PipelineId;
		
		private string _PipelineCode;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _UnitId;
		
		private string _SingleNumber;
		
		private string _PipingClassId;
		
		private string _MediumId;
		
		private string _DetectionRateId;
		
		private string _DetectionType;
		
		private System.Nullable<decimal> _TestPressure;
		
		private string _TestMedium;
		
		private string _Remark;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntityRef<Base_DetectionRate> _Base_DetectionRate;
		
		private EntityRef<Base_Medium> _Base_Medium;
		
		private EntityRef<Base_PipingClass> _Base_PipingClass;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<PTP_AItemEndCheck> _PTP_AItemEndCheck;
		
		private EntitySet<PTP_BItemEndCheck> _PTP_BItemEndCheck;
		
		private EntitySet<PTP_PipelineList> _PTP_PipelineList;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPipelineIdChanging(string value);
    partial void OnPipelineIdChanged();
    partial void OnPipelineCodeChanging(string value);
    partial void OnPipelineCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnSingleNumberChanging(string value);
    partial void OnSingleNumberChanged();
    partial void OnPipingClassIdChanging(string value);
    partial void OnPipingClassIdChanged();
    partial void OnMediumIdChanging(string value);
    partial void OnMediumIdChanged();
    partial void OnDetectionRateIdChanging(string value);
    partial void OnDetectionRateIdChanged();
    partial void OnDetectionTypeChanging(string value);
    partial void OnDetectionTypeChanged();
    partial void OnTestPressureChanging(System.Nullable<decimal> value);
    partial void OnTestPressureChanged();
    partial void OnTestMediumChanging(string value);
    partial void OnTestMediumChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_Pipeline()
		{
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._Base_DetectionRate = default(EntityRef<Base_DetectionRate>);
			this._Base_Medium = default(EntityRef<Base_Medium>);
			this._Base_PipingClass = default(EntityRef<Base_PipingClass>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._PTP_AItemEndCheck = new EntitySet<PTP_AItemEndCheck>(new Action<PTP_AItemEndCheck>(this.attach_PTP_AItemEndCheck), new Action<PTP_AItemEndCheck>(this.detach_PTP_AItemEndCheck));
			this._PTP_BItemEndCheck = new EntitySet<PTP_BItemEndCheck>(new Action<PTP_BItemEndCheck>(this.attach_PTP_BItemEndCheck), new Action<PTP_BItemEndCheck>(this.detach_PTP_BItemEndCheck));
			this._PTP_PipelineList = new EntitySet<PTP_PipelineList>(new Action<PTP_PipelineList>(this.attach_PTP_PipelineList), new Action<PTP_PipelineList>(this.detach_PTP_PipelineList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					this.OnPipelineIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineId = value;
					this.SendPropertyChanged("PipelineId");
					this.OnPipelineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this.OnPipelineCodeChanging(value);
					this.SendPropertyChanging();
					this._PipelineCode = value;
					this.SendPropertyChanged("PipelineCode");
					this.OnPipelineCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleNumber", DbType="NVarChar(50)")]
		public string SingleNumber
		{
			get
			{
				return this._SingleNumber;
			}
			set
			{
				if ((this._SingleNumber != value))
				{
					this.OnSingleNumberChanging(value);
					this.SendPropertyChanging();
					this._SingleNumber = value;
					this.SendPropertyChanged("SingleNumber");
					this.OnSingleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassId", DbType="NVarChar(50)")]
		public string PipingClassId
		{
			get
			{
				return this._PipingClassId;
			}
			set
			{
				if ((this._PipingClassId != value))
				{
					if (this._Base_PipingClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipingClassIdChanging(value);
					this.SendPropertyChanging();
					this._PipingClassId = value;
					this.SendPropertyChanged("PipingClassId");
					this.OnPipingClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumId", DbType="NVarChar(50)")]
		public string MediumId
		{
			get
			{
				return this._MediumId;
			}
			set
			{
				if ((this._MediumId != value))
				{
					if (this._Base_Medium.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMediumIdChanging(value);
					this.SendPropertyChanging();
					this._MediumId = value;
					this.SendPropertyChanged("MediumId");
					this.OnMediumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50)")]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					if (this._Base_DetectionRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetectionRateIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionRateId = value;
					this.SendPropertyChanged("DetectionRateId");
					this.OnDetectionRateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionType", DbType="NVarChar(150)")]
		public string DetectionType
		{
			get
			{
				return this._DetectionType;
			}
			set
			{
				if ((this._DetectionType != value))
				{
					this.OnDetectionTypeChanging(value);
					this.SendPropertyChanging();
					this._DetectionType = value;
					this.SendPropertyChanged("DetectionType");
					this.OnDetectionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPressure", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> TestPressure
		{
			get
			{
				return this._TestPressure;
			}
			set
			{
				if ((this._TestPressure != value))
				{
					this.OnTestPressureChanging(value);
					this.SendPropertyChanging();
					this._TestPressure = value;
					this.SendPropertyChanged("TestPressure");
					this.OnTestPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestMedium", DbType="NVarChar(50)")]
		public string TestMedium
		{
			get
			{
				return this._TestMedium;
			}
			set
			{
				if ((this._TestMedium != value))
				{
					this.OnTestMediumChanging(value);
					this.SendPropertyChanging();
					this._TestMedium = value;
					this.SendPropertyChanged("TestMedium");
					this.OnTestMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(150)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_HJGL_Pipeline", Storage="_HJGL_Batch_PointBatch", ThisKey="PipelineId", OtherKey="PipelineId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_DetectionRate", Storage="_Base_DetectionRate", ThisKey="DetectionRateId", OtherKey="DetectionRateId", IsForeignKey=true)]
		public Base_DetectionRate Base_DetectionRate
		{
			get
			{
				return this._Base_DetectionRate.Entity;
			}
			set
			{
				Base_DetectionRate previousValue = this._Base_DetectionRate.Entity;
				if (((previousValue != value) 
							|| (this._Base_DetectionRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_DetectionRate.Entity = null;
						previousValue.HJGL_Pipeline.Remove(this);
					}
					this._Base_DetectionRate.Entity = value;
					if ((value != null))
					{
						value.HJGL_Pipeline.Add(this);
						this._DetectionRateId = value.DetectionRateId;
					}
					else
					{
						this._DetectionRateId = default(string);
					}
					this.SendPropertyChanged("Base_DetectionRate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_Medium", Storage="_Base_Medium", ThisKey="MediumId", OtherKey="MediumId", IsForeignKey=true)]
		public Base_Medium Base_Medium
		{
			get
			{
				return this._Base_Medium.Entity;
			}
			set
			{
				Base_Medium previousValue = this._Base_Medium.Entity;
				if (((previousValue != value) 
							|| (this._Base_Medium.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Medium.Entity = null;
						previousValue.HJGL_Pipeline.Remove(this);
					}
					this._Base_Medium.Entity = value;
					if ((value != null))
					{
						value.HJGL_Pipeline.Add(this);
						this._MediumId = value.MediumId;
					}
					else
					{
						this._MediumId = default(string);
					}
					this.SendPropertyChanged("Base_Medium");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_PipingClass", Storage="_Base_PipingClass", ThisKey="PipingClassId", OtherKey="PipingClassId", IsForeignKey=true)]
		public Base_PipingClass Base_PipingClass
		{
			get
			{
				return this._Base_PipingClass.Entity;
			}
			set
			{
				Base_PipingClass previousValue = this._Base_PipingClass.Entity;
				if (((previousValue != value) 
							|| (this._Base_PipingClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_PipingClass.Entity = null;
						previousValue.HJGL_Pipeline.Remove(this);
					}
					this._Base_PipingClass.Entity = value;
					if ((value != null))
					{
						value.HJGL_Pipeline.Add(this);
						this._PipingClassId = value.PipingClassId;
					}
					else
					{
						this._PipingClassId = default(string);
					}
					this.SendPropertyChanged("Base_PipingClass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_Pipeline.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_Pipeline.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_Pipeline.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_Pipeline.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_Pipeline.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_Pipeline.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_HJGL_Pipeline", Storage="_HJGL_WeldJoint", ThisKey="PipelineId", OtherKey="PipelineId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_AItemEndCheck_HJGL_Pipeline", Storage="_PTP_AItemEndCheck", ThisKey="PipelineId", OtherKey="PipelineId", DeleteRule="NO ACTION")]
		public EntitySet<PTP_AItemEndCheck> PTP_AItemEndCheck
		{
			get
			{
				return this._PTP_AItemEndCheck;
			}
			set
			{
				this._PTP_AItemEndCheck.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_BItemEndCheck_HJGL_Pipeline", Storage="_PTP_BItemEndCheck", ThisKey="PipelineId", OtherKey="PipelineId", DeleteRule="NO ACTION")]
		public EntitySet<PTP_BItemEndCheck> PTP_BItemEndCheck
		{
			get
			{
				return this._PTP_BItemEndCheck;
			}
			set
			{
				this._PTP_BItemEndCheck.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_PipelineList_HJGL_Pipeline", Storage="_PTP_PipelineList", ThisKey="PipelineId", OtherKey="PipelineId", DeleteRule="NO ACTION")]
		public EntitySet<PTP_PipelineList> PTP_PipelineList
		{
			get
			{
				return this._PTP_PipelineList;
			}
			set
			{
				this._PTP_PipelineList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = null;
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = null;
		}
		
		private void attach_PTP_AItemEndCheck(PTP_AItemEndCheck entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = this;
		}
		
		private void detach_PTP_AItemEndCheck(PTP_AItemEndCheck entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = null;
		}
		
		private void attach_PTP_BItemEndCheck(PTP_BItemEndCheck entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = this;
		}
		
		private void detach_PTP_BItemEndCheck(PTP_BItemEndCheck entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = null;
		}
		
		private void attach_PTP_PipelineList(PTP_PipelineList entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = this;
		}
		
		private void detach_PTP_PipelineList(PTP_PipelineList entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_Pipeline = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_PreWeldingDaily")]
	public partial class HJGL_PreWeldingDaily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PreWeldingDailyId;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _UnitId;
		
		private string _WeldJointId;
		
		private System.Nullable<System.DateTime> _WeldingDate;
		
		private string _CoverWelderId;
		
		private string _BackingWelderId;
		
		private string _JointAttribute;
		
		private string _WeldingMode;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _AttachUrl;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPreWeldingDailyIdChanging(string value);
    partial void OnPreWeldingDailyIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnWeldingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWeldingDateChanged();
    partial void OnCoverWelderIdChanging(string value);
    partial void OnCoverWelderIdChanged();
    partial void OnBackingWelderIdChanging(string value);
    partial void OnBackingWelderIdChanged();
    partial void OnJointAttributeChanging(string value);
    partial void OnJointAttributeChanged();
    partial void OnWeldingModeChanging(string value);
    partial void OnWeldingModeChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    #endregion
		
		public HJGL_PreWeldingDaily()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreWeldingDailyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PreWeldingDailyId
		{
			get
			{
				return this._PreWeldingDailyId;
			}
			set
			{
				if ((this._PreWeldingDailyId != value))
				{
					this.OnPreWeldingDailyIdChanging(value);
					this.SendPropertyChanging();
					this._PreWeldingDailyId = value;
					this.SendPropertyChanged("PreWeldingDailyId");
					this.OnPreWeldingDailyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WeldingDate
		{
			get
			{
				return this._WeldingDate;
			}
			set
			{
				if ((this._WeldingDate != value))
				{
					this.OnWeldingDateChanging(value);
					this.SendPropertyChanging();
					this._WeldingDate = value;
					this.SendPropertyChanged("WeldingDate");
					this.OnWeldingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverWelderId", DbType="NVarChar(50)")]
		public string CoverWelderId
		{
			get
			{
				return this._CoverWelderId;
			}
			set
			{
				if ((this._CoverWelderId != value))
				{
					this.OnCoverWelderIdChanging(value);
					this.SendPropertyChanging();
					this._CoverWelderId = value;
					this.SendPropertyChanged("CoverWelderId");
					this.OnCoverWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackingWelderId", DbType="NVarChar(50)")]
		public string BackingWelderId
		{
			get
			{
				return this._BackingWelderId;
			}
			set
			{
				if ((this._BackingWelderId != value))
				{
					this.OnBackingWelderIdChanging(value);
					this.SendPropertyChanging();
					this._BackingWelderId = value;
					this.SendPropertyChanged("BackingWelderId");
					this.OnBackingWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointAttribute", DbType="NVarChar(10)")]
		public string JointAttribute
		{
			get
			{
				return this._JointAttribute;
			}
			set
			{
				if ((this._JointAttribute != value))
				{
					this.OnJointAttributeChanging(value);
					this.SendPropertyChanging();
					this._JointAttribute = value;
					this.SendPropertyChanged("JointAttribute");
					this.OnJointAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMode", DbType="NVarChar(10)")]
		public string WeldingMode
		{
			get
			{
				return this._WeldingMode;
			}
			set
			{
				if ((this._WeldingMode != value))
				{
					this.OnWeldingModeChanging(value);
					this.SendPropertyChanging();
					this._WeldingMode = value;
					this.SendPropertyChanged("WeldingMode");
					this.OnWeldingModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(200)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_RepairRecord")]
	public partial class HJGL_RepairRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RepairRecordId;
		
		private string _RepairRecordCode;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _UnitWorkId;
		
		private string _NDEItemID;
		
		private System.Nullable<System.DateTime> _NoticeDate;
		
		private string _WeldJointId;
		
		private string _DetectionTypeId;
		
		private string _RepairLocation;
		
		private string _CheckDefects;
		
		private string _RepairMark;
		
		private string _WelderId;
		
		private string _RepairWelder;
		
		private System.Nullable<System.DateTime> _RepairDate;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _Ex_ToPointBatchItemId;
		
		private string _PhotoUrl;
		
		private System.Nullable<bool> _IsCut;
		
		private EntityRef<Base_DetectionType> _Base_DetectionType;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<HJGL_Batch_NDEItem> _HJGL_Batch_NDEItem;
		
		private EntityRef<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepairRecordIdChanging(string value);
    partial void OnRepairRecordIdChanged();
    partial void OnRepairRecordCodeChanging(string value);
    partial void OnRepairRecordCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnNDEItemIDChanging(string value);
    partial void OnNDEItemIDChanged();
    partial void OnNoticeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNoticeDateChanged();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnDetectionTypeIdChanging(string value);
    partial void OnDetectionTypeIdChanged();
    partial void OnRepairLocationChanging(string value);
    partial void OnRepairLocationChanged();
    partial void OnCheckDefectsChanging(string value);
    partial void OnCheckDefectsChanged();
    partial void OnRepairMarkChanging(string value);
    partial void OnRepairMarkChanged();
    partial void OnWelderIdChanging(string value);
    partial void OnWelderIdChanged();
    partial void OnRepairWelderChanging(string value);
    partial void OnRepairWelderChanged();
    partial void OnRepairDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRepairDateChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnEx_ToPointBatchItemIdChanging(string value);
    partial void OnEx_ToPointBatchItemIdChanged();
    partial void OnPhotoUrlChanging(string value);
    partial void OnPhotoUrlChanged();
    partial void OnIsCutChanging(System.Nullable<bool> value);
    partial void OnIsCutChanged();
    #endregion
		
		public HJGL_RepairRecord()
		{
			this._Base_DetectionType = default(EntityRef<Base_DetectionType>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._HJGL_Batch_NDEItem = default(EntityRef<HJGL_Batch_NDEItem>);
			this._HJGL_WeldJoint = default(EntityRef<HJGL_WeldJoint>);
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RepairRecordId
		{
			get
			{
				return this._RepairRecordId;
			}
			set
			{
				if ((this._RepairRecordId != value))
				{
					this.OnRepairRecordIdChanging(value);
					this.SendPropertyChanging();
					this._RepairRecordId = value;
					this.SendPropertyChanged("RepairRecordId");
					this.OnRepairRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairRecordCode", DbType="NVarChar(50)")]
		public string RepairRecordCode
		{
			get
			{
				return this._RepairRecordCode;
			}
			set
			{
				if ((this._RepairRecordCode != value))
				{
					this.OnRepairRecordCodeChanging(value);
					this.SendPropertyChanging();
					this._RepairRecordCode = value;
					this.SendPropertyChanged("RepairRecordCode");
					this.OnRepairRecordCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEItemID", DbType="NVarChar(50)")]
		public string NDEItemID
		{
			get
			{
				return this._NDEItemID;
			}
			set
			{
				if ((this._NDEItemID != value))
				{
					if (this._HJGL_Batch_NDEItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDEItemIDChanging(value);
					this.SendPropertyChanging();
					this._NDEItemID = value;
					this.SendPropertyChanged("NDEItemID");
					this.OnNDEItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoticeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NoticeDate
		{
			get
			{
				return this._NoticeDate;
			}
			set
			{
				if ((this._NoticeDate != value))
				{
					this.OnNoticeDateChanging(value);
					this.SendPropertyChanging();
					this._NoticeDate = value;
					this.SendPropertyChanged("NoticeDate");
					this.OnNoticeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					if (this._HJGL_WeldJoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					if (this._Base_DetectionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeId = value;
					this.SendPropertyChanged("DetectionTypeId");
					this.OnDetectionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairLocation", DbType="NVarChar(50)")]
		public string RepairLocation
		{
			get
			{
				return this._RepairLocation;
			}
			set
			{
				if ((this._RepairLocation != value))
				{
					this.OnRepairLocationChanging(value);
					this.SendPropertyChanging();
					this._RepairLocation = value;
					this.SendPropertyChanged("RepairLocation");
					this.OnRepairLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDefects", DbType="NVarChar(100)")]
		public string CheckDefects
		{
			get
			{
				return this._CheckDefects;
			}
			set
			{
				if ((this._CheckDefects != value))
				{
					this.OnCheckDefectsChanging(value);
					this.SendPropertyChanging();
					this._CheckDefects = value;
					this.SendPropertyChanged("CheckDefects");
					this.OnCheckDefectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairMark", DbType="NVarChar(10)")]
		public string RepairMark
		{
			get
			{
				return this._RepairMark;
			}
			set
			{
				if ((this._RepairMark != value))
				{
					this.OnRepairMarkChanging(value);
					this.SendPropertyChanging();
					this._RepairMark = value;
					this.SendPropertyChanged("RepairMark");
					this.OnRepairMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderId", DbType="NVarChar(50)")]
		public string WelderId
		{
			get
			{
				return this._WelderId;
			}
			set
			{
				if ((this._WelderId != value))
				{
					this.OnWelderIdChanging(value);
					this.SendPropertyChanging();
					this._WelderId = value;
					this.SendPropertyChanged("WelderId");
					this.OnWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairWelder", DbType="NVarChar(50)")]
		public string RepairWelder
		{
			get
			{
				return this._RepairWelder;
			}
			set
			{
				if ((this._RepairWelder != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepairWelderChanging(value);
					this.SendPropertyChanging();
					this._RepairWelder = value;
					this.SendPropertyChanged("RepairWelder");
					this.OnRepairWelderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RepairDate
		{
			get
			{
				return this._RepairDate;
			}
			set
			{
				if ((this._RepairDate != value))
				{
					this.OnRepairDateChanging(value);
					this.SendPropertyChanging();
					this._RepairDate = value;
					this.SendPropertyChanged("RepairDate");
					this.OnRepairDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ex_ToPointBatchItemId", DbType="NVarChar(500)")]
		public string Ex_ToPointBatchItemId
		{
			get
			{
				return this._Ex_ToPointBatchItemId;
			}
			set
			{
				if ((this._Ex_ToPointBatchItemId != value))
				{
					this.OnEx_ToPointBatchItemIdChanging(value);
					this.SendPropertyChanging();
					this._Ex_ToPointBatchItemId = value;
					this.SendPropertyChanged("Ex_ToPointBatchItemId");
					this.OnEx_ToPointBatchItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(100)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this.OnPhotoUrlChanging(value);
					this.SendPropertyChanging();
					this._PhotoUrl = value;
					this.SendPropertyChanged("PhotoUrl");
					this.OnPhotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCut", DbType="Bit")]
		public System.Nullable<bool> IsCut
		{
			get
			{
				return this._IsCut;
			}
			set
			{
				if ((this._IsCut != value))
				{
					this.OnIsCutChanging(value);
					this.SendPropertyChanging();
					this._IsCut = value;
					this.SendPropertyChanged("IsCut");
					this.OnIsCutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_Base_DetectionType", Storage="_Base_DetectionType", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", IsForeignKey=true)]
		public Base_DetectionType Base_DetectionType
		{
			get
			{
				return this._Base_DetectionType.Entity;
			}
			set
			{
				Base_DetectionType previousValue = this._Base_DetectionType.Entity;
				if (((previousValue != value) 
							|| (this._Base_DetectionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_DetectionType.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._Base_DetectionType.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._DetectionTypeId = value.DetectionTypeId;
					}
					else
					{
						this._DetectionTypeId = default(string);
					}
					this.SendPropertyChanged("Base_DetectionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_HJGL_Batch_NDEItem", Storage="_HJGL_Batch_NDEItem", ThisKey="NDEItemID", OtherKey="NDEItemID", IsForeignKey=true)]
		public HJGL_Batch_NDEItem HJGL_Batch_NDEItem
		{
			get
			{
				return this._HJGL_Batch_NDEItem.Entity;
			}
			set
			{
				HJGL_Batch_NDEItem previousValue = this._HJGL_Batch_NDEItem.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Batch_NDEItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Batch_NDEItem.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._HJGL_Batch_NDEItem.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._NDEItemID = value.NDEItemID;
					}
					else
					{
						this._NDEItemID = default(string);
					}
					this.SendPropertyChanged("HJGL_Batch_NDEItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_HJGL_WeldJoint", Storage="_HJGL_WeldJoint", ThisKey="WeldJointId", OtherKey="WeldJointId", IsForeignKey=true)]
		public HJGL_WeldJoint HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint.Entity;
			}
			set
			{
				HJGL_WeldJoint previousValue = this._HJGL_WeldJoint.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldJoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldJoint.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._HJGL_WeldJoint.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._WeldJointId = value.WeldJointId;
					}
					else
					{
						this._WeldJointId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldJoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="RepairWelder", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._RepairWelder = value.PersonId;
					}
					else
					{
						this._RepairWelder = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_RepairRecord.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_RepairRecord.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_WeldingDaily")]
	public partial class HJGL_WeldingDaily : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldingDailyId;
		
		private string _WeldingDailyCode;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _UnitId;
		
		private System.Nullable<System.DateTime> _WeldingDate;
		
		private string _Tabler;
		
		private System.Nullable<System.DateTime> _TableDate;
		
		private string _Remark;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldingDailyIdChanging(string value);
    partial void OnWeldingDailyIdChanged();
    partial void OnWeldingDailyCodeChanging(string value);
    partial void OnWeldingDailyCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnWeldingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWeldingDateChanged();
    partial void OnTablerChanging(string value);
    partial void OnTablerChanged();
    partial void OnTableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTableDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public HJGL_WeldingDaily()
		{
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDailyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldingDailyId
		{
			get
			{
				return this._WeldingDailyId;
			}
			set
			{
				if ((this._WeldingDailyId != value))
				{
					this.OnWeldingDailyIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingDailyId = value;
					this.SendPropertyChanged("WeldingDailyId");
					this.OnWeldingDailyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDailyCode", DbType="NVarChar(50)")]
		public string WeldingDailyCode
		{
			get
			{
				return this._WeldingDailyCode;
			}
			set
			{
				if ((this._WeldingDailyCode != value))
				{
					this.OnWeldingDailyCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldingDailyCode = value;
					this.SendPropertyChanged("WeldingDailyCode");
					this.OnWeldingDailyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WeldingDate
		{
			get
			{
				return this._WeldingDate;
			}
			set
			{
				if ((this._WeldingDate != value))
				{
					this.OnWeldingDateChanging(value);
					this.SendPropertyChanging();
					this._WeldingDate = value;
					this.SendPropertyChanged("WeldingDate");
					this.OnWeldingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabler", DbType="NVarChar(50)")]
		public string Tabler
		{
			get
			{
				return this._Tabler;
			}
			set
			{
				if ((this._Tabler != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTablerChanging(value);
					this.SendPropertyChanging();
					this._Tabler = value;
					this.SendPropertyChanged("Tabler");
					this.OnTablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TableDate
		{
			get
			{
				return this._TableDate;
			}
			set
			{
				if ((this._TableDate != value))
				{
					this.OnTableDateChanging(value);
					this.SendPropertyChanging();
					this._TableDate = value;
					this.SendPropertyChanged("TableDate");
					this.OnTableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldingDaily_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.HJGL_WeldingDaily.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldingDaily.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_HJGL_WeldingDaily", Storage="_HJGL_WeldJoint", ThisKey="WeldingDailyId", OtherKey="WeldingDailyId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Pipeline_WeldingDaily_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_WeldingDaily.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldingDaily.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Pipeline_WeldingDaily_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.HJGL_WeldingDaily.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldingDaily.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Pipeline_WeldingDaily_Sys_User", Storage="_Sys_User", ThisKey="Tabler", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.HJGL_WeldingDaily.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldingDaily.Add(this);
						this._Tabler = value.UserId;
					}
					else
					{
						this._Tabler = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldingDaily = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldingDaily = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HJGL_WeldJoint")]
	public partial class HJGL_WeldJoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WeldJointId;
		
		private string _PipelineId;
		
		private string _PipelineCode;
		
		private string _WeldJointCode;
		
		private string _ProjectId;
		
		private string _WeldTypeId;
		
		private string _JointArea;
		
		private string _Material1Id;
		
		private string _Material2Id;
		
		private string _DetectionTypeId;
		
		private string _WeldingMethodId;
		
		private string _GrooveTypeId;
		
		private string _WeldingLocationId;
		
		private string _JointAttribute;
		
		private System.Nullable<decimal> _Size;
		
		private System.Nullable<decimal> _Dia;
		
		private System.Nullable<decimal> _Thickness;
		
		private string _Specification;
		
		private string _WeldingWire;
		
		private string _WeldingRod;
		
		private string _PreTemperature;
		
		private string _Components1Id;
		
		private string _Components2Id;
		
		private string _HeartNo1;
		
		private string _HeartNo2;
		
		private System.Nullable<bool> _IsHotProess;
		
		private string _WPQId;
		
		private string _WeldingDailyId;
		
		private string _WeldingDailyCode;
		
		private string _BackingWelderId;
		
		private string _CoverWelderId;
		
		private string _WeldingMode;
		
		private string _Remark;
		
		private string _WeldJointIdentify;
		
		private string _Position;
		
		private string _AttachUrl;
		
		private EntitySet<HJGL_Batch_BatchTrustItem> _HJGL_Batch_BatchTrustItem;
		
		private EntitySet<HJGL_Batch_PointBatchItem> _HJGL_Batch_PointBatchItem;
		
		private EntitySet<HJGL_Hard_Report> _HJGL_Hard_Report;
		
		private EntitySet<HJGL_Hard_TrustItem> _HJGL_Hard_TrustItem;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
		private EntityRef<Base_Consumables> _Base_Consumables;
		
		private EntityRef<Base_Consumables> _WeldingWireBase_Consumables;
		
		private EntityRef<Base_DetectionType> _Base_DetectionType;
		
		private EntityRef<Base_GrooveType> _Base_GrooveType;
		
		private EntityRef<Base_Material> _Base_Material;
		
		private EntityRef<Base_Material> _Material2;
		
		private EntityRef<Base_WeldingLocation> _Base_WeldingLocation;
		
		private EntityRef<Base_WeldingMethod> _Base_WeldingMethod;
		
		private EntityRef<Base_WeldType> _Base_WeldType;
		
		private EntityRef<HJGL_Pipeline> _HJGL_Pipeline;
		
		private EntityRef<HJGL_WeldingDaily> _HJGL_WeldingDaily;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<SitePerson_Person> _CoverWelder;
		
		private EntityRef<WPQ_WPQList> _WPQ_WPQList;
		
		private EntitySet<HJGL_HotProess_Report> _HJGL_HotProess_Report;
		
		private EntitySet<HJGL_HotProess_TrustItem> _HJGL_HotProess_TrustItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWeldJointIdChanging(string value);
    partial void OnWeldJointIdChanged();
    partial void OnPipelineIdChanging(string value);
    partial void OnPipelineIdChanged();
    partial void OnPipelineCodeChanging(string value);
    partial void OnPipelineCodeChanged();
    partial void OnWeldJointCodeChanging(string value);
    partial void OnWeldJointCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnWeldTypeIdChanging(string value);
    partial void OnWeldTypeIdChanged();
    partial void OnJointAreaChanging(string value);
    partial void OnJointAreaChanged();
    partial void OnMaterial1IdChanging(string value);
    partial void OnMaterial1IdChanged();
    partial void OnMaterial2IdChanging(string value);
    partial void OnMaterial2IdChanged();
    partial void OnDetectionTypeIdChanging(string value);
    partial void OnDetectionTypeIdChanged();
    partial void OnWeldingMethodIdChanging(string value);
    partial void OnWeldingMethodIdChanged();
    partial void OnGrooveTypeIdChanging(string value);
    partial void OnGrooveTypeIdChanged();
    partial void OnWeldingLocationIdChanging(string value);
    partial void OnWeldingLocationIdChanged();
    partial void OnJointAttributeChanging(string value);
    partial void OnJointAttributeChanged();
    partial void OnSizeChanging(System.Nullable<decimal> value);
    partial void OnSizeChanged();
    partial void OnDiaChanging(System.Nullable<decimal> value);
    partial void OnDiaChanged();
    partial void OnThicknessChanging(System.Nullable<decimal> value);
    partial void OnThicknessChanged();
    partial void OnSpecificationChanging(string value);
    partial void OnSpecificationChanged();
    partial void OnWeldingWireChanging(string value);
    partial void OnWeldingWireChanged();
    partial void OnWeldingRodChanging(string value);
    partial void OnWeldingRodChanged();
    partial void OnPreTemperatureChanging(string value);
    partial void OnPreTemperatureChanged();
    partial void OnComponents1IdChanging(string value);
    partial void OnComponents1IdChanged();
    partial void OnComponents2IdChanging(string value);
    partial void OnComponents2IdChanged();
    partial void OnHeartNo1Changing(string value);
    partial void OnHeartNo1Changed();
    partial void OnHeartNo2Changing(string value);
    partial void OnHeartNo2Changed();
    partial void OnIsHotProessChanging(System.Nullable<bool> value);
    partial void OnIsHotProessChanged();
    partial void OnWPQIdChanging(string value);
    partial void OnWPQIdChanged();
    partial void OnWeldingDailyIdChanging(string value);
    partial void OnWeldingDailyIdChanged();
    partial void OnWeldingDailyCodeChanging(string value);
    partial void OnWeldingDailyCodeChanged();
    partial void OnBackingWelderIdChanging(string value);
    partial void OnBackingWelderIdChanged();
    partial void OnCoverWelderIdChanging(string value);
    partial void OnCoverWelderIdChanged();
    partial void OnWeldingModeChanging(string value);
    partial void OnWeldingModeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnWeldJointIdentifyChanging(string value);
    partial void OnWeldJointIdentifyChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    #endregion
		
		public HJGL_WeldJoint()
		{
			this._HJGL_Batch_BatchTrustItem = new EntitySet<HJGL_Batch_BatchTrustItem>(new Action<HJGL_Batch_BatchTrustItem>(this.attach_HJGL_Batch_BatchTrustItem), new Action<HJGL_Batch_BatchTrustItem>(this.detach_HJGL_Batch_BatchTrustItem));
			this._HJGL_Batch_PointBatchItem = new EntitySet<HJGL_Batch_PointBatchItem>(new Action<HJGL_Batch_PointBatchItem>(this.attach_HJGL_Batch_PointBatchItem), new Action<HJGL_Batch_PointBatchItem>(this.detach_HJGL_Batch_PointBatchItem));
			this._HJGL_Hard_Report = new EntitySet<HJGL_Hard_Report>(new Action<HJGL_Hard_Report>(this.attach_HJGL_Hard_Report), new Action<HJGL_Hard_Report>(this.detach_HJGL_Hard_Report));
			this._HJGL_Hard_TrustItem = new EntitySet<HJGL_Hard_TrustItem>(new Action<HJGL_Hard_TrustItem>(this.attach_HJGL_Hard_TrustItem), new Action<HJGL_Hard_TrustItem>(this.detach_HJGL_Hard_TrustItem));
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			this._Base_Consumables = default(EntityRef<Base_Consumables>);
			this._WeldingWireBase_Consumables = default(EntityRef<Base_Consumables>);
			this._Base_DetectionType = default(EntityRef<Base_DetectionType>);
			this._Base_GrooveType = default(EntityRef<Base_GrooveType>);
			this._Base_Material = default(EntityRef<Base_Material>);
			this._Material2 = default(EntityRef<Base_Material>);
			this._Base_WeldingLocation = default(EntityRef<Base_WeldingLocation>);
			this._Base_WeldingMethod = default(EntityRef<Base_WeldingMethod>);
			this._Base_WeldType = default(EntityRef<Base_WeldType>);
			this._HJGL_Pipeline = default(EntityRef<HJGL_Pipeline>);
			this._HJGL_WeldingDaily = default(EntityRef<HJGL_WeldingDaily>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._CoverWelder = default(EntityRef<SitePerson_Person>);
			this._WPQ_WPQList = default(EntityRef<WPQ_WPQList>);
			this._HJGL_HotProess_Report = new EntitySet<HJGL_HotProess_Report>(new Action<HJGL_HotProess_Report>(this.attach_HJGL_HotProess_Report), new Action<HJGL_HotProess_Report>(this.detach_HJGL_HotProess_Report));
			this._HJGL_HotProess_TrustItem = new EntitySet<HJGL_HotProess_TrustItem>(new Action<HJGL_HotProess_TrustItem>(this.attach_HJGL_HotProess_TrustItem), new Action<HJGL_HotProess_TrustItem>(this.detach_HJGL_HotProess_TrustItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this.OnWeldJointIdChanging(value);
					this.SendPropertyChanging();
					this._WeldJointId = value;
					this.SendPropertyChanged("WeldJointId");
					this.OnWeldJointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					if (this._HJGL_Pipeline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipelineIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineId = value;
					this.SendPropertyChanged("PipelineId");
					this.OnPipelineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this.OnPipelineCodeChanging(value);
					this.SendPropertyChanging();
					this._PipelineCode = value;
					this.SendPropertyChanged("PipelineCode");
					this.OnPipelineCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointCode", DbType="NVarChar(50)")]
		public string WeldJointCode
		{
			get
			{
				return this._WeldJointCode;
			}
			set
			{
				if ((this._WeldJointCode != value))
				{
					this.OnWeldJointCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldJointCode = value;
					this.SendPropertyChanged("WeldJointCode");
					this.OnWeldJointCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldTypeId", DbType="NVarChar(50)")]
		public string WeldTypeId
		{
			get
			{
				return this._WeldTypeId;
			}
			set
			{
				if ((this._WeldTypeId != value))
				{
					if (this._Base_WeldType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldTypeIdChanging(value);
					this.SendPropertyChanging();
					this._WeldTypeId = value;
					this.SendPropertyChanged("WeldTypeId");
					this.OnWeldTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointArea", DbType="NVarChar(50)")]
		public string JointArea
		{
			get
			{
				return this._JointArea;
			}
			set
			{
				if ((this._JointArea != value))
				{
					this.OnJointAreaChanging(value);
					this.SendPropertyChanging();
					this._JointArea = value;
					this.SendPropertyChanged("JointArea");
					this.OnJointAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material1Id", DbType="NVarChar(50)")]
		public string Material1Id
		{
			get
			{
				return this._Material1Id;
			}
			set
			{
				if ((this._Material1Id != value))
				{
					if (this._Base_Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterial1IdChanging(value);
					this.SendPropertyChanging();
					this._Material1Id = value;
					this.SendPropertyChanged("Material1Id");
					this.OnMaterial1IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material2Id", DbType="NVarChar(50)")]
		public string Material2Id
		{
			get
			{
				return this._Material2Id;
			}
			set
			{
				if ((this._Material2Id != value))
				{
					if (this._Material2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterial2IdChanging(value);
					this.SendPropertyChanging();
					this._Material2Id = value;
					this.SendPropertyChanged("Material2Id");
					this.OnMaterial2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					if (this._Base_DetectionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetectionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DetectionTypeId = value;
					this.SendPropertyChanged("DetectionTypeId");
					this.OnDetectionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodId", DbType="NVarChar(50)")]
		public string WeldingMethodId
		{
			get
			{
				return this._WeldingMethodId;
			}
			set
			{
				if ((this._WeldingMethodId != value))
				{
					if (this._Base_WeldingMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldingMethodIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingMethodId = value;
					this.SendPropertyChanged("WeldingMethodId");
					this.OnWeldingMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveTypeId", DbType="NVarChar(50)")]
		public string GrooveTypeId
		{
			get
			{
				return this._GrooveTypeId;
			}
			set
			{
				if ((this._GrooveTypeId != value))
				{
					if (this._Base_GrooveType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGrooveTypeIdChanging(value);
					this.SendPropertyChanging();
					this._GrooveTypeId = value;
					this.SendPropertyChanged("GrooveTypeId");
					this.OnGrooveTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingLocationId", DbType="NVarChar(50)")]
		public string WeldingLocationId
		{
			get
			{
				return this._WeldingLocationId;
			}
			set
			{
				if ((this._WeldingLocationId != value))
				{
					if (this._Base_WeldingLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldingLocationIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingLocationId = value;
					this.SendPropertyChanged("WeldingLocationId");
					this.OnWeldingLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointAttribute", DbType="NVarChar(10)")]
		public string JointAttribute
		{
			get
			{
				return this._JointAttribute;
			}
			set
			{
				if ((this._JointAttribute != value))
				{
					this.OnJointAttributeChanging(value);
					this.SendPropertyChanging();
					this._JointAttribute = value;
					this.SendPropertyChanged("JointAttribute");
					this.OnJointAttributeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dia", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Dia
		{
			get
			{
				return this._Dia;
			}
			set
			{
				if ((this._Dia != value))
				{
					this.OnDiaChanging(value);
					this.SendPropertyChanging();
					this._Dia = value;
					this.SendPropertyChanged("Dia");
					this.OnDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Thickness
		{
			get
			{
				return this._Thickness;
			}
			set
			{
				if ((this._Thickness != value))
				{
					this.OnThicknessChanging(value);
					this.SendPropertyChanging();
					this._Thickness = value;
					this.SendPropertyChanged("Thickness");
					this.OnThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(20)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this.OnSpecificationChanging(value);
					this.SendPropertyChanging();
					this._Specification = value;
					this.SendPropertyChanged("Specification");
					this.OnSpecificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingWire", DbType="NVarChar(50)")]
		public string WeldingWire
		{
			get
			{
				return this._WeldingWire;
			}
			set
			{
				if ((this._WeldingWire != value))
				{
					if (this._WeldingWireBase_Consumables.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldingWireChanging(value);
					this.SendPropertyChanging();
					this._WeldingWire = value;
					this.SendPropertyChanged("WeldingWire");
					this.OnWeldingWireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingRod", DbType="NVarChar(50)")]
		public string WeldingRod
		{
			get
			{
				return this._WeldingRod;
			}
			set
			{
				if ((this._WeldingRod != value))
				{
					if (this._Base_Consumables.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldingRodChanging(value);
					this.SendPropertyChanging();
					this._WeldingRod = value;
					this.SendPropertyChanged("WeldingRod");
					this.OnWeldingRodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreTemperature", DbType="NVarChar(20)")]
		public string PreTemperature
		{
			get
			{
				return this._PreTemperature;
			}
			set
			{
				if ((this._PreTemperature != value))
				{
					this.OnPreTemperatureChanging(value);
					this.SendPropertyChanging();
					this._PreTemperature = value;
					this.SendPropertyChanged("PreTemperature");
					this.OnPreTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Components1Id", DbType="NVarChar(50)")]
		public string Components1Id
		{
			get
			{
				return this._Components1Id;
			}
			set
			{
				if ((this._Components1Id != value))
				{
					this.OnComponents1IdChanging(value);
					this.SendPropertyChanging();
					this._Components1Id = value;
					this.SendPropertyChanged("Components1Id");
					this.OnComponents1IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Components2Id", DbType="NVarChar(50)")]
		public string Components2Id
		{
			get
			{
				return this._Components2Id;
			}
			set
			{
				if ((this._Components2Id != value))
				{
					this.OnComponents2IdChanging(value);
					this.SendPropertyChanging();
					this._Components2Id = value;
					this.SendPropertyChanged("Components2Id");
					this.OnComponents2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartNo1", DbType="NVarChar(30)")]
		public string HeartNo1
		{
			get
			{
				return this._HeartNo1;
			}
			set
			{
				if ((this._HeartNo1 != value))
				{
					this.OnHeartNo1Changing(value);
					this.SendPropertyChanging();
					this._HeartNo1 = value;
					this.SendPropertyChanged("HeartNo1");
					this.OnHeartNo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartNo2", DbType="NVarChar(30)")]
		public string HeartNo2
		{
			get
			{
				return this._HeartNo2;
			}
			set
			{
				if ((this._HeartNo2 != value))
				{
					this.OnHeartNo2Changing(value);
					this.SendPropertyChanging();
					this._HeartNo2 = value;
					this.SendPropertyChanged("HeartNo2");
					this.OnHeartNo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHotProess", DbType="Bit")]
		public System.Nullable<bool> IsHotProess
		{
			get
			{
				return this._IsHotProess;
			}
			set
			{
				if ((this._IsHotProess != value))
				{
					this.OnIsHotProessChanging(value);
					this.SendPropertyChanging();
					this._IsHotProess = value;
					this.SendPropertyChanged("IsHotProess");
					this.OnIsHotProessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPQId", DbType="NVarChar(50)")]
		public string WPQId
		{
			get
			{
				return this._WPQId;
			}
			set
			{
				if ((this._WPQId != value))
				{
					if (this._WPQ_WPQList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWPQIdChanging(value);
					this.SendPropertyChanging();
					this._WPQId = value;
					this.SendPropertyChanged("WPQId");
					this.OnWPQIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDailyId", DbType="NVarChar(50)")]
		public string WeldingDailyId
		{
			get
			{
				return this._WeldingDailyId;
			}
			set
			{
				if ((this._WeldingDailyId != value))
				{
					if (this._HJGL_WeldingDaily.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldingDailyIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingDailyId = value;
					this.SendPropertyChanged("WeldingDailyId");
					this.OnWeldingDailyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDailyCode", DbType="NVarChar(50)")]
		public string WeldingDailyCode
		{
			get
			{
				return this._WeldingDailyCode;
			}
			set
			{
				if ((this._WeldingDailyCode != value))
				{
					this.OnWeldingDailyCodeChanging(value);
					this.SendPropertyChanging();
					this._WeldingDailyCode = value;
					this.SendPropertyChanged("WeldingDailyCode");
					this.OnWeldingDailyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackingWelderId", DbType="NVarChar(50)")]
		public string BackingWelderId
		{
			get
			{
				return this._BackingWelderId;
			}
			set
			{
				if ((this._BackingWelderId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBackingWelderIdChanging(value);
					this.SendPropertyChanging();
					this._BackingWelderId = value;
					this.SendPropertyChanged("BackingWelderId");
					this.OnBackingWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverWelderId", DbType="NVarChar(50)")]
		public string CoverWelderId
		{
			get
			{
				return this._CoverWelderId;
			}
			set
			{
				if ((this._CoverWelderId != value))
				{
					if (this._CoverWelder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoverWelderIdChanging(value);
					this.SendPropertyChanging();
					this._CoverWelderId = value;
					this.SendPropertyChanged("CoverWelderId");
					this.OnCoverWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMode", DbType="NVarChar(10)")]
		public string WeldingMode
		{
			get
			{
				return this._WeldingMode;
			}
			set
			{
				if ((this._WeldingMode != value))
				{
					this.OnWeldingModeChanging(value);
					this.SendPropertyChanging();
					this._WeldingMode = value;
					this.SendPropertyChanged("WeldingMode");
					this.OnWeldingModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointIdentify", DbType="NVarChar(50)")]
		public string WeldJointIdentify
		{
			get
			{
				return this._WeldJointIdentify;
			}
			set
			{
				if ((this._WeldJointIdentify != value))
				{
					this.OnWeldJointIdentifyChanging(value);
					this.SendPropertyChanging();
					this._WeldJointIdentify = value;
					this.SendPropertyChanged("WeldJointIdentify");
					this.OnWeldJointIdentifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(200)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrustItem_HJGL_WeldJoint", Storage="_HJGL_Batch_BatchTrustItem", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_BatchTrustItem> HJGL_Batch_BatchTrustItem
		{
			get
			{
				return this._HJGL_Batch_BatchTrustItem;
			}
			set
			{
				this._HJGL_Batch_BatchTrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatchItem_HJGL_WeldJoint", Storage="_HJGL_Batch_PointBatchItem", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatchItem> HJGL_Batch_PointBatchItem
		{
			get
			{
				return this._HJGL_Batch_PointBatchItem;
			}
			set
			{
				this._HJGL_Batch_PointBatchItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Report_HJGL_WeldJoint", Storage="_HJGL_Hard_Report", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_Report> HJGL_Hard_Report
		{
			get
			{
				return this._HJGL_Hard_Report;
			}
			set
			{
				this._HJGL_Hard_Report.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_TrustItem_HJGL_WeldJoint", Storage="_HJGL_Hard_TrustItem", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_TrustItem> HJGL_Hard_TrustItem
		{
			get
			{
				return this._HJGL_Hard_TrustItem;
			}
			set
			{
				this._HJGL_Hard_TrustItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_HJGL_WeldJoint", Storage="_HJGL_RepairRecord", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Consumables", Storage="_Base_Consumables", ThisKey="WeldingRod", OtherKey="ConsumablesId", IsForeignKey=true)]
		public Base_Consumables Base_Consumables
		{
			get
			{
				return this._Base_Consumables.Entity;
			}
			set
			{
				Base_Consumables previousValue = this._Base_Consumables.Entity;
				if (((previousValue != value) 
							|| (this._Base_Consumables.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Consumables.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_Consumables.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._WeldingRod = value.ConsumablesId;
					}
					else
					{
						this._WeldingRod = default(string);
					}
					this.SendPropertyChanged("Base_Consumables");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Consumables1", Storage="_WeldingWireBase_Consumables", ThisKey="WeldingWire", OtherKey="ConsumablesId", IsForeignKey=true)]
		public Base_Consumables WeldingWireBase_Consumables
		{
			get
			{
				return this._WeldingWireBase_Consumables.Entity;
			}
			set
			{
				Base_Consumables previousValue = this._WeldingWireBase_Consumables.Entity;
				if (((previousValue != value) 
							|| (this._WeldingWireBase_Consumables.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WeldingWireBase_Consumables.Entity = null;
						previousValue.Consumables.Remove(this);
					}
					this._WeldingWireBase_Consumables.Entity = value;
					if ((value != null))
					{
						value.Consumables.Add(this);
						this._WeldingWire = value.ConsumablesId;
					}
					else
					{
						this._WeldingWire = default(string);
					}
					this.SendPropertyChanged("WeldingWireBase_Consumables");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_DetectionType", Storage="_Base_DetectionType", ThisKey="DetectionTypeId", OtherKey="DetectionTypeId", IsForeignKey=true)]
		public Base_DetectionType Base_DetectionType
		{
			get
			{
				return this._Base_DetectionType.Entity;
			}
			set
			{
				Base_DetectionType previousValue = this._Base_DetectionType.Entity;
				if (((previousValue != value) 
							|| (this._Base_DetectionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_DetectionType.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_DetectionType.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._DetectionTypeId = value.DetectionTypeId;
					}
					else
					{
						this._DetectionTypeId = default(string);
					}
					this.SendPropertyChanged("Base_DetectionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_GrooveType", Storage="_Base_GrooveType", ThisKey="GrooveTypeId", OtherKey="GrooveTypeId", IsForeignKey=true)]
		public Base_GrooveType Base_GrooveType
		{
			get
			{
				return this._Base_GrooveType.Entity;
			}
			set
			{
				Base_GrooveType previousValue = this._Base_GrooveType.Entity;
				if (((previousValue != value) 
							|| (this._Base_GrooveType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_GrooveType.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_GrooveType.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._GrooveTypeId = value.GrooveTypeId;
					}
					else
					{
						this._GrooveTypeId = default(string);
					}
					this.SendPropertyChanged("Base_GrooveType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Material", Storage="_Base_Material", ThisKey="Material1Id", OtherKey="MaterialId", IsForeignKey=true)]
		public Base_Material Base_Material
		{
			get
			{
				return this._Base_Material.Entity;
			}
			set
			{
				Base_Material previousValue = this._Base_Material.Entity;
				if (((previousValue != value) 
							|| (this._Base_Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Material.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_Material.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._Material1Id = value.MaterialId;
					}
					else
					{
						this._Material1Id = default(string);
					}
					this.SendPropertyChanged("Base_Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_Material1", Storage="_Material2", ThisKey="Material2Id", OtherKey="MaterialId", IsForeignKey=true)]
		public Base_Material Material2
		{
			get
			{
				return this._Material2.Entity;
			}
			set
			{
				Base_Material previousValue = this._Material2.Entity;
				if (((previousValue != value) 
							|| (this._Material2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material2.Entity = null;
						previousValue.Material.Remove(this);
					}
					this._Material2.Entity = value;
					if ((value != null))
					{
						value.Material.Add(this);
						this._Material2Id = value.MaterialId;
					}
					else
					{
						this._Material2Id = default(string);
					}
					this.SendPropertyChanged("Material2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_WeldingLocation", Storage="_Base_WeldingLocation", ThisKey="WeldingLocationId", OtherKey="WeldingLocationId", IsForeignKey=true)]
		public Base_WeldingLocation Base_WeldingLocation
		{
			get
			{
				return this._Base_WeldingLocation.Entity;
			}
			set
			{
				Base_WeldingLocation previousValue = this._Base_WeldingLocation.Entity;
				if (((previousValue != value) 
							|| (this._Base_WeldingLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WeldingLocation.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_WeldingLocation.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._WeldingLocationId = value.WeldingLocationId;
					}
					else
					{
						this._WeldingLocationId = default(string);
					}
					this.SendPropertyChanged("Base_WeldingLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_WeldingMethod", Storage="_Base_WeldingMethod", ThisKey="WeldingMethodId", OtherKey="WeldingMethodId", IsForeignKey=true)]
		public Base_WeldingMethod Base_WeldingMethod
		{
			get
			{
				return this._Base_WeldingMethod.Entity;
			}
			set
			{
				Base_WeldingMethod previousValue = this._Base_WeldingMethod.Entity;
				if (((previousValue != value) 
							|| (this._Base_WeldingMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WeldingMethod.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_WeldingMethod.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._WeldingMethodId = value.WeldingMethodId;
					}
					else
					{
						this._WeldingMethodId = default(string);
					}
					this.SendPropertyChanged("Base_WeldingMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_Base_WeldType", Storage="_Base_WeldType", ThisKey="WeldTypeId", OtherKey="WeldTypeId", IsForeignKey=true)]
		public Base_WeldType Base_WeldType
		{
			get
			{
				return this._Base_WeldType.Entity;
			}
			set
			{
				Base_WeldType previousValue = this._Base_WeldType.Entity;
				if (((previousValue != value) 
							|| (this._Base_WeldType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WeldType.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_WeldType.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._WeldTypeId = value.WeldTypeId;
					}
					else
					{
						this._WeldTypeId = default(string);
					}
					this.SendPropertyChanged("Base_WeldType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_HJGL_Pipeline", Storage="_HJGL_Pipeline", ThisKey="PipelineId", OtherKey="PipelineId", IsForeignKey=true)]
		public HJGL_Pipeline HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline.Entity;
			}
			set
			{
				HJGL_Pipeline previousValue = this._HJGL_Pipeline.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Pipeline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Pipeline.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._HJGL_Pipeline.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._PipelineId = value.PipelineId;
					}
					else
					{
						this._PipelineId = default(string);
					}
					this.SendPropertyChanged("HJGL_Pipeline");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_HJGL_WeldingDaily", Storage="_HJGL_WeldingDaily", ThisKey="WeldingDailyId", OtherKey="WeldingDailyId", IsForeignKey=true)]
		public HJGL_WeldingDaily HJGL_WeldingDaily
		{
			get
			{
				return this._HJGL_WeldingDaily.Entity;
			}
			set
			{
				HJGL_WeldingDaily previousValue = this._HJGL_WeldingDaily.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_WeldingDaily.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_WeldingDaily.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._HJGL_WeldingDaily.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._WeldingDailyId = value.WeldingDailyId;
					}
					else
					{
						this._WeldingDailyId = default(string);
					}
					this.SendPropertyChanged("HJGL_WeldingDaily");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_HJGL_WeldJoint", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_SitePerson_Person_BackingWelder", Storage="_SitePerson_Person", ThisKey="BackingWelderId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._BackingWelderId = value.PersonId;
					}
					else
					{
						this._BackingWelderId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_SitePerson_Person_CoverWelder", Storage="_CoverWelder", ThisKey="CoverWelderId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person CoverWelder
		{
			get
			{
				return this._CoverWelder.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._CoverWelder.Entity;
				if (((previousValue != value) 
							|| (this._CoverWelder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoverWelder.Entity = null;
						previousValue.Person.Remove(this);
					}
					this._CoverWelder.Entity = value;
					if ((value != null))
					{
						value.Person.Add(this);
						this._CoverWelderId = value.PersonId;
					}
					else
					{
						this._CoverWelderId = default(string);
					}
					this.SendPropertyChanged("CoverWelder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_WPQ_WPQList", Storage="_WPQ_WPQList", ThisKey="WPQId", OtherKey="WPQId", IsForeignKey=true)]
		public WPQ_WPQList WPQ_WPQList
		{
			get
			{
				return this._WPQ_WPQList.Entity;
			}
			set
			{
				WPQ_WPQList previousValue = this._WPQ_WPQList.Entity;
				if (((previousValue != value) 
							|| (this._WPQ_WPQList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WPQ_WPQList.Entity = null;
						previousValue.HJGL_WeldJoint.Remove(this);
					}
					this._WPQ_WPQList.Entity = value;
					if ((value != null))
					{
						value.HJGL_WeldJoint.Add(this);
						this._WPQId = value.WPQId;
					}
					else
					{
						this._WPQId = default(string);
					}
					this.SendPropertyChanged("WPQ_WPQList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_Report_HJGL_WeldJoint", Storage="_HJGL_HotProess_Report", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_Report> HJGL_HotProess_Report
		{
			get
			{
				return this._HJGL_HotProess_Report;
			}
			set
			{
				this._HJGL_HotProess_Report.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HotProess_TrustItem_HJGL_WeldJoint", Storage="_HJGL_HotProess_TrustItem", ThisKey="WeldJointId", OtherKey="WeldJointId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_TrustItem> HJGL_HotProess_TrustItem
		{
			get
			{
				return this._HJGL_HotProess_TrustItem;
			}
			set
			{
				this._HJGL_HotProess_TrustItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_Batch_BatchTrustItem(HJGL_Batch_BatchTrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
		
		private void attach_HJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_Batch_PointBatchItem(HJGL_Batch_PointBatchItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
		
		private void attach_HJGL_Hard_Report(HJGL_Hard_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_Hard_Report(HJGL_Hard_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
		
		private void attach_HJGL_Hard_TrustItem(HJGL_Hard_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_Hard_TrustItem(HJGL_Hard_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
		
		private void attach_HJGL_HotProess_Report(HJGL_HotProess_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_HotProess_Report(HJGL_HotProess_Report entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
		
		private void attach_HJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = this;
		}
		
		private void detach_HJGL_HotProess_TrustItem(HJGL_HotProess_TrustItem entity)
		{
			this.SendPropertyChanging();
			entity.HJGL_WeldJoint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HSSESystem_HSSEMainDuty")]
	public partial class HSSESystem_HSSEMainDuty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HSSEMainDutyId;
		
		private string _WorkPostId;
		
		private string _Duties;
		
		private string _Remark;
		
		private string _SortIndex;
		
		private EntityRef<Base_WorkPost> _Base_WorkPost;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHSSEMainDutyIdChanging(string value);
    partial void OnHSSEMainDutyIdChanged();
    partial void OnWorkPostIdChanging(string value);
    partial void OnWorkPostIdChanged();
    partial void OnDutiesChanging(string value);
    partial void OnDutiesChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnSortIndexChanging(string value);
    partial void OnSortIndexChanged();
    #endregion
		
		public HSSESystem_HSSEMainDuty()
		{
			this._Base_WorkPost = default(EntityRef<Base_WorkPost>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSSEMainDutyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HSSEMainDutyId
		{
			get
			{
				return this._HSSEMainDutyId;
			}
			set
			{
				if ((this._HSSEMainDutyId != value))
				{
					this.OnHSSEMainDutyIdChanging(value);
					this.SendPropertyChanging();
					this._HSSEMainDutyId = value;
					this.SendPropertyChanged("HSSEMainDutyId");
					this.OnHSSEMainDutyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(50)")]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					if (this._Base_WorkPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkPostIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPostId = value;
					this.SendPropertyChanged("WorkPostId");
					this.OnWorkPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duties", DbType="NVarChar(500)")]
		public string Duties
		{
			get
			{
				return this._Duties;
			}
			set
			{
				if ((this._Duties != value))
				{
					this.OnDutiesChanging(value);
					this.SendPropertyChanging();
					this._Duties = value;
					this.SendPropertyChanged("Duties");
					this.OnDutiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="NVarChar(50)")]
		public string SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HSSESystem_HSSEMainDuty_Base_WorkPost", Storage="_Base_WorkPost", ThisKey="WorkPostId", OtherKey="WorkPostId", IsForeignKey=true)]
		public Base_WorkPost Base_WorkPost
		{
			get
			{
				return this._Base_WorkPost.Entity;
			}
			set
			{
				Base_WorkPost previousValue = this._Base_WorkPost.Entity;
				if (((previousValue != value) 
							|| (this._Base_WorkPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WorkPost.Entity = null;
						previousValue.HSSESystem_HSSEMainDuty.Remove(this);
					}
					this._Base_WorkPost.Entity = value;
					if ((value != null))
					{
						value.HSSESystem_HSSEMainDuty.Add(this);
						this._WorkPostId = value.WorkPostId;
					}
					else
					{
						this._WorkPostId = default(string);
					}
					this.SendPropertyChanged("Base_WorkPost");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InformationProject_ConstructionStandardIdentify")]
	public partial class InformationProject_ConstructionStandardIdentify : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConstructionStandardIdentifyId;
		
		private string _ConstructionStandardIdentifyCode;
		
		private string _VersionNumber;
		
		private string _ProjectId;
		
		private string _IdentifyPerson;
		
		private System.Nullable<System.DateTime> _IdentifyDate;
		
		private string _State;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<InformationProject_ConstructionStandardSelectedItem> _InformationProject_ConstructionStandardSelectedItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConstructionStandardIdentifyIdChanging(string value);
    partial void OnConstructionStandardIdentifyIdChanged();
    partial void OnConstructionStandardIdentifyCodeChanging(string value);
    partial void OnConstructionStandardIdentifyCodeChanged();
    partial void OnVersionNumberChanging(string value);
    partial void OnVersionNumberChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnIdentifyPersonChanging(string value);
    partial void OnIdentifyPersonChanged();
    partial void OnIdentifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIdentifyDateChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public InformationProject_ConstructionStandardIdentify()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._InformationProject_ConstructionStandardSelectedItem = new EntitySet<InformationProject_ConstructionStandardSelectedItem>(new Action<InformationProject_ConstructionStandardSelectedItem>(this.attach_InformationProject_ConstructionStandardSelectedItem), new Action<InformationProject_ConstructionStandardSelectedItem>(this.detach_InformationProject_ConstructionStandardSelectedItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructionStandardIdentifyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConstructionStandardIdentifyId
		{
			get
			{
				return this._ConstructionStandardIdentifyId;
			}
			set
			{
				if ((this._ConstructionStandardIdentifyId != value))
				{
					this.OnConstructionStandardIdentifyIdChanging(value);
					this.SendPropertyChanging();
					this._ConstructionStandardIdentifyId = value;
					this.SendPropertyChanged("ConstructionStandardIdentifyId");
					this.OnConstructionStandardIdentifyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructionStandardIdentifyCode", DbType="NVarChar(30)")]
		public string ConstructionStandardIdentifyCode
		{
			get
			{
				return this._ConstructionStandardIdentifyCode;
			}
			set
			{
				if ((this._ConstructionStandardIdentifyCode != value))
				{
					this.OnConstructionStandardIdentifyCodeChanging(value);
					this.SendPropertyChanging();
					this._ConstructionStandardIdentifyCode = value;
					this.SendPropertyChanged("ConstructionStandardIdentifyCode");
					this.OnConstructionStandardIdentifyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNumber", DbType="NVarChar(10)")]
		public string VersionNumber
		{
			get
			{
				return this._VersionNumber;
			}
			set
			{
				if ((this._VersionNumber != value))
				{
					this.OnVersionNumberChanging(value);
					this.SendPropertyChanging();
					this._VersionNumber = value;
					this.SendPropertyChanged("VersionNumber");
					this.OnVersionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifyPerson", DbType="NVarChar(50)")]
		public string IdentifyPerson
		{
			get
			{
				return this._IdentifyPerson;
			}
			set
			{
				if ((this._IdentifyPerson != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdentifyPersonChanging(value);
					this.SendPropertyChanging();
					this._IdentifyPerson = value;
					this.SendPropertyChanged("IdentifyPerson");
					this.OnIdentifyPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IdentifyDate
		{
			get
			{
				return this._IdentifyDate;
			}
			set
			{
				if ((this._IdentifyDate != value))
				{
					this.OnIdentifyDateChanging(value);
					this.SendPropertyChanging();
					this._IdentifyDate = value;
					this.SendPropertyChanged("IdentifyDate");
					this.OnIdentifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NChar(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(150)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Common_ConstructionStandardIdentify_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.InformationProject_ConstructionStandardIdentify.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.InformationProject_ConstructionStandardIdentify.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_InformationProject_ConstructionStandardIdentify_Sys_User", Storage="_Sys_User", ThisKey="IdentifyPerson", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.InformationProject_ConstructionStandardIdentify.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.InformationProject_ConstructionStandardIdentify.Add(this);
						this._IdentifyPerson = value.UserId;
					}
					else
					{
						this._IdentifyPerson = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_InformationProject_ConstructionStandardSelectedItem_InformationProject_Constru" +
			"ctionStandardIdentify", Storage="_InformationProject_ConstructionStandardSelectedItem", ThisKey="ConstructionStandardIdentifyId", OtherKey="ConstructionStandardIdentifyId", DeleteRule="NO ACTION")]
		public EntitySet<InformationProject_ConstructionStandardSelectedItem> InformationProject_ConstructionStandardSelectedItem
		{
			get
			{
				return this._InformationProject_ConstructionStandardSelectedItem;
			}
			set
			{
				this._InformationProject_ConstructionStandardSelectedItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InformationProject_ConstructionStandardSelectedItem(InformationProject_ConstructionStandardSelectedItem entity)
		{
			this.SendPropertyChanging();
			entity.InformationProject_ConstructionStandardIdentify = this;
		}
		
		private void detach_InformationProject_ConstructionStandardSelectedItem(InformationProject_ConstructionStandardSelectedItem entity)
		{
			this.SendPropertyChanging();
			entity.InformationProject_ConstructionStandardIdentify = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InformationProject_ConstructionStandardSelectedItem")]
	public partial class InformationProject_ConstructionStandardSelectedItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConstructionStandardSelectedItemId;
		
		private string _ConstructionStandardIdentifyId;
		
		private string _StandardId;
		
		private EntityRef<InformationProject_ConstructionStandardIdentify> _InformationProject_ConstructionStandardIdentify;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConstructionStandardSelectedItemIdChanging(string value);
    partial void OnConstructionStandardSelectedItemIdChanged();
    partial void OnConstructionStandardIdentifyIdChanging(string value);
    partial void OnConstructionStandardIdentifyIdChanged();
    partial void OnStandardIdChanging(string value);
    partial void OnStandardIdChanged();
    #endregion
		
		public InformationProject_ConstructionStandardSelectedItem()
		{
			this._InformationProject_ConstructionStandardIdentify = default(EntityRef<InformationProject_ConstructionStandardIdentify>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructionStandardSelectedItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConstructionStandardSelectedItemId
		{
			get
			{
				return this._ConstructionStandardSelectedItemId;
			}
			set
			{
				if ((this._ConstructionStandardSelectedItemId != value))
				{
					this.OnConstructionStandardSelectedItemIdChanging(value);
					this.SendPropertyChanging();
					this._ConstructionStandardSelectedItemId = value;
					this.SendPropertyChanged("ConstructionStandardSelectedItemId");
					this.OnConstructionStandardSelectedItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructionStandardIdentifyId", DbType="NVarChar(50)")]
		public string ConstructionStandardIdentifyId
		{
			get
			{
				return this._ConstructionStandardIdentifyId;
			}
			set
			{
				if ((this._ConstructionStandardIdentifyId != value))
				{
					if (this._InformationProject_ConstructionStandardIdentify.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConstructionStandardIdentifyIdChanging(value);
					this.SendPropertyChanging();
					this._ConstructionStandardIdentifyId = value;
					this.SendPropertyChanged("ConstructionStandardIdentifyId");
					this.OnConstructionStandardIdentifyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardId", DbType="NVarChar(50)")]
		public string StandardId
		{
			get
			{
				return this._StandardId;
			}
			set
			{
				if ((this._StandardId != value))
				{
					this.OnStandardIdChanging(value);
					this.SendPropertyChanging();
					this._StandardId = value;
					this.SendPropertyChanged("StandardId");
					this.OnStandardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_InformationProject_ConstructionStandardSelectedItem_InformationProject_Constru" +
			"ctionStandardIdentify", Storage="_InformationProject_ConstructionStandardIdentify", ThisKey="ConstructionStandardIdentifyId", OtherKey="ConstructionStandardIdentifyId", IsForeignKey=true)]
		public InformationProject_ConstructionStandardIdentify InformationProject_ConstructionStandardIdentify
		{
			get
			{
				return this._InformationProject_ConstructionStandardIdentify.Entity;
			}
			set
			{
				InformationProject_ConstructionStandardIdentify previousValue = this._InformationProject_ConstructionStandardIdentify.Entity;
				if (((previousValue != value) 
							|| (this._InformationProject_ConstructionStandardIdentify.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InformationProject_ConstructionStandardIdentify.Entity = null;
						previousValue.InformationProject_ConstructionStandardSelectedItem.Remove(this);
					}
					this._InformationProject_ConstructionStandardIdentify.Entity = value;
					if ((value != null))
					{
						value.InformationProject_ConstructionStandardSelectedItem.Add(this);
						this._ConstructionStandardIdentifyId = value.ConstructionStandardIdentifyId;
					}
					else
					{
						this._ConstructionStandardIdentifyId = default(string);
					}
					this.SendPropertyChanged("InformationProject_ConstructionStandardIdentify");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Law_HSSEStandardsList")]
	public partial class Law_HSSEStandardsList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StandardId;
		
		private string _StandardGrade;
		
		private string _StandardNo;
		
		private string _StandardName;
		
		private string _TypeId;
		
		private string _AttachUrl;
		
		private System.Nullable<bool> _IsSelected1;
		
		private System.Nullable<bool> _IsSelected2;
		
		private System.Nullable<bool> _IsSelected3;
		
		private System.Nullable<bool> _IsSelected4;
		
		private System.Nullable<bool> _IsSelected5;
		
		private System.Nullable<bool> _IsSelected6;
		
		private System.Nullable<bool> _IsSelected7;
		
		private System.Nullable<bool> _IsSelected8;
		
		private System.Nullable<bool> _IsSelected9;
		
		private System.Nullable<bool> _IsSelected10;
		
		private System.Nullable<bool> _IsSelected11;
		
		private System.Nullable<bool> _IsSelected12;
		
		private System.Nullable<bool> _IsSelected13;
		
		private System.Nullable<bool> _IsSelected14;
		
		private System.Nullable<bool> _IsSelected15;
		
		private System.Nullable<bool> _IsSelected16;
		
		private System.Nullable<bool> _IsSelected17;
		
		private System.Nullable<bool> _IsSelected18;
		
		private System.Nullable<bool> _IsSelected19;
		
		private System.Nullable<bool> _IsSelected20;
		
		private System.Nullable<bool> _IsSelected21;
		
		private System.Nullable<bool> _IsSelected22;
		
		private System.Nullable<bool> _IsSelected23;
		
		private System.Nullable<bool> _IsSelected90;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private System.Nullable<bool> _IsSelected24;
		
		private System.Nullable<bool> _IsSelected25;
		
		private EntityRef<Base_HSSEStandardListType> _Base_HSSEStandardListType;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStandardIdChanging(string value);
    partial void OnStandardIdChanged();
    partial void OnStandardGradeChanging(string value);
    partial void OnStandardGradeChanged();
    partial void OnStandardNoChanging(string value);
    partial void OnStandardNoChanged();
    partial void OnStandardNameChanging(string value);
    partial void OnStandardNameChanged();
    partial void OnTypeIdChanging(string value);
    partial void OnTypeIdChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnIsSelected1Changing(System.Nullable<bool> value);
    partial void OnIsSelected1Changed();
    partial void OnIsSelected2Changing(System.Nullable<bool> value);
    partial void OnIsSelected2Changed();
    partial void OnIsSelected3Changing(System.Nullable<bool> value);
    partial void OnIsSelected3Changed();
    partial void OnIsSelected4Changing(System.Nullable<bool> value);
    partial void OnIsSelected4Changed();
    partial void OnIsSelected5Changing(System.Nullable<bool> value);
    partial void OnIsSelected5Changed();
    partial void OnIsSelected6Changing(System.Nullable<bool> value);
    partial void OnIsSelected6Changed();
    partial void OnIsSelected7Changing(System.Nullable<bool> value);
    partial void OnIsSelected7Changed();
    partial void OnIsSelected8Changing(System.Nullable<bool> value);
    partial void OnIsSelected8Changed();
    partial void OnIsSelected9Changing(System.Nullable<bool> value);
    partial void OnIsSelected9Changed();
    partial void OnIsSelected10Changing(System.Nullable<bool> value);
    partial void OnIsSelected10Changed();
    partial void OnIsSelected11Changing(System.Nullable<bool> value);
    partial void OnIsSelected11Changed();
    partial void OnIsSelected12Changing(System.Nullable<bool> value);
    partial void OnIsSelected12Changed();
    partial void OnIsSelected13Changing(System.Nullable<bool> value);
    partial void OnIsSelected13Changed();
    partial void OnIsSelected14Changing(System.Nullable<bool> value);
    partial void OnIsSelected14Changed();
    partial void OnIsSelected15Changing(System.Nullable<bool> value);
    partial void OnIsSelected15Changed();
    partial void OnIsSelected16Changing(System.Nullable<bool> value);
    partial void OnIsSelected16Changed();
    partial void OnIsSelected17Changing(System.Nullable<bool> value);
    partial void OnIsSelected17Changed();
    partial void OnIsSelected18Changing(System.Nullable<bool> value);
    partial void OnIsSelected18Changed();
    partial void OnIsSelected19Changing(System.Nullable<bool> value);
    partial void OnIsSelected19Changed();
    partial void OnIsSelected20Changing(System.Nullable<bool> value);
    partial void OnIsSelected20Changed();
    partial void OnIsSelected21Changing(System.Nullable<bool> value);
    partial void OnIsSelected21Changed();
    partial void OnIsSelected22Changing(System.Nullable<bool> value);
    partial void OnIsSelected22Changed();
    partial void OnIsSelected23Changing(System.Nullable<bool> value);
    partial void OnIsSelected23Changed();
    partial void OnIsSelected90Changing(System.Nullable<bool> value);
    partial void OnIsSelected90Changed();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    partial void OnIsSelected24Changing(System.Nullable<bool> value);
    partial void OnIsSelected24Changed();
    partial void OnIsSelected25Changing(System.Nullable<bool> value);
    partial void OnIsSelected25Changed();
    #endregion
		
		public Law_HSSEStandardsList()
		{
			this._Base_HSSEStandardListType = default(EntityRef<Base_HSSEStandardListType>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StandardId
		{
			get
			{
				return this._StandardId;
			}
			set
			{
				if ((this._StandardId != value))
				{
					this.OnStandardIdChanging(value);
					this.SendPropertyChanging();
					this._StandardId = value;
					this.SendPropertyChanged("StandardId");
					this.OnStandardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardGrade", DbType="NChar(12)")]
		public string StandardGrade
		{
			get
			{
				return this._StandardGrade;
			}
			set
			{
				if ((this._StandardGrade != value))
				{
					this.OnStandardGradeChanging(value);
					this.SendPropertyChanging();
					this._StandardGrade = value;
					this.SendPropertyChanged("StandardGrade");
					this.OnStandardGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardNo", DbType="NVarChar(25)")]
		public string StandardNo
		{
			get
			{
				return this._StandardNo;
			}
			set
			{
				if ((this._StandardNo != value))
				{
					this.OnStandardNoChanging(value);
					this.SendPropertyChanging();
					this._StandardNo = value;
					this.SendPropertyChanged("StandardNo");
					this.OnStandardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardName", DbType="NVarChar(100)")]
		public string StandardName
		{
			get
			{
				return this._StandardName;
			}
			set
			{
				if ((this._StandardName != value))
				{
					this.OnStandardNameChanging(value);
					this.SendPropertyChanging();
					this._StandardName = value;
					this.SendPropertyChanged("StandardName");
					this.OnStandardNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="NVarChar(50)")]
		public string TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._Base_HSSEStandardListType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected1", DbType="Bit")]
		public System.Nullable<bool> IsSelected1
		{
			get
			{
				return this._IsSelected1;
			}
			set
			{
				if ((this._IsSelected1 != value))
				{
					this.OnIsSelected1Changing(value);
					this.SendPropertyChanging();
					this._IsSelected1 = value;
					this.SendPropertyChanged("IsSelected1");
					this.OnIsSelected1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected2", DbType="Bit")]
		public System.Nullable<bool> IsSelected2
		{
			get
			{
				return this._IsSelected2;
			}
			set
			{
				if ((this._IsSelected2 != value))
				{
					this.OnIsSelected2Changing(value);
					this.SendPropertyChanging();
					this._IsSelected2 = value;
					this.SendPropertyChanged("IsSelected2");
					this.OnIsSelected2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected3", DbType="Bit")]
		public System.Nullable<bool> IsSelected3
		{
			get
			{
				return this._IsSelected3;
			}
			set
			{
				if ((this._IsSelected3 != value))
				{
					this.OnIsSelected3Changing(value);
					this.SendPropertyChanging();
					this._IsSelected3 = value;
					this.SendPropertyChanged("IsSelected3");
					this.OnIsSelected3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected4", DbType="Bit")]
		public System.Nullable<bool> IsSelected4
		{
			get
			{
				return this._IsSelected4;
			}
			set
			{
				if ((this._IsSelected4 != value))
				{
					this.OnIsSelected4Changing(value);
					this.SendPropertyChanging();
					this._IsSelected4 = value;
					this.SendPropertyChanged("IsSelected4");
					this.OnIsSelected4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected5", DbType="Bit")]
		public System.Nullable<bool> IsSelected5
		{
			get
			{
				return this._IsSelected5;
			}
			set
			{
				if ((this._IsSelected5 != value))
				{
					this.OnIsSelected5Changing(value);
					this.SendPropertyChanging();
					this._IsSelected5 = value;
					this.SendPropertyChanged("IsSelected5");
					this.OnIsSelected5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected6", DbType="Bit")]
		public System.Nullable<bool> IsSelected6
		{
			get
			{
				return this._IsSelected6;
			}
			set
			{
				if ((this._IsSelected6 != value))
				{
					this.OnIsSelected6Changing(value);
					this.SendPropertyChanging();
					this._IsSelected6 = value;
					this.SendPropertyChanged("IsSelected6");
					this.OnIsSelected6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected7", DbType="Bit")]
		public System.Nullable<bool> IsSelected7
		{
			get
			{
				return this._IsSelected7;
			}
			set
			{
				if ((this._IsSelected7 != value))
				{
					this.OnIsSelected7Changing(value);
					this.SendPropertyChanging();
					this._IsSelected7 = value;
					this.SendPropertyChanged("IsSelected7");
					this.OnIsSelected7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected8", DbType="Bit")]
		public System.Nullable<bool> IsSelected8
		{
			get
			{
				return this._IsSelected8;
			}
			set
			{
				if ((this._IsSelected8 != value))
				{
					this.OnIsSelected8Changing(value);
					this.SendPropertyChanging();
					this._IsSelected8 = value;
					this.SendPropertyChanged("IsSelected8");
					this.OnIsSelected8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected9", DbType="Bit")]
		public System.Nullable<bool> IsSelected9
		{
			get
			{
				return this._IsSelected9;
			}
			set
			{
				if ((this._IsSelected9 != value))
				{
					this.OnIsSelected9Changing(value);
					this.SendPropertyChanging();
					this._IsSelected9 = value;
					this.SendPropertyChanged("IsSelected9");
					this.OnIsSelected9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected10", DbType="Bit")]
		public System.Nullable<bool> IsSelected10
		{
			get
			{
				return this._IsSelected10;
			}
			set
			{
				if ((this._IsSelected10 != value))
				{
					this.OnIsSelected10Changing(value);
					this.SendPropertyChanging();
					this._IsSelected10 = value;
					this.SendPropertyChanged("IsSelected10");
					this.OnIsSelected10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected11", DbType="Bit")]
		public System.Nullable<bool> IsSelected11
		{
			get
			{
				return this._IsSelected11;
			}
			set
			{
				if ((this._IsSelected11 != value))
				{
					this.OnIsSelected11Changing(value);
					this.SendPropertyChanging();
					this._IsSelected11 = value;
					this.SendPropertyChanged("IsSelected11");
					this.OnIsSelected11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected12", DbType="Bit")]
		public System.Nullable<bool> IsSelected12
		{
			get
			{
				return this._IsSelected12;
			}
			set
			{
				if ((this._IsSelected12 != value))
				{
					this.OnIsSelected12Changing(value);
					this.SendPropertyChanging();
					this._IsSelected12 = value;
					this.SendPropertyChanged("IsSelected12");
					this.OnIsSelected12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected13", DbType="Bit")]
		public System.Nullable<bool> IsSelected13
		{
			get
			{
				return this._IsSelected13;
			}
			set
			{
				if ((this._IsSelected13 != value))
				{
					this.OnIsSelected13Changing(value);
					this.SendPropertyChanging();
					this._IsSelected13 = value;
					this.SendPropertyChanged("IsSelected13");
					this.OnIsSelected13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected14", DbType="Bit")]
		public System.Nullable<bool> IsSelected14
		{
			get
			{
				return this._IsSelected14;
			}
			set
			{
				if ((this._IsSelected14 != value))
				{
					this.OnIsSelected14Changing(value);
					this.SendPropertyChanging();
					this._IsSelected14 = value;
					this.SendPropertyChanged("IsSelected14");
					this.OnIsSelected14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected15", DbType="Bit")]
		public System.Nullable<bool> IsSelected15
		{
			get
			{
				return this._IsSelected15;
			}
			set
			{
				if ((this._IsSelected15 != value))
				{
					this.OnIsSelected15Changing(value);
					this.SendPropertyChanging();
					this._IsSelected15 = value;
					this.SendPropertyChanged("IsSelected15");
					this.OnIsSelected15Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected16", DbType="Bit")]
		public System.Nullable<bool> IsSelected16
		{
			get
			{
				return this._IsSelected16;
			}
			set
			{
				if ((this._IsSelected16 != value))
				{
					this.OnIsSelected16Changing(value);
					this.SendPropertyChanging();
					this._IsSelected16 = value;
					this.SendPropertyChanged("IsSelected16");
					this.OnIsSelected16Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected17", DbType="Bit")]
		public System.Nullable<bool> IsSelected17
		{
			get
			{
				return this._IsSelected17;
			}
			set
			{
				if ((this._IsSelected17 != value))
				{
					this.OnIsSelected17Changing(value);
					this.SendPropertyChanging();
					this._IsSelected17 = value;
					this.SendPropertyChanged("IsSelected17");
					this.OnIsSelected17Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected18", DbType="Bit")]
		public System.Nullable<bool> IsSelected18
		{
			get
			{
				return this._IsSelected18;
			}
			set
			{
				if ((this._IsSelected18 != value))
				{
					this.OnIsSelected18Changing(value);
					this.SendPropertyChanging();
					this._IsSelected18 = value;
					this.SendPropertyChanged("IsSelected18");
					this.OnIsSelected18Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected19", DbType="Bit")]
		public System.Nullable<bool> IsSelected19
		{
			get
			{
				return this._IsSelected19;
			}
			set
			{
				if ((this._IsSelected19 != value))
				{
					this.OnIsSelected19Changing(value);
					this.SendPropertyChanging();
					this._IsSelected19 = value;
					this.SendPropertyChanged("IsSelected19");
					this.OnIsSelected19Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected20", DbType="Bit")]
		public System.Nullable<bool> IsSelected20
		{
			get
			{
				return this._IsSelected20;
			}
			set
			{
				if ((this._IsSelected20 != value))
				{
					this.OnIsSelected20Changing(value);
					this.SendPropertyChanging();
					this._IsSelected20 = value;
					this.SendPropertyChanged("IsSelected20");
					this.OnIsSelected20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected21", DbType="Bit")]
		public System.Nullable<bool> IsSelected21
		{
			get
			{
				return this._IsSelected21;
			}
			set
			{
				if ((this._IsSelected21 != value))
				{
					this.OnIsSelected21Changing(value);
					this.SendPropertyChanging();
					this._IsSelected21 = value;
					this.SendPropertyChanged("IsSelected21");
					this.OnIsSelected21Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected22", DbType="Bit")]
		public System.Nullable<bool> IsSelected22
		{
			get
			{
				return this._IsSelected22;
			}
			set
			{
				if ((this._IsSelected22 != value))
				{
					this.OnIsSelected22Changing(value);
					this.SendPropertyChanging();
					this._IsSelected22 = value;
					this.SendPropertyChanged("IsSelected22");
					this.OnIsSelected22Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected23", DbType="Bit")]
		public System.Nullable<bool> IsSelected23
		{
			get
			{
				return this._IsSelected23;
			}
			set
			{
				if ((this._IsSelected23 != value))
				{
					this.OnIsSelected23Changing(value);
					this.SendPropertyChanging();
					this._IsSelected23 = value;
					this.SendPropertyChanged("IsSelected23");
					this.OnIsSelected23Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected90", DbType="Bit")]
		public System.Nullable<bool> IsSelected90
		{
			get
			{
				return this._IsSelected90;
			}
			set
			{
				if ((this._IsSelected90 != value))
				{
					this.OnIsSelected90Changing(value);
					this.SendPropertyChanging();
					this._IsSelected90 = value;
					this.SendPropertyChanged("IsSelected90");
					this.OnIsSelected90Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected24", DbType="Bit")]
		public System.Nullable<bool> IsSelected24
		{
			get
			{
				return this._IsSelected24;
			}
			set
			{
				if ((this._IsSelected24 != value))
				{
					this.OnIsSelected24Changing(value);
					this.SendPropertyChanging();
					this._IsSelected24 = value;
					this.SendPropertyChanged("IsSelected24");
					this.OnIsSelected24Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected25", DbType="Bit")]
		public System.Nullable<bool> IsSelected25
		{
			get
			{
				return this._IsSelected25;
			}
			set
			{
				if ((this._IsSelected25 != value))
				{
					this.OnIsSelected25Changing(value);
					this.SendPropertyChanging();
					this._IsSelected25 = value;
					this.SendPropertyChanged("IsSelected25");
					this.OnIsSelected25Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_HSSEStandardsList_Base_HSSEStandardListType", Storage="_Base_HSSEStandardListType", ThisKey="TypeId", OtherKey="TypeId", IsForeignKey=true)]
		public Base_HSSEStandardListType Base_HSSEStandardListType
		{
			get
			{
				return this._Base_HSSEStandardListType.Entity;
			}
			set
			{
				Base_HSSEStandardListType previousValue = this._Base_HSSEStandardListType.Entity;
				if (((previousValue != value) 
							|| (this._Base_HSSEStandardListType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_HSSEStandardListType.Entity = null;
						previousValue.Law_HSSEStandardsList.Remove(this);
					}
					this._Base_HSSEStandardListType.Entity = value;
					if ((value != null))
					{
						value.Law_HSSEStandardsList.Add(this);
						this._TypeId = value.TypeId;
					}
					else
					{
						this._TypeId = default(string);
					}
					this.SendPropertyChanged("Base_HSSEStandardListType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_HSSEStandardsList_Sys_User2", Storage="_Sys_User", ThisKey="AuditMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Law_HSSEStandardsList.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Law_HSSEStandardsList.Add(this);
						this._AuditMan = value.UserId;
					}
					else
					{
						this._AuditMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Law_LawRegulationIdentify")]
	public partial class Law_LawRegulationIdentify : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LawRegulationIdentifyId;
		
		private string _LawRegulationIdentifyCode;
		
		private string _VersionNumber;
		
		private string _ProjectId;
		
		private string _IdentifyPerson;
		
		private System.Nullable<System.DateTime> _IdentifyDate;
		
		private string _ManagerContent;
		
		private string _IdentifyConclude;
		
		private string _States;
		
		private string _GroupMember;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntitySet<Law_LawRegulationSelectedItem> _Law_LawRegulationSelectedItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLawRegulationIdentifyIdChanging(string value);
    partial void OnLawRegulationIdentifyIdChanged();
    partial void OnLawRegulationIdentifyCodeChanging(string value);
    partial void OnLawRegulationIdentifyCodeChanged();
    partial void OnVersionNumberChanging(string value);
    partial void OnVersionNumberChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnIdentifyPersonChanging(string value);
    partial void OnIdentifyPersonChanged();
    partial void OnIdentifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIdentifyDateChanged();
    partial void OnManagerContentChanging(string value);
    partial void OnManagerContentChanged();
    partial void OnIdentifyConcludeChanging(string value);
    partial void OnIdentifyConcludeChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnGroupMemberChanging(string value);
    partial void OnGroupMemberChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Law_LawRegulationIdentify()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Law_LawRegulationSelectedItem = new EntitySet<Law_LawRegulationSelectedItem>(new Action<Law_LawRegulationSelectedItem>(this.attach_Law_LawRegulationSelectedItem), new Action<Law_LawRegulationSelectedItem>(this.detach_Law_LawRegulationSelectedItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationIdentifyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LawRegulationIdentifyId
		{
			get
			{
				return this._LawRegulationIdentifyId;
			}
			set
			{
				if ((this._LawRegulationIdentifyId != value))
				{
					this.OnLawRegulationIdentifyIdChanging(value);
					this.SendPropertyChanging();
					this._LawRegulationIdentifyId = value;
					this.SendPropertyChanged("LawRegulationIdentifyId");
					this.OnLawRegulationIdentifyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationIdentifyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LawRegulationIdentifyCode
		{
			get
			{
				return this._LawRegulationIdentifyCode;
			}
			set
			{
				if ((this._LawRegulationIdentifyCode != value))
				{
					this.OnLawRegulationIdentifyCodeChanging(value);
					this.SendPropertyChanging();
					this._LawRegulationIdentifyCode = value;
					this.SendPropertyChanged("LawRegulationIdentifyCode");
					this.OnLawRegulationIdentifyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNumber", DbType="NVarChar(10)")]
		public string VersionNumber
		{
			get
			{
				return this._VersionNumber;
			}
			set
			{
				if ((this._VersionNumber != value))
				{
					this.OnVersionNumberChanging(value);
					this.SendPropertyChanging();
					this._VersionNumber = value;
					this.SendPropertyChanged("VersionNumber");
					this.OnVersionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifyPerson", DbType="NVarChar(50)")]
		public string IdentifyPerson
		{
			get
			{
				return this._IdentifyPerson;
			}
			set
			{
				if ((this._IdentifyPerson != value))
				{
					this.OnIdentifyPersonChanging(value);
					this.SendPropertyChanging();
					this._IdentifyPerson = value;
					this.SendPropertyChanged("IdentifyPerson");
					this.OnIdentifyPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IdentifyDate
		{
			get
			{
				return this._IdentifyDate;
			}
			set
			{
				if ((this._IdentifyDate != value))
				{
					this.OnIdentifyDateChanging(value);
					this.SendPropertyChanging();
					this._IdentifyDate = value;
					this.SendPropertyChanged("IdentifyDate");
					this.OnIdentifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ManagerContent
		{
			get
			{
				return this._ManagerContent;
			}
			set
			{
				if ((this._ManagerContent != value))
				{
					this.OnManagerContentChanging(value);
					this.SendPropertyChanging();
					this._ManagerContent = value;
					this.SendPropertyChanged("ManagerContent");
					this.OnManagerContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifyConclude", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string IdentifyConclude
		{
			get
			{
				return this._IdentifyConclude;
			}
			set
			{
				if ((this._IdentifyConclude != value))
				{
					this.OnIdentifyConcludeChanging(value);
					this.SendPropertyChanging();
					this._IdentifyConclude = value;
					this.SendPropertyChanged("IdentifyConclude");
					this.OnIdentifyConcludeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="NChar(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupMember", DbType="NVarChar(150)")]
		public string GroupMember
		{
			get
			{
				return this._GroupMember;
			}
			set
			{
				if ((this._GroupMember != value))
				{
					this.OnGroupMemberChanging(value);
					this.SendPropertyChanging();
					this._GroupMember = value;
					this.SendPropertyChanged("GroupMember");
					this.OnGroupMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(150)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_LawRegulationIdentify_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Law_LawRegulationIdentify.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Law_LawRegulationIdentify.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_LawRegulationSelectedItem_Law_LawRegulationIdentify", Storage="_Law_LawRegulationSelectedItem", ThisKey="LawRegulationIdentifyId", OtherKey="LawRegulationIdentifyId", DeleteRule="NO ACTION")]
		public EntitySet<Law_LawRegulationSelectedItem> Law_LawRegulationSelectedItem
		{
			get
			{
				return this._Law_LawRegulationSelectedItem;
			}
			set
			{
				this._Law_LawRegulationSelectedItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Law_LawRegulationSelectedItem(Law_LawRegulationSelectedItem entity)
		{
			this.SendPropertyChanging();
			entity.Law_LawRegulationIdentify = this;
		}
		
		private void detach_Law_LawRegulationSelectedItem(Law_LawRegulationSelectedItem entity)
		{
			this.SendPropertyChanging();
			entity.Law_LawRegulationIdentify = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Law_LawRegulationList")]
	public partial class Law_LawRegulationList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LawRegulationId;
		
		private string _LawRegulationCode;
		
		private string _LawRegulationName;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private string _Description;
		
		private string _AttachUrl;
		
		private string _LawsRegulationsTypeId;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private EntityRef<Base_LawsRegulationsType> _Base_LawsRegulationsType;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<Law_LawRegulationSelectedItem> _Law_LawRegulationSelectedItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLawRegulationIdChanging(string value);
    partial void OnLawRegulationIdChanged();
    partial void OnLawRegulationCodeChanging(string value);
    partial void OnLawRegulationCodeChanged();
    partial void OnLawRegulationNameChanging(string value);
    partial void OnLawRegulationNameChanged();
    partial void OnApprovalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovalDateChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnLawsRegulationsTypeIdChanging(string value);
    partial void OnLawsRegulationsTypeIdChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    #endregion
		
		public Law_LawRegulationList()
		{
			this._Base_LawsRegulationsType = default(EntityRef<Base_LawsRegulationsType>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Law_LawRegulationSelectedItem = new EntitySet<Law_LawRegulationSelectedItem>(new Action<Law_LawRegulationSelectedItem>(this.attach_Law_LawRegulationSelectedItem), new Action<Law_LawRegulationSelectedItem>(this.detach_Law_LawRegulationSelectedItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LawRegulationId
		{
			get
			{
				return this._LawRegulationId;
			}
			set
			{
				if ((this._LawRegulationId != value))
				{
					this.OnLawRegulationIdChanging(value);
					this.SendPropertyChanging();
					this._LawRegulationId = value;
					this.SendPropertyChanged("LawRegulationId");
					this.OnLawRegulationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationCode", DbType="NVarChar(300)")]
		public string LawRegulationCode
		{
			get
			{
				return this._LawRegulationCode;
			}
			set
			{
				if ((this._LawRegulationCode != value))
				{
					this.OnLawRegulationCodeChanging(value);
					this.SendPropertyChanging();
					this._LawRegulationCode = value;
					this.SendPropertyChanged("LawRegulationCode");
					this.OnLawRegulationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationName", DbType="NVarChar(500)")]
		public string LawRegulationName
		{
			get
			{
				return this._LawRegulationName;
			}
			set
			{
				if ((this._LawRegulationName != value))
				{
					this.OnLawRegulationNameChanging(value);
					this.SendPropertyChanging();
					this._LawRegulationName = value;
					this.SendPropertyChanged("LawRegulationName");
					this.OnLawRegulationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this.OnApprovalDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovalDate = value;
					this.SendPropertyChanged("ApprovalDate");
					this.OnApprovalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawsRegulationsTypeId", DbType="NVarChar(50)")]
		public string LawsRegulationsTypeId
		{
			get
			{
				return this._LawsRegulationsTypeId;
			}
			set
			{
				if ((this._LawsRegulationsTypeId != value))
				{
					if (this._Base_LawsRegulationsType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLawsRegulationsTypeIdChanging(value);
					this.SendPropertyChanging();
					this._LawsRegulationsTypeId = value;
					this.SendPropertyChanged("LawsRegulationsTypeId");
					this.OnLawsRegulationsTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_LawRegulationList_Base_LawsRegulationsType", Storage="_Base_LawsRegulationsType", ThisKey="LawsRegulationsTypeId", OtherKey="Id", IsForeignKey=true)]
		public Base_LawsRegulationsType Base_LawsRegulationsType
		{
			get
			{
				return this._Base_LawsRegulationsType.Entity;
			}
			set
			{
				Base_LawsRegulationsType previousValue = this._Base_LawsRegulationsType.Entity;
				if (((previousValue != value) 
							|| (this._Base_LawsRegulationsType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_LawsRegulationsType.Entity = null;
						previousValue.Law_LawRegulationList.Remove(this);
					}
					this._Base_LawsRegulationsType.Entity = value;
					if ((value != null))
					{
						value.Law_LawRegulationList.Add(this);
						this._LawsRegulationsTypeId = value.Id;
					}
					else
					{
						this._LawsRegulationsTypeId = default(string);
					}
					this.SendPropertyChanged("Base_LawsRegulationsType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_LawRegulationList_Sys_User1", Storage="_Sys_User", ThisKey="AuditMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Law_LawRegulationList.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Law_LawRegulationList.Add(this);
						this._AuditMan = value.UserId;
					}
					else
					{
						this._AuditMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_LawRegulationSelectedItem_Law_LawRegulationList", Storage="_Law_LawRegulationSelectedItem", ThisKey="LawRegulationId", OtherKey="LawRegulationId", DeleteRule="NO ACTION")]
		public EntitySet<Law_LawRegulationSelectedItem> Law_LawRegulationSelectedItem
		{
			get
			{
				return this._Law_LawRegulationSelectedItem;
			}
			set
			{
				this._Law_LawRegulationSelectedItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Law_LawRegulationSelectedItem(Law_LawRegulationSelectedItem entity)
		{
			this.SendPropertyChanging();
			entity.Law_LawRegulationList = this;
		}
		
		private void detach_Law_LawRegulationSelectedItem(Law_LawRegulationSelectedItem entity)
		{
			this.SendPropertyChanging();
			entity.Law_LawRegulationList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Law_LawRegulationSelectedItem")]
	public partial class Law_LawRegulationSelectedItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LawRegulationSelectedItemId;
		
		private string _LawRegulationIdentifyId;
		
		private string _LawRegulationGrade;
		
		private string _FitPerfomance;
		
		private string _LawRegulationId;
		
		private EntityRef<Law_LawRegulationIdentify> _Law_LawRegulationIdentify;
		
		private EntityRef<Law_LawRegulationList> _Law_LawRegulationList;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLawRegulationSelectedItemIdChanging(string value);
    partial void OnLawRegulationSelectedItemIdChanged();
    partial void OnLawRegulationIdentifyIdChanging(string value);
    partial void OnLawRegulationIdentifyIdChanged();
    partial void OnLawRegulationGradeChanging(string value);
    partial void OnLawRegulationGradeChanged();
    partial void OnFitPerfomanceChanging(string value);
    partial void OnFitPerfomanceChanged();
    partial void OnLawRegulationIdChanging(string value);
    partial void OnLawRegulationIdChanged();
    #endregion
		
		public Law_LawRegulationSelectedItem()
		{
			this._Law_LawRegulationIdentify = default(EntityRef<Law_LawRegulationIdentify>);
			this._Law_LawRegulationList = default(EntityRef<Law_LawRegulationList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationSelectedItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LawRegulationSelectedItemId
		{
			get
			{
				return this._LawRegulationSelectedItemId;
			}
			set
			{
				if ((this._LawRegulationSelectedItemId != value))
				{
					this.OnLawRegulationSelectedItemIdChanging(value);
					this.SendPropertyChanging();
					this._LawRegulationSelectedItemId = value;
					this.SendPropertyChanged("LawRegulationSelectedItemId");
					this.OnLawRegulationSelectedItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationIdentifyId", DbType="NVarChar(50)")]
		public string LawRegulationIdentifyId
		{
			get
			{
				return this._LawRegulationIdentifyId;
			}
			set
			{
				if ((this._LawRegulationIdentifyId != value))
				{
					if (this._Law_LawRegulationIdentify.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLawRegulationIdentifyIdChanging(value);
					this.SendPropertyChanging();
					this._LawRegulationIdentifyId = value;
					this.SendPropertyChanged("LawRegulationIdentifyId");
					this.OnLawRegulationIdentifyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationGrade", DbType="NVarChar(50)")]
		public string LawRegulationGrade
		{
			get
			{
				return this._LawRegulationGrade;
			}
			set
			{
				if ((this._LawRegulationGrade != value))
				{
					this.OnLawRegulationGradeChanging(value);
					this.SendPropertyChanging();
					this._LawRegulationGrade = value;
					this.SendPropertyChanged("LawRegulationGrade");
					this.OnLawRegulationGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FitPerfomance", DbType="NVarChar(100)")]
		public string FitPerfomance
		{
			get
			{
				return this._FitPerfomance;
			}
			set
			{
				if ((this._FitPerfomance != value))
				{
					this.OnFitPerfomanceChanging(value);
					this.SendPropertyChanging();
					this._FitPerfomance = value;
					this.SendPropertyChanged("FitPerfomance");
					this.OnFitPerfomanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationId", DbType="NVarChar(50)")]
		public string LawRegulationId
		{
			get
			{
				return this._LawRegulationId;
			}
			set
			{
				if ((this._LawRegulationId != value))
				{
					if (this._Law_LawRegulationList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLawRegulationIdChanging(value);
					this.SendPropertyChanging();
					this._LawRegulationId = value;
					this.SendPropertyChanged("LawRegulationId");
					this.OnLawRegulationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_LawRegulationSelectedItem_Law_LawRegulationIdentify", Storage="_Law_LawRegulationIdentify", ThisKey="LawRegulationIdentifyId", OtherKey="LawRegulationIdentifyId", IsForeignKey=true)]
		public Law_LawRegulationIdentify Law_LawRegulationIdentify
		{
			get
			{
				return this._Law_LawRegulationIdentify.Entity;
			}
			set
			{
				Law_LawRegulationIdentify previousValue = this._Law_LawRegulationIdentify.Entity;
				if (((previousValue != value) 
							|| (this._Law_LawRegulationIdentify.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Law_LawRegulationIdentify.Entity = null;
						previousValue.Law_LawRegulationSelectedItem.Remove(this);
					}
					this._Law_LawRegulationIdentify.Entity = value;
					if ((value != null))
					{
						value.Law_LawRegulationSelectedItem.Add(this);
						this._LawRegulationIdentifyId = value.LawRegulationIdentifyId;
					}
					else
					{
						this._LawRegulationIdentifyId = default(string);
					}
					this.SendPropertyChanged("Law_LawRegulationIdentify");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_LawRegulationSelectedItem_Law_LawRegulationList", Storage="_Law_LawRegulationList", ThisKey="LawRegulationId", OtherKey="LawRegulationId", IsForeignKey=true)]
		public Law_LawRegulationList Law_LawRegulationList
		{
			get
			{
				return this._Law_LawRegulationList.Entity;
			}
			set
			{
				Law_LawRegulationList previousValue = this._Law_LawRegulationList.Entity;
				if (((previousValue != value) 
							|| (this._Law_LawRegulationList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Law_LawRegulationList.Entity = null;
						previousValue.Law_LawRegulationSelectedItem.Remove(this);
					}
					this._Law_LawRegulationList.Entity = value;
					if ((value != null))
					{
						value.Law_LawRegulationSelectedItem.Add(this);
						this._LawRegulationId = value.LawRegulationId;
					}
					else
					{
						this._LawRegulationId = default(string);
					}
					this.SendPropertyChanged("Law_LawRegulationList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Law_ManageRule")]
	public partial class Law_ManageRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ManageRuleId;
		
		private string _ManageRuleCode;
		
		private string _ManageRuleName;
		
		private string _ManageRuleTypeId;
		
		private string _VersionNo;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _Remark;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private string _SeeFile;
		
		private EntityRef<Base_ManageRuleType> _Base_ManageRuleType;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManageRuleIdChanging(string value);
    partial void OnManageRuleIdChanged();
    partial void OnManageRuleCodeChanging(string value);
    partial void OnManageRuleCodeChanged();
    partial void OnManageRuleNameChanging(string value);
    partial void OnManageRuleNameChanged();
    partial void OnManageRuleTypeIdChanging(string value);
    partial void OnManageRuleTypeIdChanged();
    partial void OnVersionNoChanging(string value);
    partial void OnVersionNoChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    partial void OnSeeFileChanging(string value);
    partial void OnSeeFileChanged();
    #endregion
		
		public Law_ManageRule()
		{
			this._Base_ManageRuleType = default(EntityRef<Base_ManageRuleType>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ManageRuleId
		{
			get
			{
				return this._ManageRuleId;
			}
			set
			{
				if ((this._ManageRuleId != value))
				{
					this.OnManageRuleIdChanging(value);
					this.SendPropertyChanging();
					this._ManageRuleId = value;
					this.SendPropertyChanged("ManageRuleId");
					this.OnManageRuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManageRuleCode
		{
			get
			{
				return this._ManageRuleCode;
			}
			set
			{
				if ((this._ManageRuleCode != value))
				{
					this.OnManageRuleCodeChanging(value);
					this.SendPropertyChanging();
					this._ManageRuleCode = value;
					this.SendPropertyChanged("ManageRuleCode");
					this.OnManageRuleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManageRuleName
		{
			get
			{
				return this._ManageRuleName;
			}
			set
			{
				if ((this._ManageRuleName != value))
				{
					this.OnManageRuleNameChanging(value);
					this.SendPropertyChanging();
					this._ManageRuleName = value;
					this.SendPropertyChanged("ManageRuleName");
					this.OnManageRuleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleTypeId", DbType="NVarChar(50)")]
		public string ManageRuleTypeId
		{
			get
			{
				return this._ManageRuleTypeId;
			}
			set
			{
				if ((this._ManageRuleTypeId != value))
				{
					if (this._Base_ManageRuleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManageRuleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ManageRuleTypeId = value;
					this.SendPropertyChanged("ManageRuleTypeId");
					this.OnManageRuleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNo", DbType="NVarChar(50)")]
		public string VersionNo
		{
			get
			{
				return this._VersionNo;
			}
			set
			{
				if ((this._VersionNo != value))
				{
					this.OnVersionNoChanging(value);
					this.SendPropertyChanging();
					this._VersionNo = value;
					this.SendPropertyChanged("VersionNo");
					this.OnVersionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeeFile", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SeeFile
		{
			get
			{
				return this._SeeFile;
			}
			set
			{
				if ((this._SeeFile != value))
				{
					this.OnSeeFileChanging(value);
					this.SendPropertyChanging();
					this._SeeFile = value;
					this.SendPropertyChanged("SeeFile");
					this.OnSeeFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_ManageRule_Base_ManageRuleType", Storage="_Base_ManageRuleType", ThisKey="ManageRuleTypeId", OtherKey="ManageRuleTypeId", IsForeignKey=true)]
		public Base_ManageRuleType Base_ManageRuleType
		{
			get
			{
				return this._Base_ManageRuleType.Entity;
			}
			set
			{
				Base_ManageRuleType previousValue = this._Base_ManageRuleType.Entity;
				if (((previousValue != value) 
							|| (this._Base_ManageRuleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_ManageRuleType.Entity = null;
						previousValue.Law_ManageRule.Remove(this);
					}
					this._Base_ManageRuleType.Entity = value;
					if ((value != null))
					{
						value.Law_ManageRule.Add(this);
						this._ManageRuleTypeId = value.ManageRuleTypeId;
					}
					else
					{
						this._ManageRuleTypeId = default(string);
					}
					this.SendPropertyChanged("Base_ManageRuleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_ManageRule_Sys_User1", Storage="_Sys_User", ThisKey="AuditMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Law_ManageRule.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Law_ManageRule.Add(this);
						this._AuditMan = value.UserId;
					}
					else
					{
						this._AuditMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Law_RulesRegulations")]
	public partial class Law_RulesRegulations : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RulesRegulationsId;
		
		private string _RulesRegulationsCode;
		
		private string _RulesRegulationsName;
		
		private string _RulesRegulationsTypeId;
		
		private System.Nullable<System.DateTime> _CustomDate;
		
		private string _ApplicableScope;
		
		private string _Remark;
		
		private string _AttachUrl;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private EntityRef<Base_RulesRegulationsType> _Base_RulesRegulationsType;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRulesRegulationsIdChanging(string value);
    partial void OnRulesRegulationsIdChanged();
    partial void OnRulesRegulationsCodeChanging(string value);
    partial void OnRulesRegulationsCodeChanged();
    partial void OnRulesRegulationsNameChanging(string value);
    partial void OnRulesRegulationsNameChanged();
    partial void OnRulesRegulationsTypeIdChanging(string value);
    partial void OnRulesRegulationsTypeIdChanged();
    partial void OnCustomDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCustomDateChanged();
    partial void OnApplicableScopeChanging(string value);
    partial void OnApplicableScopeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    #endregion
		
		public Law_RulesRegulations()
		{
			this._Base_RulesRegulationsType = default(EntityRef<Base_RulesRegulationsType>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RulesRegulationsId
		{
			get
			{
				return this._RulesRegulationsId;
			}
			set
			{
				if ((this._RulesRegulationsId != value))
				{
					this.OnRulesRegulationsIdChanging(value);
					this.SendPropertyChanging();
					this._RulesRegulationsId = value;
					this.SendPropertyChanged("RulesRegulationsId");
					this.OnRulesRegulationsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsCode", DbType="NVarChar(50)")]
		public string RulesRegulationsCode
		{
			get
			{
				return this._RulesRegulationsCode;
			}
			set
			{
				if ((this._RulesRegulationsCode != value))
				{
					this.OnRulesRegulationsCodeChanging(value);
					this.SendPropertyChanging();
					this._RulesRegulationsCode = value;
					this.SendPropertyChanged("RulesRegulationsCode");
					this.OnRulesRegulationsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RulesRegulationsName
		{
			get
			{
				return this._RulesRegulationsName;
			}
			set
			{
				if ((this._RulesRegulationsName != value))
				{
					this.OnRulesRegulationsNameChanging(value);
					this.SendPropertyChanging();
					this._RulesRegulationsName = value;
					this.SendPropertyChanged("RulesRegulationsName");
					this.OnRulesRegulationsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsTypeId", DbType="NVarChar(50)")]
		public string RulesRegulationsTypeId
		{
			get
			{
				return this._RulesRegulationsTypeId;
			}
			set
			{
				if ((this._RulesRegulationsTypeId != value))
				{
					if (this._Base_RulesRegulationsType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRulesRegulationsTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RulesRegulationsTypeId = value;
					this.SendPropertyChanged("RulesRegulationsTypeId");
					this.OnRulesRegulationsTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CustomDate
		{
			get
			{
				return this._CustomDate;
			}
			set
			{
				if ((this._CustomDate != value))
				{
					this.OnCustomDateChanging(value);
					this.SendPropertyChanging();
					this._CustomDate = value;
					this.SendPropertyChanged("CustomDate");
					this.OnCustomDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicableScope", DbType="NVarChar(2000)")]
		public string ApplicableScope
		{
			get
			{
				return this._ApplicableScope;
			}
			set
			{
				if ((this._ApplicableScope != value))
				{
					this.OnApplicableScopeChanging(value);
					this.SendPropertyChanging();
					this._ApplicableScope = value;
					this.SendPropertyChanged("ApplicableScope");
					this.OnApplicableScopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_RulesRegulations_Base_RulesRegulationsType", Storage="_Base_RulesRegulationsType", ThisKey="RulesRegulationsTypeId", OtherKey="RulesRegulationsTypeId", IsForeignKey=true)]
		public Base_RulesRegulationsType Base_RulesRegulationsType
		{
			get
			{
				return this._Base_RulesRegulationsType.Entity;
			}
			set
			{
				Base_RulesRegulationsType previousValue = this._Base_RulesRegulationsType.Entity;
				if (((previousValue != value) 
							|| (this._Base_RulesRegulationsType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_RulesRegulationsType.Entity = null;
						previousValue.Law_RulesRegulations.Remove(this);
					}
					this._Base_RulesRegulationsType.Entity = value;
					if ((value != null))
					{
						value.Law_RulesRegulations.Add(this);
						this._RulesRegulationsTypeId = value.RulesRegulationsTypeId;
					}
					else
					{
						this._RulesRegulationsTypeId = default(string);
					}
					this.SendPropertyChanged("Base_RulesRegulationsType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_RulesRegulations_Sys_User", Storage="_Sys_User", ThisKey="AuditMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Law_RulesRegulations.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Law_RulesRegulations.Add(this);
						this._AuditMan = value.UserId;
					}
					else
					{
						this._AuditMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OccupationHealth_HazardDetection")]
	public partial class OccupationHealth_HazardDetection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FileId;
		
		private string _FileCode;
		
		private string _FileName;
		
		private string _FileContent;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _ProjectId;
		
		private string _States;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(string value);
    partial void OnFileIdChanged();
    partial void OnFileCodeChanging(string value);
    partial void OnFileCodeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileContentChanging(string value);
    partial void OnFileContentChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public OccupationHealth_HazardDetection()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCode", DbType="NVarChar(50)")]
		public string FileCode
		{
			get
			{
				return this._FileCode;
			}
			set
			{
				if ((this._FileCode != value))
				{
					this.OnFileCodeChanging(value);
					this.SendPropertyChanging();
					this._FileCode = value;
					this.SendPropertyChanged("FileCode");
					this.OnFileCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(200)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(4000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OccupationHealth_HazardDetection_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.OccupationHealth_HazardDetection.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.OccupationHealth_HazardDetection.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OccupationHealth_OccupationalDiseaseAccident")]
	public partial class OccupationHealth_OccupationalDiseaseAccident : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FileId;
		
		private string _FileCode;
		
		private string _FileName;
		
		private string _FileContent;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _ProjectId;
		
		private string _States;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(string value);
    partial void OnFileIdChanged();
    partial void OnFileCodeChanging(string value);
    partial void OnFileCodeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileContentChanging(string value);
    partial void OnFileContentChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public OccupationHealth_OccupationalDiseaseAccident()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCode", DbType="NVarChar(50)")]
		public string FileCode
		{
			get
			{
				return this._FileCode;
			}
			set
			{
				if ((this._FileCode != value))
				{
					this.OnFileCodeChanging(value);
					this.SendPropertyChanging();
					this._FileCode = value;
					this.SendPropertyChanged("FileCode");
					this.OnFileCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(200)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(4000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OccupationHealth_OccupationalDiseaseAccident_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.OccupationHealth_OccupationalDiseaseAccident.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.OccupationHealth_OccupationalDiseaseAccident.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OccupationHealth_PhysicalExamination")]
	public partial class OccupationHealth_PhysicalExamination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FileId;
		
		private string _FileCode;
		
		private string _FileName;
		
		private string _FileContent;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _ProjectId;
		
		private string _States;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIdChanging(string value);
    partial void OnFileIdChanged();
    partial void OnFileCodeChanging(string value);
    partial void OnFileCodeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFileContentChanging(string value);
    partial void OnFileContentChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public OccupationHealth_PhysicalExamination()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FileId
		{
			get
			{
				return this._FileId;
			}
			set
			{
				if ((this._FileId != value))
				{
					this.OnFileIdChanging(value);
					this.SendPropertyChanging();
					this._FileId = value;
					this.SendPropertyChanged("FileId");
					this.OnFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCode", DbType="NVarChar(50)")]
		public string FileCode
		{
			get
			{
				return this._FileCode;
			}
			set
			{
				if ((this._FileCode != value))
				{
					this.OnFileCodeChanging(value);
					this.SendPropertyChanging();
					this._FileCode = value;
					this.SendPropertyChanged("FileCode");
					this.OnFileCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(200)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(4000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OccupationHealth_PhysicalExamination_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.OccupationHealth_PhysicalExamination.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.OccupationHealth_PhysicalExamination.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_FileCabinet")]
	public partial class Project_FileCabinet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FileCabinetId;
		
		private string _ProjectId;
		
		private string _FileType;
		
		private string _FileCode;
		
		private string _FileContent;
		
		private System.Nullable<System.DateTime> _FileDate;
		
		private string _CreateManId;
		
		private string _FileUrl;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileCabinetIdChanging(string value);
    partial void OnFileCabinetIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnFileTypeChanging(string value);
    partial void OnFileTypeChanged();
    partial void OnFileCodeChanging(string value);
    partial void OnFileCodeChanged();
    partial void OnFileContentChanging(string value);
    partial void OnFileContentChanged();
    partial void OnFileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFileDateChanged();
    partial void OnCreateManIdChanging(string value);
    partial void OnCreateManIdChanged();
    partial void OnFileUrlChanging(string value);
    partial void OnFileUrlChanged();
    #endregion
		
		public Project_FileCabinet()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCabinetId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FileCabinetId
		{
			get
			{
				return this._FileCabinetId;
			}
			set
			{
				if ((this._FileCabinetId != value))
				{
					this.OnFileCabinetIdChanging(value);
					this.SendPropertyChanging();
					this._FileCabinetId = value;
					this.SendPropertyChanged("FileCabinetId");
					this.OnFileCabinetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileType", DbType="NVarChar(50)")]
		public string FileType
		{
			get
			{
				return this._FileType;
			}
			set
			{
				if ((this._FileType != value))
				{
					this.OnFileTypeChanging(value);
					this.SendPropertyChanging();
					this._FileType = value;
					this.SendPropertyChanged("FileType");
					this.OnFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCode", DbType="NVarChar(50)")]
		public string FileCode
		{
			get
			{
				return this._FileCode;
			}
			set
			{
				if ((this._FileCode != value))
				{
					this.OnFileCodeChanging(value);
					this.SendPropertyChanging();
					this._FileCode = value;
					this.SendPropertyChanged("FileCode");
					this.OnFileCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="NVarChar(500)")]
		public string FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FileDate
		{
			get
			{
				return this._FileDate;
			}
			set
			{
				if ((this._FileDate != value))
				{
					this.OnFileDateChanging(value);
					this.SendPropertyChanging();
					this._FileDate = value;
					this.SendPropertyChanged("FileDate");
					this.OnFileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateManId", DbType="NVarChar(50)")]
		public string CreateManId
		{
			get
			{
				return this._CreateManId;
			}
			set
			{
				if ((this._CreateManId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreateManIdChanging(value);
					this.SendPropertyChanging();
					this._CreateManId = value;
					this.SendPropertyChanged("CreateManId");
					this.OnCreateManIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileUrl", DbType="NVarChar(2000)")]
		public string FileUrl
		{
			get
			{
				return this._FileUrl;
			}
			set
			{
				if ((this._FileUrl != value))
				{
					this.OnFileUrlChanging(value);
					this.SendPropertyChanging();
					this._FileUrl = value;
					this.SendPropertyChanged("FileUrl");
					this.OnFileUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_FileCabinet_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Project_FileCabinet.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Project_FileCabinet.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_FileCabinet_Sys_User", Storage="_Sys_User", ThisKey="CreateManId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Project_FileCabinet.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Project_FileCabinet.Add(this);
						this._CreateManId = value.UserId;
					}
					else
					{
						this._CreateManId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_ProjectUnit")]
	public partial class Project_ProjectUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectUnitId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _UnitType;
		
		private System.Nullable<System.DateTime> _InTime;
		
		private System.Nullable<System.DateTime> _OutTime;
		
		private System.Nullable<decimal> _PlanCostA;
		
		private System.Nullable<decimal> _PlanCostB;
		
		private string _ContractRange;
		
		private string _Phone;
		
		private string _AuditMan;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectUnitIdChanging(string value);
    partial void OnProjectUnitIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUnitTypeChanging(string value);
    partial void OnUnitTypeChanged();
    partial void OnInTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInTimeChanged();
    partial void OnOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOutTimeChanged();
    partial void OnPlanCostAChanging(System.Nullable<decimal> value);
    partial void OnPlanCostAChanged();
    partial void OnPlanCostBChanging(System.Nullable<decimal> value);
    partial void OnPlanCostBChanged();
    partial void OnContractRangeChanging(string value);
    partial void OnContractRangeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    #endregion
		
		public Project_ProjectUnit()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectUnitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectUnitId
		{
			get
			{
				return this._ProjectUnitId;
			}
			set
			{
				if ((this._ProjectUnitId != value))
				{
					this.OnProjectUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectUnitId = value;
					this.SendPropertyChanged("ProjectUnitId");
					this.OnProjectUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitType", DbType="NVarChar(50)")]
		public string UnitType
		{
			get
			{
				return this._UnitType;
			}
			set
			{
				if ((this._UnitType != value))
				{
					this.OnUnitTypeChanging(value);
					this.SendPropertyChanging();
					this._UnitType = value;
					this.SendPropertyChanged("UnitType");
					this.OnUnitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> InTime
		{
			get
			{
				return this._InTime;
			}
			set
			{
				if ((this._InTime != value))
				{
					this.OnInTimeChanging(value);
					this.SendPropertyChanging();
					this._InTime = value;
					this.SendPropertyChanged("InTime");
					this.OnInTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutTime
		{
			get
			{
				return this._OutTime;
			}
			set
			{
				if ((this._OutTime != value))
				{
					this.OnOutTimeChanging(value);
					this.SendPropertyChanging();
					this._OutTime = value;
					this.SendPropertyChanged("OutTime");
					this.OnOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanCostA", DbType="Money")]
		public System.Nullable<decimal> PlanCostA
		{
			get
			{
				return this._PlanCostA;
			}
			set
			{
				if ((this._PlanCostA != value))
				{
					this.OnPlanCostAChanging(value);
					this.SendPropertyChanging();
					this._PlanCostA = value;
					this.SendPropertyChanged("PlanCostA");
					this.OnPlanCostAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanCostB", DbType="Money")]
		public System.Nullable<decimal> PlanCostB
		{
			get
			{
				return this._PlanCostB;
			}
			set
			{
				if ((this._PlanCostB != value))
				{
					this.OnPlanCostBChanging(value);
					this.SendPropertyChanging();
					this._PlanCostB = value;
					this.SendPropertyChanged("PlanCostB");
					this.OnPlanCostBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractRange", DbType="NVarChar(500)")]
		public string ContractRange
		{
			get
			{
				return this._ContractRange;
			}
			set
			{
				if ((this._ContractRange != value))
				{
					this.OnContractRangeChanging(value);
					this.SendPropertyChanging();
					this._ContractRange = value;
					this.SendPropertyChanged("ContractRange");
					this.OnContractRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(20)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUnit_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Project_ProjectUnit.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Project_ProjectUnit.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUnit_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Project_ProjectUnit.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Project_ProjectUnit.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_ProjectUser")]
	public partial class Project_ProjectUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProjectUserId;
		
		private string _ProjectId;
		
		private string _UserId;
		
		private string _UnitId;
		
		private string _RoleId;
		
		private System.Nullable<bool> _IsPost;
		
		private string _RoleName;
		
		private string _WorkAreaId;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectUserIdChanging(string value);
    partial void OnProjectUserIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnIsPostChanging(System.Nullable<bool> value);
    partial void OnIsPostChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnWorkAreaIdChanging(string value);
    partial void OnWorkAreaIdChanged();
    #endregion
		
		public Project_ProjectUser()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectUserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectUserId
		{
			get
			{
				return this._ProjectUserId;
			}
			set
			{
				if ((this._ProjectUserId != value))
				{
					this.OnProjectUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectUserId = value;
					this.SendPropertyChanged("ProjectUserId");
					this.OnProjectUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(500)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPost", DbType="Bit")]
		public System.Nullable<bool> IsPost
		{
			get
			{
				return this._IsPost;
			}
			set
			{
				if ((this._IsPost != value))
				{
					this.OnIsPostChanging(value);
					this.SendPropertyChanging();
					this._IsPost = value;
					this.SendPropertyChanged("IsPost");
					this.OnIsPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(500)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(1000)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					this.OnWorkAreaIdChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaId = value;
					this.SendPropertyChanged("WorkAreaId");
					this.OnWorkAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUser_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Project_ProjectUser.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Project_ProjectUser.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUser_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Project_ProjectUser.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Project_ProjectUser.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUser_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Project_ProjectUser.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Project_ProjectUser.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_Sys_Set")]
	public partial class Project_Sys_Set : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SetId;
		
		private string _ProjectId;
		
		private string _SetName;
		
		private System.Nullable<bool> _IsAuto;
		
		private string _SetValue;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSetIdChanging(string value);
    partial void OnSetIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnSetNameChanging(string value);
    partial void OnSetNameChanged();
    partial void OnIsAutoChanging(System.Nullable<bool> value);
    partial void OnIsAutoChanged();
    partial void OnSetValueChanging(string value);
    partial void OnSetValueChanged();
    #endregion
		
		public Project_Sys_Set()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SetId
		{
			get
			{
				return this._SetId;
			}
			set
			{
				if ((this._SetId != value))
				{
					this.OnSetIdChanging(value);
					this.SendPropertyChanging();
					this._SetId = value;
					this.SendPropertyChanged("SetId");
					this.OnSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetName", DbType="NVarChar(50)")]
		public string SetName
		{
			get
			{
				return this._SetName;
			}
			set
			{
				if ((this._SetName != value))
				{
					this.OnSetNameChanging(value);
					this.SendPropertyChanging();
					this._SetName = value;
					this.SendPropertyChanged("SetName");
					this.OnSetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuto", DbType="Bit")]
		public System.Nullable<bool> IsAuto
		{
			get
			{
				return this._IsAuto;
			}
			set
			{
				if ((this._IsAuto != value))
				{
					this.OnIsAutoChanging(value);
					this.SendPropertyChanging();
					this._IsAuto = value;
					this.SendPropertyChanged("IsAuto");
					this.OnIsAutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetValue", DbType="NVarChar(100)")]
		public string SetValue
		{
			get
			{
				return this._SetValue;
			}
			set
			{
				if ((this._SetValue != value))
				{
					this.OnSetValueChanging(value);
					this.SendPropertyChanging();
					this._SetValue = value;
					this.SendPropertyChanged("SetValue");
					this.OnSetValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectData_FlowOperate")]
	public partial class ProjectData_FlowOperate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FlowOperateId;
		
		private string _MenuId;
		
		private string _DataId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _OperaterId;
		
		private System.Nullable<System.DateTime> _OperaterTime;
		
		private string _State;
		
		private string _Opinion;
		
		private System.Nullable<bool> _IsClosed;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlowOperateIdChanging(string value);
    partial void OnFlowOperateIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnOperaterIdChanging(string value);
    partial void OnOperaterIdChanged();
    partial void OnOperaterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperaterTimeChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnOpinionChanging(string value);
    partial void OnOpinionChanged();
    partial void OnIsClosedChanging(System.Nullable<bool> value);
    partial void OnIsClosedChanged();
    #endregion
		
		public ProjectData_FlowOperate()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowOperateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FlowOperateId
		{
			get
			{
				return this._FlowOperateId;
			}
			set
			{
				if ((this._FlowOperateId != value))
				{
					this.OnFlowOperateIdChanging(value);
					this.SendPropertyChanging();
					this._FlowOperateId = value;
					this.SendPropertyChanged("FlowOperateId");
					this.OnFlowOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperaterId", DbType="NVarChar(50)")]
		public string OperaterId
		{
			get
			{
				return this._OperaterId;
			}
			set
			{
				if ((this._OperaterId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperaterIdChanging(value);
					this.SendPropertyChanging();
					this._OperaterId = value;
					this.SendPropertyChanged("OperaterId");
					this.OnOperaterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperaterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperaterTime
		{
			get
			{
				return this._OperaterTime;
			}
			set
			{
				if ((this._OperaterTime != value))
				{
					this.OnOperaterTimeChanging(value);
					this.SendPropertyChanging();
					this._OperaterTime = value;
					this.SendPropertyChanged("OperaterTime");
					this.OnOperaterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opinion", DbType="NVarChar(1000)")]
		public string Opinion
		{
			get
			{
				return this._Opinion;
			}
			set
			{
				if ((this._Opinion != value))
				{
					this.OnOpinionChanging(value);
					this.SendPropertyChanging();
					this._Opinion = value;
					this.SendPropertyChanged("Opinion");
					this.OnOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit")]
		public System.Nullable<bool> IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_FlowOperate_Sys_User", Storage="_Sys_User", ThisKey="OperaterId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.ProjectData_FlowOperate.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.ProjectData_FlowOperate.Add(this);
						this._OperaterId = value.UserId;
					}
					else
					{
						this._OperaterId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectData_MainItem")]
	public partial class ProjectData_MainItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MainItemId;
		
		private string _ProjectId;
		
		private string _MainItemCode;
		
		private string _MainItemName;
		
		private string _UnitWorkIds;
		
		private string _Remark;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMainItemIdChanging(string value);
    partial void OnMainItemIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnMainItemCodeChanging(string value);
    partial void OnMainItemCodeChanged();
    partial void OnMainItemNameChanging(string value);
    partial void OnMainItemNameChanged();
    partial void OnUnitWorkIdsChanging(string value);
    partial void OnUnitWorkIdsChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public ProjectData_MainItem()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MainItemId
		{
			get
			{
				return this._MainItemId;
			}
			set
			{
				if ((this._MainItemId != value))
				{
					this.OnMainItemIdChanging(value);
					this.SendPropertyChanging();
					this._MainItemId = value;
					this.SendPropertyChanged("MainItemId");
					this.OnMainItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainItemCode", DbType="NVarChar(50)")]
		public string MainItemCode
		{
			get
			{
				return this._MainItemCode;
			}
			set
			{
				if ((this._MainItemCode != value))
				{
					this.OnMainItemCodeChanging(value);
					this.SendPropertyChanging();
					this._MainItemCode = value;
					this.SendPropertyChanged("MainItemCode");
					this.OnMainItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainItemName", DbType="NVarChar(50)")]
		public string MainItemName
		{
			get
			{
				return this._MainItemName;
			}
			set
			{
				if ((this._MainItemName != value))
				{
					this.OnMainItemNameChanging(value);
					this.SendPropertyChanging();
					this._MainItemName = value;
					this.SendPropertyChanged("MainItemName");
					this.OnMainItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkIds", DbType="NVarChar(500)")]
		public string UnitWorkIds
		{
			get
			{
				return this._UnitWorkIds;
			}
			set
			{
				if ((this._UnitWorkIds != value))
				{
					this.OnUnitWorkIdsChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkIds = value;
					this.SendPropertyChanged("UnitWorkIds");
					this.OnUnitWorkIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_MainItem_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.ProjectData_MainItem.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.ProjectData_MainItem.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectData_TeamGroup")]
	public partial class ProjectData_TeamGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TeamGroupId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _TeamGroupCode;
		
		private string _TeamGroupName;
		
		private string _Remark;
		
		private string _GroupLeaderId;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamGroupIdChanging(string value);
    partial void OnTeamGroupIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnTeamGroupCodeChanging(string value);
    partial void OnTeamGroupCodeChanged();
    partial void OnTeamGroupNameChanging(string value);
    partial void OnTeamGroupNameChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnGroupLeaderIdChanging(string value);
    partial void OnGroupLeaderIdChanged();
    #endregion
		
		public ProjectData_TeamGroup()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TeamGroupId
		{
			get
			{
				return this._TeamGroupId;
			}
			set
			{
				if ((this._TeamGroupId != value))
				{
					this.OnTeamGroupIdChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupId = value;
					this.SendPropertyChanged("TeamGroupId");
					this.OnTeamGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupCode", DbType="NVarChar(50)")]
		public string TeamGroupCode
		{
			get
			{
				return this._TeamGroupCode;
			}
			set
			{
				if ((this._TeamGroupCode != value))
				{
					this.OnTeamGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupCode = value;
					this.SendPropertyChanged("TeamGroupCode");
					this.OnTeamGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupName", DbType="NVarChar(50)")]
		public string TeamGroupName
		{
			get
			{
				return this._TeamGroupName;
			}
			set
			{
				if ((this._TeamGroupName != value))
				{
					this.OnTeamGroupNameChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupName = value;
					this.SendPropertyChanged("TeamGroupName");
					this.OnTeamGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupLeaderId", DbType="NVarChar(50)")]
		public string GroupLeaderId
		{
			get
			{
				return this._GroupLeaderId;
			}
			set
			{
				if ((this._GroupLeaderId != value))
				{
					this.OnGroupLeaderIdChanging(value);
					this.SendPropertyChanging();
					this._GroupLeaderId = value;
					this.SendPropertyChanged("GroupLeaderId");
					this.OnGroupLeaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_TeamGroup_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.ProjectData_TeamGroup.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.ProjectData_TeamGroup.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_TeamGroup_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.ProjectData_TeamGroup.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.ProjectData_TeamGroup.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_ProjectData_TeamGroup", Storage="_SitePerson_Person", ThisKey="TeamGroupId", OtherKey="TeamGroupId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.ProjectData_TeamGroup = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.ProjectData_TeamGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTP_AItemEndCheck")]
	public partial class PTP_AItemEndCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AItemCheckId;
		
		private string _PipelineId;
		
		private string _CheckMan;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private string _DealMan;
		
		private System.Nullable<System.DateTime> _DealDate;
		
		private string _Remark;
		
		private EntityRef<HJGL_Pipeline> _HJGL_Pipeline;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAItemCheckIdChanging(string value);
    partial void OnAItemCheckIdChanged();
    partial void OnPipelineIdChanging(string value);
    partial void OnPipelineIdChanged();
    partial void OnCheckManChanging(string value);
    partial void OnCheckManChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnDealManChanging(string value);
    partial void OnDealManChanged();
    partial void OnDealDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDealDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PTP_AItemEndCheck()
		{
			this._HJGL_Pipeline = default(EntityRef<HJGL_Pipeline>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AItemCheckId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AItemCheckId
		{
			get
			{
				return this._AItemCheckId;
			}
			set
			{
				if ((this._AItemCheckId != value))
				{
					this.OnAItemCheckIdChanging(value);
					this.SendPropertyChanging();
					this._AItemCheckId = value;
					this.SendPropertyChanged("AItemCheckId");
					this.OnAItemCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					if (this._HJGL_Pipeline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipelineIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineId = value;
					this.SendPropertyChanged("PipelineId");
					this.OnPipelineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckMan", DbType="VarChar(20)")]
		public string CheckMan
		{
			get
			{
				return this._CheckMan;
			}
			set
			{
				if ((this._CheckMan != value))
				{
					this.OnCheckManChanging(value);
					this.SendPropertyChanging();
					this._CheckMan = value;
					this.SendPropertyChanged("CheckMan");
					this.OnCheckManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealMan", DbType="VarChar(20)")]
		public string DealMan
		{
			get
			{
				return this._DealMan;
			}
			set
			{
				if ((this._DealMan != value))
				{
					this.OnDealManChanging(value);
					this.SendPropertyChanging();
					this._DealMan = value;
					this.SendPropertyChanged("DealMan");
					this.OnDealManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DealDate
		{
			get
			{
				return this._DealDate;
			}
			set
			{
				if ((this._DealDate != value))
				{
					this.OnDealDateChanging(value);
					this.SendPropertyChanging();
					this._DealDate = value;
					this.SendPropertyChanged("DealDate");
					this.OnDealDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_AItemEndCheck_HJGL_Pipeline", Storage="_HJGL_Pipeline", ThisKey="PipelineId", OtherKey="PipelineId", IsForeignKey=true)]
		public HJGL_Pipeline HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline.Entity;
			}
			set
			{
				HJGL_Pipeline previousValue = this._HJGL_Pipeline.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Pipeline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Pipeline.Entity = null;
						previousValue.PTP_AItemEndCheck.Remove(this);
					}
					this._HJGL_Pipeline.Entity = value;
					if ((value != null))
					{
						value.PTP_AItemEndCheck.Add(this);
						this._PipelineId = value.PipelineId;
					}
					else
					{
						this._PipelineId = default(string);
					}
					this.SendPropertyChanged("HJGL_Pipeline");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTP_BItemEndCheck")]
	public partial class PTP_BItemEndCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BItemCheckId;
		
		private string _PipelineId;
		
		private string _CheckMan;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private string _DealMan;
		
		private System.Nullable<System.DateTime> _DealDate;
		
		private string _Remark;
		
		private EntityRef<HJGL_Pipeline> _HJGL_Pipeline;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBItemCheckIdChanging(string value);
    partial void OnBItemCheckIdChanged();
    partial void OnPipelineIdChanging(string value);
    partial void OnPipelineIdChanged();
    partial void OnCheckManChanging(string value);
    partial void OnCheckManChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnDealManChanging(string value);
    partial void OnDealManChanged();
    partial void OnDealDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDealDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public PTP_BItemEndCheck()
		{
			this._HJGL_Pipeline = default(EntityRef<HJGL_Pipeline>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BItemCheckId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BItemCheckId
		{
			get
			{
				return this._BItemCheckId;
			}
			set
			{
				if ((this._BItemCheckId != value))
				{
					this.OnBItemCheckIdChanging(value);
					this.SendPropertyChanging();
					this._BItemCheckId = value;
					this.SendPropertyChanged("BItemCheckId");
					this.OnBItemCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					if (this._HJGL_Pipeline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipelineIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineId = value;
					this.SendPropertyChanged("PipelineId");
					this.OnPipelineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckMan", DbType="VarChar(20)")]
		public string CheckMan
		{
			get
			{
				return this._CheckMan;
			}
			set
			{
				if ((this._CheckMan != value))
				{
					this.OnCheckManChanging(value);
					this.SendPropertyChanging();
					this._CheckMan = value;
					this.SendPropertyChanged("CheckMan");
					this.OnCheckManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealMan", DbType="VarChar(20)")]
		public string DealMan
		{
			get
			{
				return this._DealMan;
			}
			set
			{
				if ((this._DealMan != value))
				{
					this.OnDealManChanging(value);
					this.SendPropertyChanging();
					this._DealMan = value;
					this.SendPropertyChanged("DealMan");
					this.OnDealManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DealDate
		{
			get
			{
				return this._DealDate;
			}
			set
			{
				if ((this._DealDate != value))
				{
					this.OnDealDateChanging(value);
					this.SendPropertyChanging();
					this._DealDate = value;
					this.SendPropertyChanged("DealDate");
					this.OnDealDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_BItemEndCheck_HJGL_Pipeline", Storage="_HJGL_Pipeline", ThisKey="PipelineId", OtherKey="PipelineId", IsForeignKey=true)]
		public HJGL_Pipeline HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline.Entity;
			}
			set
			{
				HJGL_Pipeline previousValue = this._HJGL_Pipeline.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Pipeline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Pipeline.Entity = null;
						previousValue.PTP_BItemEndCheck.Remove(this);
					}
					this._HJGL_Pipeline.Entity = value;
					if ((value != null))
					{
						value.PTP_BItemEndCheck.Add(this);
						this._PipelineId = value.PipelineId;
					}
					else
					{
						this._PipelineId = default(string);
					}
					this.SendPropertyChanged("HJGL_Pipeline");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTP_PipelineList")]
	public partial class PTP_PipelineList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PT_PipeId;
		
		private string _PTP_ID;
		
		private string _PipelineId;
		
		private string _PT_DataType;
		
		private EntityRef<HJGL_Pipeline> _HJGL_Pipeline;
		
		private EntityRef<PTP_TestPackage> _PTP_TestPackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPT_PipeIdChanging(string value);
    partial void OnPT_PipeIdChanged();
    partial void OnPTP_IDChanging(string value);
    partial void OnPTP_IDChanged();
    partial void OnPipelineIdChanging(string value);
    partial void OnPipelineIdChanged();
    partial void OnPT_DataTypeChanging(string value);
    partial void OnPT_DataTypeChanged();
    #endregion
		
		public PTP_PipelineList()
		{
			this._HJGL_Pipeline = default(EntityRef<HJGL_Pipeline>);
			this._PTP_TestPackage = default(EntityRef<PTP_TestPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_PipeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PT_PipeId
		{
			get
			{
				return this._PT_PipeId;
			}
			set
			{
				if ((this._PT_PipeId != value))
				{
					this.OnPT_PipeIdChanging(value);
					this.SendPropertyChanging();
					this._PT_PipeId = value;
					this.SendPropertyChanged("PT_PipeId");
					this.OnPT_PipeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_ID", DbType="NVarChar(50)")]
		public string PTP_ID
		{
			get
			{
				return this._PTP_ID;
			}
			set
			{
				if ((this._PTP_ID != value))
				{
					if (this._PTP_TestPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPTP_IDChanging(value);
					this.SendPropertyChanging();
					this._PTP_ID = value;
					this.SendPropertyChanged("PTP_ID");
					this.OnPTP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					if (this._HJGL_Pipeline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPipelineIdChanging(value);
					this.SendPropertyChanging();
					this._PipelineId = value;
					this.SendPropertyChanged("PipelineId");
					this.OnPipelineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_DataType", DbType="Char(2)")]
		public string PT_DataType
		{
			get
			{
				return this._PT_DataType;
			}
			set
			{
				if ((this._PT_DataType != value))
				{
					this.OnPT_DataTypeChanging(value);
					this.SendPropertyChanging();
					this._PT_DataType = value;
					this.SendPropertyChanged("PT_DataType");
					this.OnPT_DataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_PipelineList_HJGL_Pipeline", Storage="_HJGL_Pipeline", ThisKey="PipelineId", OtherKey="PipelineId", IsForeignKey=true)]
		public HJGL_Pipeline HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline.Entity;
			}
			set
			{
				HJGL_Pipeline previousValue = this._HJGL_Pipeline.Entity;
				if (((previousValue != value) 
							|| (this._HJGL_Pipeline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HJGL_Pipeline.Entity = null;
						previousValue.PTP_PipelineList.Remove(this);
					}
					this._HJGL_Pipeline.Entity = value;
					if ((value != null))
					{
						value.PTP_PipelineList.Add(this);
						this._PipelineId = value.PipelineId;
					}
					else
					{
						this._PipelineId = default(string);
					}
					this.SendPropertyChanged("HJGL_Pipeline");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_PipelineList_PTP_TestPackage", Storage="_PTP_TestPackage", ThisKey="PTP_ID", OtherKey="PTP_ID", IsForeignKey=true)]
		public PTP_TestPackage PTP_TestPackage
		{
			get
			{
				return this._PTP_TestPackage.Entity;
			}
			set
			{
				PTP_TestPackage previousValue = this._PTP_TestPackage.Entity;
				if (((previousValue != value) 
							|| (this._PTP_TestPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PTP_TestPackage.Entity = null;
						previousValue.PTP_PipelineList.Remove(this);
					}
					this._PTP_TestPackage.Entity = value;
					if ((value != null))
					{
						value.PTP_PipelineList.Add(this);
						this._PTP_ID = value.PTP_ID;
					}
					else
					{
						this._PTP_ID = default(string);
					}
					this.SendPropertyChanged("PTP_TestPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PTP_TestPackage")]
	public partial class PTP_TestPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PTP_ID;
		
		private string _UnitId;
		
		private string _TestPackageNo;
		
		private string _TestPackageName;
		
		private string _TestHeat;
		
		private string _TestService;
		
		private string _TestType;
		
		private string _Finisher;
		
		private System.Nullable<System.DateTime> _FinishDate;
		
		private string _Tabler;
		
		private System.Nullable<System.DateTime> _TableDate;
		
		private string _Modifier;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private string _Auditer;
		
		private System.Nullable<System.DateTime> _AduditDate;
		
		private string _Remark;
		
		private string _TestPackageCode;
		
		private string _TestAmbientTemp;
		
		private string _TestMediumTemp;
		
		private string _TestPressure;
		
		private string _TestPressureTemp;
		
		private string _TestPressureTime;
		
		private string _TightnessTest;
		
		private string _TightnessTestTemp;
		
		private string _TightnessTestTime;
		
		private string _LeakageTestService;
		
		private string _LeakageTestPressure;
		
		private string _VacuumTestService;
		
		private string _VacuumTestPressure;
		
		private string _OperationMedium;
		
		private string _PurgingMedium;
		
		private string _CleaningMedium;
		
		private string _AllowSeepage;
		
		private string _FactSeepage;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _FinishDef;
		
		private EntitySet<PTP_PipelineList> _PTP_PipelineList;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPTP_IDChanging(string value);
    partial void OnPTP_IDChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnTestPackageNoChanging(string value);
    partial void OnTestPackageNoChanged();
    partial void OnTestPackageNameChanging(string value);
    partial void OnTestPackageNameChanged();
    partial void OnTestHeatChanging(string value);
    partial void OnTestHeatChanged();
    partial void OnTestServiceChanging(string value);
    partial void OnTestServiceChanged();
    partial void OnTestTypeChanging(string value);
    partial void OnTestTypeChanged();
    partial void OnFinisherChanging(string value);
    partial void OnFinisherChanged();
    partial void OnFinishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishDateChanged();
    partial void OnTablerChanging(string value);
    partial void OnTablerChanged();
    partial void OnTableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTableDateChanged();
    partial void OnModifierChanging(string value);
    partial void OnModifierChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnAuditerChanging(string value);
    partial void OnAuditerChanged();
    partial void OnAduditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAduditDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnTestPackageCodeChanging(string value);
    partial void OnTestPackageCodeChanged();
    partial void OnTestAmbientTempChanging(string value);
    partial void OnTestAmbientTempChanged();
    partial void OnTestMediumTempChanging(string value);
    partial void OnTestMediumTempChanged();
    partial void OnTestPressureChanging(string value);
    partial void OnTestPressureChanged();
    partial void OnTestPressureTempChanging(string value);
    partial void OnTestPressureTempChanged();
    partial void OnTestPressureTimeChanging(string value);
    partial void OnTestPressureTimeChanged();
    partial void OnTightnessTestChanging(string value);
    partial void OnTightnessTestChanged();
    partial void OnTightnessTestTempChanging(string value);
    partial void OnTightnessTestTempChanged();
    partial void OnTightnessTestTimeChanging(string value);
    partial void OnTightnessTestTimeChanged();
    partial void OnLeakageTestServiceChanging(string value);
    partial void OnLeakageTestServiceChanged();
    partial void OnLeakageTestPressureChanging(string value);
    partial void OnLeakageTestPressureChanged();
    partial void OnVacuumTestServiceChanging(string value);
    partial void OnVacuumTestServiceChanged();
    partial void OnVacuumTestPressureChanging(string value);
    partial void OnVacuumTestPressureChanged();
    partial void OnOperationMediumChanging(string value);
    partial void OnOperationMediumChanged();
    partial void OnPurgingMediumChanging(string value);
    partial void OnPurgingMediumChanged();
    partial void OnCleaningMediumChanging(string value);
    partial void OnCleaningMediumChanged();
    partial void OnAllowSeepageChanging(string value);
    partial void OnAllowSeepageChanged();
    partial void OnFactSeepageChanging(string value);
    partial void OnFactSeepageChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnFinishDefChanging(string value);
    partial void OnFinishDefChanged();
    #endregion
		
		public PTP_TestPackage()
		{
			this._PTP_PipelineList = new EntitySet<PTP_PipelineList>(new Action<PTP_PipelineList>(this.attach_PTP_PipelineList), new Action<PTP_PipelineList>(this.detach_PTP_PipelineList));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PTP_ID
		{
			get
			{
				return this._PTP_ID;
			}
			set
			{
				if ((this._PTP_ID != value))
				{
					this.OnPTP_IDChanging(value);
					this.SendPropertyChanging();
					this._PTP_ID = value;
					this.SendPropertyChanged("PTP_ID");
					this.OnPTP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPackageNo", DbType="VarChar(50)")]
		public string TestPackageNo
		{
			get
			{
				return this._TestPackageNo;
			}
			set
			{
				if ((this._TestPackageNo != value))
				{
					this.OnTestPackageNoChanging(value);
					this.SendPropertyChanging();
					this._TestPackageNo = value;
					this.SendPropertyChanged("TestPackageNo");
					this.OnTestPackageNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPackageName", DbType="VarChar(50)")]
		public string TestPackageName
		{
			get
			{
				return this._TestPackageName;
			}
			set
			{
				if ((this._TestPackageName != value))
				{
					this.OnTestPackageNameChanging(value);
					this.SendPropertyChanging();
					this._TestPackageName = value;
					this.SendPropertyChanged("TestPackageName");
					this.OnTestPackageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestHeat", DbType="VarChar(10)")]
		public string TestHeat
		{
			get
			{
				return this._TestHeat;
			}
			set
			{
				if ((this._TestHeat != value))
				{
					this.OnTestHeatChanging(value);
					this.SendPropertyChanging();
					this._TestHeat = value;
					this.SendPropertyChanged("TestHeat");
					this.OnTestHeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestService", DbType="VarChar(10)")]
		public string TestService
		{
			get
			{
				return this._TestService;
			}
			set
			{
				if ((this._TestService != value))
				{
					this.OnTestServiceChanging(value);
					this.SendPropertyChanging();
					this._TestService = value;
					this.SendPropertyChanged("TestService");
					this.OnTestServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="VarChar(50)")]
		public string TestType
		{
			get
			{
				return this._TestType;
			}
			set
			{
				if ((this._TestType != value))
				{
					this.OnTestTypeChanging(value);
					this.SendPropertyChanging();
					this._TestType = value;
					this.SendPropertyChanged("TestType");
					this.OnTestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finisher", DbType="NVarChar(50)")]
		public string Finisher
		{
			get
			{
				return this._Finisher;
			}
			set
			{
				if ((this._Finisher != value))
				{
					this.OnFinisherChanging(value);
					this.SendPropertyChanging();
					this._Finisher = value;
					this.SendPropertyChanged("Finisher");
					this.OnFinisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishDate
		{
			get
			{
				return this._FinishDate;
			}
			set
			{
				if ((this._FinishDate != value))
				{
					this.OnFinishDateChanging(value);
					this.SendPropertyChanging();
					this._FinishDate = value;
					this.SendPropertyChanged("FinishDate");
					this.OnFinishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tabler", DbType="NVarChar(50)")]
		public string Tabler
		{
			get
			{
				return this._Tabler;
			}
			set
			{
				if ((this._Tabler != value))
				{
					this.OnTablerChanging(value);
					this.SendPropertyChanging();
					this._Tabler = value;
					this.SendPropertyChanged("Tabler");
					this.OnTablerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TableDate
		{
			get
			{
				return this._TableDate;
			}
			set
			{
				if ((this._TableDate != value))
				{
					this.OnTableDateChanging(value);
					this.SendPropertyChanging();
					this._TableDate = value;
					this.SendPropertyChanged("TableDate");
					this.OnTableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modifier", DbType="NVarChar(50)")]
		public string Modifier
		{
			get
			{
				return this._Modifier;
			}
			set
			{
				if ((this._Modifier != value))
				{
					this.OnModifierChanging(value);
					this.SendPropertyChanging();
					this._Modifier = value;
					this.SendPropertyChanged("Modifier");
					this.OnModifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auditer", DbType="NVarChar(50)")]
		public string Auditer
		{
			get
			{
				return this._Auditer;
			}
			set
			{
				if ((this._Auditer != value))
				{
					this.OnAuditerChanging(value);
					this.SendPropertyChanging();
					this._Auditer = value;
					this.SendPropertyChanged("Auditer");
					this.OnAuditerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AduditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AduditDate
		{
			get
			{
				return this._AduditDate;
			}
			set
			{
				if ((this._AduditDate != value))
				{
					this.OnAduditDateChanging(value);
					this.SendPropertyChanging();
					this._AduditDate = value;
					this.SendPropertyChanged("AduditDate");
					this.OnAduditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPackageCode", DbType="VarChar(50)")]
		public string TestPackageCode
		{
			get
			{
				return this._TestPackageCode;
			}
			set
			{
				if ((this._TestPackageCode != value))
				{
					this.OnTestPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._TestPackageCode = value;
					this.SendPropertyChanged("TestPackageCode");
					this.OnTestPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestAmbientTemp", DbType="VarChar(20)")]
		public string TestAmbientTemp
		{
			get
			{
				return this._TestAmbientTemp;
			}
			set
			{
				if ((this._TestAmbientTemp != value))
				{
					this.OnTestAmbientTempChanging(value);
					this.SendPropertyChanging();
					this._TestAmbientTemp = value;
					this.SendPropertyChanged("TestAmbientTemp");
					this.OnTestAmbientTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestMediumTemp", DbType="VarChar(20)")]
		public string TestMediumTemp
		{
			get
			{
				return this._TestMediumTemp;
			}
			set
			{
				if ((this._TestMediumTemp != value))
				{
					this.OnTestMediumTempChanging(value);
					this.SendPropertyChanging();
					this._TestMediumTemp = value;
					this.SendPropertyChanged("TestMediumTemp");
					this.OnTestMediumTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPressure", DbType="VarChar(20)")]
		public string TestPressure
		{
			get
			{
				return this._TestPressure;
			}
			set
			{
				if ((this._TestPressure != value))
				{
					this.OnTestPressureChanging(value);
					this.SendPropertyChanging();
					this._TestPressure = value;
					this.SendPropertyChanged("TestPressure");
					this.OnTestPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPressureTemp", DbType="VarChar(20)")]
		public string TestPressureTemp
		{
			get
			{
				return this._TestPressureTemp;
			}
			set
			{
				if ((this._TestPressureTemp != value))
				{
					this.OnTestPressureTempChanging(value);
					this.SendPropertyChanging();
					this._TestPressureTemp = value;
					this.SendPropertyChanged("TestPressureTemp");
					this.OnTestPressureTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPressureTime", DbType="VarChar(20)")]
		public string TestPressureTime
		{
			get
			{
				return this._TestPressureTime;
			}
			set
			{
				if ((this._TestPressureTime != value))
				{
					this.OnTestPressureTimeChanging(value);
					this.SendPropertyChanging();
					this._TestPressureTime = value;
					this.SendPropertyChanged("TestPressureTime");
					this.OnTestPressureTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TightnessTest", DbType="VarChar(20)")]
		public string TightnessTest
		{
			get
			{
				return this._TightnessTest;
			}
			set
			{
				if ((this._TightnessTest != value))
				{
					this.OnTightnessTestChanging(value);
					this.SendPropertyChanging();
					this._TightnessTest = value;
					this.SendPropertyChanged("TightnessTest");
					this.OnTightnessTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TightnessTestTemp", DbType="VarChar(20)")]
		public string TightnessTestTemp
		{
			get
			{
				return this._TightnessTestTemp;
			}
			set
			{
				if ((this._TightnessTestTemp != value))
				{
					this.OnTightnessTestTempChanging(value);
					this.SendPropertyChanging();
					this._TightnessTestTemp = value;
					this.SendPropertyChanged("TightnessTestTemp");
					this.OnTightnessTestTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TightnessTestTime", DbType="VarChar(20)")]
		public string TightnessTestTime
		{
			get
			{
				return this._TightnessTestTime;
			}
			set
			{
				if ((this._TightnessTestTime != value))
				{
					this.OnTightnessTestTimeChanging(value);
					this.SendPropertyChanging();
					this._TightnessTestTime = value;
					this.SendPropertyChanged("TightnessTestTime");
					this.OnTightnessTestTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeakageTestService", DbType="VarChar(20)")]
		public string LeakageTestService
		{
			get
			{
				return this._LeakageTestService;
			}
			set
			{
				if ((this._LeakageTestService != value))
				{
					this.OnLeakageTestServiceChanging(value);
					this.SendPropertyChanging();
					this._LeakageTestService = value;
					this.SendPropertyChanged("LeakageTestService");
					this.OnLeakageTestServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeakageTestPressure", DbType="VarChar(20)")]
		public string LeakageTestPressure
		{
			get
			{
				return this._LeakageTestPressure;
			}
			set
			{
				if ((this._LeakageTestPressure != value))
				{
					this.OnLeakageTestPressureChanging(value);
					this.SendPropertyChanging();
					this._LeakageTestPressure = value;
					this.SendPropertyChanged("LeakageTestPressure");
					this.OnLeakageTestPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacuumTestService", DbType="VarChar(20)")]
		public string VacuumTestService
		{
			get
			{
				return this._VacuumTestService;
			}
			set
			{
				if ((this._VacuumTestService != value))
				{
					this.OnVacuumTestServiceChanging(value);
					this.SendPropertyChanging();
					this._VacuumTestService = value;
					this.SendPropertyChanged("VacuumTestService");
					this.OnVacuumTestServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VacuumTestPressure", DbType="VarChar(20)")]
		public string VacuumTestPressure
		{
			get
			{
				return this._VacuumTestPressure;
			}
			set
			{
				if ((this._VacuumTestPressure != value))
				{
					this.OnVacuumTestPressureChanging(value);
					this.SendPropertyChanging();
					this._VacuumTestPressure = value;
					this.SendPropertyChanged("VacuumTestPressure");
					this.OnVacuumTestPressureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationMedium", DbType="VarChar(20)")]
		public string OperationMedium
		{
			get
			{
				return this._OperationMedium;
			}
			set
			{
				if ((this._OperationMedium != value))
				{
					this.OnOperationMediumChanging(value);
					this.SendPropertyChanging();
					this._OperationMedium = value;
					this.SendPropertyChanged("OperationMedium");
					this.OnOperationMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurgingMedium", DbType="VarChar(20)")]
		public string PurgingMedium
		{
			get
			{
				return this._PurgingMedium;
			}
			set
			{
				if ((this._PurgingMedium != value))
				{
					this.OnPurgingMediumChanging(value);
					this.SendPropertyChanging();
					this._PurgingMedium = value;
					this.SendPropertyChanged("PurgingMedium");
					this.OnPurgingMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleaningMedium", DbType="VarChar(20)")]
		public string CleaningMedium
		{
			get
			{
				return this._CleaningMedium;
			}
			set
			{
				if ((this._CleaningMedium != value))
				{
					this.OnCleaningMediumChanging(value);
					this.SendPropertyChanging();
					this._CleaningMedium = value;
					this.SendPropertyChanged("CleaningMedium");
					this.OnCleaningMediumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowSeepage", DbType="VarChar(20)")]
		public string AllowSeepage
		{
			get
			{
				return this._AllowSeepage;
			}
			set
			{
				if ((this._AllowSeepage != value))
				{
					this.OnAllowSeepageChanging(value);
					this.SendPropertyChanging();
					this._AllowSeepage = value;
					this.SendPropertyChanged("AllowSeepage");
					this.OnAllowSeepageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactSeepage", DbType="VarChar(20)")]
		public string FactSeepage
		{
			get
			{
				return this._FactSeepage;
			}
			set
			{
				if ((this._FactSeepage != value))
				{
					this.OnFactSeepageChanging(value);
					this.SendPropertyChanging();
					this._FactSeepage = value;
					this.SendPropertyChanged("FactSeepage");
					this.OnFactSeepageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishDef", DbType="NVarChar(200)")]
		public string FinishDef
		{
			get
			{
				return this._FinishDef;
			}
			set
			{
				if ((this._FinishDef != value))
				{
					this.OnFinishDefChanging(value);
					this.SendPropertyChanging();
					this._FinishDef = value;
					this.SendPropertyChanged("FinishDef");
					this.OnFinishDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_PipelineList_PTP_TestPackage", Storage="_PTP_PipelineList", ThisKey="PTP_ID", OtherKey="PTP_ID", DeleteRule="NO ACTION")]
		public EntitySet<PTP_PipelineList> PTP_PipelineList
		{
			get
			{
				return this._PTP_PipelineList;
			}
			set
			{
				this._PTP_PipelineList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_TestPackage_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.PTP_TestPackage.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.PTP_TestPackage.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_TestPackage_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.PTP_TestPackage.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.PTP_TestPackage.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_TestPackage_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.PTP_TestPackage.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.PTP_TestPackage.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PTP_PipelineList(PTP_PipelineList entity)
		{
			this.SendPropertyChanging();
			entity.PTP_TestPackage = this;
		}
		
		private void detach_PTP_PipelineList(PTP_PipelineList entity)
		{
			this.SendPropertyChanging();
			entity.PTP_TestPackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityAudit_EquipmentPersonQuality")]
	public partial class QualityAudit_EquipmentPersonQuality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EquipmentPersonQualityId;
		
		private string _PersonId;
		
		private string _CertificateNo;
		
		private string _CertificateName;
		
		private string _Grade;
		
		private string _SendUnit;
		
		private System.Nullable<System.DateTime> _SendDate;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private System.Nullable<System.DateTime> _LateCheckDate;
		
		private string _ApprovalPerson;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _CertificateId;
		
		private string _AuditorId;
		
		private string _AuditOpinion;
		
		private string _States;
		
		private EntityRef<Base_Certificate> _Base_Certificate;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _Auditor;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEquipmentPersonQualityIdChanging(string value);
    partial void OnEquipmentPersonQualityIdChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnCertificateNoChanging(string value);
    partial void OnCertificateNoChanged();
    partial void OnCertificateNameChanging(string value);
    partial void OnCertificateNameChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnSendUnitChanging(string value);
    partial void OnSendUnitChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnLateCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLateCheckDateChanged();
    partial void OnApprovalPersonChanging(string value);
    partial void OnApprovalPersonChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnCertificateIdChanging(string value);
    partial void OnCertificateIdChanged();
    partial void OnAuditorIdChanging(string value);
    partial void OnAuditorIdChanged();
    partial void OnAuditOpinionChanging(string value);
    partial void OnAuditOpinionChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public QualityAudit_EquipmentPersonQuality()
		{
			this._Base_Certificate = default(EntityRef<Base_Certificate>);
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Auditor = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentPersonQualityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EquipmentPersonQualityId
		{
			get
			{
				return this._EquipmentPersonQualityId;
			}
			set
			{
				if ((this._EquipmentPersonQualityId != value))
				{
					this.OnEquipmentPersonQualityIdChanging(value);
					this.SendPropertyChanging();
					this._EquipmentPersonQualityId = value;
					this.SendPropertyChanged("EquipmentPersonQualityId");
					this.OnEquipmentPersonQualityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNo", DbType="NVarChar(50)")]
		public string CertificateNo
		{
			get
			{
				return this._CertificateNo;
			}
			set
			{
				if ((this._CertificateNo != value))
				{
					this.OnCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._CertificateNo = value;
					this.SendPropertyChanged("CertificateNo");
					this.OnCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateName", DbType="NVarChar(50)")]
		public string CertificateName
		{
			get
			{
				return this._CertificateName;
			}
			set
			{
				if ((this._CertificateName != value))
				{
					this.OnCertificateNameChanging(value);
					this.SendPropertyChanging();
					this._CertificateName = value;
					this.SendPropertyChanged("CertificateName");
					this.OnCertificateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="NVarChar(50)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendUnit", DbType="NVarChar(50)")]
		public string SendUnit
		{
			get
			{
				return this._SendUnit;
			}
			set
			{
				if ((this._SendUnit != value))
				{
					this.OnSendUnitChanging(value);
					this.SendPropertyChanging();
					this._SendUnit = value;
					this.SendPropertyChanged("SendUnit");
					this.OnSendUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LateCheckDate
		{
			get
			{
				return this._LateCheckDate;
			}
			set
			{
				if ((this._LateCheckDate != value))
				{
					this.OnLateCheckDateChanging(value);
					this.SendPropertyChanging();
					this._LateCheckDate = value;
					this.SendPropertyChanged("LateCheckDate");
					this.OnLateCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalPerson", DbType="NVarChar(10)")]
		public string ApprovalPerson
		{
			get
			{
				return this._ApprovalPerson;
			}
			set
			{
				if ((this._ApprovalPerson != value))
				{
					this.OnApprovalPersonChanging(value);
					this.SendPropertyChanging();
					this._ApprovalPerson = value;
					this.SendPropertyChanged("ApprovalPerson");
					this.OnApprovalPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="NVarChar(50)")]
		public string CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					if (this._Base_Certificate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorId", DbType="NVarChar(50)")]
		public string AuditorId
		{
			get
			{
				return this._AuditorId;
			}
			set
			{
				if ((this._AuditorId != value))
				{
					if (this._Auditor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditorIdChanging(value);
					this.SendPropertyChanging();
					this._AuditorId = value;
					this.SendPropertyChanged("AuditorId");
					this.OnAuditorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditOpinion", DbType="NVarChar(200)")]
		public string AuditOpinion
		{
			get
			{
				return this._AuditOpinion;
			}
			set
			{
				if ((this._AuditOpinion != value))
				{
					this.OnAuditOpinionChanging(value);
					this.SendPropertyChanging();
					this._AuditOpinion = value;
					this.SendPropertyChanged("AuditOpinion");
					this.OnAuditOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_Base_Certificate", Storage="_Base_Certificate", ThisKey="CertificateId", OtherKey="CertificateId", IsForeignKey=true)]
		public Base_Certificate Base_Certificate
		{
			get
			{
				return this._Base_Certificate.Entity;
			}
			set
			{
				Base_Certificate previousValue = this._Base_Certificate.Entity;
				if (((previousValue != value) 
							|| (this._Base_Certificate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Certificate.Entity = null;
						previousValue.QualityAudit_EquipmentPersonQuality.Remove(this);
					}
					this._Base_Certificate.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_EquipmentPersonQuality.Add(this);
						this._CertificateId = value.CertificateId;
					}
					else
					{
						this._CertificateId = default(string);
					}
					this.SendPropertyChanged("Base_Certificate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.QualityAudit_EquipmentPersonQuality.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_EquipmentPersonQuality.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.QualityAudit_EquipmentPersonQuality.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_EquipmentPersonQuality.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId", Storage="_Auditor", ThisKey="AuditorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Auditor
		{
			get
			{
				return this._Auditor.Entity;
			}
			set
			{
				Sys_User previousValue = this._Auditor.Entity;
				if (((previousValue != value) 
							|| (this._Auditor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auditor.Entity = null;
						previousValue.QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId.Remove(this);
					}
					this._Auditor.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId.Add(this);
						this._AuditorId = value.UserId;
					}
					else
					{
						this._AuditorId = default(string);
					}
					this.SendPropertyChanged("Auditor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityAudit_PersonQuality")]
	public partial class QualityAudit_PersonQuality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PersonQualityId;
		
		private string _PersonId;
		
		private string _CertificateNo;
		
		private string _CertificateName;
		
		private string _Grade;
		
		private string _SendUnit;
		
		private System.Nullable<System.DateTime> _SendDate;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private System.Nullable<System.DateTime> _LateCheckDate;
		
		private string _ApprovalPerson;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _CertificateId;
		
		private string _AuditorId;
		
		private string _AuditOpinion;
		
		private string _States;
		
		private EntityRef<Base_Certificate> _Base_Certificate;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _Auditor;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonQualityIdChanging(string value);
    partial void OnPersonQualityIdChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnCertificateNoChanging(string value);
    partial void OnCertificateNoChanged();
    partial void OnCertificateNameChanging(string value);
    partial void OnCertificateNameChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnSendUnitChanging(string value);
    partial void OnSendUnitChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnLateCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLateCheckDateChanged();
    partial void OnApprovalPersonChanging(string value);
    partial void OnApprovalPersonChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnCertificateIdChanging(string value);
    partial void OnCertificateIdChanged();
    partial void OnAuditorIdChanging(string value);
    partial void OnAuditorIdChanged();
    partial void OnAuditOpinionChanging(string value);
    partial void OnAuditOpinionChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public QualityAudit_PersonQuality()
		{
			this._Base_Certificate = default(EntityRef<Base_Certificate>);
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Auditor = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonQualityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonQualityId
		{
			get
			{
				return this._PersonQualityId;
			}
			set
			{
				if ((this._PersonQualityId != value))
				{
					this.OnPersonQualityIdChanging(value);
					this.SendPropertyChanging();
					this._PersonQualityId = value;
					this.SendPropertyChanged("PersonQualityId");
					this.OnPersonQualityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNo", DbType="NVarChar(50)")]
		public string CertificateNo
		{
			get
			{
				return this._CertificateNo;
			}
			set
			{
				if ((this._CertificateNo != value))
				{
					this.OnCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._CertificateNo = value;
					this.SendPropertyChanged("CertificateNo");
					this.OnCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateName", DbType="NVarChar(50)")]
		public string CertificateName
		{
			get
			{
				return this._CertificateName;
			}
			set
			{
				if ((this._CertificateName != value))
				{
					this.OnCertificateNameChanging(value);
					this.SendPropertyChanging();
					this._CertificateName = value;
					this.SendPropertyChanged("CertificateName");
					this.OnCertificateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="NVarChar(50)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendUnit", DbType="NVarChar(50)")]
		public string SendUnit
		{
			get
			{
				return this._SendUnit;
			}
			set
			{
				if ((this._SendUnit != value))
				{
					this.OnSendUnitChanging(value);
					this.SendPropertyChanging();
					this._SendUnit = value;
					this.SendPropertyChanged("SendUnit");
					this.OnSendUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LateCheckDate
		{
			get
			{
				return this._LateCheckDate;
			}
			set
			{
				if ((this._LateCheckDate != value))
				{
					this.OnLateCheckDateChanging(value);
					this.SendPropertyChanging();
					this._LateCheckDate = value;
					this.SendPropertyChanged("LateCheckDate");
					this.OnLateCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalPerson", DbType="NVarChar(10)")]
		public string ApprovalPerson
		{
			get
			{
				return this._ApprovalPerson;
			}
			set
			{
				if ((this._ApprovalPerson != value))
				{
					this.OnApprovalPersonChanging(value);
					this.SendPropertyChanging();
					this._ApprovalPerson = value;
					this.SendPropertyChanged("ApprovalPerson");
					this.OnApprovalPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="NVarChar(50)")]
		public string CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					if (this._Base_Certificate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorId", DbType="NVarChar(50)")]
		public string AuditorId
		{
			get
			{
				return this._AuditorId;
			}
			set
			{
				if ((this._AuditorId != value))
				{
					if (this._Auditor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditorIdChanging(value);
					this.SendPropertyChanging();
					this._AuditorId = value;
					this.SendPropertyChanged("AuditorId");
					this.OnAuditorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditOpinion", DbType="NVarChar(200)")]
		public string AuditOpinion
		{
			get
			{
				return this._AuditOpinion;
			}
			set
			{
				if ((this._AuditOpinion != value))
				{
					this.OnAuditOpinionChanging(value);
					this.SendPropertyChanging();
					this._AuditOpinion = value;
					this.SendPropertyChanged("AuditOpinion");
					this.OnAuditOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Base_Certificate", Storage="_Base_Certificate", ThisKey="CertificateId", OtherKey="CertificateId", IsForeignKey=true)]
		public Base_Certificate Base_Certificate
		{
			get
			{
				return this._Base_Certificate.Entity;
			}
			set
			{
				Base_Certificate previousValue = this._Base_Certificate.Entity;
				if (((previousValue != value) 
							|| (this._Base_Certificate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Certificate.Entity = null;
						previousValue.QualityAudit_PersonQuality.Remove(this);
					}
					this._Base_Certificate.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQuality.Add(this);
						this._CertificateId = value.CertificateId;
					}
					else
					{
						this._CertificateId = default(string);
					}
					this.SendPropertyChanged("Base_Certificate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.QualityAudit_PersonQuality.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQuality.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.QualityAudit_PersonQuality.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQuality.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Sys_User_AuditorId", Storage="_Auditor", ThisKey="AuditorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Auditor
		{
			get
			{
				return this._Auditor.Entity;
			}
			set
			{
				Sys_User previousValue = this._Auditor.Entity;
				if (((previousValue != value) 
							|| (this._Auditor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auditor.Entity = null;
						previousValue.QualityAudit_PersonQuality_Sys_User_AuditorId.Remove(this);
					}
					this._Auditor.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_PersonQuality_Sys_User_AuditorId.Add(this);
						this._AuditorId = value.UserId;
					}
					else
					{
						this._AuditorId = default(string);
					}
					this.SendPropertyChanged("Auditor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityAudit_SafePersonQuality")]
	public partial class QualityAudit_SafePersonQuality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SafePersonQualityId;
		
		private string _PersonId;
		
		private string _CertificateNo;
		
		private string _CertificateName;
		
		private string _Grade;
		
		private string _SendUnit;
		
		private System.Nullable<System.DateTime> _SendDate;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private System.Nullable<System.DateTime> _LateCheckDate;
		
		private string _ApprovalPerson;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _AuditorId;
		
		private string _AuditOpinion;
		
		private string _States;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Sys_User> _Auditor;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSafePersonQualityIdChanging(string value);
    partial void OnSafePersonQualityIdChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnCertificateNoChanging(string value);
    partial void OnCertificateNoChanged();
    partial void OnCertificateNameChanging(string value);
    partial void OnCertificateNameChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnSendUnitChanging(string value);
    partial void OnSendUnitChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnLateCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLateCheckDateChanged();
    partial void OnApprovalPersonChanging(string value);
    partial void OnApprovalPersonChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnAuditorIdChanging(string value);
    partial void OnAuditorIdChanged();
    partial void OnAuditOpinionChanging(string value);
    partial void OnAuditOpinionChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public QualityAudit_SafePersonQuality()
		{
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Auditor = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafePersonQualityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SafePersonQualityId
		{
			get
			{
				return this._SafePersonQualityId;
			}
			set
			{
				if ((this._SafePersonQualityId != value))
				{
					this.OnSafePersonQualityIdChanging(value);
					this.SendPropertyChanging();
					this._SafePersonQualityId = value;
					this.SendPropertyChanged("SafePersonQualityId");
					this.OnSafePersonQualityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNo", DbType="NVarChar(50)")]
		public string CertificateNo
		{
			get
			{
				return this._CertificateNo;
			}
			set
			{
				if ((this._CertificateNo != value))
				{
					this.OnCertificateNoChanging(value);
					this.SendPropertyChanging();
					this._CertificateNo = value;
					this.SendPropertyChanged("CertificateNo");
					this.OnCertificateNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateName", DbType="NVarChar(50)")]
		public string CertificateName
		{
			get
			{
				return this._CertificateName;
			}
			set
			{
				if ((this._CertificateName != value))
				{
					this.OnCertificateNameChanging(value);
					this.SendPropertyChanging();
					this._CertificateName = value;
					this.SendPropertyChanged("CertificateName");
					this.OnCertificateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="NVarChar(50)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendUnit", DbType="NVarChar(50)")]
		public string SendUnit
		{
			get
			{
				return this._SendUnit;
			}
			set
			{
				if ((this._SendUnit != value))
				{
					this.OnSendUnitChanging(value);
					this.SendPropertyChanging();
					this._SendUnit = value;
					this.SendPropertyChanged("SendUnit");
					this.OnSendUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LateCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LateCheckDate
		{
			get
			{
				return this._LateCheckDate;
			}
			set
			{
				if ((this._LateCheckDate != value))
				{
					this.OnLateCheckDateChanging(value);
					this.SendPropertyChanging();
					this._LateCheckDate = value;
					this.SendPropertyChanged("LateCheckDate");
					this.OnLateCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalPerson", DbType="NVarChar(50)")]
		public string ApprovalPerson
		{
			get
			{
				return this._ApprovalPerson;
			}
			set
			{
				if ((this._ApprovalPerson != value))
				{
					this.OnApprovalPersonChanging(value);
					this.SendPropertyChanging();
					this._ApprovalPerson = value;
					this.SendPropertyChanged("ApprovalPerson");
					this.OnApprovalPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorId", DbType="NVarChar(50)")]
		public string AuditorId
		{
			get
			{
				return this._AuditorId;
			}
			set
			{
				if ((this._AuditorId != value))
				{
					if (this._Auditor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditorIdChanging(value);
					this.SendPropertyChanging();
					this._AuditorId = value;
					this.SendPropertyChanged("AuditorId");
					this.OnAuditorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditOpinion", DbType="NVarChar(200)")]
		public string AuditOpinion
		{
			get
			{
				return this._AuditOpinion;
			}
			set
			{
				if ((this._AuditOpinion != value))
				{
					this.OnAuditOpinionChanging(value);
					this.SendPropertyChanging();
					this._AuditOpinion = value;
					this.SendPropertyChanged("AuditOpinion");
					this.OnAuditOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SafePersonQuality_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.QualityAudit_SafePersonQuality.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_SafePersonQuality.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SafePersonQuality_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.QualityAudit_SafePersonQuality.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_SafePersonQuality.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SafePersonQuality_Sys_User_AuditorId", Storage="_Auditor", ThisKey="AuditorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Auditor
		{
			get
			{
				return this._Auditor.Entity;
			}
			set
			{
				Sys_User previousValue = this._Auditor.Entity;
				if (((previousValue != value) 
							|| (this._Auditor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Auditor.Entity = null;
						previousValue.QualityAudit_SafePersonQuality_Sys_User_AuditorId.Remove(this);
					}
					this._Auditor.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_SafePersonQuality_Sys_User_AuditorId.Add(this);
						this._AuditorId = value.UserId;
					}
					else
					{
						this._AuditorId = default(string);
					}
					this.SendPropertyChanged("Auditor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityAudit_SubUnitQuality")]
	public partial class QualityAudit_SubUnitQuality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SubUnitQualityId;
		
		private string _UnitId;
		
		private string _SubUnitQualityCode;
		
		private string _SubUnitQualityName;
		
		private string _BusinessLicense;
		
		private System.Nullable<System.DateTime> _BL_EnableDate;
		
		private string _BL_ScanUrl;
		
		private string _OrganCode;
		
		private System.Nullable<System.DateTime> _O_EnableDate;
		
		private string _O_ScanUrl;
		
		private string _Certificate;
		
		private System.Nullable<System.DateTime> _C_EnableDate;
		
		private string _C_ScanUrl;
		
		private string _QualityLicense;
		
		private System.Nullable<System.DateTime> _QL_EnableDate;
		
		private string _QL_ScanUrl;
		
		private string _HSELicense;
		
		private System.Nullable<System.DateTime> _H_EnableDate;
		
		private string _H_ScanUrl;
		
		private string _SecurityLicense;
		
		private System.Nullable<System.DateTime> _SL_EnableDate;
		
		private string _SL_ScanUrl;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _HSELicense2;
		
		private System.Nullable<System.DateTime> _H_EnableDate2;
		
		private string _H_ScanUrl2;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubUnitQualityIdChanging(string value);
    partial void OnSubUnitQualityIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnSubUnitQualityCodeChanging(string value);
    partial void OnSubUnitQualityCodeChanged();
    partial void OnSubUnitQualityNameChanging(string value);
    partial void OnSubUnitQualityNameChanged();
    partial void OnBusinessLicenseChanging(string value);
    partial void OnBusinessLicenseChanged();
    partial void OnBL_EnableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBL_EnableDateChanged();
    partial void OnBL_ScanUrlChanging(string value);
    partial void OnBL_ScanUrlChanged();
    partial void OnOrganCodeChanging(string value);
    partial void OnOrganCodeChanged();
    partial void OnO_EnableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnO_EnableDateChanged();
    partial void OnO_ScanUrlChanging(string value);
    partial void OnO_ScanUrlChanged();
    partial void OnCertificateChanging(string value);
    partial void OnCertificateChanged();
    partial void OnC_EnableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnC_EnableDateChanged();
    partial void OnC_ScanUrlChanging(string value);
    partial void OnC_ScanUrlChanged();
    partial void OnQualityLicenseChanging(string value);
    partial void OnQualityLicenseChanged();
    partial void OnQL_EnableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQL_EnableDateChanged();
    partial void OnQL_ScanUrlChanging(string value);
    partial void OnQL_ScanUrlChanged();
    partial void OnHSELicenseChanging(string value);
    partial void OnHSELicenseChanged();
    partial void OnH_EnableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnH_EnableDateChanged();
    partial void OnH_ScanUrlChanging(string value);
    partial void OnH_ScanUrlChanged();
    partial void OnSecurityLicenseChanging(string value);
    partial void OnSecurityLicenseChanged();
    partial void OnSL_EnableDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSL_EnableDateChanged();
    partial void OnSL_ScanUrlChanging(string value);
    partial void OnSL_ScanUrlChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnHSELicense2Changing(string value);
    partial void OnHSELicense2Changed();
    partial void OnH_EnableDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnH_EnableDate2Changed();
    partial void OnH_ScanUrl2Changing(string value);
    partial void OnH_ScanUrl2Changed();
    #endregion
		
		public QualityAudit_SubUnitQuality()
		{
			this._Base_Unit = default(EntityRef<Base_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubUnitQualityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SubUnitQualityId
		{
			get
			{
				return this._SubUnitQualityId;
			}
			set
			{
				if ((this._SubUnitQualityId != value))
				{
					this.OnSubUnitQualityIdChanging(value);
					this.SendPropertyChanging();
					this._SubUnitQualityId = value;
					this.SendPropertyChanged("SubUnitQualityId");
					this.OnSubUnitQualityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubUnitQualityCode", DbType="NVarChar(50)")]
		public string SubUnitQualityCode
		{
			get
			{
				return this._SubUnitQualityCode;
			}
			set
			{
				if ((this._SubUnitQualityCode != value))
				{
					this.OnSubUnitQualityCodeChanging(value);
					this.SendPropertyChanging();
					this._SubUnitQualityCode = value;
					this.SendPropertyChanged("SubUnitQualityCode");
					this.OnSubUnitQualityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubUnitQualityName", DbType="NVarChar(100)")]
		public string SubUnitQualityName
		{
			get
			{
				return this._SubUnitQualityName;
			}
			set
			{
				if ((this._SubUnitQualityName != value))
				{
					this.OnSubUnitQualityNameChanging(value);
					this.SendPropertyChanging();
					this._SubUnitQualityName = value;
					this.SendPropertyChanged("SubUnitQualityName");
					this.OnSubUnitQualityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessLicense", DbType="NVarChar(50)")]
		public string BusinessLicense
		{
			get
			{
				return this._BusinessLicense;
			}
			set
			{
				if ((this._BusinessLicense != value))
				{
					this.OnBusinessLicenseChanging(value);
					this.SendPropertyChanging();
					this._BusinessLicense = value;
					this.SendPropertyChanged("BusinessLicense");
					this.OnBusinessLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BL_EnableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BL_EnableDate
		{
			get
			{
				return this._BL_EnableDate;
			}
			set
			{
				if ((this._BL_EnableDate != value))
				{
					this.OnBL_EnableDateChanging(value);
					this.SendPropertyChanging();
					this._BL_EnableDate = value;
					this.SendPropertyChanged("BL_EnableDate");
					this.OnBL_EnableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BL_ScanUrl", DbType="NVarChar(500)")]
		public string BL_ScanUrl
		{
			get
			{
				return this._BL_ScanUrl;
			}
			set
			{
				if ((this._BL_ScanUrl != value))
				{
					this.OnBL_ScanUrlChanging(value);
					this.SendPropertyChanging();
					this._BL_ScanUrl = value;
					this.SendPropertyChanged("BL_ScanUrl");
					this.OnBL_ScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganCode", DbType="NVarChar(50)")]
		public string OrganCode
		{
			get
			{
				return this._OrganCode;
			}
			set
			{
				if ((this._OrganCode != value))
				{
					this.OnOrganCodeChanging(value);
					this.SendPropertyChanging();
					this._OrganCode = value;
					this.SendPropertyChanged("OrganCode");
					this.OnOrganCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_O_EnableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> O_EnableDate
		{
			get
			{
				return this._O_EnableDate;
			}
			set
			{
				if ((this._O_EnableDate != value))
				{
					this.OnO_EnableDateChanging(value);
					this.SendPropertyChanging();
					this._O_EnableDate = value;
					this.SendPropertyChanged("O_EnableDate");
					this.OnO_EnableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_O_ScanUrl", DbType="NVarChar(500)")]
		public string O_ScanUrl
		{
			get
			{
				return this._O_ScanUrl;
			}
			set
			{
				if ((this._O_ScanUrl != value))
				{
					this.OnO_ScanUrlChanging(value);
					this.SendPropertyChanging();
					this._O_ScanUrl = value;
					this.SendPropertyChanged("O_ScanUrl");
					this.OnO_ScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certificate", DbType="NVarChar(50)")]
		public string Certificate
		{
			get
			{
				return this._Certificate;
			}
			set
			{
				if ((this._Certificate != value))
				{
					this.OnCertificateChanging(value);
					this.SendPropertyChanging();
					this._Certificate = value;
					this.SendPropertyChanged("Certificate");
					this.OnCertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_EnableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_EnableDate
		{
			get
			{
				return this._C_EnableDate;
			}
			set
			{
				if ((this._C_EnableDate != value))
				{
					this.OnC_EnableDateChanging(value);
					this.SendPropertyChanging();
					this._C_EnableDate = value;
					this.SendPropertyChanged("C_EnableDate");
					this.OnC_EnableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ScanUrl", DbType="NVarChar(500)")]
		public string C_ScanUrl
		{
			get
			{
				return this._C_ScanUrl;
			}
			set
			{
				if ((this._C_ScanUrl != value))
				{
					this.OnC_ScanUrlChanging(value);
					this.SendPropertyChanging();
					this._C_ScanUrl = value;
					this.SendPropertyChanged("C_ScanUrl");
					this.OnC_ScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualityLicense", DbType="NVarChar(50)")]
		public string QualityLicense
		{
			get
			{
				return this._QualityLicense;
			}
			set
			{
				if ((this._QualityLicense != value))
				{
					this.OnQualityLicenseChanging(value);
					this.SendPropertyChanging();
					this._QualityLicense = value;
					this.SendPropertyChanged("QualityLicense");
					this.OnQualityLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QL_EnableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QL_EnableDate
		{
			get
			{
				return this._QL_EnableDate;
			}
			set
			{
				if ((this._QL_EnableDate != value))
				{
					this.OnQL_EnableDateChanging(value);
					this.SendPropertyChanging();
					this._QL_EnableDate = value;
					this.SendPropertyChanged("QL_EnableDate");
					this.OnQL_EnableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QL_ScanUrl", DbType="NVarChar(500)")]
		public string QL_ScanUrl
		{
			get
			{
				return this._QL_ScanUrl;
			}
			set
			{
				if ((this._QL_ScanUrl != value))
				{
					this.OnQL_ScanUrlChanging(value);
					this.SendPropertyChanging();
					this._QL_ScanUrl = value;
					this.SendPropertyChanged("QL_ScanUrl");
					this.OnQL_ScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSELicense", DbType="NVarChar(50)")]
		public string HSELicense
		{
			get
			{
				return this._HSELicense;
			}
			set
			{
				if ((this._HSELicense != value))
				{
					this.OnHSELicenseChanging(value);
					this.SendPropertyChanging();
					this._HSELicense = value;
					this.SendPropertyChanged("HSELicense");
					this.OnHSELicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_EnableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> H_EnableDate
		{
			get
			{
				return this._H_EnableDate;
			}
			set
			{
				if ((this._H_EnableDate != value))
				{
					this.OnH_EnableDateChanging(value);
					this.SendPropertyChanging();
					this._H_EnableDate = value;
					this.SendPropertyChanged("H_EnableDate");
					this.OnH_EnableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_ScanUrl", DbType="NVarChar(500)")]
		public string H_ScanUrl
		{
			get
			{
				return this._H_ScanUrl;
			}
			set
			{
				if ((this._H_ScanUrl != value))
				{
					this.OnH_ScanUrlChanging(value);
					this.SendPropertyChanging();
					this._H_ScanUrl = value;
					this.SendPropertyChanged("H_ScanUrl");
					this.OnH_ScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityLicense", DbType="NVarChar(50)")]
		public string SecurityLicense
		{
			get
			{
				return this._SecurityLicense;
			}
			set
			{
				if ((this._SecurityLicense != value))
				{
					this.OnSecurityLicenseChanging(value);
					this.SendPropertyChanging();
					this._SecurityLicense = value;
					this.SendPropertyChanged("SecurityLicense");
					this.OnSecurityLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_EnableDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SL_EnableDate
		{
			get
			{
				return this._SL_EnableDate;
			}
			set
			{
				if ((this._SL_EnableDate != value))
				{
					this.OnSL_EnableDateChanging(value);
					this.SendPropertyChanging();
					this._SL_EnableDate = value;
					this.SendPropertyChanged("SL_EnableDate");
					this.OnSL_EnableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_ScanUrl", DbType="NVarChar(500)")]
		public string SL_ScanUrl
		{
			get
			{
				return this._SL_ScanUrl;
			}
			set
			{
				if ((this._SL_ScanUrl != value))
				{
					this.OnSL_ScanUrlChanging(value);
					this.SendPropertyChanging();
					this._SL_ScanUrl = value;
					this.SendPropertyChanged("SL_ScanUrl");
					this.OnSL_ScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSELicense2", DbType="NVarChar(50)")]
		public string HSELicense2
		{
			get
			{
				return this._HSELicense2;
			}
			set
			{
				if ((this._HSELicense2 != value))
				{
					this.OnHSELicense2Changing(value);
					this.SendPropertyChanging();
					this._HSELicense2 = value;
					this.SendPropertyChanged("HSELicense2");
					this.OnHSELicense2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_EnableDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> H_EnableDate2
		{
			get
			{
				return this._H_EnableDate2;
			}
			set
			{
				if ((this._H_EnableDate2 != value))
				{
					this.OnH_EnableDate2Changing(value);
					this.SendPropertyChanging();
					this._H_EnableDate2 = value;
					this.SendPropertyChanged("H_EnableDate2");
					this.OnH_EnableDate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_ScanUrl2", DbType="NVarChar(500)")]
		public string H_ScanUrl2
		{
			get
			{
				return this._H_ScanUrl2;
			}
			set
			{
				if ((this._H_ScanUrl2 != value))
				{
					this.OnH_ScanUrl2Changing(value);
					this.SendPropertyChanging();
					this._H_ScanUrl2 = value;
					this.SendPropertyChanged("H_ScanUrl2");
					this.OnH_ScanUrl2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SubUnitQuality_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.QualityAudit_SubUnitQuality.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_SubUnitQuality.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QualityAudit_SubUnitQualityAuditDetail")]
	public partial class QualityAudit_SubUnitQualityAuditDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AuditDetailId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _AuditContent;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _AuditResult;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuditDetailIdChanging(string value);
    partial void OnAuditDetailIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnAuditContentChanging(string value);
    partial void OnAuditContentChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnAuditResultChanging(string value);
    partial void OnAuditResultChanged();
    #endregion
		
		public QualityAudit_SubUnitQualityAuditDetail()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AuditDetailId
		{
			get
			{
				return this._AuditDetailId;
			}
			set
			{
				if ((this._AuditDetailId != value))
				{
					this.OnAuditDetailIdChanging(value);
					this.SendPropertyChanging();
					this._AuditDetailId = value;
					this.SendPropertyChanged("AuditDetailId");
					this.OnAuditDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditContent", DbType="NVarChar(200)")]
		public string AuditContent
		{
			get
			{
				return this._AuditContent;
			}
			set
			{
				if ((this._AuditContent != value))
				{
					this.OnAuditContentChanging(value);
					this.SendPropertyChanging();
					this._AuditContent = value;
					this.SendPropertyChanged("AuditContent");
					this.OnAuditContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditResult", DbType="NVarChar(500)")]
		public string AuditResult
		{
			get
			{
				return this._AuditResult;
			}
			set
			{
				if ((this._AuditResult != value))
				{
					this.OnAuditResultChanging(value);
					this.SendPropertyChanging();
					this._AuditResult = value;
					this.SendPropertyChanged("AuditResult");
					this.OnAuditResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SubUnitQualityAuditDetail_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.QualityAudit_SubUnitQualityAuditDetail.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_SubUnitQualityAuditDetail.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SubUnitQualityAuditDetail_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.QualityAudit_SubUnitQualityAuditDetail.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_SubUnitQualityAuditDetail.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SubUnitQualityAuditDetail_Sys_User", Storage="_Sys_User", ThisKey="AuditMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.QualityAudit_SubUnitQualityAuditDetail.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.QualityAudit_SubUnitQualityAuditDetail.Add(this);
						this._AuditMan = value.UserId;
					}
					else
					{
						this._AuditMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resources_SignManage")]
	public partial class Resources_SignManage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SignManageId;
		
		private string _SignName;
		
		private string _SignCode;
		
		private string _SignLen;
		
		private string _SignWide;
		
		private string _SignHigh;
		
		private string _SignThick;
		
		private string _Material;
		
		private string _SignArea;
		
		private string _SignType;
		
		private string _SignImage;
		
		private string _SignUrl;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSignManageIdChanging(string value);
    partial void OnSignManageIdChanged();
    partial void OnSignNameChanging(string value);
    partial void OnSignNameChanged();
    partial void OnSignCodeChanging(string value);
    partial void OnSignCodeChanged();
    partial void OnSignLenChanging(string value);
    partial void OnSignLenChanged();
    partial void OnSignWideChanging(string value);
    partial void OnSignWideChanged();
    partial void OnSignHighChanging(string value);
    partial void OnSignHighChanged();
    partial void OnSignThickChanging(string value);
    partial void OnSignThickChanged();
    partial void OnMaterialChanging(string value);
    partial void OnMaterialChanged();
    partial void OnSignAreaChanging(string value);
    partial void OnSignAreaChanged();
    partial void OnSignTypeChanging(string value);
    partial void OnSignTypeChanged();
    partial void OnSignImageChanging(string value);
    partial void OnSignImageChanged();
    partial void OnSignUrlChanging(string value);
    partial void OnSignUrlChanged();
    #endregion
		
		public Resources_SignManage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignManageId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SignManageId
		{
			get
			{
				return this._SignManageId;
			}
			set
			{
				if ((this._SignManageId != value))
				{
					this.OnSignManageIdChanging(value);
					this.SendPropertyChanging();
					this._SignManageId = value;
					this.SendPropertyChanged("SignManageId");
					this.OnSignManageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignName", DbType="NVarChar(50)")]
		public string SignName
		{
			get
			{
				return this._SignName;
			}
			set
			{
				if ((this._SignName != value))
				{
					this.OnSignNameChanging(value);
					this.SendPropertyChanging();
					this._SignName = value;
					this.SendPropertyChanged("SignName");
					this.OnSignNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignCode", DbType="NVarChar(50)")]
		public string SignCode
		{
			get
			{
				return this._SignCode;
			}
			set
			{
				if ((this._SignCode != value))
				{
					this.OnSignCodeChanging(value);
					this.SendPropertyChanging();
					this._SignCode = value;
					this.SendPropertyChanged("SignCode");
					this.OnSignCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignLen", DbType="NVarChar(50)")]
		public string SignLen
		{
			get
			{
				return this._SignLen;
			}
			set
			{
				if ((this._SignLen != value))
				{
					this.OnSignLenChanging(value);
					this.SendPropertyChanging();
					this._SignLen = value;
					this.SendPropertyChanged("SignLen");
					this.OnSignLenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignWide", DbType="NVarChar(50)")]
		public string SignWide
		{
			get
			{
				return this._SignWide;
			}
			set
			{
				if ((this._SignWide != value))
				{
					this.OnSignWideChanging(value);
					this.SendPropertyChanging();
					this._SignWide = value;
					this.SendPropertyChanged("SignWide");
					this.OnSignWideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignHigh", DbType="NVarChar(50)")]
		public string SignHigh
		{
			get
			{
				return this._SignHigh;
			}
			set
			{
				if ((this._SignHigh != value))
				{
					this.OnSignHighChanging(value);
					this.SendPropertyChanging();
					this._SignHigh = value;
					this.SendPropertyChanged("SignHigh");
					this.OnSignHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignThick", DbType="NVarChar(50)")]
		public string SignThick
		{
			get
			{
				return this._SignThick;
			}
			set
			{
				if ((this._SignThick != value))
				{
					this.OnSignThickChanging(value);
					this.SendPropertyChanging();
					this._SignThick = value;
					this.SendPropertyChanged("SignThick");
					this.OnSignThickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="NVarChar(50)")]
		public string Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this.OnMaterialChanging(value);
					this.SendPropertyChanging();
					this._Material = value;
					this.SendPropertyChanged("Material");
					this.OnMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignArea", DbType="NVarChar(200)")]
		public string SignArea
		{
			get
			{
				return this._SignArea;
			}
			set
			{
				if ((this._SignArea != value))
				{
					this.OnSignAreaChanging(value);
					this.SendPropertyChanging();
					this._SignArea = value;
					this.SendPropertyChanged("SignArea");
					this.OnSignAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignType", DbType="Char(1)")]
		public string SignType
		{
			get
			{
				return this._SignType;
			}
			set
			{
				if ((this._SignType != value))
				{
					this.OnSignTypeChanging(value);
					this.SendPropertyChanging();
					this._SignType = value;
					this.SendPropertyChanged("SignType");
					this.OnSignTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignImage", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SignImage
		{
			get
			{
				return this._SignImage;
			}
			set
			{
				if ((this._SignImage != value))
				{
					this.OnSignImageChanging(value);
					this.SendPropertyChanging();
					this._SignImage = value;
					this.SendPropertyChanged("SignImage");
					this.OnSignImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignUrl", DbType="NVarChar(400)")]
		public string SignUrl
		{
			get
			{
				return this._SignUrl;
			}
			set
			{
				if ((this._SignUrl != value))
				{
					this.OnSignUrlChanging(value);
					this.SendPropertyChanging();
					this._SignUrl = value;
					this.SendPropertyChanged("SignUrl");
					this.OnSignUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecuritySystem_SafetyOrganization")]
	public partial class SecuritySystem_SafetyOrganization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SafetyOrganizationId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _Post;
		
		private string _Names;
		
		private string _Telephone;
		
		private string _MobilePhone;
		
		private string _EMail;
		
		private string _Duty;
		
		private string _SortIndex;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSafetyOrganizationIdChanging(string value);
    partial void OnSafetyOrganizationIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnPostChanging(string value);
    partial void OnPostChanged();
    partial void OnNamesChanging(string value);
    partial void OnNamesChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnDutyChanging(string value);
    partial void OnDutyChanged();
    partial void OnSortIndexChanging(string value);
    partial void OnSortIndexChanged();
    #endregion
		
		public SecuritySystem_SafetyOrganization()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyOrganizationId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SafetyOrganizationId
		{
			get
			{
				return this._SafetyOrganizationId;
			}
			set
			{
				if ((this._SafetyOrganizationId != value))
				{
					this.OnSafetyOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._SafetyOrganizationId = value;
					this.SendPropertyChanged("SafetyOrganizationId");
					this.OnSafetyOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post", DbType="NVarChar(50)")]
		public string Post
		{
			get
			{
				return this._Post;
			}
			set
			{
				if ((this._Post != value))
				{
					this.OnPostChanging(value);
					this.SendPropertyChanging();
					this._Post = value;
					this.SendPropertyChanged("Post");
					this.OnPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Names", DbType="NVarChar(10)")]
		public string Names
		{
			get
			{
				return this._Names;
			}
			set
			{
				if ((this._Names != value))
				{
					this.OnNamesChanging(value);
					this.SendPropertyChanging();
					this._Names = value;
					this.SendPropertyChanged("Names");
					this.OnNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(20)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(50)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duty", DbType="NVarChar(2000)")]
		public string Duty
		{
			get
			{
				return this._Duty;
			}
			set
			{
				if ((this._Duty != value))
				{
					this.OnDutyChanging(value);
					this.SendPropertyChanging();
					this._Duty = value;
					this.SendPropertyChanged("Duty");
					this.OnDutyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="NVarChar(50)")]
		public string SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SecuritySystem_SafetyOrganization_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.SecuritySystem_SafetyOrganization.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.SecuritySystem_SafetyOrganization.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SecuritySystem_SafetyOrganization_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.SecuritySystem_SafetyOrganization.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.SecuritySystem_SafetyOrganization.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitePerson_Checking")]
	public partial class SitePerson_Checking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CheckingId;
		
		private string _ProjectId;
		
		private string _CardNo;
		
		private string _WorkAreaId;
		
		private string _IdentityCard;
		
		private System.Nullable<System.DateTime> _IntoOutTime;
		
		private string _IntoOut;
		
		private string _Address;
		
		private string _States;
		
		private string _PersonId;
		
		private string _WorkAreaName;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckingIdChanging(string value);
    partial void OnCheckingIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnCardNoChanging(string value);
    partial void OnCardNoChanged();
    partial void OnWorkAreaIdChanging(string value);
    partial void OnWorkAreaIdChanged();
    partial void OnIdentityCardChanging(string value);
    partial void OnIdentityCardChanged();
    partial void OnIntoOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnIntoOutTimeChanged();
    partial void OnIntoOutChanging(string value);
    partial void OnIntoOutChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnWorkAreaNameChanging(string value);
    partial void OnWorkAreaNameChanged();
    #endregion
		
		public SitePerson_Checking()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CheckingId
		{
			get
			{
				return this._CheckingId;
			}
			set
			{
				if ((this._CheckingId != value))
				{
					this.OnCheckingIdChanging(value);
					this.SendPropertyChanging();
					this._CheckingId = value;
					this.SendPropertyChanged("CheckingId");
					this.OnCheckingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNo", DbType="NVarChar(20)")]
		public string CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this.OnCardNoChanging(value);
					this.SendPropertyChanging();
					this._CardNo = value;
					this.SendPropertyChanged("CardNo");
					this.OnCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkAreaIdChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaId = value;
					this.SendPropertyChanged("WorkAreaId");
					this.OnWorkAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(18)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this.OnIdentityCardChanging(value);
					this.SendPropertyChanging();
					this._IdentityCard = value;
					this.SendPropertyChanged("IdentityCard");
					this.OnIdentityCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntoOutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> IntoOutTime
		{
			get
			{
				return this._IntoOutTime;
			}
			set
			{
				if ((this._IntoOutTime != value))
				{
					this.OnIntoOutTimeChanging(value);
					this.SendPropertyChanging();
					this._IntoOutTime = value;
					this.SendPropertyChanged("IntoOutTime");
					this.OnIntoOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntoOut", DbType="Char(1)")]
		public string IntoOut
		{
			get
			{
				return this._IntoOut;
			}
			set
			{
				if ((this._IntoOut != value))
				{
					this.OnIntoOutChanging(value);
					this.SendPropertyChanging();
					this._IntoOut = value;
					this.SendPropertyChanged("IntoOut");
					this.OnIntoOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50)")]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaName", DbType="NVarChar(100)")]
		public string WorkAreaName
		{
			get
			{
				return this._WorkAreaName;
			}
			set
			{
				if ((this._WorkAreaName != value))
				{
					this.OnWorkAreaNameChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaName = value;
					this.SendPropertyChanged("WorkAreaName");
					this.OnWorkAreaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Checking_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.SitePerson_Checking.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Checking.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Checking_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.SitePerson_Checking.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Checking.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Checking_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="WorkAreaId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.SitePerson_Checking.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Checking.Add(this);
						this._WorkAreaId = value.UnitWorkId;
					}
					else
					{
						this._WorkAreaId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitePerson_DayReport")]
	public partial class SitePerson_DayReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DayReportId;
		
		private string _ProjectId;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<decimal> _TotalPersonWorkTime;
		
		private string _States;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<SitePerson_DayReportDetail> _SitePerson_DayReportDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDayReportIdChanging(string value);
    partial void OnDayReportIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnTotalPersonWorkTimeChanging(System.Nullable<decimal> value);
    partial void OnTotalPersonWorkTimeChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public SitePerson_DayReport()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._SitePerson_DayReportDetail = new EntitySet<SitePerson_DayReportDetail>(new Action<SitePerson_DayReportDetail>(this.attach_SitePerson_DayReportDetail), new Action<SitePerson_DayReportDetail>(this.detach_SitePerson_DayReportDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayReportId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DayReportId
		{
			get
			{
				return this._DayReportId;
			}
			set
			{
				if ((this._DayReportId != value))
				{
					this.OnDayReportIdChanging(value);
					this.SendPropertyChanging();
					this._DayReportId = value;
					this.SendPropertyChanged("DayReportId");
					this.OnDayReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPersonWorkTime
		{
			get
			{
				return this._TotalPersonWorkTime;
			}
			set
			{
				if ((this._TotalPersonWorkTime != value))
				{
					this.OnTotalPersonWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._TotalPersonWorkTime = value;
					this.SendPropertyChanged("TotalPersonWorkTime");
					this.OnTotalPersonWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_DayReport_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.SitePerson_DayReport.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.SitePerson_DayReport.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_DayReport_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.SitePerson_DayReport.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.SitePerson_DayReport.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_DayReportDetail_SitePerson_DayReport", Storage="_SitePerson_DayReportDetail", ThisKey="DayReportId", OtherKey="DayReportId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_DayReportDetail> SitePerson_DayReportDetail
		{
			get
			{
				return this._SitePerson_DayReportDetail;
			}
			set
			{
				this._SitePerson_DayReportDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_DayReportDetail(SitePerson_DayReportDetail entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_DayReport = this;
		}
		
		private void detach_SitePerson_DayReportDetail(SitePerson_DayReportDetail entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_DayReport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitePerson_DayReportDetail")]
	public partial class SitePerson_DayReportDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DayReportDetailId;
		
		private string _DayReportId;
		
		private string _UnitId;
		
		private System.Nullable<decimal> _WorkTime;
		
		private System.Nullable<int> _CheckPersonNum;
		
		private System.Nullable<decimal> _RealPersonNum;
		
		private System.Nullable<decimal> _PersonWorkTime;
		
		private System.Nullable<decimal> _TotalPersonWorkTime;
		
		private string _Remark;
		
		private string _StaffData;
		
		private System.Nullable<decimal> _DayNum;
		
		private System.Nullable<int> _YearPersonWorkTime;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<SitePerson_DayReport> _SitePerson_DayReport;
		
		private EntitySet<SitePerson_DayReportUnitDetail> _SitePerson_DayReportUnitDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDayReportDetailIdChanging(string value);
    partial void OnDayReportDetailIdChanged();
    partial void OnDayReportIdChanging(string value);
    partial void OnDayReportIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnWorkTimeChanging(System.Nullable<decimal> value);
    partial void OnWorkTimeChanged();
    partial void OnCheckPersonNumChanging(System.Nullable<int> value);
    partial void OnCheckPersonNumChanged();
    partial void OnRealPersonNumChanging(System.Nullable<decimal> value);
    partial void OnRealPersonNumChanged();
    partial void OnPersonWorkTimeChanging(System.Nullable<decimal> value);
    partial void OnPersonWorkTimeChanged();
    partial void OnTotalPersonWorkTimeChanging(System.Nullable<decimal> value);
    partial void OnTotalPersonWorkTimeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnStaffDataChanging(string value);
    partial void OnStaffDataChanged();
    partial void OnDayNumChanging(System.Nullable<decimal> value);
    partial void OnDayNumChanged();
    partial void OnYearPersonWorkTimeChanging(System.Nullable<int> value);
    partial void OnYearPersonWorkTimeChanged();
    #endregion
		
		public SitePerson_DayReportDetail()
		{
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._SitePerson_DayReport = default(EntityRef<SitePerson_DayReport>);
			this._SitePerson_DayReportUnitDetail = new EntitySet<SitePerson_DayReportUnitDetail>(new Action<SitePerson_DayReportUnitDetail>(this.attach_SitePerson_DayReportUnitDetail), new Action<SitePerson_DayReportUnitDetail>(this.detach_SitePerson_DayReportUnitDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayReportDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DayReportDetailId
		{
			get
			{
				return this._DayReportDetailId;
			}
			set
			{
				if ((this._DayReportDetailId != value))
				{
					this.OnDayReportDetailIdChanging(value);
					this.SendPropertyChanging();
					this._DayReportDetailId = value;
					this.SendPropertyChanged("DayReportDetailId");
					this.OnDayReportDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayReportId", DbType="NVarChar(50)")]
		public string DayReportId
		{
			get
			{
				return this._DayReportId;
			}
			set
			{
				if ((this._DayReportId != value))
				{
					if (this._SitePerson_DayReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayReportIdChanging(value);
					this.SendPropertyChanging();
					this._DayReportId = value;
					this.SendPropertyChanged("DayReportId");
					this.OnDayReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this.OnWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._WorkTime = value;
					this.SendPropertyChanged("WorkTime");
					this.OnWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPersonNum", DbType="Int")]
		public System.Nullable<int> CheckPersonNum
		{
			get
			{
				return this._CheckPersonNum;
			}
			set
			{
				if ((this._CheckPersonNum != value))
				{
					this.OnCheckPersonNumChanging(value);
					this.SendPropertyChanging();
					this._CheckPersonNum = value;
					this.SendPropertyChanged("CheckPersonNum");
					this.OnCheckPersonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPersonNum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RealPersonNum
		{
			get
			{
				return this._RealPersonNum;
			}
			set
			{
				if ((this._RealPersonNum != value))
				{
					this.OnRealPersonNumChanging(value);
					this.SendPropertyChanging();
					this._RealPersonNum = value;
					this.SendPropertyChanged("RealPersonNum");
					this.OnRealPersonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PersonWorkTime
		{
			get
			{
				return this._PersonWorkTime;
			}
			set
			{
				if ((this._PersonWorkTime != value))
				{
					this.OnPersonWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._PersonWorkTime = value;
					this.SendPropertyChanged("PersonWorkTime");
					this.OnPersonWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPersonWorkTime
		{
			get
			{
				return this._TotalPersonWorkTime;
			}
			set
			{
				if ((this._TotalPersonWorkTime != value))
				{
					this.OnTotalPersonWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._TotalPersonWorkTime = value;
					this.SendPropertyChanged("TotalPersonWorkTime");
					this.OnTotalPersonWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffData", DbType="NVarChar(2000)")]
		public string StaffData
		{
			get
			{
				return this._StaffData;
			}
			set
			{
				if ((this._StaffData != value))
				{
					this.OnStaffDataChanging(value);
					this.SendPropertyChanging();
					this._StaffData = value;
					this.SendPropertyChanged("StaffData");
					this.OnStaffDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayNum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DayNum
		{
			get
			{
				return this._DayNum;
			}
			set
			{
				if ((this._DayNum != value))
				{
					this.OnDayNumChanging(value);
					this.SendPropertyChanging();
					this._DayNum = value;
					this.SendPropertyChanged("DayNum");
					this.OnDayNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearPersonWorkTime", DbType="Int")]
		public System.Nullable<int> YearPersonWorkTime
		{
			get
			{
				return this._YearPersonWorkTime;
			}
			set
			{
				if ((this._YearPersonWorkTime != value))
				{
					this.OnYearPersonWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._YearPersonWorkTime = value;
					this.SendPropertyChanged("YearPersonWorkTime");
					this.OnYearPersonWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_DayReportDetail_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.SitePerson_DayReportDetail.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.SitePerson_DayReportDetail.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_DayReportDetail_SitePerson_DayReport", Storage="_SitePerson_DayReport", ThisKey="DayReportId", OtherKey="DayReportId", IsForeignKey=true)]
		public SitePerson_DayReport SitePerson_DayReport
		{
			get
			{
				return this._SitePerson_DayReport.Entity;
			}
			set
			{
				SitePerson_DayReport previousValue = this._SitePerson_DayReport.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_DayReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_DayReport.Entity = null;
						previousValue.SitePerson_DayReportDetail.Remove(this);
					}
					this._SitePerson_DayReport.Entity = value;
					if ((value != null))
					{
						value.SitePerson_DayReportDetail.Add(this);
						this._DayReportId = value.DayReportId;
					}
					else
					{
						this._DayReportId = default(string);
					}
					this.SendPropertyChanged("SitePerson_DayReport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_DayReportUnitDetail_SitePerson_DayReportDetail", Storage="_SitePerson_DayReportUnitDetail", ThisKey="DayReportDetailId", OtherKey="DayReportDetailId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_DayReportUnitDetail> SitePerson_DayReportUnitDetail
		{
			get
			{
				return this._SitePerson_DayReportUnitDetail;
			}
			set
			{
				this._SitePerson_DayReportUnitDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_DayReportUnitDetail(SitePerson_DayReportUnitDetail entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_DayReportDetail = this;
		}
		
		private void detach_SitePerson_DayReportUnitDetail(SitePerson_DayReportUnitDetail entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_DayReportDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitePerson_DayReportUnitDetail")]
	public partial class SitePerson_DayReportUnitDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DayReportUnitDetailId;
		
		private string _DayReportDetailId;
		
		private string _PostId;
		
		private System.Nullable<int> _CheckPersonNum;
		
		private System.Nullable<int> _RealPersonNum;
		
		private System.Nullable<decimal> _PersonWorkTime;
		
		private string _Remark;
		
		private EntityRef<Base_WorkPost> _Base_WorkPost;
		
		private EntityRef<SitePerson_DayReportDetail> _SitePerson_DayReportDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDayReportUnitDetailIdChanging(string value);
    partial void OnDayReportUnitDetailIdChanged();
    partial void OnDayReportDetailIdChanging(string value);
    partial void OnDayReportDetailIdChanged();
    partial void OnPostIdChanging(string value);
    partial void OnPostIdChanged();
    partial void OnCheckPersonNumChanging(System.Nullable<int> value);
    partial void OnCheckPersonNumChanged();
    partial void OnRealPersonNumChanging(System.Nullable<int> value);
    partial void OnRealPersonNumChanged();
    partial void OnPersonWorkTimeChanging(System.Nullable<decimal> value);
    partial void OnPersonWorkTimeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public SitePerson_DayReportUnitDetail()
		{
			this._Base_WorkPost = default(EntityRef<Base_WorkPost>);
			this._SitePerson_DayReportDetail = default(EntityRef<SitePerson_DayReportDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayReportUnitDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DayReportUnitDetailId
		{
			get
			{
				return this._DayReportUnitDetailId;
			}
			set
			{
				if ((this._DayReportUnitDetailId != value))
				{
					this.OnDayReportUnitDetailIdChanging(value);
					this.SendPropertyChanging();
					this._DayReportUnitDetailId = value;
					this.SendPropertyChanged("DayReportUnitDetailId");
					this.OnDayReportUnitDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayReportDetailId", DbType="NVarChar(50)")]
		public string DayReportDetailId
		{
			get
			{
				return this._DayReportDetailId;
			}
			set
			{
				if ((this._DayReportDetailId != value))
				{
					if (this._SitePerson_DayReportDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDayReportDetailIdChanging(value);
					this.SendPropertyChanging();
					this._DayReportDetailId = value;
					this.SendPropertyChanged("DayReportDetailId");
					this.OnDayReportDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="NVarChar(50)")]
		public string PostId
		{
			get
			{
				return this._PostId;
			}
			set
			{
				if ((this._PostId != value))
				{
					if (this._Base_WorkPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIdChanging(value);
					this.SendPropertyChanging();
					this._PostId = value;
					this.SendPropertyChanged("PostId");
					this.OnPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPersonNum", DbType="Int")]
		public System.Nullable<int> CheckPersonNum
		{
			get
			{
				return this._CheckPersonNum;
			}
			set
			{
				if ((this._CheckPersonNum != value))
				{
					this.OnCheckPersonNumChanging(value);
					this.SendPropertyChanging();
					this._CheckPersonNum = value;
					this.SendPropertyChanged("CheckPersonNum");
					this.OnCheckPersonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPersonNum", DbType="Int")]
		public System.Nullable<int> RealPersonNum
		{
			get
			{
				return this._RealPersonNum;
			}
			set
			{
				if ((this._RealPersonNum != value))
				{
					this.OnRealPersonNumChanging(value);
					this.SendPropertyChanging();
					this._RealPersonNum = value;
					this.SendPropertyChanged("RealPersonNum");
					this.OnRealPersonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PersonWorkTime
		{
			get
			{
				return this._PersonWorkTime;
			}
			set
			{
				if ((this._PersonWorkTime != value))
				{
					this.OnPersonWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._PersonWorkTime = value;
					this.SendPropertyChanged("PersonWorkTime");
					this.OnPersonWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_DayReportUnitDetail_Base_WorkPost", Storage="_Base_WorkPost", ThisKey="PostId", OtherKey="WorkPostId", IsForeignKey=true)]
		public Base_WorkPost Base_WorkPost
		{
			get
			{
				return this._Base_WorkPost.Entity;
			}
			set
			{
				Base_WorkPost previousValue = this._Base_WorkPost.Entity;
				if (((previousValue != value) 
							|| (this._Base_WorkPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WorkPost.Entity = null;
						previousValue.SitePerson_DayReportUnitDetail.Remove(this);
					}
					this._Base_WorkPost.Entity = value;
					if ((value != null))
					{
						value.SitePerson_DayReportUnitDetail.Add(this);
						this._PostId = value.WorkPostId;
					}
					else
					{
						this._PostId = default(string);
					}
					this.SendPropertyChanged("Base_WorkPost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_DayReportUnitDetail_SitePerson_DayReportDetail", Storage="_SitePerson_DayReportDetail", ThisKey="DayReportDetailId", OtherKey="DayReportDetailId", IsForeignKey=true)]
		public SitePerson_DayReportDetail SitePerson_DayReportDetail
		{
			get
			{
				return this._SitePerson_DayReportDetail.Entity;
			}
			set
			{
				SitePerson_DayReportDetail previousValue = this._SitePerson_DayReportDetail.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_DayReportDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_DayReportDetail.Entity = null;
						previousValue.SitePerson_DayReportUnitDetail.Remove(this);
					}
					this._SitePerson_DayReportDetail.Entity = value;
					if ((value != null))
					{
						value.SitePerson_DayReportUnitDetail.Add(this);
						this._DayReportDetailId = value.DayReportDetailId;
					}
					else
					{
						this._DayReportDetailId = default(string);
					}
					this.SendPropertyChanged("SitePerson_DayReportDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitePerson_MonthReport")]
	public partial class SitePerson_MonthReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MonthReportId;
		
		private string _ProjectId;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<decimal> _TotalPersonWorkTime;
		
		private string _States;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntitySet<SitePerson_MonthReportDetail> _SitePerson_MonthReportDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMonthReportIdChanging(string value);
    partial void OnMonthReportIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnTotalPersonWorkTimeChanging(System.Nullable<decimal> value);
    partial void OnTotalPersonWorkTimeChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    #endregion
		
		public SitePerson_MonthReport()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._SitePerson_MonthReportDetail = new EntitySet<SitePerson_MonthReportDetail>(new Action<SitePerson_MonthReportDetail>(this.attach_SitePerson_MonthReportDetail), new Action<SitePerson_MonthReportDetail>(this.detach_SitePerson_MonthReportDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthReportId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MonthReportId
		{
			get
			{
				return this._MonthReportId;
			}
			set
			{
				if ((this._MonthReportId != value))
				{
					this.OnMonthReportIdChanging(value);
					this.SendPropertyChanging();
					this._MonthReportId = value;
					this.SendPropertyChanged("MonthReportId");
					this.OnMonthReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPersonWorkTime
		{
			get
			{
				return this._TotalPersonWorkTime;
			}
			set
			{
				if ((this._TotalPersonWorkTime != value))
				{
					this.OnTotalPersonWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._TotalPersonWorkTime = value;
					this.SendPropertyChanged("TotalPersonWorkTime");
					this.OnTotalPersonWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_MonthReport_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.SitePerson_MonthReport.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.SitePerson_MonthReport.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_MonthReport_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.SitePerson_MonthReport.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.SitePerson_MonthReport.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_MonthReportDetail_SitePerson_MonthReport", Storage="_SitePerson_MonthReportDetail", ThisKey="MonthReportId", OtherKey="MonthReportId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_MonthReportDetail> SitePerson_MonthReportDetail
		{
			get
			{
				return this._SitePerson_MonthReportDetail;
			}
			set
			{
				this._SitePerson_MonthReportDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_MonthReportDetail(SitePerson_MonthReportDetail entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_MonthReport = this;
		}
		
		private void detach_SitePerson_MonthReportDetail(SitePerson_MonthReportDetail entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_MonthReport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitePerson_MonthReportDetail")]
	public partial class SitePerson_MonthReportDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MonthReportDetailId;
		
		private string _MonthReportId;
		
		private string _UnitId;
		
		private System.Nullable<decimal> _WorkTime;
		
		private System.Nullable<int> _CheckPersonNum;
		
		private System.Nullable<decimal> _RealPersonNum;
		
		private System.Nullable<decimal> _PersonWorkTime;
		
		private System.Nullable<decimal> _TotalPersonWorkTime;
		
		private string _Remark;
		
		private string _StaffData;
		
		private System.Nullable<decimal> _DayNum;
		
		private System.Nullable<int> _YearPersonWorkTime;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<SitePerson_MonthReport> _SitePerson_MonthReport;
		
		private EntitySet<SitePerson_MonthReportUnitDetail> _SitePerson_MonthReportUnitDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMonthReportDetailIdChanging(string value);
    partial void OnMonthReportDetailIdChanged();
    partial void OnMonthReportIdChanging(string value);
    partial void OnMonthReportIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnWorkTimeChanging(System.Nullable<decimal> value);
    partial void OnWorkTimeChanged();
    partial void OnCheckPersonNumChanging(System.Nullable<int> value);
    partial void OnCheckPersonNumChanged();
    partial void OnRealPersonNumChanging(System.Nullable<decimal> value);
    partial void OnRealPersonNumChanged();
    partial void OnPersonWorkTimeChanging(System.Nullable<decimal> value);
    partial void OnPersonWorkTimeChanged();
    partial void OnTotalPersonWorkTimeChanging(System.Nullable<decimal> value);
    partial void OnTotalPersonWorkTimeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnStaffDataChanging(string value);
    partial void OnStaffDataChanged();
    partial void OnDayNumChanging(System.Nullable<decimal> value);
    partial void OnDayNumChanged();
    partial void OnYearPersonWorkTimeChanging(System.Nullable<int> value);
    partial void OnYearPersonWorkTimeChanged();
    #endregion
		
		public SitePerson_MonthReportDetail()
		{
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._SitePerson_MonthReport = default(EntityRef<SitePerson_MonthReport>);
			this._SitePerson_MonthReportUnitDetail = new EntitySet<SitePerson_MonthReportUnitDetail>(new Action<SitePerson_MonthReportUnitDetail>(this.attach_SitePerson_MonthReportUnitDetail), new Action<SitePerson_MonthReportUnitDetail>(this.detach_SitePerson_MonthReportUnitDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthReportDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MonthReportDetailId
		{
			get
			{
				return this._MonthReportDetailId;
			}
			set
			{
				if ((this._MonthReportDetailId != value))
				{
					this.OnMonthReportDetailIdChanging(value);
					this.SendPropertyChanging();
					this._MonthReportDetailId = value;
					this.SendPropertyChanged("MonthReportDetailId");
					this.OnMonthReportDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthReportId", DbType="NVarChar(50)")]
		public string MonthReportId
		{
			get
			{
				return this._MonthReportId;
			}
			set
			{
				if ((this._MonthReportId != value))
				{
					if (this._SitePerson_MonthReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonthReportIdChanging(value);
					this.SendPropertyChanging();
					this._MonthReportId = value;
					this.SendPropertyChanged("MonthReportId");
					this.OnMonthReportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this.OnWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._WorkTime = value;
					this.SendPropertyChanged("WorkTime");
					this.OnWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPersonNum", DbType="Int")]
		public System.Nullable<int> CheckPersonNum
		{
			get
			{
				return this._CheckPersonNum;
			}
			set
			{
				if ((this._CheckPersonNum != value))
				{
					this.OnCheckPersonNumChanging(value);
					this.SendPropertyChanging();
					this._CheckPersonNum = value;
					this.SendPropertyChanged("CheckPersonNum");
					this.OnCheckPersonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPersonNum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RealPersonNum
		{
			get
			{
				return this._RealPersonNum;
			}
			set
			{
				if ((this._RealPersonNum != value))
				{
					this.OnRealPersonNumChanging(value);
					this.SendPropertyChanging();
					this._RealPersonNum = value;
					this.SendPropertyChanged("RealPersonNum");
					this.OnRealPersonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PersonWorkTime
		{
			get
			{
				return this._PersonWorkTime;
			}
			set
			{
				if ((this._PersonWorkTime != value))
				{
					this.OnPersonWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._PersonWorkTime = value;
					this.SendPropertyChanged("PersonWorkTime");
					this.OnPersonWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPersonWorkTime
		{
			get
			{
				return this._TotalPersonWorkTime;
			}
			set
			{
				if ((this._TotalPersonWorkTime != value))
				{
					this.OnTotalPersonWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._TotalPersonWorkTime = value;
					this.SendPropertyChanged("TotalPersonWorkTime");
					this.OnTotalPersonWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffData", DbType="NVarChar(2000)")]
		public string StaffData
		{
			get
			{
				return this._StaffData;
			}
			set
			{
				if ((this._StaffData != value))
				{
					this.OnStaffDataChanging(value);
					this.SendPropertyChanging();
					this._StaffData = value;
					this.SendPropertyChanged("StaffData");
					this.OnStaffDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayNum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DayNum
		{
			get
			{
				return this._DayNum;
			}
			set
			{
				if ((this._DayNum != value))
				{
					this.OnDayNumChanging(value);
					this.SendPropertyChanging();
					this._DayNum = value;
					this.SendPropertyChanged("DayNum");
					this.OnDayNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearPersonWorkTime", DbType="Int")]
		public System.Nullable<int> YearPersonWorkTime
		{
			get
			{
				return this._YearPersonWorkTime;
			}
			set
			{
				if ((this._YearPersonWorkTime != value))
				{
					this.OnYearPersonWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._YearPersonWorkTime = value;
					this.SendPropertyChanged("YearPersonWorkTime");
					this.OnYearPersonWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_MonthReportDetail_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.SitePerson_MonthReportDetail.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.SitePerson_MonthReportDetail.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_MonthReportDetail_SitePerson_MonthReport", Storage="_SitePerson_MonthReport", ThisKey="MonthReportId", OtherKey="MonthReportId", IsForeignKey=true)]
		public SitePerson_MonthReport SitePerson_MonthReport
		{
			get
			{
				return this._SitePerson_MonthReport.Entity;
			}
			set
			{
				SitePerson_MonthReport previousValue = this._SitePerson_MonthReport.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_MonthReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_MonthReport.Entity = null;
						previousValue.SitePerson_MonthReportDetail.Remove(this);
					}
					this._SitePerson_MonthReport.Entity = value;
					if ((value != null))
					{
						value.SitePerson_MonthReportDetail.Add(this);
						this._MonthReportId = value.MonthReportId;
					}
					else
					{
						this._MonthReportId = default(string);
					}
					this.SendPropertyChanged("SitePerson_MonthReport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_MonthReportUnitDetail_SitePerson_MonthReportDetail", Storage="_SitePerson_MonthReportUnitDetail", ThisKey="MonthReportDetailId", OtherKey="MonthReportDetailId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_MonthReportUnitDetail> SitePerson_MonthReportUnitDetail
		{
			get
			{
				return this._SitePerson_MonthReportUnitDetail;
			}
			set
			{
				this._SitePerson_MonthReportUnitDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SitePerson_MonthReportUnitDetail(SitePerson_MonthReportUnitDetail entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_MonthReportDetail = this;
		}
		
		private void detach_SitePerson_MonthReportUnitDetail(SitePerson_MonthReportUnitDetail entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_MonthReportDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitePerson_MonthReportUnitDetail")]
	public partial class SitePerson_MonthReportUnitDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MonthReportUnitDetailId;
		
		private string _MonthReportDetailId;
		
		private string _PostId;
		
		private System.Nullable<int> _CheckPersonNum;
		
		private System.Nullable<int> _RealPersonNum;
		
		private System.Nullable<decimal> _PersonWorkTime;
		
		private string _Remark;
		
		private EntityRef<Base_WorkPost> _Base_WorkPost;
		
		private EntityRef<SitePerson_MonthReportDetail> _SitePerson_MonthReportDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMonthReportUnitDetailIdChanging(string value);
    partial void OnMonthReportUnitDetailIdChanged();
    partial void OnMonthReportDetailIdChanging(string value);
    partial void OnMonthReportDetailIdChanged();
    partial void OnPostIdChanging(string value);
    partial void OnPostIdChanged();
    partial void OnCheckPersonNumChanging(System.Nullable<int> value);
    partial void OnCheckPersonNumChanged();
    partial void OnRealPersonNumChanging(System.Nullable<int> value);
    partial void OnRealPersonNumChanged();
    partial void OnPersonWorkTimeChanging(System.Nullable<decimal> value);
    partial void OnPersonWorkTimeChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public SitePerson_MonthReportUnitDetail()
		{
			this._Base_WorkPost = default(EntityRef<Base_WorkPost>);
			this._SitePerson_MonthReportDetail = default(EntityRef<SitePerson_MonthReportDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthReportUnitDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MonthReportUnitDetailId
		{
			get
			{
				return this._MonthReportUnitDetailId;
			}
			set
			{
				if ((this._MonthReportUnitDetailId != value))
				{
					this.OnMonthReportUnitDetailIdChanging(value);
					this.SendPropertyChanging();
					this._MonthReportUnitDetailId = value;
					this.SendPropertyChanged("MonthReportUnitDetailId");
					this.OnMonthReportUnitDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthReportDetailId", DbType="NVarChar(50)")]
		public string MonthReportDetailId
		{
			get
			{
				return this._MonthReportDetailId;
			}
			set
			{
				if ((this._MonthReportDetailId != value))
				{
					if (this._SitePerson_MonthReportDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMonthReportDetailIdChanging(value);
					this.SendPropertyChanging();
					this._MonthReportDetailId = value;
					this.SendPropertyChanged("MonthReportDetailId");
					this.OnMonthReportDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="NVarChar(50)")]
		public string PostId
		{
			get
			{
				return this._PostId;
			}
			set
			{
				if ((this._PostId != value))
				{
					if (this._Base_WorkPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostIdChanging(value);
					this.SendPropertyChanging();
					this._PostId = value;
					this.SendPropertyChanged("PostId");
					this.OnPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPersonNum", DbType="Int")]
		public System.Nullable<int> CheckPersonNum
		{
			get
			{
				return this._CheckPersonNum;
			}
			set
			{
				if ((this._CheckPersonNum != value))
				{
					this.OnCheckPersonNumChanging(value);
					this.SendPropertyChanging();
					this._CheckPersonNum = value;
					this.SendPropertyChanged("CheckPersonNum");
					this.OnCheckPersonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPersonNum", DbType="Int")]
		public System.Nullable<int> RealPersonNum
		{
			get
			{
				return this._RealPersonNum;
			}
			set
			{
				if ((this._RealPersonNum != value))
				{
					this.OnRealPersonNumChanging(value);
					this.SendPropertyChanging();
					this._RealPersonNum = value;
					this.SendPropertyChanged("RealPersonNum");
					this.OnRealPersonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PersonWorkTime
		{
			get
			{
				return this._PersonWorkTime;
			}
			set
			{
				if ((this._PersonWorkTime != value))
				{
					this.OnPersonWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._PersonWorkTime = value;
					this.SendPropertyChanged("PersonWorkTime");
					this.OnPersonWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_MonthReportUnitDetail_Base_WorkPost", Storage="_Base_WorkPost", ThisKey="PostId", OtherKey="WorkPostId", IsForeignKey=true)]
		public Base_WorkPost Base_WorkPost
		{
			get
			{
				return this._Base_WorkPost.Entity;
			}
			set
			{
				Base_WorkPost previousValue = this._Base_WorkPost.Entity;
				if (((previousValue != value) 
							|| (this._Base_WorkPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WorkPost.Entity = null;
						previousValue.SitePerson_MonthReportUnitDetail.Remove(this);
					}
					this._Base_WorkPost.Entity = value;
					if ((value != null))
					{
						value.SitePerson_MonthReportUnitDetail.Add(this);
						this._PostId = value.WorkPostId;
					}
					else
					{
						this._PostId = default(string);
					}
					this.SendPropertyChanged("Base_WorkPost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_MonthReportUnitDetail_SitePerson_MonthReportDetail", Storage="_SitePerson_MonthReportDetail", ThisKey="MonthReportDetailId", OtherKey="MonthReportDetailId", IsForeignKey=true)]
		public SitePerson_MonthReportDetail SitePerson_MonthReportDetail
		{
			get
			{
				return this._SitePerson_MonthReportDetail.Entity;
			}
			set
			{
				SitePerson_MonthReportDetail previousValue = this._SitePerson_MonthReportDetail.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_MonthReportDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_MonthReportDetail.Entity = null;
						previousValue.SitePerson_MonthReportUnitDetail.Remove(this);
					}
					this._SitePerson_MonthReportDetail.Entity = value;
					if ((value != null))
					{
						value.SitePerson_MonthReportUnitDetail.Add(this);
						this._MonthReportDetailId = value.MonthReportDetailId;
					}
					else
					{
						this._MonthReportDetailId = default(string);
					}
					this.SendPropertyChanged("SitePerson_MonthReportDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitePerson_Person")]
	public partial class SitePerson_Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PersonId;
		
		private string _CardNo;
		
		private string _PersonName;
		
		private string _Sex;
		
		private string _IdentityCard;
		
		private string _Address;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _TeamGroupId;
		
		private string _WorkAreaId;
		
		private string _WorkPostId;
		
		private System.Nullable<System.DateTime> _InTime;
		
		private System.Nullable<System.DateTime> _OutTime;
		
		private string _OutResult;
		
		private string _Telephone;
		
		private string _PositionId;
		
		private string _PostTitleId;
		
		private string _PhotoUrl;
		
		private bool _IsUsed;
		
		private bool _IsCardUsed;
		
		private System.Nullable<int> _PersonIndex;
		
		private string _DepartId;
		
		private string _CertificateId;
		
		private string _CertificateCode;
		
		private System.Nullable<System.DateTime> _CertificateLimitTime;
		
		private string _QualificationCertificateUrl;
		
		private string _TrainingCertificateUrl;
		
		private string _QRCodeAttachUrl;
		
		private string _Password;
		
		private string _FromPersonId;
		
		private string _AuditorId;
		
		private System.Nullable<System.DateTime> _AuditorDate;
		
		private System.Nullable<System.DateTime> _ExchangeTime;
		
		private System.Nullable<System.DateTime> _ExchangeTime2;
		
		private string _IDCardUrl;
		
		private string _Isprint;
		
		private System.Nullable<bool> _IsForeign;
		
		private System.Nullable<bool> _IsOutside;
		
		private string _WelderCode;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _WelderLevel;
		
		private string _Remark;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntitySet<HJGL_WeldJoint> _Person;
		
		private EntitySet<QualityAudit_EquipmentPersonQuality> _QualityAudit_EquipmentPersonQuality;
		
		private EntitySet<QualityAudit_PersonQuality> _QualityAudit_PersonQuality;
		
		private EntitySet<QualityAudit_SafePersonQuality> _QualityAudit_SafePersonQuality;
		
		private EntitySet<SitePerson_Checking> _SitePerson_Checking;
		
		private EntityRef<Base_Depart> _Base_Depart;
		
		private EntityRef<Base_Position> _Base_Position;
		
		private EntityRef<Base_PostTitle> _Base_PostTitle;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_WorkPost> _Base_WorkPost;
		
		private EntityRef<ProjectData_TeamGroup> _ProjectData_TeamGroup;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
		private EntitySet<SitePerson_PersonInOut> _SitePerson_PersonInOut;
		
		private EntitySet<Welder_WelderQualify> _Welder_WelderQualify;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnCardNoChanging(string value);
    partial void OnCardNoChanged();
    partial void OnPersonNameChanging(string value);
    partial void OnPersonNameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnIdentityCardChanging(string value);
    partial void OnIdentityCardChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnTeamGroupIdChanging(string value);
    partial void OnTeamGroupIdChanged();
    partial void OnWorkAreaIdChanging(string value);
    partial void OnWorkAreaIdChanged();
    partial void OnWorkPostIdChanging(string value);
    partial void OnWorkPostIdChanged();
    partial void OnInTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInTimeChanged();
    partial void OnOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOutTimeChanged();
    partial void OnOutResultChanging(string value);
    partial void OnOutResultChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnPositionIdChanging(string value);
    partial void OnPositionIdChanged();
    partial void OnPostTitleIdChanging(string value);
    partial void OnPostTitleIdChanged();
    partial void OnPhotoUrlChanging(string value);
    partial void OnPhotoUrlChanged();
    partial void OnIsUsedChanging(bool value);
    partial void OnIsUsedChanged();
    partial void OnIsCardUsedChanging(bool value);
    partial void OnIsCardUsedChanged();
    partial void OnPersonIndexChanging(System.Nullable<int> value);
    partial void OnPersonIndexChanged();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnCertificateIdChanging(string value);
    partial void OnCertificateIdChanged();
    partial void OnCertificateCodeChanging(string value);
    partial void OnCertificateCodeChanged();
    partial void OnCertificateLimitTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCertificateLimitTimeChanged();
    partial void OnQualificationCertificateUrlChanging(string value);
    partial void OnQualificationCertificateUrlChanged();
    partial void OnTrainingCertificateUrlChanging(string value);
    partial void OnTrainingCertificateUrlChanged();
    partial void OnQRCodeAttachUrlChanging(string value);
    partial void OnQRCodeAttachUrlChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFromPersonIdChanging(string value);
    partial void OnFromPersonIdChanged();
    partial void OnAuditorIdChanging(string value);
    partial void OnAuditorIdChanged();
    partial void OnAuditorDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditorDateChanged();
    partial void OnExchangeTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExchangeTimeChanged();
    partial void OnExchangeTime2Changing(System.Nullable<System.DateTime> value);
    partial void OnExchangeTime2Changed();
    partial void OnIDCardUrlChanging(string value);
    partial void OnIDCardUrlChanged();
    partial void OnIsprintChanging(string value);
    partial void OnIsprintChanged();
    partial void OnIsForeignChanging(System.Nullable<bool> value);
    partial void OnIsForeignChanged();
    partial void OnIsOutsideChanging(System.Nullable<bool> value);
    partial void OnIsOutsideChanged();
    partial void OnWelderCodeChanging(string value);
    partial void OnWelderCodeChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnWelderLevelChanging(string value);
    partial void OnWelderLevelChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public SitePerson_Person()
		{
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._Person = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_Person), new Action<HJGL_WeldJoint>(this.detach_Person));
			this._QualityAudit_EquipmentPersonQuality = new EntitySet<QualityAudit_EquipmentPersonQuality>(new Action<QualityAudit_EquipmentPersonQuality>(this.attach_QualityAudit_EquipmentPersonQuality), new Action<QualityAudit_EquipmentPersonQuality>(this.detach_QualityAudit_EquipmentPersonQuality));
			this._QualityAudit_PersonQuality = new EntitySet<QualityAudit_PersonQuality>(new Action<QualityAudit_PersonQuality>(this.attach_QualityAudit_PersonQuality), new Action<QualityAudit_PersonQuality>(this.detach_QualityAudit_PersonQuality));
			this._QualityAudit_SafePersonQuality = new EntitySet<QualityAudit_SafePersonQuality>(new Action<QualityAudit_SafePersonQuality>(this.attach_QualityAudit_SafePersonQuality), new Action<QualityAudit_SafePersonQuality>(this.detach_QualityAudit_SafePersonQuality));
			this._SitePerson_Checking = new EntitySet<SitePerson_Checking>(new Action<SitePerson_Checking>(this.attach_SitePerson_Checking), new Action<SitePerson_Checking>(this.detach_SitePerson_Checking));
			this._Base_Depart = default(EntityRef<Base_Depart>);
			this._Base_Position = default(EntityRef<Base_Position>);
			this._Base_PostTitle = default(EntityRef<Base_PostTitle>);
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Base_WorkPost = default(EntityRef<Base_WorkPost>);
			this._ProjectData_TeamGroup = default(EntityRef<ProjectData_TeamGroup>);
			this._Sys_User = default(EntityRef<Sys_User>);
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			this._SitePerson_PersonInOut = new EntitySet<SitePerson_PersonInOut>(new Action<SitePerson_PersonInOut>(this.attach_SitePerson_PersonInOut), new Action<SitePerson_PersonInOut>(this.detach_SitePerson_PersonInOut));
			this._Welder_WelderQualify = new EntitySet<Welder_WelderQualify>(new Action<Welder_WelderQualify>(this.attach_Welder_WelderQualify), new Action<Welder_WelderQualify>(this.detach_Welder_WelderQualify));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNo", DbType="NVarChar(50)")]
		public string CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this.OnCardNoChanging(value);
					this.SendPropertyChanging();
					this._CardNo = value;
					this.SendPropertyChanged("CardNo");
					this.OnCardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonName", DbType="NVarChar(50)")]
		public string PersonName
		{
			get
			{
				return this._PersonName;
			}
			set
			{
				if ((this._PersonName != value))
				{
					this.OnPersonNameChanging(value);
					this.SendPropertyChanging();
					this._PersonName = value;
					this.SendPropertyChanged("PersonName");
					this.OnPersonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(50)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this.OnIdentityCardChanging(value);
					this.SendPropertyChanging();
					this._IdentityCard = value;
					this.SendPropertyChanged("IdentityCard");
					this.OnIdentityCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupId", DbType="NVarChar(50)")]
		public string TeamGroupId
		{
			get
			{
				return this._TeamGroupId;
			}
			set
			{
				if ((this._TeamGroupId != value))
				{
					if (this._ProjectData_TeamGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamGroupIdChanging(value);
					this.SendPropertyChanging();
					this._TeamGroupId = value;
					this.SendPropertyChanged("TeamGroupId");
					this.OnTeamGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkAreaIdChanging(value);
					this.SendPropertyChanging();
					this._WorkAreaId = value;
					this.SendPropertyChanged("WorkAreaId");
					this.OnWorkAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(50)")]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					if (this._Base_WorkPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkPostIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPostId = value;
					this.SendPropertyChanged("WorkPostId");
					this.OnWorkPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> InTime
		{
			get
			{
				return this._InTime;
			}
			set
			{
				if ((this._InTime != value))
				{
					this.OnInTimeChanging(value);
					this.SendPropertyChanging();
					this._InTime = value;
					this.SendPropertyChanged("InTime");
					this.OnInTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutTime
		{
			get
			{
				return this._OutTime;
			}
			set
			{
				if ((this._OutTime != value))
				{
					this.OnOutTimeChanging(value);
					this.SendPropertyChanging();
					this._OutTime = value;
					this.SendPropertyChanged("OutTime");
					this.OnOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutResult", DbType="NVarChar(50)")]
		public string OutResult
		{
			get
			{
				return this._OutResult;
			}
			set
			{
				if ((this._OutResult != value))
				{
					this.OnOutResultChanging(value);
					this.SendPropertyChanging();
					this._OutResult = value;
					this.SendPropertyChanged("OutResult");
					this.OnOutResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50)")]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					if (this._Base_Position.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleId", DbType="NVarChar(50)")]
		public string PostTitleId
		{
			get
			{
				return this._PostTitleId;
			}
			set
			{
				if ((this._PostTitleId != value))
				{
					if (this._Base_PostTitle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostTitleIdChanging(value);
					this.SendPropertyChanging();
					this._PostTitleId = value;
					this.SendPropertyChanged("PostTitleId");
					this.OnPostTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(2000)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this.OnPhotoUrlChanging(value);
					this.SendPropertyChanging();
					this._PhotoUrl = value;
					this.SendPropertyChanged("PhotoUrl");
					this.OnPhotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit NOT NULL")]
		public bool IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCardUsed", DbType="Bit NOT NULL")]
		public bool IsCardUsed
		{
			get
			{
				return this._IsCardUsed;
			}
			set
			{
				if ((this._IsCardUsed != value))
				{
					this.OnIsCardUsedChanging(value);
					this.SendPropertyChanging();
					this._IsCardUsed = value;
					this.SendPropertyChanged("IsCardUsed");
					this.OnIsCardUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonIndex", DbType="Int")]
		public System.Nullable<int> PersonIndex
		{
			get
			{
				return this._PersonIndex;
			}
			set
			{
				if ((this._PersonIndex != value))
				{
					this.OnPersonIndexChanging(value);
					this.SendPropertyChanging();
					this._PersonIndex = value;
					this.SendPropertyChanged("PersonIndex");
					this.OnPersonIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					if (this._Base_Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="NVarChar(50)")]
		public string CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateCode", DbType="NVarChar(20)")]
		public string CertificateCode
		{
			get
			{
				return this._CertificateCode;
			}
			set
			{
				if ((this._CertificateCode != value))
				{
					this.OnCertificateCodeChanging(value);
					this.SendPropertyChanging();
					this._CertificateCode = value;
					this.SendPropertyChanged("CertificateCode");
					this.OnCertificateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateLimitTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CertificateLimitTime
		{
			get
			{
				return this._CertificateLimitTime;
			}
			set
			{
				if ((this._CertificateLimitTime != value))
				{
					this.OnCertificateLimitTimeChanging(value);
					this.SendPropertyChanging();
					this._CertificateLimitTime = value;
					this.SendPropertyChanged("CertificateLimitTime");
					this.OnCertificateLimitTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationCertificateUrl", DbType="NVarChar(200)")]
		public string QualificationCertificateUrl
		{
			get
			{
				return this._QualificationCertificateUrl;
			}
			set
			{
				if ((this._QualificationCertificateUrl != value))
				{
					this.OnQualificationCertificateUrlChanging(value);
					this.SendPropertyChanging();
					this._QualificationCertificateUrl = value;
					this.SendPropertyChanged("QualificationCertificateUrl");
					this.OnQualificationCertificateUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingCertificateUrl", DbType="NVarChar(200)")]
		public string TrainingCertificateUrl
		{
			get
			{
				return this._TrainingCertificateUrl;
			}
			set
			{
				if ((this._TrainingCertificateUrl != value))
				{
					this.OnTrainingCertificateUrlChanging(value);
					this.SendPropertyChanging();
					this._TrainingCertificateUrl = value;
					this.SendPropertyChanged("TrainingCertificateUrl");
					this.OnTrainingCertificateUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeAttachUrl", DbType="NVarChar(200)")]
		public string QRCodeAttachUrl
		{
			get
			{
				return this._QRCodeAttachUrl;
			}
			set
			{
				if ((this._QRCodeAttachUrl != value))
				{
					this.OnQRCodeAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeAttachUrl = value;
					this.SendPropertyChanged("QRCodeAttachUrl");
					this.OnQRCodeAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromPersonId", DbType="NVarChar(50)")]
		public string FromPersonId
		{
			get
			{
				return this._FromPersonId;
			}
			set
			{
				if ((this._FromPersonId != value))
				{
					this.OnFromPersonIdChanging(value);
					this.SendPropertyChanging();
					this._FromPersonId = value;
					this.SendPropertyChanged("FromPersonId");
					this.OnFromPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorId", DbType="NVarChar(50)")]
		public string AuditorId
		{
			get
			{
				return this._AuditorId;
			}
			set
			{
				if ((this._AuditorId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditorIdChanging(value);
					this.SendPropertyChanging();
					this._AuditorId = value;
					this.SendPropertyChanged("AuditorId");
					this.OnAuditorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditorDate
		{
			get
			{
				return this._AuditorDate;
			}
			set
			{
				if ((this._AuditorDate != value))
				{
					this.OnAuditorDateChanging(value);
					this.SendPropertyChanging();
					this._AuditorDate = value;
					this.SendPropertyChanged("AuditorDate");
					this.OnAuditorDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExchangeTime
		{
			get
			{
				return this._ExchangeTime;
			}
			set
			{
				if ((this._ExchangeTime != value))
				{
					this.OnExchangeTimeChanging(value);
					this.SendPropertyChanging();
					this._ExchangeTime = value;
					this.SendPropertyChanged("ExchangeTime");
					this.OnExchangeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeTime2", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExchangeTime2
		{
			get
			{
				return this._ExchangeTime2;
			}
			set
			{
				if ((this._ExchangeTime2 != value))
				{
					this.OnExchangeTime2Changing(value);
					this.SendPropertyChanging();
					this._ExchangeTime2 = value;
					this.SendPropertyChanged("ExchangeTime2");
					this.OnExchangeTime2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCardUrl", DbType="NVarChar(2000)")]
		public string IDCardUrl
		{
			get
			{
				return this._IDCardUrl;
			}
			set
			{
				if ((this._IDCardUrl != value))
				{
					this.OnIDCardUrlChanging(value);
					this.SendPropertyChanging();
					this._IDCardUrl = value;
					this.SendPropertyChanged("IDCardUrl");
					this.OnIDCardUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isprint", Storage="_Isprint", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string Isprint
		{
			get
			{
				return this._Isprint;
			}
			set
			{
				if ((this._Isprint != value))
				{
					this.OnIsprintChanging(value);
					this.SendPropertyChanging();
					this._Isprint = value;
					this.SendPropertyChanged("Isprint");
					this.OnIsprintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForeign", DbType="Bit")]
		public System.Nullable<bool> IsForeign
		{
			get
			{
				return this._IsForeign;
			}
			set
			{
				if ((this._IsForeign != value))
				{
					this.OnIsForeignChanging(value);
					this.SendPropertyChanging();
					this._IsForeign = value;
					this.SendPropertyChanged("IsForeign");
					this.OnIsForeignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutside", DbType="Bit")]
		public System.Nullable<bool> IsOutside
		{
			get
			{
				return this._IsOutside;
			}
			set
			{
				if ((this._IsOutside != value))
				{
					this.OnIsOutsideChanging(value);
					this.SendPropertyChanging();
					this._IsOutside = value;
					this.SendPropertyChanged("IsOutside");
					this.OnIsOutsideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderCode", DbType="NVarChar(50)")]
		public string WelderCode
		{
			get
			{
				return this._WelderCode;
			}
			set
			{
				if ((this._WelderCode != value))
				{
					this.OnWelderCodeChanging(value);
					this.SendPropertyChanging();
					this._WelderCode = value;
					this.SendPropertyChanged("WelderCode");
					this.OnWelderCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderLevel", DbType="NVarChar(50)")]
		public string WelderLevel
		{
			get
			{
				return this._WelderLevel;
			}
			set
			{
				if ((this._WelderLevel != value))
				{
					this.OnWelderLevelChanging(value);
					this.SendPropertyChanging();
					this._WelderLevel = value;
					this.SendPropertyChanged("WelderLevel");
					this.OnWelderLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_SitePerson_Person", Storage="_HJGL_Batch_PointBatch", ThisKey="PersonId", OtherKey="WelderId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_SitePerson_Person", Storage="_HJGL_RepairRecord", ThisKey="PersonId", OtherKey="RepairWelder", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_SitePerson_Person_BackingWelder", Storage="_HJGL_WeldJoint", ThisKey="PersonId", OtherKey="BackingWelderId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_SitePerson_Person_CoverWelder", Storage="_Person", ThisKey="PersonId", OtherKey="CoverWelderId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> Person
		{
			get
			{
				return this._Person;
			}
			set
			{
				this._Person.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_SitePerson_Person", Storage="_QualityAudit_EquipmentPersonQuality", ThisKey="PersonId", OtherKey="PersonId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_EquipmentPersonQuality> QualityAudit_EquipmentPersonQuality
		{
			get
			{
				return this._QualityAudit_EquipmentPersonQuality;
			}
			set
			{
				this._QualityAudit_EquipmentPersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_SitePerson_Person", Storage="_QualityAudit_PersonQuality", ThisKey="PersonId", OtherKey="PersonId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQuality> QualityAudit_PersonQuality
		{
			get
			{
				return this._QualityAudit_PersonQuality;
			}
			set
			{
				this._QualityAudit_PersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SafePersonQuality_SitePerson_Person", Storage="_QualityAudit_SafePersonQuality", ThisKey="PersonId", OtherKey="PersonId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_SafePersonQuality> QualityAudit_SafePersonQuality
		{
			get
			{
				return this._QualityAudit_SafePersonQuality;
			}
			set
			{
				this._QualityAudit_SafePersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Checking_SitePerson_Person", Storage="_SitePerson_Checking", ThisKey="PersonId", OtherKey="PersonId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Checking> SitePerson_Checking
		{
			get
			{
				return this._SitePerson_Checking;
			}
			set
			{
				this._SitePerson_Checking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Depart", Storage="_Base_Depart", ThisKey="DepartId", OtherKey="DepartId", IsForeignKey=true)]
		public Base_Depart Base_Depart
		{
			get
			{
				return this._Base_Depart.Entity;
			}
			set
			{
				Base_Depart previousValue = this._Base_Depart.Entity;
				if (((previousValue != value) 
							|| (this._Base_Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Depart.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Base_Depart.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._DepartId = value.DepartId;
					}
					else
					{
						this._DepartId = default(string);
					}
					this.SendPropertyChanged("Base_Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Position", Storage="_Base_Position", ThisKey="PositionId", OtherKey="PositionId", IsForeignKey=true)]
		public Base_Position Base_Position
		{
			get
			{
				return this._Base_Position.Entity;
			}
			set
			{
				Base_Position previousValue = this._Base_Position.Entity;
				if (((previousValue != value) 
							|| (this._Base_Position.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Position.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Base_Position.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._PositionId = value.PositionId;
					}
					else
					{
						this._PositionId = default(string);
					}
					this.SendPropertyChanged("Base_Position");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_PostTitle", Storage="_Base_PostTitle", ThisKey="PostTitleId", OtherKey="PostTitleId", IsForeignKey=true)]
		public Base_PostTitle Base_PostTitle
		{
			get
			{
				return this._Base_PostTitle.Entity;
			}
			set
			{
				Base_PostTitle previousValue = this._Base_PostTitle.Entity;
				if (((previousValue != value) 
							|| (this._Base_PostTitle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_PostTitle.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Base_PostTitle.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._PostTitleId = value.PostTitleId;
					}
					else
					{
						this._PostTitleId = default(string);
					}
					this.SendPropertyChanged("Base_PostTitle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Base_WorkPost", Storage="_Base_WorkPost", ThisKey="WorkPostId", OtherKey="WorkPostId", IsForeignKey=true)]
		public Base_WorkPost Base_WorkPost
		{
			get
			{
				return this._Base_WorkPost.Entity;
			}
			set
			{
				Base_WorkPost previousValue = this._Base_WorkPost.Entity;
				if (((previousValue != value) 
							|| (this._Base_WorkPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WorkPost.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Base_WorkPost.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._WorkPostId = value.WorkPostId;
					}
					else
					{
						this._WorkPostId = default(string);
					}
					this.SendPropertyChanged("Base_WorkPost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_ProjectData_TeamGroup", Storage="_ProjectData_TeamGroup", ThisKey="TeamGroupId", OtherKey="TeamGroupId", IsForeignKey=true)]
		public ProjectData_TeamGroup ProjectData_TeamGroup
		{
			get
			{
				return this._ProjectData_TeamGroup.Entity;
			}
			set
			{
				ProjectData_TeamGroup previousValue = this._ProjectData_TeamGroup.Entity;
				if (((previousValue != value) 
							|| (this._ProjectData_TeamGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectData_TeamGroup.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._ProjectData_TeamGroup.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._TeamGroupId = value.TeamGroupId;
					}
					else
					{
						this._TeamGroupId = default(string);
					}
					this.SendPropertyChanged("ProjectData_TeamGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Sys_User", Storage="_Sys_User", ThisKey="AuditorId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._AuditorId = value.UserId;
					}
					else
					{
						this._AuditorId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="WorkAreaId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.SitePerson_Person.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.SitePerson_Person.Add(this);
						this._WorkAreaId = value.UnitWorkId;
					}
					else
					{
						this._WorkAreaId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_PersonInOut_SitePerson_Person", Storage="_SitePerson_PersonInOut", ThisKey="PersonId", OtherKey="PersonId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_PersonInOut> SitePerson_PersonInOut
		{
			get
			{
				return this._SitePerson_PersonInOut;
			}
			set
			{
				this._SitePerson_PersonInOut.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Welder_WelderQualify_SitePerson_Person", Storage="_Welder_WelderQualify", ThisKey="PersonId", OtherKey="WelderId", DeleteRule="NO ACTION")]
		public EntitySet<Welder_WelderQualify> Welder_WelderQualify
		{
			get
			{
				return this._Welder_WelderQualify;
			}
			set
			{
				this._Welder_WelderQualify.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_Person(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.CoverWelder = this;
		}
		
		private void detach_Person(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.CoverWelder = null;
		}
		
		private void attach_QualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_QualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_QualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_QualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_SitePerson_Checking(SitePerson_Checking entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_SitePerson_Checking(SitePerson_Checking entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_SitePerson_PersonInOut(SitePerson_PersonInOut entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_SitePerson_PersonInOut(SitePerson_PersonInOut entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
		
		private void attach_Welder_WelderQualify(Welder_WelderQualify entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = this;
		}
		
		private void detach_Welder_WelderQualify(Welder_WelderQualify entity)
		{
			this.SendPropertyChanging();
			entity.SitePerson_Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitePerson_PersonInOut")]
	public partial class SitePerson_PersonInOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PersonInOutId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _PersonId;
		
		private System.Nullable<bool> _IsIn;
		
		private System.Nullable<System.DateTime> _ChangeTime;
		
		private System.Nullable<int> _InCount;
		
		private System.Nullable<int> _OutCount;
		
		private System.Nullable<int> _TotalCount;
		
		private string _ProjectHeadConfirmId;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonInOutIdChanging(string value);
    partial void OnPersonInOutIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnPersonIdChanging(string value);
    partial void OnPersonIdChanged();
    partial void OnIsInChanging(System.Nullable<bool> value);
    partial void OnIsInChanged();
    partial void OnChangeTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeTimeChanged();
    partial void OnInCountChanging(System.Nullable<int> value);
    partial void OnInCountChanged();
    partial void OnOutCountChanging(System.Nullable<int> value);
    partial void OnOutCountChanged();
    partial void OnTotalCountChanging(System.Nullable<int> value);
    partial void OnTotalCountChanged();
    partial void OnProjectHeadConfirmIdChanging(string value);
    partial void OnProjectHeadConfirmIdChanged();
    #endregion
		
		public SitePerson_PersonInOut()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInOutId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonInOutId
		{
			get
			{
				return this._PersonInOutId;
			}
			set
			{
				if ((this._PersonInOutId != value))
				{
					this.OnPersonInOutIdChanging(value);
					this.SendPropertyChanging();
					this._PersonInOutId = value;
					this.SendPropertyChanged("PersonInOutId");
					this.OnPersonInOutIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50)")]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIn", DbType="Bit")]
		public System.Nullable<bool> IsIn
		{
			get
			{
				return this._IsIn;
			}
			set
			{
				if ((this._IsIn != value))
				{
					this.OnIsInChanging(value);
					this.SendPropertyChanging();
					this._IsIn = value;
					this.SendPropertyChanged("IsIn");
					this.OnIsInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeTime
		{
			get
			{
				return this._ChangeTime;
			}
			set
			{
				if ((this._ChangeTime != value))
				{
					this.OnChangeTimeChanging(value);
					this.SendPropertyChanging();
					this._ChangeTime = value;
					this.SendPropertyChanged("ChangeTime");
					this.OnChangeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCount", DbType="Int")]
		public System.Nullable<int> InCount
		{
			get
			{
				return this._InCount;
			}
			set
			{
				if ((this._InCount != value))
				{
					this.OnInCountChanging(value);
					this.SendPropertyChanging();
					this._InCount = value;
					this.SendPropertyChanged("InCount");
					this.OnInCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutCount", DbType="Int")]
		public System.Nullable<int> OutCount
		{
			get
			{
				return this._OutCount;
			}
			set
			{
				if ((this._OutCount != value))
				{
					this.OnOutCountChanging(value);
					this.SendPropertyChanging();
					this._OutCount = value;
					this.SendPropertyChanged("OutCount");
					this.OnOutCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCount", DbType="Int")]
		public System.Nullable<int> TotalCount
		{
			get
			{
				return this._TotalCount;
			}
			set
			{
				if ((this._TotalCount != value))
				{
					this.OnTotalCountChanging(value);
					this.SendPropertyChanging();
					this._TotalCount = value;
					this.SendPropertyChanged("TotalCount");
					this.OnTotalCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectHeadConfirmId", DbType="NVarChar(50)")]
		public string ProjectHeadConfirmId
		{
			get
			{
				return this._ProjectHeadConfirmId;
			}
			set
			{
				if ((this._ProjectHeadConfirmId != value))
				{
					this.OnProjectHeadConfirmIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectHeadConfirmId = value;
					this.SendPropertyChanged("ProjectHeadConfirmId");
					this.OnProjectHeadConfirmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_PersonInOut_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.SitePerson_PersonInOut.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.SitePerson_PersonInOut.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_PersonInOut_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.SitePerson_PersonInOut.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.SitePerson_PersonInOut.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_PersonInOut_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.SitePerson_PersonInOut.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.SitePerson_PersonInOut.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SitePerson_PersonInOutNumber")]
	public partial class SitePerson_PersonInOutNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PersonInOutNumberId;
		
		private string _ProjectId;
		
		private System.DateTime _InOutDate;
		
		private System.Nullable<int> _PersonNum;
		
		private System.Nullable<int> _WorkHours;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonInOutNumberIdChanging(string value);
    partial void OnPersonInOutNumberIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnInOutDateChanging(System.DateTime value);
    partial void OnInOutDateChanged();
    partial void OnPersonNumChanging(System.Nullable<int> value);
    partial void OnPersonNumChanged();
    partial void OnWorkHoursChanging(System.Nullable<int> value);
    partial void OnWorkHoursChanged();
    #endregion
		
		public SitePerson_PersonInOutNumber()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInOutNumberId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonInOutNumberId
		{
			get
			{
				return this._PersonInOutNumberId;
			}
			set
			{
				if ((this._PersonInOutNumberId != value))
				{
					this.OnPersonInOutNumberIdChanging(value);
					this.SendPropertyChanging();
					this._PersonInOutNumberId = value;
					this.SendPropertyChanged("PersonInOutNumberId");
					this.OnPersonInOutNumberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InOutDate", DbType="DateTime NOT NULL")]
		public System.DateTime InOutDate
		{
			get
			{
				return this._InOutDate;
			}
			set
			{
				if ((this._InOutDate != value))
				{
					this.OnInOutDateChanging(value);
					this.SendPropertyChanging();
					this._InOutDate = value;
					this.SendPropertyChanged("InOutDate");
					this.OnInOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonNum", DbType="Int")]
		public System.Nullable<int> PersonNum
		{
			get
			{
				return this._PersonNum;
			}
			set
			{
				if ((this._PersonNum != value))
				{
					this.OnPersonNumChanging(value);
					this.SendPropertyChanging();
					this._PersonNum = value;
					this.SendPropertyChanged("PersonNum");
					this.OnPersonNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkHours", DbType="Int")]
		public System.Nullable<int> WorkHours
		{
			get
			{
				return this._WorkHours;
			}
			set
			{
				if ((this._WorkHours != value))
				{
					this.OnWorkHoursChanging(value);
					this.SendPropertyChanging();
					this._WorkHours = value;
					this.SendPropertyChanged("WorkHours");
					this.OnWorkHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_PersonInOutNumber_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.SitePerson_PersonInOutNumber.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.SitePerson_PersonInOutNumber.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Solution_ConstructSolution")]
	public partial class Solution_ConstructSolution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConstructSolutionId;
		
		private string _ProjectId;
		
		private string _ConstructSolutionCode;
		
		private string _ConstructSolutionName;
		
		private string _VersionNo;
		
		private string _UnitId;
		
		private string _InvestigateType;
		
		private string _SolutinType;
		
		private string _FileContents;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _States;
		
		private string _CompileManName;
		
		private string _QRCodeAttachUrl;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConstructSolutionIdChanging(string value);
    partial void OnConstructSolutionIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnConstructSolutionCodeChanging(string value);
    partial void OnConstructSolutionCodeChanged();
    partial void OnConstructSolutionNameChanging(string value);
    partial void OnConstructSolutionNameChanged();
    partial void OnVersionNoChanging(string value);
    partial void OnVersionNoChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnInvestigateTypeChanging(string value);
    partial void OnInvestigateTypeChanged();
    partial void OnSolutinTypeChanging(string value);
    partial void OnSolutinTypeChanged();
    partial void OnFileContentsChanging(string value);
    partial void OnFileContentsChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnCompileManNameChanging(string value);
    partial void OnCompileManNameChanged();
    partial void OnQRCodeAttachUrlChanging(string value);
    partial void OnQRCodeAttachUrlChanged();
    #endregion
		
		public Solution_ConstructSolution()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructSolutionId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConstructSolutionId
		{
			get
			{
				return this._ConstructSolutionId;
			}
			set
			{
				if ((this._ConstructSolutionId != value))
				{
					this.OnConstructSolutionIdChanging(value);
					this.SendPropertyChanging();
					this._ConstructSolutionId = value;
					this.SendPropertyChanged("ConstructSolutionId");
					this.OnConstructSolutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructSolutionCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ConstructSolutionCode
		{
			get
			{
				return this._ConstructSolutionCode;
			}
			set
			{
				if ((this._ConstructSolutionCode != value))
				{
					this.OnConstructSolutionCodeChanging(value);
					this.SendPropertyChanging();
					this._ConstructSolutionCode = value;
					this.SendPropertyChanged("ConstructSolutionCode");
					this.OnConstructSolutionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructSolutionName", DbType="NVarChar(150)")]
		public string ConstructSolutionName
		{
			get
			{
				return this._ConstructSolutionName;
			}
			set
			{
				if ((this._ConstructSolutionName != value))
				{
					this.OnConstructSolutionNameChanging(value);
					this.SendPropertyChanging();
					this._ConstructSolutionName = value;
					this.SendPropertyChanged("ConstructSolutionName");
					this.OnConstructSolutionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNo", DbType="NVarChar(10)")]
		public string VersionNo
		{
			get
			{
				return this._VersionNo;
			}
			set
			{
				if ((this._VersionNo != value))
				{
					this.OnVersionNoChanging(value);
					this.SendPropertyChanging();
					this._VersionNo = value;
					this.SendPropertyChanged("VersionNo");
					this.OnVersionNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestigateType", DbType="Char(1)")]
		public string InvestigateType
		{
			get
			{
				return this._InvestigateType;
			}
			set
			{
				if ((this._InvestigateType != value))
				{
					this.OnInvestigateTypeChanging(value);
					this.SendPropertyChanging();
					this._InvestigateType = value;
					this.SendPropertyChanged("InvestigateType");
					this.OnInvestigateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutinType", DbType="Char(2)")]
		public string SolutinType
		{
			get
			{
				return this._SolutinType;
			}
			set
			{
				if ((this._SolutinType != value))
				{
					this.OnSolutinTypeChanging(value);
					this.SendPropertyChanging();
					this._SolutinType = value;
					this.SendPropertyChanged("SolutinType");
					this.OnSolutinTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContents", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FileContents
		{
			get
			{
				return this._FileContents;
			}
			set
			{
				if ((this._FileContents != value))
				{
					this.OnFileContentsChanging(value);
					this.SendPropertyChanging();
					this._FileContents = value;
					this.SendPropertyChanged("FileContents");
					this.OnFileContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManName", DbType="NVarChar(50)")]
		public string CompileManName
		{
			get
			{
				return this._CompileManName;
			}
			set
			{
				if ((this._CompileManName != value))
				{
					this.OnCompileManNameChanging(value);
					this.SendPropertyChanging();
					this._CompileManName = value;
					this.SendPropertyChanged("CompileManName");
					this.OnCompileManNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeAttachUrl", DbType="NVarChar(200)")]
		public string QRCodeAttachUrl
		{
			get
			{
				return this._QRCodeAttachUrl;
			}
			set
			{
				if ((this._QRCodeAttachUrl != value))
				{
					this.OnQRCodeAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeAttachUrl = value;
					this.SendPropertyChanged("QRCodeAttachUrl");
					this.OnQRCodeAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_ConstructSolution_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Solution_ConstructSolution.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Solution_ConstructSolution.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_ConstructSolution_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Solution_ConstructSolution.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Solution_ConstructSolution.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_ConstructSolution_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Solution_ConstructSolution.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Solution_ConstructSolution.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Solution_CQMSConstructSolution")]
	public partial class Solution_CQMSConstructSolution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConstructSolutionId;
		
		private string _Code;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _SolutionName;
		
		private string _SolutionType;
		
		private string _UnitWorkIds;
		
		private string _CNProfessionalCodes;
		
		private string _AttachUrl;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _State;
		
		private System.Nullable<int> _Edition;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<Solution_CQMSConstructSolutionApprove> _Solution_CQMSConstructSolutionApprove;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConstructSolutionIdChanging(string value);
    partial void OnConstructSolutionIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnSolutionNameChanging(string value);
    partial void OnSolutionNameChanged();
    partial void OnSolutionTypeChanging(string value);
    partial void OnSolutionTypeChanged();
    partial void OnUnitWorkIdsChanging(string value);
    partial void OnUnitWorkIdsChanged();
    partial void OnCNProfessionalCodesChanging(string value);
    partial void OnCNProfessionalCodesChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnEditionChanging(System.Nullable<int> value);
    partial void OnEditionChanged();
    #endregion
		
		public Solution_CQMSConstructSolution()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Solution_CQMSConstructSolutionApprove = new EntitySet<Solution_CQMSConstructSolutionApprove>(new Action<Solution_CQMSConstructSolutionApprove>(this.attach_Solution_CQMSConstructSolutionApprove), new Action<Solution_CQMSConstructSolutionApprove>(this.detach_Solution_CQMSConstructSolutionApprove));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructSolutionId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConstructSolutionId
		{
			get
			{
				return this._ConstructSolutionId;
			}
			set
			{
				if ((this._ConstructSolutionId != value))
				{
					this.OnConstructSolutionIdChanging(value);
					this.SendPropertyChanging();
					this._ConstructSolutionId = value;
					this.SendPropertyChanged("ConstructSolutionId");
					this.OnConstructSolutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionName", DbType="NVarChar(100)")]
		public string SolutionName
		{
			get
			{
				return this._SolutionName;
			}
			set
			{
				if ((this._SolutionName != value))
				{
					this.OnSolutionNameChanging(value);
					this.SendPropertyChanging();
					this._SolutionName = value;
					this.SendPropertyChanged("SolutionName");
					this.OnSolutionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionType", DbType="Char(1)")]
		public string SolutionType
		{
			get
			{
				return this._SolutionType;
			}
			set
			{
				if ((this._SolutionType != value))
				{
					this.OnSolutionTypeChanging(value);
					this.SendPropertyChanging();
					this._SolutionType = value;
					this.SendPropertyChanged("SolutionType");
					this.OnSolutionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkIds", DbType="NVarChar(2000)")]
		public string UnitWorkIds
		{
			get
			{
				return this._UnitWorkIds;
			}
			set
			{
				if ((this._UnitWorkIds != value))
				{
					this.OnUnitWorkIdsChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkIds = value;
					this.SendPropertyChanged("UnitWorkIds");
					this.OnUnitWorkIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNProfessionalCodes", DbType="NVarChar(50)")]
		public string CNProfessionalCodes
		{
			get
			{
				return this._CNProfessionalCodes;
			}
			set
			{
				if ((this._CNProfessionalCodes != value))
				{
					this.OnCNProfessionalCodesChanging(value);
					this.SendPropertyChanging();
					this._CNProfessionalCodes = value;
					this.SendPropertyChanged("CNProfessionalCodes");
					this.OnCNProfessionalCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edition", DbType="Int")]
		public System.Nullable<int> Edition
		{
			get
			{
				return this._Edition;
			}
			set
			{
				if ((this._Edition != value))
				{
					this.OnEditionChanging(value);
					this.SendPropertyChanging();
					this._Edition = value;
					this.SendPropertyChanged("Edition");
					this.OnEditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_CQMSConstructSolution_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Solution_CQMSConstructSolution.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Solution_CQMSConstructSolution.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_CQMSConstructSolution_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Solution_CQMSConstructSolution.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Solution_CQMSConstructSolution.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_CQMSConstructSolutionApprove_Solution_CQMSConstructSolution", Storage="_Solution_CQMSConstructSolutionApprove", ThisKey="ConstructSolutionId", OtherKey="ConstructSolutionId", DeleteRule="NO ACTION")]
		public EntitySet<Solution_CQMSConstructSolutionApprove> Solution_CQMSConstructSolutionApprove
		{
			get
			{
				return this._Solution_CQMSConstructSolutionApprove;
			}
			set
			{
				this._Solution_CQMSConstructSolutionApprove.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Solution_CQMSConstructSolutionApprove(Solution_CQMSConstructSolutionApprove entity)
		{
			this.SendPropertyChanging();
			entity.Solution_CQMSConstructSolution = this;
		}
		
		private void detach_Solution_CQMSConstructSolutionApprove(Solution_CQMSConstructSolutionApprove entity)
		{
			this.SendPropertyChanging();
			entity.Solution_CQMSConstructSolution = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Solution_CQMSConstructSolutionApprove")]
	public partial class Solution_CQMSConstructSolutionApprove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConstructSolutionApproveId;
		
		private string _ConstructSolutionId;
		
		private string _ApproveMan;
		
		private System.Nullable<System.DateTime> _ApproveDate;
		
		private System.Nullable<bool> _IsAgree;
		
		private string _ApproveIdea;
		
		private string _ApproveType;
		
		private string _AttachUrl;
		
		private string _SignType;
		
		private System.Nullable<int> _Edition;
		
		private EntityRef<Solution_CQMSConstructSolution> _Solution_CQMSConstructSolution;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConstructSolutionApproveIdChanging(string value);
    partial void OnConstructSolutionApproveIdChanged();
    partial void OnConstructSolutionIdChanging(string value);
    partial void OnConstructSolutionIdChanged();
    partial void OnApproveManChanging(string value);
    partial void OnApproveManChanged();
    partial void OnApproveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDateChanged();
    partial void OnIsAgreeChanging(System.Nullable<bool> value);
    partial void OnIsAgreeChanged();
    partial void OnApproveIdeaChanging(string value);
    partial void OnApproveIdeaChanged();
    partial void OnApproveTypeChanging(string value);
    partial void OnApproveTypeChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnSignTypeChanging(string value);
    partial void OnSignTypeChanged();
    partial void OnEditionChanging(System.Nullable<int> value);
    partial void OnEditionChanged();
    #endregion
		
		public Solution_CQMSConstructSolutionApprove()
		{
			this._Solution_CQMSConstructSolution = default(EntityRef<Solution_CQMSConstructSolution>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructSolutionApproveId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConstructSolutionApproveId
		{
			get
			{
				return this._ConstructSolutionApproveId;
			}
			set
			{
				if ((this._ConstructSolutionApproveId != value))
				{
					this.OnConstructSolutionApproveIdChanging(value);
					this.SendPropertyChanging();
					this._ConstructSolutionApproveId = value;
					this.SendPropertyChanged("ConstructSolutionApproveId");
					this.OnConstructSolutionApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructSolutionId", DbType="NVarChar(50)")]
		public string ConstructSolutionId
		{
			get
			{
				return this._ConstructSolutionId;
			}
			set
			{
				if ((this._ConstructSolutionId != value))
				{
					if (this._Solution_CQMSConstructSolution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConstructSolutionIdChanging(value);
					this.SendPropertyChanging();
					this._ConstructSolutionId = value;
					this.SendPropertyChanged("ConstructSolutionId");
					this.OnConstructSolutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveMan", DbType="NVarChar(50)")]
		public string ApproveMan
		{
			get
			{
				return this._ApproveMan;
			}
			set
			{
				if ((this._ApproveMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproveManChanging(value);
					this.SendPropertyChanging();
					this._ApproveMan = value;
					this.SendPropertyChanged("ApproveMan");
					this.OnApproveManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgree", DbType="Bit")]
		public System.Nullable<bool> IsAgree
		{
			get
			{
				return this._IsAgree;
			}
			set
			{
				if ((this._IsAgree != value))
				{
					this.OnIsAgreeChanging(value);
					this.SendPropertyChanging();
					this._IsAgree = value;
					this.SendPropertyChanged("IsAgree");
					this.OnIsAgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveIdea", DbType="NVarChar(200)")]
		public string ApproveIdea
		{
			get
			{
				return this._ApproveIdea;
			}
			set
			{
				if ((this._ApproveIdea != value))
				{
					this.OnApproveIdeaChanging(value);
					this.SendPropertyChanging();
					this._ApproveIdea = value;
					this.SendPropertyChanged("ApproveIdea");
					this.OnApproveIdeaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveType", DbType="Char(1)")]
		public string ApproveType
		{
			get
			{
				return this._ApproveType;
			}
			set
			{
				if ((this._ApproveType != value))
				{
					this.OnApproveTypeChanging(value);
					this.SendPropertyChanging();
					this._ApproveType = value;
					this.SendPropertyChanged("ApproveType");
					this.OnApproveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(200)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignType", DbType="NVarChar(20)")]
		public string SignType
		{
			get
			{
				return this._SignType;
			}
			set
			{
				if ((this._SignType != value))
				{
					this.OnSignTypeChanging(value);
					this.SendPropertyChanging();
					this._SignType = value;
					this.SendPropertyChanged("SignType");
					this.OnSignTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edition", DbType="Int")]
		public System.Nullable<int> Edition
		{
			get
			{
				return this._Edition;
			}
			set
			{
				if ((this._Edition != value))
				{
					this.OnEditionChanging(value);
					this.SendPropertyChanging();
					this._Edition = value;
					this.SendPropertyChanged("Edition");
					this.OnEditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_CQMSConstructSolutionApprove_Solution_CQMSConstructSolution", Storage="_Solution_CQMSConstructSolution", ThisKey="ConstructSolutionId", OtherKey="ConstructSolutionId", IsForeignKey=true)]
		public Solution_CQMSConstructSolution Solution_CQMSConstructSolution
		{
			get
			{
				return this._Solution_CQMSConstructSolution.Entity;
			}
			set
			{
				Solution_CQMSConstructSolution previousValue = this._Solution_CQMSConstructSolution.Entity;
				if (((previousValue != value) 
							|| (this._Solution_CQMSConstructSolution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Solution_CQMSConstructSolution.Entity = null;
						previousValue.Solution_CQMSConstructSolutionApprove.Remove(this);
					}
					this._Solution_CQMSConstructSolution.Entity = value;
					if ((value != null))
					{
						value.Solution_CQMSConstructSolutionApprove.Add(this);
						this._ConstructSolutionId = value.ConstructSolutionId;
					}
					else
					{
						this._ConstructSolutionId = default(string);
					}
					this.SendPropertyChanged("Solution_CQMSConstructSolution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_CQMSConstructSolutionApprove_Sys_User", Storage="_Sys_User", ThisKey="ApproveMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Solution_CQMSConstructSolutionApprove.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Solution_CQMSConstructSolutionApprove.Add(this);
						this._ApproveMan = value.UserId;
					}
					else
					{
						this._ApproveMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Solution_ExpertArgument")]
	public partial class Solution_ExpertArgument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ExpertArgumentId;
		
		private string _ExpertArgumentCode;
		
		private string _HazardType;
		
		private string _ProjectId;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _ExpectedTime;
		
		private System.Nullable<bool> _IsArgument;
		
		private System.Nullable<System.DateTime> _RecordTime;
		
		private string _RecardMan;
		
		private string _Remark;
		
		private string _States;
		
		private string _Descriptions;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpertArgumentIdChanging(string value);
    partial void OnExpertArgumentIdChanged();
    partial void OnExpertArgumentCodeChanging(string value);
    partial void OnExpertArgumentCodeChanged();
    partial void OnHazardTypeChanging(string value);
    partial void OnHazardTypeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnExpectedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedTimeChanged();
    partial void OnIsArgumentChanging(System.Nullable<bool> value);
    partial void OnIsArgumentChanged();
    partial void OnRecordTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRecordTimeChanged();
    partial void OnRecardManChanging(string value);
    partial void OnRecardManChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnDescriptionsChanging(string value);
    partial void OnDescriptionsChanged();
    #endregion
		
		public Solution_ExpertArgument()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertArgumentId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ExpertArgumentId
		{
			get
			{
				return this._ExpertArgumentId;
			}
			set
			{
				if ((this._ExpertArgumentId != value))
				{
					this.OnExpertArgumentIdChanging(value);
					this.SendPropertyChanging();
					this._ExpertArgumentId = value;
					this.SendPropertyChanged("ExpertArgumentId");
					this.OnExpertArgumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertArgumentCode", DbType="NVarChar(50)")]
		public string ExpertArgumentCode
		{
			get
			{
				return this._ExpertArgumentCode;
			}
			set
			{
				if ((this._ExpertArgumentCode != value))
				{
					this.OnExpertArgumentCodeChanging(value);
					this.SendPropertyChanging();
					this._ExpertArgumentCode = value;
					this.SendPropertyChanged("ExpertArgumentCode");
					this.OnExpertArgumentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardType", DbType="NVarChar(50)")]
		public string HazardType
		{
			get
			{
				return this._HazardType;
			}
			set
			{
				if ((this._HazardType != value))
				{
					this.OnHazardTypeChanging(value);
					this.SendPropertyChanging();
					this._HazardType = value;
					this.SendPropertyChanged("HazardType");
					this.OnHazardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedTime
		{
			get
			{
				return this._ExpectedTime;
			}
			set
			{
				if ((this._ExpectedTime != value))
				{
					this.OnExpectedTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpectedTime = value;
					this.SendPropertyChanged("ExpectedTime");
					this.OnExpectedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArgument", DbType="Bit")]
		public System.Nullable<bool> IsArgument
		{
			get
			{
				return this._IsArgument;
			}
			set
			{
				if ((this._IsArgument != value))
				{
					this.OnIsArgumentChanging(value);
					this.SendPropertyChanging();
					this._IsArgument = value;
					this.SendPropertyChanged("IsArgument");
					this.OnIsArgumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecardMan", DbType="NVarChar(50)")]
		public string RecardMan
		{
			get
			{
				return this._RecardMan;
			}
			set
			{
				if ((this._RecardMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecardManChanging(value);
					this.SendPropertyChanging();
					this._RecardMan = value;
					this.SendPropertyChanged("RecardMan");
					this.OnRecardManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriptions", DbType="NVarChar(500)")]
		public string Descriptions
		{
			get
			{
				return this._Descriptions;
			}
			set
			{
				if ((this._Descriptions != value))
				{
					this.OnDescriptionsChanging(value);
					this.SendPropertyChanging();
					this._Descriptions = value;
					this.SendPropertyChanged("Descriptions");
					this.OnDescriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_ExpertArgument_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Solution_ExpertArgument.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Solution_ExpertArgument.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_ExpertArgument_Sys_User", Storage="_Sys_User", ThisKey="RecardMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Solution_ExpertArgument.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Solution_ExpertArgument.Add(this);
						this._RecardMan = value.UserId;
					}
					else
					{
						this._RecardMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Solution_LargerHazard")]
	public partial class Solution_LargerHazard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HazardId;
		
		private string _HazardCode;
		
		private string _HazardType;
		
		private string _ProjectId;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _ExpectedTime;
		
		private System.Nullable<bool> _IsArgument;
		
		private System.Nullable<System.DateTime> _RecordTime;
		
		private string _RecardMan;
		
		private string _Remark;
		
		private string _States;
		
		private string _Descriptions;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHazardIdChanging(string value);
    partial void OnHazardIdChanged();
    partial void OnHazardCodeChanging(string value);
    partial void OnHazardCodeChanged();
    partial void OnHazardTypeChanging(string value);
    partial void OnHazardTypeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnExpectedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedTimeChanged();
    partial void OnIsArgumentChanging(System.Nullable<bool> value);
    partial void OnIsArgumentChanged();
    partial void OnRecordTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRecordTimeChanged();
    partial void OnRecardManChanging(string value);
    partial void OnRecardManChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnDescriptionsChanging(string value);
    partial void OnDescriptionsChanged();
    #endregion
		
		public Solution_LargerHazard()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HazardId
		{
			get
			{
				return this._HazardId;
			}
			set
			{
				if ((this._HazardId != value))
				{
					this.OnHazardIdChanging(value);
					this.SendPropertyChanging();
					this._HazardId = value;
					this.SendPropertyChanged("HazardId");
					this.OnHazardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardCode", DbType="NVarChar(50)")]
		public string HazardCode
		{
			get
			{
				return this._HazardCode;
			}
			set
			{
				if ((this._HazardCode != value))
				{
					this.OnHazardCodeChanging(value);
					this.SendPropertyChanging();
					this._HazardCode = value;
					this.SendPropertyChanged("HazardCode");
					this.OnHazardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardType", DbType="NVarChar(50)")]
		public string HazardType
		{
			get
			{
				return this._HazardType;
			}
			set
			{
				if ((this._HazardType != value))
				{
					this.OnHazardTypeChanging(value);
					this.SendPropertyChanging();
					this._HazardType = value;
					this.SendPropertyChanged("HazardType");
					this.OnHazardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpectedTime
		{
			get
			{
				return this._ExpectedTime;
			}
			set
			{
				if ((this._ExpectedTime != value))
				{
					this.OnExpectedTimeChanging(value);
					this.SendPropertyChanging();
					this._ExpectedTime = value;
					this.SendPropertyChanged("ExpectedTime");
					this.OnExpectedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArgument", DbType="Bit")]
		public System.Nullable<bool> IsArgument
		{
			get
			{
				return this._IsArgument;
			}
			set
			{
				if ((this._IsArgument != value))
				{
					this.OnIsArgumentChanging(value);
					this.SendPropertyChanging();
					this._IsArgument = value;
					this.SendPropertyChanged("IsArgument");
					this.OnIsArgumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecordTime
		{
			get
			{
				return this._RecordTime;
			}
			set
			{
				if ((this._RecordTime != value))
				{
					this.OnRecordTimeChanging(value);
					this.SendPropertyChanging();
					this._RecordTime = value;
					this.SendPropertyChanged("RecordTime");
					this.OnRecordTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecardMan", DbType="NVarChar(50)")]
		public string RecardMan
		{
			get
			{
				return this._RecardMan;
			}
			set
			{
				if ((this._RecardMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecardManChanging(value);
					this.SendPropertyChanging();
					this._RecardMan = value;
					this.SendPropertyChanged("RecardMan");
					this.OnRecardManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriptions", DbType="NVarChar(500)")]
		public string Descriptions
		{
			get
			{
				return this._Descriptions;
			}
			set
			{
				if ((this._Descriptions != value))
				{
					this.OnDescriptionsChanging(value);
					this.SendPropertyChanging();
					this._Descriptions = value;
					this.SendPropertyChanged("Descriptions");
					this.OnDescriptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_LargerSolution_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Solution_LargerHazard.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Solution_LargerHazard.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_LargerSolution_Sys_User", Storage="_Sys_User", ThisKey="RecardMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Solution_LargerHazard.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Solution_LargerHazard.Add(this);
						this._RecardMan = value.UserId;
					}
					else
					{
						this._RecardMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Solution_SolutionTemplate")]
	public partial class Solution_SolutionTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SolutionTemplateId;
		
		private string _ProjectId;
		
		private string _SolutionTemplateCode;
		
		private string _SolutionTemplateName;
		
		private string _SolutionTemplateType;
		
		private string _FileContents;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSolutionTemplateIdChanging(string value);
    partial void OnSolutionTemplateIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnSolutionTemplateCodeChanging(string value);
    partial void OnSolutionTemplateCodeChanged();
    partial void OnSolutionTemplateNameChanging(string value);
    partial void OnSolutionTemplateNameChanged();
    partial void OnSolutionTemplateTypeChanging(string value);
    partial void OnSolutionTemplateTypeChanged();
    partial void OnFileContentsChanging(string value);
    partial void OnFileContentsChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    #endregion
		
		public Solution_SolutionTemplate()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionTemplateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SolutionTemplateId
		{
			get
			{
				return this._SolutionTemplateId;
			}
			set
			{
				if ((this._SolutionTemplateId != value))
				{
					this.OnSolutionTemplateIdChanging(value);
					this.SendPropertyChanging();
					this._SolutionTemplateId = value;
					this.SendPropertyChanged("SolutionTemplateId");
					this.OnSolutionTemplateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionTemplateCode", DbType="NVarChar(50)")]
		public string SolutionTemplateCode
		{
			get
			{
				return this._SolutionTemplateCode;
			}
			set
			{
				if ((this._SolutionTemplateCode != value))
				{
					this.OnSolutionTemplateCodeChanging(value);
					this.SendPropertyChanging();
					this._SolutionTemplateCode = value;
					this.SendPropertyChanged("SolutionTemplateCode");
					this.OnSolutionTemplateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionTemplateName", DbType="NVarChar(50)")]
		public string SolutionTemplateName
		{
			get
			{
				return this._SolutionTemplateName;
			}
			set
			{
				if ((this._SolutionTemplateName != value))
				{
					this.OnSolutionTemplateNameChanging(value);
					this.SendPropertyChanging();
					this._SolutionTemplateName = value;
					this.SendPropertyChanged("SolutionTemplateName");
					this.OnSolutionTemplateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolutionTemplateType", DbType="Char(10)")]
		public string SolutionTemplateType
		{
			get
			{
				return this._SolutionTemplateType;
			}
			set
			{
				if ((this._SolutionTemplateType != value))
				{
					this.OnSolutionTemplateTypeChanging(value);
					this.SendPropertyChanging();
					this._SolutionTemplateType = value;
					this.SendPropertyChanged("SolutionTemplateType");
					this.OnSolutionTemplateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContents", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FileContents
		{
			get
			{
				return this._FileContents;
			}
			set
			{
				if ((this._FileContents != value))
				{
					this.OnFileContentsChanging(value);
					this.SendPropertyChanging();
					this._FileContents = value;
					this.SendPropertyChanged("FileContents");
					this.OnFileContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_SolutionTemplate_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Solution_SolutionTemplate.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Solution_SolutionTemplate.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_SolutionTemplate_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Solution_SolutionTemplate.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Solution_SolutionTemplate.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_ButtonPower")]
	public partial class Sys_ButtonPower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ButtonPowerID;
		
		private string _RoleId;
		
		private string _MenuId;
		
		private string _ButtonToMenuId;
		
		private EntityRef<Sys_Role> _Sys_Role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnButtonPowerIDChanging(string value);
    partial void OnButtonPowerIDChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnButtonToMenuIdChanging(string value);
    partial void OnButtonToMenuIdChanged();
    #endregion
		
		public Sys_ButtonPower()
		{
			this._Sys_Role = default(EntityRef<Sys_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonPowerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ButtonPowerID
		{
			get
			{
				return this._ButtonPowerID;
			}
			set
			{
				if ((this._ButtonPowerID != value))
				{
					this.OnButtonPowerIDChanging(value);
					this.SendPropertyChanging();
					this._ButtonPowerID = value;
					this.SendPropertyChanged("ButtonPowerID");
					this.OnButtonPowerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Sys_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonToMenuId", DbType="NVarChar(50)")]
		public string ButtonToMenuId
		{
			get
			{
				return this._ButtonToMenuId;
			}
			set
			{
				if ((this._ButtonToMenuId != value))
				{
					this.OnButtonToMenuIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonToMenuId = value;
					this.SendPropertyChanged("ButtonToMenuId");
					this.OnButtonToMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_Role", Storage="_Sys_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Sys_Role Sys_Role
		{
			get
			{
				return this._Sys_Role.Entity;
			}
			set
			{
				Sys_Role previousValue = this._Sys_Role.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Role.Entity = null;
						previousValue.Sys_ButtonPower.Remove(this);
					}
					this._Sys_Role.Entity = value;
					if ((value != null))
					{
						value.Sys_ButtonPower.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("Sys_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_ButtonToMenu")]
	public partial class Sys_ButtonToMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ButtonToMenuId;
		
		private string _MenuId;
		
		private string _ButtonName;
		
		private System.Nullable<int> _SortIndex;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnButtonToMenuIdChanging(string value);
    partial void OnButtonToMenuIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnButtonNameChanging(string value);
    partial void OnButtonNameChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    #endregion
		
		public Sys_ButtonToMenu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonToMenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ButtonToMenuId
		{
			get
			{
				return this._ButtonToMenuId;
			}
			set
			{
				if ((this._ButtonToMenuId != value))
				{
					this.OnButtonToMenuIdChanging(value);
					this.SendPropertyChanging();
					this._ButtonToMenuId = value;
					this.SendPropertyChanged("ButtonToMenuId");
					this.OnButtonToMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ButtonName", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string ButtonName
		{
			get
			{
				return this._ButtonName;
			}
			set
			{
				if ((this._ButtonName != value))
				{
					this.OnButtonNameChanging(value);
					this.SendPropertyChanging();
					this._ButtonName = value;
					this.SendPropertyChanged("ButtonName");
					this.OnButtonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_CodeRecords")]
	public partial class Sys_CodeRecords : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeRecordId;
		
		private string _ProjectId;
		
		private string _MenuId;
		
		private string _DataId;
		
		private string _UnitId;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<int> _SortIndex;
		
		private string _RuleCodes;
		
		private System.Nullable<int> _Digit;
		
		private string _Code;
		
		private string _OwnerRuleCodes;
		
		private System.Nullable<int> _OwerDigit;
		
		private string _OwnerCode;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeRecordIdChanging(string value);
    partial void OnCodeRecordIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnRuleCodesChanging(string value);
    partial void OnRuleCodesChanged();
    partial void OnDigitChanging(System.Nullable<int> value);
    partial void OnDigitChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnOwnerRuleCodesChanging(string value);
    partial void OnOwnerRuleCodesChanged();
    partial void OnOwerDigitChanging(System.Nullable<int> value);
    partial void OnOwerDigitChanged();
    partial void OnOwnerCodeChanging(string value);
    partial void OnOwnerCodeChanged();
    #endregion
		
		public Sys_CodeRecords()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeRecordId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeRecordId
		{
			get
			{
				return this._CodeRecordId;
			}
			set
			{
				if ((this._CodeRecordId != value))
				{
					this.OnCodeRecordIdChanging(value);
					this.SendPropertyChanging();
					this._CodeRecordId = value;
					this.SendPropertyChanged("CodeRecordId");
					this.OnCodeRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RuleCodes", DbType="NVarChar(50)")]
		public string RuleCodes
		{
			get
			{
				return this._RuleCodes;
			}
			set
			{
				if ((this._RuleCodes != value))
				{
					this.OnRuleCodesChanging(value);
					this.SendPropertyChanging();
					this._RuleCodes = value;
					this.SendPropertyChanged("RuleCodes");
					this.OnRuleCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Digit", DbType="Int")]
		public System.Nullable<int> Digit
		{
			get
			{
				return this._Digit;
			}
			set
			{
				if ((this._Digit != value))
				{
					this.OnDigitChanging(value);
					this.SendPropertyChanging();
					this._Digit = value;
					this.SendPropertyChanged("Digit");
					this.OnDigitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerRuleCodes", DbType="NVarChar(50)")]
		public string OwnerRuleCodes
		{
			get
			{
				return this._OwnerRuleCodes;
			}
			set
			{
				if ((this._OwnerRuleCodes != value))
				{
					this.OnOwnerRuleCodesChanging(value);
					this.SendPropertyChanging();
					this._OwnerRuleCodes = value;
					this.SendPropertyChanged("OwnerRuleCodes");
					this.OnOwnerRuleCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwerDigit", DbType="Int")]
		public System.Nullable<int> OwerDigit
		{
			get
			{
				return this._OwerDigit;
			}
			set
			{
				if ((this._OwerDigit != value))
				{
					this.OnOwerDigitChanging(value);
					this.SendPropertyChanging();
					this._OwerDigit = value;
					this.SendPropertyChanged("OwerDigit");
					this.OnOwerDigitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerCode", DbType="NVarChar(50)")]
		public string OwnerCode
		{
			get
			{
				return this._OwnerCode;
			}
			set
			{
				if ((this._OwnerCode != value))
				{
					this.OnOwnerCodeChanging(value);
					this.SendPropertyChanging();
					this._OwnerCode = value;
					this.SendPropertyChanged("OwnerCode");
					this.OnOwnerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_CodeRecords_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Sys_CodeRecords.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Sys_CodeRecords.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_CodeTemplateRule")]
	public partial class Sys_CodeTemplateRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeTemplateRuleId;
		
		private string _MenuId;
		
		private string _Template;
		
		private string _Symbol;
		
		private System.Nullable<bool> _IsProjectCode;
		
		private string _Prefix;
		
		private System.Nullable<bool> _IsUnitCode;
		
		private System.Nullable<int> _Digit;
		
		private System.Nullable<bool> _IsFileCabinetA;
		
		private System.Nullable<bool> _IsFileCabinetB;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeTemplateRuleIdChanging(string value);
    partial void OnCodeTemplateRuleIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnIsProjectCodeChanging(System.Nullable<bool> value);
    partial void OnIsProjectCodeChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnIsUnitCodeChanging(System.Nullable<bool> value);
    partial void OnIsUnitCodeChanged();
    partial void OnDigitChanging(System.Nullable<int> value);
    partial void OnDigitChanged();
    partial void OnIsFileCabinetAChanging(System.Nullable<bool> value);
    partial void OnIsFileCabinetAChanged();
    partial void OnIsFileCabinetBChanging(System.Nullable<bool> value);
    partial void OnIsFileCabinetBChanged();
    #endregion
		
		public Sys_CodeTemplateRule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeTemplateRuleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeTemplateRuleId
		{
			get
			{
				return this._CodeTemplateRuleId;
			}
			set
			{
				if ((this._CodeTemplateRuleId != value))
				{
					this.OnCodeTemplateRuleIdChanging(value);
					this.SendPropertyChanging();
					this._CodeTemplateRuleId = value;
					this.SendPropertyChanged("CodeTemplateRuleId");
					this.OnCodeTemplateRuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="NVarChar(10)")]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProjectCode", DbType="Bit")]
		public System.Nullable<bool> IsProjectCode
		{
			get
			{
				return this._IsProjectCode;
			}
			set
			{
				if ((this._IsProjectCode != value))
				{
					this.OnIsProjectCodeChanging(value);
					this.SendPropertyChanging();
					this._IsProjectCode = value;
					this.SendPropertyChanged("IsProjectCode");
					this.OnIsProjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix", DbType="NVarChar(50)")]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUnitCode", DbType="Bit")]
		public System.Nullable<bool> IsUnitCode
		{
			get
			{
				return this._IsUnitCode;
			}
			set
			{
				if ((this._IsUnitCode != value))
				{
					this.OnIsUnitCodeChanging(value);
					this.SendPropertyChanging();
					this._IsUnitCode = value;
					this.SendPropertyChanged("IsUnitCode");
					this.OnIsUnitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Digit", DbType="Int")]
		public System.Nullable<int> Digit
		{
			get
			{
				return this._Digit;
			}
			set
			{
				if ((this._Digit != value))
				{
					this.OnDigitChanging(value);
					this.SendPropertyChanging();
					this._Digit = value;
					this.SendPropertyChanged("Digit");
					this.OnDigitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFileCabinetA", DbType="Bit")]
		public System.Nullable<bool> IsFileCabinetA
		{
			get
			{
				return this._IsFileCabinetA;
			}
			set
			{
				if ((this._IsFileCabinetA != value))
				{
					this.OnIsFileCabinetAChanging(value);
					this.SendPropertyChanging();
					this._IsFileCabinetA = value;
					this.SendPropertyChanged("IsFileCabinetA");
					this.OnIsFileCabinetAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFileCabinetB", DbType="Bit")]
		public System.Nullable<bool> IsFileCabinetB
		{
			get
			{
				return this._IsFileCabinetB;
			}
			set
			{
				if ((this._IsFileCabinetB != value))
				{
					this.OnIsFileCabinetBChanging(value);
					this.SendPropertyChanging();
					this._IsFileCabinetB = value;
					this.SendPropertyChanged("IsFileCabinetB");
					this.OnIsFileCabinetBChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Const")]
	public partial class Sys_Const : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _ConstValue;
		
		private string _ConstText;
		
		private System.Nullable<int> _SortIndex;
		
		private string _GroupId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnConstValueChanging(string value);
    partial void OnConstValueChanged();
    partial void OnConstTextChanging(string value);
    partial void OnConstTextChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnGroupIdChanging(string value);
    partial void OnGroupIdChanged();
    #endregion
		
		public Sys_Const()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstValue", DbType="NVarChar(50)")]
		public string ConstValue
		{
			get
			{
				return this._ConstValue;
			}
			set
			{
				if ((this._ConstValue != value))
				{
					this.OnConstValueChanging(value);
					this.SendPropertyChanging();
					this._ConstValue = value;
					this.SendPropertyChanged("ConstValue");
					this.OnConstValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstText", DbType="NVarChar(100)")]
		public string ConstText
		{
			get
			{
				return this._ConstText;
			}
			set
			{
				if ((this._ConstText != value))
				{
					this.OnConstTextChanging(value);
					this.SendPropertyChanging();
					this._ConstText = value;
					this.SendPropertyChanged("ConstText");
					this.OnConstTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="NVarChar(50)")]
		public string GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_ErrLogInfo")]
	public partial class Sys_ErrLogInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ErrLogId;
		
		private string _ErrType;
		
		private string _ErrMessage;
		
		private string _ErrStackTrace;
		
		private System.Nullable<System.DateTime> _ErrTime;
		
		private string _ErrUrl;
		
		private string _ErrIP;
		
		private string _UserName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrLogIdChanging(string value);
    partial void OnErrLogIdChanged();
    partial void OnErrTypeChanging(string value);
    partial void OnErrTypeChanged();
    partial void OnErrMessageChanging(string value);
    partial void OnErrMessageChanged();
    partial void OnErrStackTraceChanging(string value);
    partial void OnErrStackTraceChanged();
    partial void OnErrTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnErrTimeChanged();
    partial void OnErrUrlChanging(string value);
    partial void OnErrUrlChanged();
    partial void OnErrIPChanging(string value);
    partial void OnErrIPChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public Sys_ErrLogInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrLogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ErrLogId
		{
			get
			{
				return this._ErrLogId;
			}
			set
			{
				if ((this._ErrLogId != value))
				{
					this.OnErrLogIdChanging(value);
					this.SendPropertyChanging();
					this._ErrLogId = value;
					this.SendPropertyChanged("ErrLogId");
					this.OnErrLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrType", DbType="NVarChar(500)")]
		public string ErrType
		{
			get
			{
				return this._ErrType;
			}
			set
			{
				if ((this._ErrType != value))
				{
					this.OnErrTypeChanging(value);
					this.SendPropertyChanging();
					this._ErrType = value;
					this.SendPropertyChanged("ErrType");
					this.OnErrTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrMessage", DbType="NVarChar(2000)")]
		public string ErrMessage
		{
			get
			{
				return this._ErrMessage;
			}
			set
			{
				if ((this._ErrMessage != value))
				{
					this.OnErrMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrMessage = value;
					this.SendPropertyChanged("ErrMessage");
					this.OnErrMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrStackTrace", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ErrStackTrace
		{
			get
			{
				return this._ErrStackTrace;
			}
			set
			{
				if ((this._ErrStackTrace != value))
				{
					this.OnErrStackTraceChanging(value);
					this.SendPropertyChanging();
					this._ErrStackTrace = value;
					this.SendPropertyChanged("ErrStackTrace");
					this.OnErrStackTraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ErrTime
		{
			get
			{
				return this._ErrTime;
			}
			set
			{
				if ((this._ErrTime != value))
				{
					this.OnErrTimeChanging(value);
					this.SendPropertyChanging();
					this._ErrTime = value;
					this.SendPropertyChanged("ErrTime");
					this.OnErrTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrUrl", DbType="NVarChar(800)")]
		public string ErrUrl
		{
			get
			{
				return this._ErrUrl;
			}
			set
			{
				if ((this._ErrUrl != value))
				{
					this.OnErrUrlChanging(value);
					this.SendPropertyChanging();
					this._ErrUrl = value;
					this.SendPropertyChanged("ErrUrl");
					this.OnErrUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrIP", DbType="NVarChar(50)")]
		public string ErrIP
		{
			get
			{
				return this._ErrIP;
			}
			set
			{
				if ((this._ErrIP != value))
				{
					this.OnErrIPChanging(value);
					this.SendPropertyChanging();
					this._ErrIP = value;
					this.SendPropertyChanged("ErrIP");
					this.OnErrIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_FlowOperate")]
	public partial class Sys_FlowOperate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FlowOperateId;
		
		private string _MenuId;
		
		private string _DataId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _AuditFlowName;
		
		private string _OperaterId;
		
		private System.Nullable<System.DateTime> _OperaterTime;
		
		private string _Opinion;
		
		private System.Nullable<bool> _IsClosed;
		
		private string _State;
		
		private string _ProjectId;
		
		private string _Url;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlowOperateIdChanging(string value);
    partial void OnFlowOperateIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnAuditFlowNameChanging(string value);
    partial void OnAuditFlowNameChanged();
    partial void OnOperaterIdChanging(string value);
    partial void OnOperaterIdChanged();
    partial void OnOperaterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperaterTimeChanged();
    partial void OnOpinionChanging(string value);
    partial void OnOpinionChanged();
    partial void OnIsClosedChanging(System.Nullable<bool> value);
    partial void OnIsClosedChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public Sys_FlowOperate()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowOperateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FlowOperateId
		{
			get
			{
				return this._FlowOperateId;
			}
			set
			{
				if ((this._FlowOperateId != value))
				{
					this.OnFlowOperateIdChanging(value);
					this.SendPropertyChanging();
					this._FlowOperateId = value;
					this.SendPropertyChanged("FlowOperateId");
					this.OnFlowOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditFlowName", DbType="NVarChar(50)")]
		public string AuditFlowName
		{
			get
			{
				return this._AuditFlowName;
			}
			set
			{
				if ((this._AuditFlowName != value))
				{
					this.OnAuditFlowNameChanging(value);
					this.SendPropertyChanging();
					this._AuditFlowName = value;
					this.SendPropertyChanged("AuditFlowName");
					this.OnAuditFlowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperaterId", DbType="NVarChar(50)")]
		public string OperaterId
		{
			get
			{
				return this._OperaterId;
			}
			set
			{
				if ((this._OperaterId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperaterIdChanging(value);
					this.SendPropertyChanging();
					this._OperaterId = value;
					this.SendPropertyChanged("OperaterId");
					this.OnOperaterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperaterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperaterTime
		{
			get
			{
				return this._OperaterTime;
			}
			set
			{
				if ((this._OperaterTime != value))
				{
					this.OnOperaterTimeChanging(value);
					this.SendPropertyChanging();
					this._OperaterTime = value;
					this.SendPropertyChanged("OperaterTime");
					this.OnOperaterTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opinion", DbType="NVarChar(1000)")]
		public string Opinion
		{
			get
			{
				return this._Opinion;
			}
			set
			{
				if ((this._Opinion != value))
				{
					this.OnOpinionChanging(value);
					this.SendPropertyChanging();
					this._Opinion = value;
					this.SendPropertyChanged("Opinion");
					this.OnOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit")]
		public System.Nullable<bool> IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(500)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_FlowOperate_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Sys_FlowOperate.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Sys_FlowOperate.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_FlowOperate_Sys_User", Storage="_Sys_User", ThisKey="OperaterId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_FlowOperate.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_FlowOperate.Add(this);
						this._OperaterId = value.UserId;
					}
					else
					{
						this._OperaterId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Log")]
	public partial class Sys_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LogId;
		
		private string _UserId;
		
		private System.Nullable<System.DateTime> _OperationTime;
		
		private string _Ip;
		
		private string _HostName;
		
		private string _OperationLog;
		
		private string _ProjectId;
		
		private string _SystemId;
		
		private string _MenuId;
		
		private string _OperationName;
		
		private string _DataId;
		
		private System.Nullable<byte> _LogSource;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(string value);
    partial void OnLogIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnOperationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOperationTimeChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnHostNameChanging(string value);
    partial void OnHostNameChanged();
    partial void OnOperationLogChanging(string value);
    partial void OnOperationLogChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnSystemIdChanging(string value);
    partial void OnSystemIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnOperationNameChanging(string value);
    partial void OnOperationNameChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnLogSourceChanging(System.Nullable<byte> value);
    partial void OnLogSourceChanged();
    #endregion
		
		public Sys_Log()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperationTime
		{
			get
			{
				return this._OperationTime;
			}
			set
			{
				if ((this._OperationTime != value))
				{
					this.OnOperationTimeChanging(value);
					this.SendPropertyChanging();
					this._OperationTime = value;
					this.SendPropertyChanged("OperationTime");
					this.OnOperationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(200)")]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostName", DbType="NVarChar(500)")]
		public string HostName
		{
			get
			{
				return this._HostName;
			}
			set
			{
				if ((this._HostName != value))
				{
					this.OnHostNameChanging(value);
					this.SendPropertyChanging();
					this._HostName = value;
					this.SendPropertyChanged("HostName");
					this.OnHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationLog", DbType="NVarChar(4000)")]
		public string OperationLog
		{
			get
			{
				return this._OperationLog;
			}
			set
			{
				if ((this._OperationLog != value))
				{
					this.OnOperationLogChanging(value);
					this.SendPropertyChanging();
					this._OperationLog = value;
					this.SendPropertyChanged("OperationLog");
					this.OnOperationLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemId", DbType="NVarChar(50)")]
		public string SystemId
		{
			get
			{
				return this._SystemId;
			}
			set
			{
				if ((this._SystemId != value))
				{
					this.OnSystemIdChanging(value);
					this.SendPropertyChanging();
					this._SystemId = value;
					this.SendPropertyChanged("SystemId");
					this.OnSystemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationName", DbType="NVarChar(50)")]
		public string OperationName
		{
			get
			{
				return this._OperationName;
			}
			set
			{
				if ((this._OperationName != value))
				{
					this.OnOperationNameChanging(value);
					this.SendPropertyChanging();
					this._OperationName = value;
					this.SendPropertyChanged("OperationName");
					this.OnOperationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogSource", DbType="TinyInt")]
		public System.Nullable<byte> LogSource
		{
			get
			{
				return this._LogSource;
			}
			set
			{
				if ((this._LogSource != value))
				{
					this.OnLogSourceChanging(value);
					this.SendPropertyChanging();
					this._LogSource = value;
					this.SendPropertyChanged("LogSource");
					this.OnLogSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Log_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Sys_Log.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Sys_Log.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Log_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_Log.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_Log.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Menu")]
	public partial class Sys_Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MenuId;
		
		private string _MenuName;
		
		private string _Icon;
		
		private string _Url;
		
		private System.Nullable<int> _SortIndex;
		
		private string _SuperMenu;
		
		private string _MenuType;
		
		private System.Nullable<bool> _IsOffice;
		
		private System.Nullable<bool> _IsEnd;
		
		private System.Nullable<bool> _IsUsed;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnSuperMenuChanging(string value);
    partial void OnSuperMenuChanged();
    partial void OnMenuTypeChanging(string value);
    partial void OnMenuTypeChanged();
    partial void OnIsOfficeChanging(System.Nullable<bool> value);
    partial void OnIsOfficeChanged();
    partial void OnIsEndChanging(System.Nullable<bool> value);
    partial void OnIsEndChanged();
    partial void OnIsUsedChanging(System.Nullable<bool> value);
    partial void OnIsUsedChanged();
    #endregion
		
		public Sys_Menu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(50)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(50)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(200)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperMenu", DbType="NVarChar(50)")]
		public string SuperMenu
		{
			get
			{
				return this._SuperMenu;
			}
			set
			{
				if ((this._SuperMenu != value))
				{
					this.OnSuperMenuChanging(value);
					this.SendPropertyChanging();
					this._SuperMenu = value;
					this.SendPropertyChanged("SuperMenu");
					this.OnSuperMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuType", DbType="NVarChar(50)")]
		public string MenuType
		{
			get
			{
				return this._MenuType;
			}
			set
			{
				if ((this._MenuType != value))
				{
					this.OnMenuTypeChanging(value);
					this.SendPropertyChanging();
					this._MenuType = value;
					this.SendPropertyChanged("MenuType");
					this.OnMenuTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOffice", DbType="Bit")]
		public System.Nullable<bool> IsOffice
		{
			get
			{
				return this._IsOffice;
			}
			set
			{
				if ((this._IsOffice != value))
				{
					this.OnIsOfficeChanging(value);
					this.SendPropertyChanging();
					this._IsOffice = value;
					this.SendPropertyChanged("IsOffice");
					this.OnIsOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnd", DbType="Bit")]
		public System.Nullable<bool> IsEnd
		{
			get
			{
				return this._IsEnd;
			}
			set
			{
				if ((this._IsEnd != value))
				{
					this.OnIsEndChanging(value);
					this.SendPropertyChanging();
					this._IsEnd = value;
					this.SendPropertyChanged("IsEnd");
					this.OnIsEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit")]
		public System.Nullable<bool> IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this.OnIsUsedChanging(value);
					this.SendPropertyChanging();
					this._IsUsed = value;
					this.SendPropertyChanged("IsUsed");
					this.OnIsUsedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_MenuFlowOperate")]
	public partial class Sys_MenuFlowOperate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FlowOperateId;
		
		private string _MenuId;
		
		private System.Nullable<int> _FlowStep;
		
		private string _AuditFlowName;
		
		private string _RoleId;
		
		private System.Nullable<bool> _IsFlowEnd;
		
		private System.Nullable<int> _GroupNum;
		
		private System.Nullable<int> _OrderNum;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlowOperateIdChanging(string value);
    partial void OnFlowOperateIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnFlowStepChanging(System.Nullable<int> value);
    partial void OnFlowStepChanged();
    partial void OnAuditFlowNameChanging(string value);
    partial void OnAuditFlowNameChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnIsFlowEndChanging(System.Nullable<bool> value);
    partial void OnIsFlowEndChanged();
    partial void OnGroupNumChanging(System.Nullable<int> value);
    partial void OnGroupNumChanged();
    partial void OnOrderNumChanging(System.Nullable<int> value);
    partial void OnOrderNumChanged();
    #endregion
		
		public Sys_MenuFlowOperate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowOperateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FlowOperateId
		{
			get
			{
				return this._FlowOperateId;
			}
			set
			{
				if ((this._FlowOperateId != value))
				{
					this.OnFlowOperateIdChanging(value);
					this.SendPropertyChanging();
					this._FlowOperateId = value;
					this.SendPropertyChanged("FlowOperateId");
					this.OnFlowOperateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowStep", DbType="Int")]
		public System.Nullable<int> FlowStep
		{
			get
			{
				return this._FlowStep;
			}
			set
			{
				if ((this._FlowStep != value))
				{
					this.OnFlowStepChanging(value);
					this.SendPropertyChanging();
					this._FlowStep = value;
					this.SendPropertyChanged("FlowStep");
					this.OnFlowStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditFlowName", DbType="NVarChar(50)")]
		public string AuditFlowName
		{
			get
			{
				return this._AuditFlowName;
			}
			set
			{
				if ((this._AuditFlowName != value))
				{
					this.OnAuditFlowNameChanging(value);
					this.SendPropertyChanging();
					this._AuditFlowName = value;
					this.SendPropertyChanged("AuditFlowName");
					this.OnAuditFlowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(500)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFlowEnd", DbType="Bit")]
		public System.Nullable<bool> IsFlowEnd
		{
			get
			{
				return this._IsFlowEnd;
			}
			set
			{
				if ((this._IsFlowEnd != value))
				{
					this.OnIsFlowEndChanging(value);
					this.SendPropertyChanging();
					this._IsFlowEnd = value;
					this.SendPropertyChanged("IsFlowEnd");
					this.OnIsFlowEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupNum", DbType="Int")]
		public System.Nullable<int> GroupNum
		{
			get
			{
				return this._GroupNum;
			}
			set
			{
				if ((this._GroupNum != value))
				{
					this.OnGroupNumChanging(value);
					this.SendPropertyChanging();
					this._GroupNum = value;
					this.SendPropertyChanged("GroupNum");
					this.OnGroupNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNum", DbType="Int")]
		public System.Nullable<int> OrderNum
		{
			get
			{
				return this._OrderNum;
			}
			set
			{
				if ((this._OrderNum != value))
				{
					this.OnOrderNumChanging(value);
					this.SendPropertyChanging();
					this._OrderNum = value;
					this.SendPropertyChanged("OrderNum");
					this.OnOrderNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Role")]
	public partial class Sys_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleId;
		
		private string _RoleName;
		
		private string _RoleCode;
		
		private string _RoleType;
		
		private string _Def;
		
		private System.Nullable<bool> _IsAuditFlow;
		
		private System.Nullable<bool> _IsSystemBuilt;
		
		private string _CNCodes;
		
		private EntitySet<Sys_ButtonPower> _Sys_ButtonPower;
		
		private EntitySet<Sys_RolePower> _Sys_RolePower;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnRoleCodeChanging(string value);
    partial void OnRoleCodeChanged();
    partial void OnRoleTypeChanging(string value);
    partial void OnRoleTypeChanged();
    partial void OnDefChanging(string value);
    partial void OnDefChanged();
    partial void OnIsAuditFlowChanging(System.Nullable<bool> value);
    partial void OnIsAuditFlowChanged();
    partial void OnIsSystemBuiltChanging(System.Nullable<bool> value);
    partial void OnIsSystemBuiltChanged();
    partial void OnCNCodesChanging(string value);
    partial void OnCNCodesChanged();
    #endregion
		
		public Sys_Role()
		{
			this._Sys_ButtonPower = new EntitySet<Sys_ButtonPower>(new Action<Sys_ButtonPower>(this.attach_Sys_ButtonPower), new Action<Sys_ButtonPower>(this.detach_Sys_ButtonPower));
			this._Sys_RolePower = new EntitySet<Sys_RolePower>(new Action<Sys_RolePower>(this.attach_Sys_RolePower), new Action<Sys_RolePower>(this.detach_Sys_RolePower));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleCode", DbType="NVarChar(50)")]
		public string RoleCode
		{
			get
			{
				return this._RoleCode;
			}
			set
			{
				if ((this._RoleCode != value))
				{
					this.OnRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._RoleCode = value;
					this.SendPropertyChanged("RoleCode");
					this.OnRoleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleType", DbType="Char(1)")]
		public string RoleType
		{
			get
			{
				return this._RoleType;
			}
			set
			{
				if ((this._RoleType != value))
				{
					this.OnRoleTypeChanging(value);
					this.SendPropertyChanging();
					this._RoleType = value;
					this.SendPropertyChanged("RoleType");
					this.OnRoleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Def", DbType="NVarChar(100)")]
		public string Def
		{
			get
			{
				return this._Def;
			}
			set
			{
				if ((this._Def != value))
				{
					this.OnDefChanging(value);
					this.SendPropertyChanging();
					this._Def = value;
					this.SendPropertyChanged("Def");
					this.OnDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuditFlow", DbType="Bit")]
		public System.Nullable<bool> IsAuditFlow
		{
			get
			{
				return this._IsAuditFlow;
			}
			set
			{
				if ((this._IsAuditFlow != value))
				{
					this.OnIsAuditFlowChanging(value);
					this.SendPropertyChanging();
					this._IsAuditFlow = value;
					this.SendPropertyChanged("IsAuditFlow");
					this.OnIsAuditFlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystemBuilt", DbType="Bit")]
		public System.Nullable<bool> IsSystemBuilt
		{
			get
			{
				return this._IsSystemBuilt;
			}
			set
			{
				if ((this._IsSystemBuilt != value))
				{
					this.OnIsSystemBuiltChanging(value);
					this.SendPropertyChanging();
					this._IsSystemBuilt = value;
					this.SendPropertyChanged("IsSystemBuilt");
					this.OnIsSystemBuiltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNCodes", DbType="NVarChar(500)")]
		public string CNCodes
		{
			get
			{
				return this._CNCodes;
			}
			set
			{
				if ((this._CNCodes != value))
				{
					this.OnCNCodesChanging(value);
					this.SendPropertyChanging();
					this._CNCodes = value;
					this.SendPropertyChanged("CNCodes");
					this.OnCNCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_ButtonPower_Sys_Role", Storage="_Sys_ButtonPower", ThisKey="RoleId", OtherKey="RoleId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_ButtonPower> Sys_ButtonPower
		{
			get
			{
				return this._Sys_ButtonPower;
			}
			set
			{
				this._Sys_ButtonPower.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_RolePower_Sys_Role", Storage="_Sys_RolePower", ThisKey="RoleId", OtherKey="RoleId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_RolePower> Sys_RolePower
		{
			get
			{
				return this._Sys_RolePower;
			}
			set
			{
				this._Sys_RolePower.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = this;
		}
		
		private void detach_Sys_ButtonPower(Sys_ButtonPower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = null;
		}
		
		private void attach_Sys_RolePower(Sys_RolePower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = this;
		}
		
		private void detach_Sys_RolePower(Sys_RolePower entity)
		{
			this.SendPropertyChanging();
			entity.Sys_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_RolePower")]
	public partial class Sys_RolePower : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RolePowerId;
		
		private string _RoleId;
		
		private string _MenuId;
		
		private EntityRef<Sys_Role> _Sys_Role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRolePowerIdChanging(string value);
    partial void OnRolePowerIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    #endregion
		
		public Sys_RolePower()
		{
			this._Sys_Role = default(EntityRef<Sys_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolePowerId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RolePowerId
		{
			get
			{
				return this._RolePowerId;
			}
			set
			{
				if ((this._RolePowerId != value))
				{
					this.OnRolePowerIdChanging(value);
					this.SendPropertyChanging();
					this._RolePowerId = value;
					this.SendPropertyChanged("RolePowerId");
					this.OnRolePowerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Sys_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_RolePower_Sys_Role", Storage="_Sys_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Sys_Role Sys_Role
		{
			get
			{
				return this._Sys_Role.Entity;
			}
			set
			{
				Sys_Role previousValue = this._Sys_Role.Entity;
				if (((previousValue != value) 
							|| (this._Sys_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_Role.Entity = null;
						previousValue.Sys_RolePower.Remove(this);
					}
					this._Sys_Role.Entity = value;
					if ((value != null))
					{
						value.Sys_RolePower.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("Sys_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_TestRule")]
	public partial class Sys_TestRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TestRuleId;
		
		private int _Duration;
		
		private int _SValue;
		
		private int _MValue;
		
		private int _JValue;
		
		private int _SCount;
		
		private int _MCount;
		
		private int _JCount;
		
		private int _PassingScore;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTestRuleIdChanging(string value);
    partial void OnTestRuleIdChanged();
    partial void OnDurationChanging(int value);
    partial void OnDurationChanged();
    partial void OnSValueChanging(int value);
    partial void OnSValueChanged();
    partial void OnMValueChanging(int value);
    partial void OnMValueChanged();
    partial void OnJValueChanging(int value);
    partial void OnJValueChanged();
    partial void OnSCountChanging(int value);
    partial void OnSCountChanged();
    partial void OnMCountChanging(int value);
    partial void OnMCountChanged();
    partial void OnJCountChanging(int value);
    partial void OnJCountChanged();
    partial void OnPassingScoreChanging(int value);
    partial void OnPassingScoreChanged();
    #endregion
		
		public Sys_TestRule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRuleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TestRuleId
		{
			get
			{
				return this._TestRuleId;
			}
			set
			{
				if ((this._TestRuleId != value))
				{
					this.OnTestRuleIdChanging(value);
					this.SendPropertyChanging();
					this._TestRuleId = value;
					this.SendPropertyChanged("TestRuleId");
					this.OnTestRuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int NOT NULL")]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SValue", DbType="Int NOT NULL")]
		public int SValue
		{
			get
			{
				return this._SValue;
			}
			set
			{
				if ((this._SValue != value))
				{
					this.OnSValueChanging(value);
					this.SendPropertyChanging();
					this._SValue = value;
					this.SendPropertyChanged("SValue");
					this.OnSValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MValue", DbType="Int NOT NULL")]
		public int MValue
		{
			get
			{
				return this._MValue;
			}
			set
			{
				if ((this._MValue != value))
				{
					this.OnMValueChanging(value);
					this.SendPropertyChanging();
					this._MValue = value;
					this.SendPropertyChanged("MValue");
					this.OnMValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JValue", DbType="Int NOT NULL")]
		public int JValue
		{
			get
			{
				return this._JValue;
			}
			set
			{
				if ((this._JValue != value))
				{
					this.OnJValueChanging(value);
					this.SendPropertyChanging();
					this._JValue = value;
					this.SendPropertyChanged("JValue");
					this.OnJValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCount", DbType="Int NOT NULL")]
		public int SCount
		{
			get
			{
				return this._SCount;
			}
			set
			{
				if ((this._SCount != value))
				{
					this.OnSCountChanging(value);
					this.SendPropertyChanging();
					this._SCount = value;
					this.SendPropertyChanged("SCount");
					this.OnSCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCount", DbType="Int NOT NULL")]
		public int MCount
		{
			get
			{
				return this._MCount;
			}
			set
			{
				if ((this._MCount != value))
				{
					this.OnMCountChanging(value);
					this.SendPropertyChanging();
					this._MCount = value;
					this.SendPropertyChanged("MCount");
					this.OnMCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JCount", DbType="Int NOT NULL")]
		public int JCount
		{
			get
			{
				return this._JCount;
			}
			set
			{
				if ((this._JCount != value))
				{
					this.OnJCountChanging(value);
					this.SendPropertyChanging();
					this._JCount = value;
					this.SendPropertyChanged("JCount");
					this.OnJCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassingScore", DbType="Int NOT NULL")]
		public int PassingScore
		{
			get
			{
				return this._PassingScore;
			}
			set
			{
				if ((this._PassingScore != value))
				{
					this.OnPassingScoreChanging(value);
					this.SendPropertyChanging();
					this._PassingScore = value;
					this.SendPropertyChanged("PassingScore");
					this.OnPassingScoreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_User")]
	public partial class Sys_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _DepartId;
		
		private string _UnitId;
		
		private string _Account;
		
		private string _UserCode;
		
		private string _Password;
		
		private string _UserName;
		
		private string _RoleId;
		
		private System.Nullable<bool> _IsPost;
		
		private string _LoginProjectId;
		
		private string _Sex;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private string _Marriage;
		
		private string _Nation;
		
		private string _IdentityCard;
		
		private string _Email;
		
		private string _Telephone;
		
		private string _Education;
		
		private string _Hometown;
		
		private string _PositionId;
		
		private string _PhotoUrl;
		
		private string _Performance;
		
		private System.Nullable<int> _PageSize;
		
		private System.Nullable<bool> _IsOffice;
		
		private string _DeviceId;
		
		private string _SessionString;
		
		private System.Nullable<int> _RCount;
		
		private string _DataSources;
		
		private string _SignatureUrl;
		
		private string _OpenId;
		
		private string _LastMenuType;
		
		private System.Nullable<bool> _LastIsOffice;
		
		private string _LastProjectId;
		
		private EntitySet<ActionPlan_ActionPlanList> _ActionPlan_ActionPlanList;
		
		private EntitySet<ActionPlan_ManagerRule> _ActionPlan_ManagerRule;
		
		private EntitySet<Check_CheckControl> _Check_CheckControl;
		
		private EntitySet<Check_CheckControlApprove> _Check_CheckControlApprove;
		
		private EntitySet<Check_CheckEquipmentApprove> _Check_CheckEquipmentApprove;
		
		private EntitySet<Check_Design> _Check_Design;
		
		private EntitySet<Check_DesignApprove> _Check_DesignApprove;
		
		private EntitySet<Check_Draw> _Check_Draw;
		
		private EntitySet<Check_CheckEquipment> _Check_CheckEquipment;
		
		private EntitySet<Check_JointCheck> _Check_JointCheck;
		
		private EntitySet<Check_JointCheckApprove> _Check_JointCheckApprove;
		
		private EntitySet<Check_SpotCheckApprove> _Check_SpotCheckApprove;
		
		private EntitySet<Check_TechnicalContactListApprove> _Check_TechnicalContactListApprove;
		
		private EntitySet<EduTrain_AccidentCaseItem> _EduTrain_AccidentCaseItem;
		
		private EntitySet<Environmental_EIAReport> _Environmental_EIAReport;
		
		private EntitySet<Environmental_EnvironmentalEmergencyPlan> _Environmental_EnvironmentalEmergencyPlan;
		
		private EntitySet<Environmental_EnvironmentalMonitoring> _Environmental_EnvironmentalMonitoring;
		
		private EntitySet<Environmental_UnexpectedEnvironmental> _Environmental_UnexpectedEnvironmental;
		
		private EntitySet<Hazard_EnvironmentalRiskList> _Hazard_EnvironmentalRiskList;
		
		private EntitySet<Hazard_EnvironmentalRiskList> _User;
		
		private EntitySet<Hazard_HazardList> _Hazard_HazardList;
		
		private EntitySet<Hazard_HazardList> _Hazard_HazardList_Sys_User1;
		
		private EntitySet<InformationProject_ConstructionStandardIdentify> _InformationProject_ConstructionStandardIdentify;
		
		private EntitySet<Law_HSSEStandardsList> _Law_HSSEStandardsList;
		
		private EntitySet<Law_LawRegulationList> _Law_LawRegulationList;
		
		private EntitySet<Law_ManageRule> _Law_ManageRule;
		
		private EntitySet<Law_RulesRegulations> _Law_RulesRegulations;
		
		private EntitySet<OccupationHealth_HazardDetection> _OccupationHealth_HazardDetection;
		
		private EntitySet<OccupationHealth_OccupationalDiseaseAccident> _OccupationHealth_OccupationalDiseaseAccident;
		
		private EntitySet<OccupationHealth_PhysicalExamination> _OccupationHealth_PhysicalExamination;
		
		private EntitySet<HJGL_WeldingDaily> _HJGL_WeldingDaily;
		
		private EntitySet<Project_FileCabinet> _Project_FileCabinet;
		
		private EntitySet<Project_ProjectUser> _Project_ProjectUser;
		
		private EntitySet<ProjectData_FlowOperate> _ProjectData_FlowOperate;
		
		private EntitySet<QualityAudit_EquipmentPersonQuality> _QualityAudit_EquipmentPersonQuality;
		
		private EntitySet<QualityAudit_EquipmentPersonQuality> _QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId;
		
		private EntitySet<QualityAudit_PersonQuality> _QualityAudit_PersonQuality;
		
		private EntitySet<QualityAudit_PersonQuality> _QualityAudit_PersonQuality_Sys_User_AuditorId;
		
		private EntitySet<QualityAudit_SafePersonQuality> _QualityAudit_SafePersonQuality;
		
		private EntitySet<QualityAudit_SafePersonQuality> _QualityAudit_SafePersonQuality_Sys_User_AuditorId;
		
		private EntitySet<QualityAudit_SubUnitQualityAuditDetail> _QualityAudit_SubUnitQualityAuditDetail;
		
		private EntitySet<SitePerson_DayReport> _SitePerson_DayReport;
		
		private EntitySet<SitePerson_MonthReport> _SitePerson_MonthReport;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
		private EntitySet<Solution_ConstructSolution> _Solution_ConstructSolution;
		
		private EntitySet<Solution_CQMSConstructSolutionApprove> _Solution_CQMSConstructSolutionApprove;
		
		private EntitySet<Solution_ExpertArgument> _Solution_ExpertArgument;
		
		private EntitySet<Solution_LargerHazard> _Solution_LargerHazard;
		
		private EntitySet<Solution_SolutionTemplate> _Solution_SolutionTemplate;
		
		private EntitySet<Sys_FlowOperate> _Sys_FlowOperate;
		
		private EntitySet<Sys_Log> _Sys_Log;
		
		private EntityRef<Base_Depart> _Base_Depart;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<Sys_UserShowColumns> _Sys_UserShowColumns;
		
		private EntitySet<Technique_Emergency> _Technique_Emergency;
		
		private EntitySet<Technique_HazardList> _Technique_HazardList;
		
		private EntitySet<Technique_ProjectSolutionTemplete> _Technique_ProjectSolutionTemplete;
		
		private EntitySet<Technique_RectifyItem> _Technique_RectifyItem;
		
		private EntitySet<Technique_SpecialScheme> _Technique_SpecialScheme;
		
		private EntitySet<Training_Plan> _Training_Plan;
		
		private EntitySet<Training_TrainingItem> _Training_TrainingItem;
		
		private EntitySet<Training_TrainTestDBItem> _Training_TrainTestDBItem;
		
		private EntitySet<Unqualified_WorkContactApprove> _Unqualified_WorkContactApprove;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnDepartIdChanging(string value);
    partial void OnDepartIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnIsPostChanging(System.Nullable<bool> value);
    partial void OnIsPostChanged();
    partial void OnLoginProjectIdChanging(string value);
    partial void OnLoginProjectIdChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnBirthDayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDayChanged();
    partial void OnMarriageChanging(string value);
    partial void OnMarriageChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnIdentityCardChanging(string value);
    partial void OnIdentityCardChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEducationChanging(string value);
    partial void OnEducationChanged();
    partial void OnHometownChanging(string value);
    partial void OnHometownChanged();
    partial void OnPositionIdChanging(string value);
    partial void OnPositionIdChanged();
    partial void OnPhotoUrlChanging(string value);
    partial void OnPhotoUrlChanged();
    partial void OnPerformanceChanging(string value);
    partial void OnPerformanceChanged();
    partial void OnPageSizeChanging(System.Nullable<int> value);
    partial void OnPageSizeChanged();
    partial void OnIsOfficeChanging(System.Nullable<bool> value);
    partial void OnIsOfficeChanged();
    partial void OnDeviceIdChanging(string value);
    partial void OnDeviceIdChanged();
    partial void OnSessionStringChanging(string value);
    partial void OnSessionStringChanged();
    partial void OnRCountChanging(System.Nullable<int> value);
    partial void OnRCountChanged();
    partial void OnDataSourcesChanging(string value);
    partial void OnDataSourcesChanged();
    partial void OnSignatureUrlChanging(string value);
    partial void OnSignatureUrlChanged();
    partial void OnOpenIdChanging(string value);
    partial void OnOpenIdChanged();
    partial void OnLastMenuTypeChanging(string value);
    partial void OnLastMenuTypeChanged();
    partial void OnLastIsOfficeChanging(System.Nullable<bool> value);
    partial void OnLastIsOfficeChanged();
    partial void OnLastProjectIdChanging(string value);
    partial void OnLastProjectIdChanged();
    #endregion
		
		public Sys_User()
		{
			this._ActionPlan_ActionPlanList = new EntitySet<ActionPlan_ActionPlanList>(new Action<ActionPlan_ActionPlanList>(this.attach_ActionPlan_ActionPlanList), new Action<ActionPlan_ActionPlanList>(this.detach_ActionPlan_ActionPlanList));
			this._ActionPlan_ManagerRule = new EntitySet<ActionPlan_ManagerRule>(new Action<ActionPlan_ManagerRule>(this.attach_ActionPlan_ManagerRule), new Action<ActionPlan_ManagerRule>(this.detach_ActionPlan_ManagerRule));
			this._Check_CheckControl = new EntitySet<Check_CheckControl>(new Action<Check_CheckControl>(this.attach_Check_CheckControl), new Action<Check_CheckControl>(this.detach_Check_CheckControl));
			this._Check_CheckControlApprove = new EntitySet<Check_CheckControlApprove>(new Action<Check_CheckControlApprove>(this.attach_Check_CheckControlApprove), new Action<Check_CheckControlApprove>(this.detach_Check_CheckControlApprove));
			this._Check_CheckEquipmentApprove = new EntitySet<Check_CheckEquipmentApprove>(new Action<Check_CheckEquipmentApprove>(this.attach_Check_CheckEquipmentApprove), new Action<Check_CheckEquipmentApprove>(this.detach_Check_CheckEquipmentApprove));
			this._Check_Design = new EntitySet<Check_Design>(new Action<Check_Design>(this.attach_Check_Design), new Action<Check_Design>(this.detach_Check_Design));
			this._Check_DesignApprove = new EntitySet<Check_DesignApprove>(new Action<Check_DesignApprove>(this.attach_Check_DesignApprove), new Action<Check_DesignApprove>(this.detach_Check_DesignApprove));
			this._Check_Draw = new EntitySet<Check_Draw>(new Action<Check_Draw>(this.attach_Check_Draw), new Action<Check_Draw>(this.detach_Check_Draw));
			this._Check_CheckEquipment = new EntitySet<Check_CheckEquipment>(new Action<Check_CheckEquipment>(this.attach_Check_CheckEquipment), new Action<Check_CheckEquipment>(this.detach_Check_CheckEquipment));
			this._Check_JointCheck = new EntitySet<Check_JointCheck>(new Action<Check_JointCheck>(this.attach_Check_JointCheck), new Action<Check_JointCheck>(this.detach_Check_JointCheck));
			this._Check_JointCheckApprove = new EntitySet<Check_JointCheckApprove>(new Action<Check_JointCheckApprove>(this.attach_Check_JointCheckApprove), new Action<Check_JointCheckApprove>(this.detach_Check_JointCheckApprove));
			this._Check_SpotCheckApprove = new EntitySet<Check_SpotCheckApprove>(new Action<Check_SpotCheckApprove>(this.attach_Check_SpotCheckApprove), new Action<Check_SpotCheckApprove>(this.detach_Check_SpotCheckApprove));
			this._Check_TechnicalContactListApprove = new EntitySet<Check_TechnicalContactListApprove>(new Action<Check_TechnicalContactListApprove>(this.attach_Check_TechnicalContactListApprove), new Action<Check_TechnicalContactListApprove>(this.detach_Check_TechnicalContactListApprove));
			this._EduTrain_AccidentCaseItem = new EntitySet<EduTrain_AccidentCaseItem>(new Action<EduTrain_AccidentCaseItem>(this.attach_EduTrain_AccidentCaseItem), new Action<EduTrain_AccidentCaseItem>(this.detach_EduTrain_AccidentCaseItem));
			this._Environmental_EIAReport = new EntitySet<Environmental_EIAReport>(new Action<Environmental_EIAReport>(this.attach_Environmental_EIAReport), new Action<Environmental_EIAReport>(this.detach_Environmental_EIAReport));
			this._Environmental_EnvironmentalEmergencyPlan = new EntitySet<Environmental_EnvironmentalEmergencyPlan>(new Action<Environmental_EnvironmentalEmergencyPlan>(this.attach_Environmental_EnvironmentalEmergencyPlan), new Action<Environmental_EnvironmentalEmergencyPlan>(this.detach_Environmental_EnvironmentalEmergencyPlan));
			this._Environmental_EnvironmentalMonitoring = new EntitySet<Environmental_EnvironmentalMonitoring>(new Action<Environmental_EnvironmentalMonitoring>(this.attach_Environmental_EnvironmentalMonitoring), new Action<Environmental_EnvironmentalMonitoring>(this.detach_Environmental_EnvironmentalMonitoring));
			this._Environmental_UnexpectedEnvironmental = new EntitySet<Environmental_UnexpectedEnvironmental>(new Action<Environmental_UnexpectedEnvironmental>(this.attach_Environmental_UnexpectedEnvironmental), new Action<Environmental_UnexpectedEnvironmental>(this.detach_Environmental_UnexpectedEnvironmental));
			this._Hazard_EnvironmentalRiskList = new EntitySet<Hazard_EnvironmentalRiskList>(new Action<Hazard_EnvironmentalRiskList>(this.attach_Hazard_EnvironmentalRiskList), new Action<Hazard_EnvironmentalRiskList>(this.detach_Hazard_EnvironmentalRiskList));
			this._User = new EntitySet<Hazard_EnvironmentalRiskList>(new Action<Hazard_EnvironmentalRiskList>(this.attach_User), new Action<Hazard_EnvironmentalRiskList>(this.detach_User));
			this._Hazard_HazardList = new EntitySet<Hazard_HazardList>(new Action<Hazard_HazardList>(this.attach_Hazard_HazardList), new Action<Hazard_HazardList>(this.detach_Hazard_HazardList));
			this._Hazard_HazardList_Sys_User1 = new EntitySet<Hazard_HazardList>(new Action<Hazard_HazardList>(this.attach_Hazard_HazardList_Sys_User1), new Action<Hazard_HazardList>(this.detach_Hazard_HazardList_Sys_User1));
			this._InformationProject_ConstructionStandardIdentify = new EntitySet<InformationProject_ConstructionStandardIdentify>(new Action<InformationProject_ConstructionStandardIdentify>(this.attach_InformationProject_ConstructionStandardIdentify), new Action<InformationProject_ConstructionStandardIdentify>(this.detach_InformationProject_ConstructionStandardIdentify));
			this._Law_HSSEStandardsList = new EntitySet<Law_HSSEStandardsList>(new Action<Law_HSSEStandardsList>(this.attach_Law_HSSEStandardsList), new Action<Law_HSSEStandardsList>(this.detach_Law_HSSEStandardsList));
			this._Law_LawRegulationList = new EntitySet<Law_LawRegulationList>(new Action<Law_LawRegulationList>(this.attach_Law_LawRegulationList), new Action<Law_LawRegulationList>(this.detach_Law_LawRegulationList));
			this._Law_ManageRule = new EntitySet<Law_ManageRule>(new Action<Law_ManageRule>(this.attach_Law_ManageRule), new Action<Law_ManageRule>(this.detach_Law_ManageRule));
			this._Law_RulesRegulations = new EntitySet<Law_RulesRegulations>(new Action<Law_RulesRegulations>(this.attach_Law_RulesRegulations), new Action<Law_RulesRegulations>(this.detach_Law_RulesRegulations));
			this._OccupationHealth_HazardDetection = new EntitySet<OccupationHealth_HazardDetection>(new Action<OccupationHealth_HazardDetection>(this.attach_OccupationHealth_HazardDetection), new Action<OccupationHealth_HazardDetection>(this.detach_OccupationHealth_HazardDetection));
			this._OccupationHealth_OccupationalDiseaseAccident = new EntitySet<OccupationHealth_OccupationalDiseaseAccident>(new Action<OccupationHealth_OccupationalDiseaseAccident>(this.attach_OccupationHealth_OccupationalDiseaseAccident), new Action<OccupationHealth_OccupationalDiseaseAccident>(this.detach_OccupationHealth_OccupationalDiseaseAccident));
			this._OccupationHealth_PhysicalExamination = new EntitySet<OccupationHealth_PhysicalExamination>(new Action<OccupationHealth_PhysicalExamination>(this.attach_OccupationHealth_PhysicalExamination), new Action<OccupationHealth_PhysicalExamination>(this.detach_OccupationHealth_PhysicalExamination));
			this._HJGL_WeldingDaily = new EntitySet<HJGL_WeldingDaily>(new Action<HJGL_WeldingDaily>(this.attach_HJGL_WeldingDaily), new Action<HJGL_WeldingDaily>(this.detach_HJGL_WeldingDaily));
			this._Project_FileCabinet = new EntitySet<Project_FileCabinet>(new Action<Project_FileCabinet>(this.attach_Project_FileCabinet), new Action<Project_FileCabinet>(this.detach_Project_FileCabinet));
			this._Project_ProjectUser = new EntitySet<Project_ProjectUser>(new Action<Project_ProjectUser>(this.attach_Project_ProjectUser), new Action<Project_ProjectUser>(this.detach_Project_ProjectUser));
			this._ProjectData_FlowOperate = new EntitySet<ProjectData_FlowOperate>(new Action<ProjectData_FlowOperate>(this.attach_ProjectData_FlowOperate), new Action<ProjectData_FlowOperate>(this.detach_ProjectData_FlowOperate));
			this._QualityAudit_EquipmentPersonQuality = new EntitySet<QualityAudit_EquipmentPersonQuality>(new Action<QualityAudit_EquipmentPersonQuality>(this.attach_QualityAudit_EquipmentPersonQuality), new Action<QualityAudit_EquipmentPersonQuality>(this.detach_QualityAudit_EquipmentPersonQuality));
			this._QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId = new EntitySet<QualityAudit_EquipmentPersonQuality>(new Action<QualityAudit_EquipmentPersonQuality>(this.attach_QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId), new Action<QualityAudit_EquipmentPersonQuality>(this.detach_QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId));
			this._QualityAudit_PersonQuality = new EntitySet<QualityAudit_PersonQuality>(new Action<QualityAudit_PersonQuality>(this.attach_QualityAudit_PersonQuality), new Action<QualityAudit_PersonQuality>(this.detach_QualityAudit_PersonQuality));
			this._QualityAudit_PersonQuality_Sys_User_AuditorId = new EntitySet<QualityAudit_PersonQuality>(new Action<QualityAudit_PersonQuality>(this.attach_QualityAudit_PersonQuality_Sys_User_AuditorId), new Action<QualityAudit_PersonQuality>(this.detach_QualityAudit_PersonQuality_Sys_User_AuditorId));
			this._QualityAudit_SafePersonQuality = new EntitySet<QualityAudit_SafePersonQuality>(new Action<QualityAudit_SafePersonQuality>(this.attach_QualityAudit_SafePersonQuality), new Action<QualityAudit_SafePersonQuality>(this.detach_QualityAudit_SafePersonQuality));
			this._QualityAudit_SafePersonQuality_Sys_User_AuditorId = new EntitySet<QualityAudit_SafePersonQuality>(new Action<QualityAudit_SafePersonQuality>(this.attach_QualityAudit_SafePersonQuality_Sys_User_AuditorId), new Action<QualityAudit_SafePersonQuality>(this.detach_QualityAudit_SafePersonQuality_Sys_User_AuditorId));
			this._QualityAudit_SubUnitQualityAuditDetail = new EntitySet<QualityAudit_SubUnitQualityAuditDetail>(new Action<QualityAudit_SubUnitQualityAuditDetail>(this.attach_QualityAudit_SubUnitQualityAuditDetail), new Action<QualityAudit_SubUnitQualityAuditDetail>(this.detach_QualityAudit_SubUnitQualityAuditDetail));
			this._SitePerson_DayReport = new EntitySet<SitePerson_DayReport>(new Action<SitePerson_DayReport>(this.attach_SitePerson_DayReport), new Action<SitePerson_DayReport>(this.detach_SitePerson_DayReport));
			this._SitePerson_MonthReport = new EntitySet<SitePerson_MonthReport>(new Action<SitePerson_MonthReport>(this.attach_SitePerson_MonthReport), new Action<SitePerson_MonthReport>(this.detach_SitePerson_MonthReport));
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			this._Solution_ConstructSolution = new EntitySet<Solution_ConstructSolution>(new Action<Solution_ConstructSolution>(this.attach_Solution_ConstructSolution), new Action<Solution_ConstructSolution>(this.detach_Solution_ConstructSolution));
			this._Solution_CQMSConstructSolutionApprove = new EntitySet<Solution_CQMSConstructSolutionApprove>(new Action<Solution_CQMSConstructSolutionApprove>(this.attach_Solution_CQMSConstructSolutionApprove), new Action<Solution_CQMSConstructSolutionApprove>(this.detach_Solution_CQMSConstructSolutionApprove));
			this._Solution_ExpertArgument = new EntitySet<Solution_ExpertArgument>(new Action<Solution_ExpertArgument>(this.attach_Solution_ExpertArgument), new Action<Solution_ExpertArgument>(this.detach_Solution_ExpertArgument));
			this._Solution_LargerHazard = new EntitySet<Solution_LargerHazard>(new Action<Solution_LargerHazard>(this.attach_Solution_LargerHazard), new Action<Solution_LargerHazard>(this.detach_Solution_LargerHazard));
			this._Solution_SolutionTemplate = new EntitySet<Solution_SolutionTemplate>(new Action<Solution_SolutionTemplate>(this.attach_Solution_SolutionTemplate), new Action<Solution_SolutionTemplate>(this.detach_Solution_SolutionTemplate));
			this._Sys_FlowOperate = new EntitySet<Sys_FlowOperate>(new Action<Sys_FlowOperate>(this.attach_Sys_FlowOperate), new Action<Sys_FlowOperate>(this.detach_Sys_FlowOperate));
			this._Sys_Log = new EntitySet<Sys_Log>(new Action<Sys_Log>(this.attach_Sys_Log), new Action<Sys_Log>(this.detach_Sys_Log));
			this._Base_Depart = default(EntityRef<Base_Depart>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_UserShowColumns = new EntitySet<Sys_UserShowColumns>(new Action<Sys_UserShowColumns>(this.attach_Sys_UserShowColumns), new Action<Sys_UserShowColumns>(this.detach_Sys_UserShowColumns));
			this._Technique_Emergency = new EntitySet<Technique_Emergency>(new Action<Technique_Emergency>(this.attach_Technique_Emergency), new Action<Technique_Emergency>(this.detach_Technique_Emergency));
			this._Technique_HazardList = new EntitySet<Technique_HazardList>(new Action<Technique_HazardList>(this.attach_Technique_HazardList), new Action<Technique_HazardList>(this.detach_Technique_HazardList));
			this._Technique_ProjectSolutionTemplete = new EntitySet<Technique_ProjectSolutionTemplete>(new Action<Technique_ProjectSolutionTemplete>(this.attach_Technique_ProjectSolutionTemplete), new Action<Technique_ProjectSolutionTemplete>(this.detach_Technique_ProjectSolutionTemplete));
			this._Technique_RectifyItem = new EntitySet<Technique_RectifyItem>(new Action<Technique_RectifyItem>(this.attach_Technique_RectifyItem), new Action<Technique_RectifyItem>(this.detach_Technique_RectifyItem));
			this._Technique_SpecialScheme = new EntitySet<Technique_SpecialScheme>(new Action<Technique_SpecialScheme>(this.attach_Technique_SpecialScheme), new Action<Technique_SpecialScheme>(this.detach_Technique_SpecialScheme));
			this._Training_Plan = new EntitySet<Training_Plan>(new Action<Training_Plan>(this.attach_Training_Plan), new Action<Training_Plan>(this.detach_Training_Plan));
			this._Training_TrainingItem = new EntitySet<Training_TrainingItem>(new Action<Training_TrainingItem>(this.attach_Training_TrainingItem), new Action<Training_TrainingItem>(this.detach_Training_TrainingItem));
			this._Training_TrainTestDBItem = new EntitySet<Training_TrainTestDBItem>(new Action<Training_TrainTestDBItem>(this.attach_Training_TrainTestDBItem), new Action<Training_TrainTestDBItem>(this.detach_Training_TrainTestDBItem));
			this._Unqualified_WorkContactApprove = new EntitySet<Unqualified_WorkContactApprove>(new Action<Unqualified_WorkContactApprove>(this.attach_Unqualified_WorkContactApprove), new Action<Unqualified_WorkContactApprove>(this.detach_Unqualified_WorkContactApprove));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartId", DbType="NVarChar(50)")]
		public string DepartId
		{
			get
			{
				return this._DepartId;
			}
			set
			{
				if ((this._DepartId != value))
				{
					if (this._Base_Depart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartIdChanging(value);
					this.SendPropertyChanging();
					this._DepartId = value;
					this.SendPropertyChanged("DepartId");
					this.OnDepartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(50)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(20)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPost", DbType="Bit")]
		public System.Nullable<bool> IsPost
		{
			get
			{
				return this._IsPost;
			}
			set
			{
				if ((this._IsPost != value))
				{
					this.OnIsPostChanging(value);
					this.SendPropertyChanging();
					this._IsPost = value;
					this.SendPropertyChanged("IsPost");
					this.OnIsPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProjectId", DbType="NVarChar(50)")]
		public string LoginProjectId
		{
			get
			{
				return this._LoginProjectId;
			}
			set
			{
				if ((this._LoginProjectId != value))
				{
					this.OnLoginProjectIdChanging(value);
					this.SendPropertyChanging();
					this._LoginProjectId = value;
					this.SendPropertyChanged("LoginProjectId");
					this.OnLoginProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marriage", DbType="NVarChar(20)")]
		public string Marriage
		{
			get
			{
				return this._Marriage;
			}
			set
			{
				if ((this._Marriage != value))
				{
					this.OnMarriageChanging(value);
					this.SendPropertyChanging();
					this._Marriage = value;
					this.SendPropertyChanged("Marriage");
					this.OnMarriageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="NVarChar(20)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(50)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this.OnIdentityCardChanging(value);
					this.SendPropertyChanging();
					this._IdentityCard = value;
					this.SendPropertyChanged("IdentityCard");
					this.OnIdentityCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(20)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hometown", DbType="NVarChar(50)")]
		public string Hometown
		{
			get
			{
				return this._Hometown;
			}
			set
			{
				if ((this._Hometown != value))
				{
					this.OnHometownChanging(value);
					this.SendPropertyChanging();
					this._Hometown = value;
					this.SendPropertyChanged("Hometown");
					this.OnHometownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50)")]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this.OnPositionIdChanging(value);
					this.SendPropertyChanging();
					this._PositionId = value;
					this.SendPropertyChanged("PositionId");
					this.OnPositionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(500)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this.OnPhotoUrlChanging(value);
					this.SendPropertyChanging();
					this._PhotoUrl = value;
					this.SendPropertyChanged("PhotoUrl");
					this.OnPhotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Performance", DbType="NVarChar(800)")]
		public string Performance
		{
			get
			{
				return this._Performance;
			}
			set
			{
				if ((this._Performance != value))
				{
					this.OnPerformanceChanging(value);
					this.SendPropertyChanging();
					this._Performance = value;
					this.SendPropertyChanged("Performance");
					this.OnPerformanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSize", DbType="Int")]
		public System.Nullable<int> PageSize
		{
			get
			{
				return this._PageSize;
			}
			set
			{
				if ((this._PageSize != value))
				{
					this.OnPageSizeChanging(value);
					this.SendPropertyChanging();
					this._PageSize = value;
					this.SendPropertyChanged("PageSize");
					this.OnPageSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOffice", DbType="Bit")]
		public System.Nullable<bool> IsOffice
		{
			get
			{
				return this._IsOffice;
			}
			set
			{
				if ((this._IsOffice != value))
				{
					this.OnIsOfficeChanging(value);
					this.SendPropertyChanging();
					this._IsOffice = value;
					this.SendPropertyChanged("IsOffice");
					this.OnIsOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(100)")]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionString", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SessionString
		{
			get
			{
				return this._SessionString;
			}
			set
			{
				if ((this._SessionString != value))
				{
					this.OnSessionStringChanging(value);
					this.SendPropertyChanging();
					this._SessionString = value;
					this.SendPropertyChanged("SessionString");
					this.OnSessionStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCount", DbType="Int")]
		public System.Nullable<int> RCount
		{
			get
			{
				return this._RCount;
			}
			set
			{
				if ((this._RCount != value))
				{
					this.OnRCountChanging(value);
					this.SendPropertyChanging();
					this._RCount = value;
					this.SendPropertyChanged("RCount");
					this.OnRCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSources", DbType="NVarChar(50)")]
		public string DataSources
		{
			get
			{
				return this._DataSources;
			}
			set
			{
				if ((this._DataSources != value))
				{
					this.OnDataSourcesChanging(value);
					this.SendPropertyChanging();
					this._DataSources = value;
					this.SendPropertyChanged("DataSources");
					this.OnDataSourcesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureUrl", DbType="NVarChar(500)")]
		public string SignatureUrl
		{
			get
			{
				return this._SignatureUrl;
			}
			set
			{
				if ((this._SignatureUrl != value))
				{
					this.OnSignatureUrlChanging(value);
					this.SendPropertyChanging();
					this._SignatureUrl = value;
					this.SendPropertyChanged("SignatureUrl");
					this.OnSignatureUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenId", DbType="NVarChar(100)")]
		public string OpenId
		{
			get
			{
				return this._OpenId;
			}
			set
			{
				if ((this._OpenId != value))
				{
					this.OnOpenIdChanging(value);
					this.SendPropertyChanging();
					this._OpenId = value;
					this.SendPropertyChanged("OpenId");
					this.OnOpenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMenuType", DbType="NVarChar(50)")]
		public string LastMenuType
		{
			get
			{
				return this._LastMenuType;
			}
			set
			{
				if ((this._LastMenuType != value))
				{
					this.OnLastMenuTypeChanging(value);
					this.SendPropertyChanging();
					this._LastMenuType = value;
					this.SendPropertyChanged("LastMenuType");
					this.OnLastMenuTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIsOffice", DbType="Bit")]
		public System.Nullable<bool> LastIsOffice
		{
			get
			{
				return this._LastIsOffice;
			}
			set
			{
				if ((this._LastIsOffice != value))
				{
					this.OnLastIsOfficeChanging(value);
					this.SendPropertyChanging();
					this._LastIsOffice = value;
					this.SendPropertyChanged("LastIsOffice");
					this.OnLastIsOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastProjectId", DbType="NVarChar(50)")]
		public string LastProjectId
		{
			get
			{
				return this._LastProjectId;
			}
			set
			{
				if ((this._LastProjectId != value))
				{
					this.OnLastProjectIdChanging(value);
					this.SendPropertyChanging();
					this._LastProjectId = value;
					this.SendPropertyChanged("LastProjectId");
					this.OnLastProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ActionPlan_ActionPlanList_Sys_User", Storage="_ActionPlan_ActionPlanList", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<ActionPlan_ActionPlanList> ActionPlan_ActionPlanList
		{
			get
			{
				return this._ActionPlan_ActionPlanList;
			}
			set
			{
				this._ActionPlan_ActionPlanList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ActionPlan_ManagerRule_Sys_User", Storage="_ActionPlan_ManagerRule", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<ActionPlan_ManagerRule> ActionPlan_ManagerRule
		{
			get
			{
				return this._ActionPlan_ManagerRule;
			}
			set
			{
				this._ActionPlan_ManagerRule.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckControl_Sys_User", Storage="_Check_CheckControl", ThisKey="UserId", OtherKey="CheckMan", DeleteRule="NO ACTION")]
		public EntitySet<Check_CheckControl> Check_CheckControl
		{
			get
			{
				return this._Check_CheckControl;
			}
			set
			{
				this._Check_CheckControl.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckControlApprove_Sys_User", Storage="_Check_CheckControlApprove", ThisKey="UserId", OtherKey="ApproveMan", DeleteRule="NO ACTION")]
		public EntitySet<Check_CheckControlApprove> Check_CheckControlApprove
		{
			get
			{
				return this._Check_CheckControlApprove;
			}
			set
			{
				this._Check_CheckControlApprove.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_CheckEquipmentApprove_Sys_User", Storage="_Check_CheckEquipmentApprove", ThisKey="UserId", OtherKey="ApproveMan", DeleteRule="NO ACTION")]
		public EntitySet<Check_CheckEquipmentApprove> Check_CheckEquipmentApprove
		{
			get
			{
				return this._Check_CheckEquipmentApprove;
			}
			set
			{
				this._Check_CheckEquipmentApprove.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Design_Sys_User", Storage="_Check_Design", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Check_Design> Check_Design
		{
			get
			{
				return this._Check_Design;
			}
			set
			{
				this._Check_Design.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_DesignApprove_Sys_User", Storage="_Check_DesignApprove", ThisKey="UserId", OtherKey="ApproveMan", DeleteRule="NO ACTION")]
		public EntitySet<Check_DesignApprove> Check_DesignApprove
		{
			get
			{
				return this._Check_DesignApprove;
			}
			set
			{
				this._Check_DesignApprove.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Draw_Sys_User", Storage="_Check_Draw", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Check_Draw> Check_Draw
		{
			get
			{
				return this._Check_Draw;
			}
			set
			{
				this._Check_Draw.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_Equipment_Sys_User", Storage="_Check_CheckEquipment", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Check_CheckEquipment> Check_CheckEquipment
		{
			get
			{
				return this._Check_CheckEquipment;
			}
			set
			{
				this._Check_CheckEquipment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_JointCheck_Sys_User", Storage="_Check_JointCheck", ThisKey="UserId", OtherKey="CheckMan", DeleteRule="NO ACTION")]
		public EntitySet<Check_JointCheck> Check_JointCheck
		{
			get
			{
				return this._Check_JointCheck;
			}
			set
			{
				this._Check_JointCheck.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_JointCheckApprove_Sys_User", Storage="_Check_JointCheckApprove", ThisKey="UserId", OtherKey="ApproveMan", DeleteRule="NO ACTION")]
		public EntitySet<Check_JointCheckApprove> Check_JointCheckApprove
		{
			get
			{
				return this._Check_JointCheckApprove;
			}
			set
			{
				this._Check_JointCheckApprove.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_SpotCheckApprove_Sys_User", Storage="_Check_SpotCheckApprove", ThisKey="UserId", OtherKey="ApproveMan", DeleteRule="NO ACTION")]
		public EntitySet<Check_SpotCheckApprove> Check_SpotCheckApprove
		{
			get
			{
				return this._Check_SpotCheckApprove;
			}
			set
			{
				this._Check_SpotCheckApprove.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Check_TechnicalContactListApprove_Sys_User", Storage="_Check_TechnicalContactListApprove", ThisKey="UserId", OtherKey="ApproveMan", DeleteRule="NO ACTION")]
		public EntitySet<Check_TechnicalContactListApprove> Check_TechnicalContactListApprove
		{
			get
			{
				return this._Check_TechnicalContactListApprove;
			}
			set
			{
				this._Check_TechnicalContactListApprove.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_AccidentCaseItem_Sys_User1", Storage="_EduTrain_AccidentCaseItem", ThisKey="UserId", OtherKey="AuditMan", DeleteRule="NO ACTION")]
		public EntitySet<EduTrain_AccidentCaseItem> EduTrain_AccidentCaseItem
		{
			get
			{
				return this._EduTrain_AccidentCaseItem;
			}
			set
			{
				this._EduTrain_AccidentCaseItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Environmental_EIAReport_Sys_User", Storage="_Environmental_EIAReport", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Environmental_EIAReport> Environmental_EIAReport
		{
			get
			{
				return this._Environmental_EIAReport;
			}
			set
			{
				this._Environmental_EIAReport.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Environmental_EnvironmentalEmergencyPlan_Sys_User", Storage="_Environmental_EnvironmentalEmergencyPlan", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Environmental_EnvironmentalEmergencyPlan> Environmental_EnvironmentalEmergencyPlan
		{
			get
			{
				return this._Environmental_EnvironmentalEmergencyPlan;
			}
			set
			{
				this._Environmental_EnvironmentalEmergencyPlan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Environmental_EnvironmentalMonitoring_Sys_User", Storage="_Environmental_EnvironmentalMonitoring", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Environmental_EnvironmentalMonitoring> Environmental_EnvironmentalMonitoring
		{
			get
			{
				return this._Environmental_EnvironmentalMonitoring;
			}
			set
			{
				this._Environmental_EnvironmentalMonitoring.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Environmental_UnexpectedEnvironmental_Sys_User", Storage="_Environmental_UnexpectedEnvironmental", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Environmental_UnexpectedEnvironmental> Environmental_UnexpectedEnvironmental
		{
			get
			{
				return this._Environmental_UnexpectedEnvironmental;
			}
			set
			{
				this._Environmental_UnexpectedEnvironmental.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_EnvironmentalRiskList_Sys_User", Storage="_Hazard_EnvironmentalRiskList", ThisKey="UserId", OtherKey="ControllingPerson", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_EnvironmentalRiskList> Hazard_EnvironmentalRiskList
		{
			get
			{
				return this._Hazard_EnvironmentalRiskList;
			}
			set
			{
				this._Hazard_EnvironmentalRiskList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_EnvironmentalRiskList_Sys_User1", Storage="_User", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_EnvironmentalRiskList> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HazardList_Sys_User", Storage="_Hazard_HazardList", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HazardList> Hazard_HazardList
		{
			get
			{
				return this._Hazard_HazardList;
			}
			set
			{
				this._Hazard_HazardList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_HazardList_Sys_User1", Storage="_Hazard_HazardList_Sys_User1", ThisKey="UserId", OtherKey="ControllingPerson", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_HazardList> Hazard_HazardList_Sys_User1
		{
			get
			{
				return this._Hazard_HazardList_Sys_User1;
			}
			set
			{
				this._Hazard_HazardList_Sys_User1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_InformationProject_ConstructionStandardIdentify_Sys_User", Storage="_InformationProject_ConstructionStandardIdentify", ThisKey="UserId", OtherKey="IdentifyPerson", DeleteRule="NO ACTION")]
		public EntitySet<InformationProject_ConstructionStandardIdentify> InformationProject_ConstructionStandardIdentify
		{
			get
			{
				return this._InformationProject_ConstructionStandardIdentify;
			}
			set
			{
				this._InformationProject_ConstructionStandardIdentify.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_HSSEStandardsList_Sys_User2", Storage="_Law_HSSEStandardsList", ThisKey="UserId", OtherKey="AuditMan", DeleteRule="NO ACTION")]
		public EntitySet<Law_HSSEStandardsList> Law_HSSEStandardsList
		{
			get
			{
				return this._Law_HSSEStandardsList;
			}
			set
			{
				this._Law_HSSEStandardsList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_LawRegulationList_Sys_User1", Storage="_Law_LawRegulationList", ThisKey="UserId", OtherKey="AuditMan", DeleteRule="NO ACTION")]
		public EntitySet<Law_LawRegulationList> Law_LawRegulationList
		{
			get
			{
				return this._Law_LawRegulationList;
			}
			set
			{
				this._Law_LawRegulationList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_ManageRule_Sys_User1", Storage="_Law_ManageRule", ThisKey="UserId", OtherKey="AuditMan", DeleteRule="NO ACTION")]
		public EntitySet<Law_ManageRule> Law_ManageRule
		{
			get
			{
				return this._Law_ManageRule;
			}
			set
			{
				this._Law_ManageRule.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Law_RulesRegulations_Sys_User", Storage="_Law_RulesRegulations", ThisKey="UserId", OtherKey="AuditMan", DeleteRule="NO ACTION")]
		public EntitySet<Law_RulesRegulations> Law_RulesRegulations
		{
			get
			{
				return this._Law_RulesRegulations;
			}
			set
			{
				this._Law_RulesRegulations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OccupationHealth_HazardDetection_Sys_User", Storage="_OccupationHealth_HazardDetection", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<OccupationHealth_HazardDetection> OccupationHealth_HazardDetection
		{
			get
			{
				return this._OccupationHealth_HazardDetection;
			}
			set
			{
				this._OccupationHealth_HazardDetection.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OccupationHealth_OccupationalDiseaseAccident_Sys_User", Storage="_OccupationHealth_OccupationalDiseaseAccident", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<OccupationHealth_OccupationalDiseaseAccident> OccupationHealth_OccupationalDiseaseAccident
		{
			get
			{
				return this._OccupationHealth_OccupationalDiseaseAccident;
			}
			set
			{
				this._OccupationHealth_OccupationalDiseaseAccident.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OccupationHealth_PhysicalExamination_Sys_User", Storage="_OccupationHealth_PhysicalExamination", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<OccupationHealth_PhysicalExamination> OccupationHealth_PhysicalExamination
		{
			get
			{
				return this._OccupationHealth_PhysicalExamination;
			}
			set
			{
				this._OccupationHealth_PhysicalExamination.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Pipeline_WeldingDaily_Sys_User", Storage="_HJGL_WeldingDaily", ThisKey="UserId", OtherKey="Tabler", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldingDaily> HJGL_WeldingDaily
		{
			get
			{
				return this._HJGL_WeldingDaily;
			}
			set
			{
				this._HJGL_WeldingDaily.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_FileCabinet_Sys_User", Storage="_Project_FileCabinet", ThisKey="UserId", OtherKey="CreateManId", DeleteRule="NO ACTION")]
		public EntitySet<Project_FileCabinet> Project_FileCabinet
		{
			get
			{
				return this._Project_FileCabinet;
			}
			set
			{
				this._Project_FileCabinet.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Project_ProjectUser_Sys_User", Storage="_Project_ProjectUser", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Project_ProjectUser> Project_ProjectUser
		{
			get
			{
				return this._Project_ProjectUser;
			}
			set
			{
				this._Project_ProjectUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ProjectData_FlowOperate_Sys_User", Storage="_ProjectData_FlowOperate", ThisKey="UserId", OtherKey="OperaterId", DeleteRule="NO ACTION")]
		public EntitySet<ProjectData_FlowOperate> ProjectData_FlowOperate
		{
			get
			{
				return this._ProjectData_FlowOperate;
			}
			set
			{
				this._ProjectData_FlowOperate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_Sys_User", Storage="_QualityAudit_EquipmentPersonQuality", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_EquipmentPersonQuality> QualityAudit_EquipmentPersonQuality
		{
			get
			{
				return this._QualityAudit_EquipmentPersonQuality;
			}
			set
			{
				this._QualityAudit_EquipmentPersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId", Storage="_QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId", ThisKey="UserId", OtherKey="AuditorId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_EquipmentPersonQuality> QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId
		{
			get
			{
				return this._QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId;
			}
			set
			{
				this._QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Sys_User", Storage="_QualityAudit_PersonQuality", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQuality> QualityAudit_PersonQuality
		{
			get
			{
				return this._QualityAudit_PersonQuality;
			}
			set
			{
				this._QualityAudit_PersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_PersonQuality_Sys_User_AuditorId", Storage="_QualityAudit_PersonQuality_Sys_User_AuditorId", ThisKey="UserId", OtherKey="AuditorId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_PersonQuality> QualityAudit_PersonQuality_Sys_User_AuditorId
		{
			get
			{
				return this._QualityAudit_PersonQuality_Sys_User_AuditorId;
			}
			set
			{
				this._QualityAudit_PersonQuality_Sys_User_AuditorId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SafePersonQuality_Sys_User", Storage="_QualityAudit_SafePersonQuality", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_SafePersonQuality> QualityAudit_SafePersonQuality
		{
			get
			{
				return this._QualityAudit_SafePersonQuality;
			}
			set
			{
				this._QualityAudit_SafePersonQuality.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SafePersonQuality_Sys_User_AuditorId", Storage="_QualityAudit_SafePersonQuality_Sys_User_AuditorId", ThisKey="UserId", OtherKey="AuditorId", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_SafePersonQuality> QualityAudit_SafePersonQuality_Sys_User_AuditorId
		{
			get
			{
				return this._QualityAudit_SafePersonQuality_Sys_User_AuditorId;
			}
			set
			{
				this._QualityAudit_SafePersonQuality_Sys_User_AuditorId.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_QualityAudit_SubUnitQualityAuditDetail_Sys_User", Storage="_QualityAudit_SubUnitQualityAuditDetail", ThisKey="UserId", OtherKey="AuditMan", DeleteRule="NO ACTION")]
		public EntitySet<QualityAudit_SubUnitQualityAuditDetail> QualityAudit_SubUnitQualityAuditDetail
		{
			get
			{
				return this._QualityAudit_SubUnitQualityAuditDetail;
			}
			set
			{
				this._QualityAudit_SubUnitQualityAuditDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_DayReport_Sys_User", Storage="_SitePerson_DayReport", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_DayReport> SitePerson_DayReport
		{
			get
			{
				return this._SitePerson_DayReport;
			}
			set
			{
				this._SitePerson_DayReport.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_MonthReport_Sys_User", Storage="_SitePerson_MonthReport", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_MonthReport> SitePerson_MonthReport
		{
			get
			{
				return this._SitePerson_MonthReport;
			}
			set
			{
				this._SitePerson_MonthReport.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_Sys_User", Storage="_SitePerson_Person", ThisKey="UserId", OtherKey="AuditorId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_ConstructSolution_Sys_User", Storage="_Solution_ConstructSolution", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Solution_ConstructSolution> Solution_ConstructSolution
		{
			get
			{
				return this._Solution_ConstructSolution;
			}
			set
			{
				this._Solution_ConstructSolution.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_CQMSConstructSolutionApprove_Sys_User", Storage="_Solution_CQMSConstructSolutionApprove", ThisKey="UserId", OtherKey="ApproveMan", DeleteRule="NO ACTION")]
		public EntitySet<Solution_CQMSConstructSolutionApprove> Solution_CQMSConstructSolutionApprove
		{
			get
			{
				return this._Solution_CQMSConstructSolutionApprove;
			}
			set
			{
				this._Solution_CQMSConstructSolutionApprove.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_ExpertArgument_Sys_User", Storage="_Solution_ExpertArgument", ThisKey="UserId", OtherKey="RecardMan", DeleteRule="NO ACTION")]
		public EntitySet<Solution_ExpertArgument> Solution_ExpertArgument
		{
			get
			{
				return this._Solution_ExpertArgument;
			}
			set
			{
				this._Solution_ExpertArgument.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_LargerSolution_Sys_User", Storage="_Solution_LargerHazard", ThisKey="UserId", OtherKey="RecardMan", DeleteRule="NO ACTION")]
		public EntitySet<Solution_LargerHazard> Solution_LargerHazard
		{
			get
			{
				return this._Solution_LargerHazard;
			}
			set
			{
				this._Solution_LargerHazard.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Solution_SolutionTemplate_Sys_User", Storage="_Solution_SolutionTemplate", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Solution_SolutionTemplate> Solution_SolutionTemplate
		{
			get
			{
				return this._Solution_SolutionTemplate;
			}
			set
			{
				this._Solution_SolutionTemplate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_FlowOperate_Sys_User", Storage="_Sys_FlowOperate", ThisKey="UserId", OtherKey="OperaterId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_FlowOperate> Sys_FlowOperate
		{
			get
			{
				return this._Sys_FlowOperate;
			}
			set
			{
				this._Sys_FlowOperate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_Log_Sys_User", Storage="_Sys_Log", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_Log> Sys_Log
		{
			get
			{
				return this._Sys_Log;
			}
			set
			{
				this._Sys_Log.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Depart", Storage="_Base_Depart", ThisKey="DepartId", OtherKey="DepartId", IsForeignKey=true)]
		public Base_Depart Base_Depart
		{
			get
			{
				return this._Base_Depart.Entity;
			}
			set
			{
				Base_Depart previousValue = this._Base_Depart.Entity;
				if (((previousValue != value) 
							|| (this._Base_Depart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Depart.Entity = null;
						previousValue.Sys_User.Remove(this);
					}
					this._Base_Depart.Entity = value;
					if ((value != null))
					{
						value.Sys_User.Add(this);
						this._DepartId = value.DepartId;
					}
					else
					{
						this._DepartId = default(string);
					}
					this.SendPropertyChanged("Base_Depart");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_User_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Sys_User.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Sys_User.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserShowColumns_Sys_User", Storage="_Sys_UserShowColumns", ThisKey="UserId", OtherKey="UserId", DeleteRule="NO ACTION")]
		public EntitySet<Sys_UserShowColumns> Sys_UserShowColumns
		{
			get
			{
				return this._Sys_UserShowColumns;
			}
			set
			{
				this._Sys_UserShowColumns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_Emergency_Sys_User1", Storage="_Technique_Emergency", ThisKey="UserId", OtherKey="AuditMan", DeleteRule="NO ACTION")]
		public EntitySet<Technique_Emergency> Technique_Emergency
		{
			get
			{
				return this._Technique_Emergency;
			}
			set
			{
				this._Technique_Emergency.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_HazardList_Sys_User1", Storage="_Technique_HazardList", ThisKey="UserId", OtherKey="AuditMan", DeleteRule="NO ACTION")]
		public EntitySet<Technique_HazardList> Technique_HazardList
		{
			get
			{
				return this._Technique_HazardList;
			}
			set
			{
				this._Technique_HazardList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_ProjectSolutionTemplete_Sys_User", Storage="_Technique_ProjectSolutionTemplete", ThisKey="UserId", OtherKey="CompileMan", DeleteRule="NO ACTION")]
		public EntitySet<Technique_ProjectSolutionTemplete> Technique_ProjectSolutionTemplete
		{
			get
			{
				return this._Technique_ProjectSolutionTemplete;
			}
			set
			{
				this._Technique_ProjectSolutionTemplete.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_RectifyItem_Sys_User1", Storage="_Technique_RectifyItem", ThisKey="UserId", OtherKey="AuditMan", DeleteRule="NO ACTION")]
		public EntitySet<Technique_RectifyItem> Technique_RectifyItem
		{
			get
			{
				return this._Technique_RectifyItem;
			}
			set
			{
				this._Technique_RectifyItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_SpecialScheme_Sys_User1", Storage="_Technique_SpecialScheme", ThisKey="UserId", OtherKey="AuditMan", DeleteRule="NO ACTION")]
		public EntitySet<Technique_SpecialScheme> Technique_SpecialScheme
		{
			get
			{
				return this._Technique_SpecialScheme;
			}
			set
			{
				this._Technique_SpecialScheme.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Plan_Sys_User", Storage="_Training_Plan", ThisKey="UserId", OtherKey="DesignerId", DeleteRule="NO ACTION")]
		public EntitySet<Training_Plan> Training_Plan
		{
			get
			{
				return this._Training_Plan;
			}
			set
			{
				this._Training_Plan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainingItem_Sys_User", Storage="_Training_TrainingItem", ThisKey="UserId", OtherKey="AuditMan", DeleteRule="NO ACTION")]
		public EntitySet<Training_TrainingItem> Training_TrainingItem
		{
			get
			{
				return this._Training_TrainingItem;
			}
			set
			{
				this._Training_TrainingItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainTestDBItem_Sys_User1", Storage="_Training_TrainTestDBItem", ThisKey="UserId", OtherKey="AuditMan", DeleteRule="NO ACTION")]
		public EntitySet<Training_TrainTestDBItem> Training_TrainTestDBItem
		{
			get
			{
				return this._Training_TrainTestDBItem;
			}
			set
			{
				this._Training_TrainTestDBItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Unqualified_WorkContactApprove_Sys_User", Storage="_Unqualified_WorkContactApprove", ThisKey="UserId", OtherKey="ApproveMan", DeleteRule="NO ACTION")]
		public EntitySet<Unqualified_WorkContactApprove> Unqualified_WorkContactApprove
		{
			get
			{
				return this._Unqualified_WorkContactApprove;
			}
			set
			{
				this._Unqualified_WorkContactApprove.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActionPlan_ActionPlanList(ActionPlan_ActionPlanList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_ActionPlan_ActionPlanList(ActionPlan_ActionPlanList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_ActionPlan_ManagerRule(ActionPlan_ManagerRule entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_ActionPlan_ManagerRule(ActionPlan_ManagerRule entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Check_CheckControl(Check_CheckControl entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Check_CheckControl(Check_CheckControl entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Check_CheckControlApprove(Check_CheckControlApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Check_CheckControlApprove(Check_CheckControlApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Check_CheckEquipmentApprove(Check_CheckEquipmentApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Check_CheckEquipmentApprove(Check_CheckEquipmentApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Check_Design(Check_Design entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Check_Design(Check_Design entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Check_DesignApprove(Check_DesignApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Check_DesignApprove(Check_DesignApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Check_Draw(Check_Draw entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Check_Draw(Check_Draw entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Check_CheckEquipment(Check_CheckEquipment entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Check_CheckEquipment(Check_CheckEquipment entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Check_JointCheck(Check_JointCheck entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Check_JointCheck(Check_JointCheck entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Check_JointCheckApprove(Check_JointCheckApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Check_JointCheckApprove(Check_JointCheckApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Check_SpotCheckApprove(Check_SpotCheckApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Check_SpotCheckApprove(Check_SpotCheckApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Check_TechnicalContactListApprove(Check_TechnicalContactListApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Check_TechnicalContactListApprove(Check_TechnicalContactListApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_EduTrain_AccidentCaseItem(EduTrain_AccidentCaseItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_EduTrain_AccidentCaseItem(EduTrain_AccidentCaseItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Environmental_EIAReport(Environmental_EIAReport entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Environmental_EIAReport(Environmental_EIAReport entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Environmental_EnvironmentalEmergencyPlan(Environmental_EnvironmentalEmergencyPlan entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Environmental_EnvironmentalEmergencyPlan(Environmental_EnvironmentalEmergencyPlan entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Environmental_EnvironmentalMonitoring(Environmental_EnvironmentalMonitoring entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Environmental_EnvironmentalMonitoring(Environmental_EnvironmentalMonitoring entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Environmental_UnexpectedEnvironmental(Environmental_UnexpectedEnvironmental entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Environmental_UnexpectedEnvironmental(Environmental_UnexpectedEnvironmental entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Hazard_EnvironmentalRiskList(Hazard_EnvironmentalRiskList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Hazard_EnvironmentalRiskList(Hazard_EnvironmentalRiskList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_User(Hazard_EnvironmentalRiskList entity)
		{
			this.SendPropertyChanging();
			entity.CompileManSys_User = this;
		}
		
		private void detach_User(Hazard_EnvironmentalRiskList entity)
		{
			this.SendPropertyChanging();
			entity.CompileManSys_User = null;
		}
		
		private void attach_Hazard_HazardList(Hazard_HazardList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Hazard_HazardList(Hazard_HazardList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Hazard_HazardList_Sys_User1(Hazard_HazardList entity)
		{
			this.SendPropertyChanging();
			entity.ControllingPersonSys_User = this;
		}
		
		private void detach_Hazard_HazardList_Sys_User1(Hazard_HazardList entity)
		{
			this.SendPropertyChanging();
			entity.ControllingPersonSys_User = null;
		}
		
		private void attach_InformationProject_ConstructionStandardIdentify(InformationProject_ConstructionStandardIdentify entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_InformationProject_ConstructionStandardIdentify(InformationProject_ConstructionStandardIdentify entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Law_HSSEStandardsList(Law_HSSEStandardsList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Law_HSSEStandardsList(Law_HSSEStandardsList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Law_LawRegulationList(Law_LawRegulationList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Law_LawRegulationList(Law_LawRegulationList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Law_ManageRule(Law_ManageRule entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Law_ManageRule(Law_ManageRule entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Law_RulesRegulations(Law_RulesRegulations entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Law_RulesRegulations(Law_RulesRegulations entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_OccupationHealth_HazardDetection(OccupationHealth_HazardDetection entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_OccupationHealth_HazardDetection(OccupationHealth_HazardDetection entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_OccupationHealth_OccupationalDiseaseAccident(OccupationHealth_OccupationalDiseaseAccident entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_OccupationHealth_OccupationalDiseaseAccident(OccupationHealth_OccupationalDiseaseAccident entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_OccupationHealth_PhysicalExamination(OccupationHealth_PhysicalExamination entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_OccupationHealth_PhysicalExamination(OccupationHealth_PhysicalExamination entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Project_FileCabinet(Project_FileCabinet entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Project_FileCabinet(Project_FileCabinet entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Project_ProjectUser(Project_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Project_ProjectUser(Project_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_ProjectData_FlowOperate(ProjectData_FlowOperate entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_ProjectData_FlowOperate(ProjectData_FlowOperate entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_QualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_QualityAudit_EquipmentPersonQuality(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Auditor = this;
		}
		
		private void detach_QualityAudit_EquipmentPersonQuality_Sys_User_AuditorId(QualityAudit_EquipmentPersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Auditor = null;
		}
		
		private void attach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_QualityAudit_PersonQuality(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_QualityAudit_PersonQuality_Sys_User_AuditorId(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Auditor = this;
		}
		
		private void detach_QualityAudit_PersonQuality_Sys_User_AuditorId(QualityAudit_PersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Auditor = null;
		}
		
		private void attach_QualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_QualityAudit_SafePersonQuality(QualityAudit_SafePersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_QualityAudit_SafePersonQuality_Sys_User_AuditorId(QualityAudit_SafePersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Auditor = this;
		}
		
		private void detach_QualityAudit_SafePersonQuality_Sys_User_AuditorId(QualityAudit_SafePersonQuality entity)
		{
			this.SendPropertyChanging();
			entity.Auditor = null;
		}
		
		private void attach_QualityAudit_SubUnitQualityAuditDetail(QualityAudit_SubUnitQualityAuditDetail entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_QualityAudit_SubUnitQualityAuditDetail(QualityAudit_SubUnitQualityAuditDetail entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_SitePerson_DayReport(SitePerson_DayReport entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_SitePerson_DayReport(SitePerson_DayReport entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_SitePerson_MonthReport(SitePerson_MonthReport entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_SitePerson_MonthReport(SitePerson_MonthReport entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Solution_ConstructSolution(Solution_ConstructSolution entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Solution_ConstructSolution(Solution_ConstructSolution entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Solution_CQMSConstructSolutionApprove(Solution_CQMSConstructSolutionApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Solution_CQMSConstructSolutionApprove(Solution_CQMSConstructSolutionApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Solution_ExpertArgument(Solution_ExpertArgument entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Solution_ExpertArgument(Solution_ExpertArgument entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Solution_LargerHazard(Solution_LargerHazard entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Solution_LargerHazard(Solution_LargerHazard entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Solution_SolutionTemplate(Solution_SolutionTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Solution_SolutionTemplate(Solution_SolutionTemplate entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_FlowOperate(Sys_FlowOperate entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_FlowOperate(Sys_FlowOperate entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_Log(Sys_Log entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_Log(Sys_Log entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Sys_UserShowColumns(Sys_UserShowColumns entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Sys_UserShowColumns(Sys_UserShowColumns entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Technique_Emergency(Technique_Emergency entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Technique_Emergency(Technique_Emergency entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Technique_HazardList(Technique_HazardList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Technique_HazardList(Technique_HazardList entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Technique_ProjectSolutionTemplete(Technique_ProjectSolutionTemplete entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Technique_ProjectSolutionTemplete(Technique_ProjectSolutionTemplete entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Technique_RectifyItem(Technique_RectifyItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Technique_RectifyItem(Technique_RectifyItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Technique_SpecialScheme(Technique_SpecialScheme entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Technique_SpecialScheme(Technique_SpecialScheme entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Training_Plan(Training_Plan entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Training_Plan(Training_Plan entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Training_TrainingItem(Training_TrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Training_TrainingItem(Training_TrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Training_TrainTestDBItem(Training_TrainTestDBItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Training_TrainTestDBItem(Training_TrainTestDBItem entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
		
		private void attach_Unqualified_WorkContactApprove(Unqualified_WorkContactApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = this;
		}
		
		private void detach_Unqualified_WorkContactApprove(Unqualified_WorkContactApprove entity)
		{
			this.SendPropertyChanging();
			entity.Sys_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_UserRead")]
	public partial class Sys_UserRead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserReadId;
		
		private string _UserId;
		
		private string _MenuId;
		
		private string _ProjectId;
		
		private string _DataId;
		
		private System.Nullable<System.DateTime> _ReadTime;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserReadIdChanging(string value);
    partial void OnUserReadIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnMenuIdChanging(string value);
    partial void OnMenuIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnDataIdChanging(string value);
    partial void OnDataIdChanged();
    partial void OnReadTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReadTimeChanged();
    #endregion
		
		public Sys_UserRead()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserReadId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserReadId
		{
			get
			{
				return this._UserReadId;
			}
			set
			{
				if ((this._UserReadId != value))
				{
					this.OnUserReadIdChanging(value);
					this.SendPropertyChanging();
					this._UserReadId = value;
					this.SendPropertyChanged("UserReadId");
					this.OnUserReadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this.OnDataIdChanging(value);
					this.SendPropertyChanging();
					this._DataId = value;
					this.SendPropertyChanged("DataId");
					this.OnDataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReadTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReadTime
		{
			get
			{
				return this._ReadTime;
			}
			set
			{
				if ((this._ReadTime != value))
				{
					this.OnReadTimeChanging(value);
					this.SendPropertyChanging();
					this._ReadTime = value;
					this.SendPropertyChanged("ReadTime");
					this.OnReadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserRead_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Sys_UserRead.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Sys_UserRead.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_UserShowColumns")]
	public partial class Sys_UserShowColumns : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ShowColumnId;
		
		private string _UserId;
		
		private string _Columns;
		
		private string _ShowType;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShowColumnIdChanging(string value);
    partial void OnShowColumnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnColumnsChanging(string value);
    partial void OnColumnsChanged();
    partial void OnShowTypeChanging(string value);
    partial void OnShowTypeChanged();
    #endregion
		
		public Sys_UserShowColumns()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowColumnId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ShowColumnId
		{
			get
			{
				return this._ShowColumnId;
			}
			set
			{
				if ((this._ShowColumnId != value))
				{
					this.OnShowColumnIdChanging(value);
					this.SendPropertyChanging();
					this._ShowColumnId = value;
					this.SendPropertyChanged("ShowColumnId");
					this.OnShowColumnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Columns", DbType="NVarChar(500)")]
		public string Columns
		{
			get
			{
				return this._Columns;
			}
			set
			{
				if ((this._Columns != value))
				{
					this.OnColumnsChanging(value);
					this.SendPropertyChanging();
					this._Columns = value;
					this.SendPropertyChanged("Columns");
					this.OnColumnsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowType", DbType="NVarChar(50)")]
		public string ShowType
		{
			get
			{
				return this._ShowType;
			}
			set
			{
				if ((this._ShowType != value))
				{
					this.OnShowTypeChanging(value);
					this.SendPropertyChanging();
					this._ShowType = value;
					this.SendPropertyChanged("ShowType");
					this.OnShowTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Sys_UserShowColumns_Sys_User", Storage="_Sys_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Sys_UserShowColumns.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Sys_UserShowColumns.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_CheckItemDetail")]
	public partial class Technique_CheckItemDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CheckItemDetailId;
		
		private string _CheckItemSetId;
		
		private string _CheckContent;
		
		private System.Nullable<int> _SortIndex;
		
		private System.Nullable<bool> _IsBuiltIn;
		
		private EntityRef<Technique_CheckItemSet> _Technique_CheckItemSet;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckItemDetailIdChanging(string value);
    partial void OnCheckItemDetailIdChanged();
    partial void OnCheckItemSetIdChanging(string value);
    partial void OnCheckItemSetIdChanged();
    partial void OnCheckContentChanging(string value);
    partial void OnCheckContentChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnIsBuiltInChanging(System.Nullable<bool> value);
    partial void OnIsBuiltInChanged();
    #endregion
		
		public Technique_CheckItemDetail()
		{
			this._Technique_CheckItemSet = default(EntityRef<Technique_CheckItemSet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckItemDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CheckItemDetailId
		{
			get
			{
				return this._CheckItemDetailId;
			}
			set
			{
				if ((this._CheckItemDetailId != value))
				{
					this.OnCheckItemDetailIdChanging(value);
					this.SendPropertyChanging();
					this._CheckItemDetailId = value;
					this.SendPropertyChanged("CheckItemDetailId");
					this.OnCheckItemDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckItemSetId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CheckItemSetId
		{
			get
			{
				return this._CheckItemSetId;
			}
			set
			{
				if ((this._CheckItemSetId != value))
				{
					if (this._Technique_CheckItemSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckItemSetIdChanging(value);
					this.SendPropertyChanging();
					this._CheckItemSetId = value;
					this.SendPropertyChanged("CheckItemSetId");
					this.OnCheckItemSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckContent", DbType="NVarChar(300)")]
		public string CheckContent
		{
			get
			{
				return this._CheckContent;
			}
			set
			{
				if ((this._CheckContent != value))
				{
					this.OnCheckContentChanging(value);
					this.SendPropertyChanging();
					this._CheckContent = value;
					this.SendPropertyChanged("CheckContent");
					this.OnCheckContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuiltIn", DbType="Bit")]
		public System.Nullable<bool> IsBuiltIn
		{
			get
			{
				return this._IsBuiltIn;
			}
			set
			{
				if ((this._IsBuiltIn != value))
				{
					this.OnIsBuiltInChanging(value);
					this.SendPropertyChanging();
					this._IsBuiltIn = value;
					this.SendPropertyChanged("IsBuiltIn");
					this.OnIsBuiltInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_CheckItemDetail_Technique_CheckItemSet", Storage="_Technique_CheckItemSet", ThisKey="CheckItemSetId", OtherKey="CheckItemSetId", IsForeignKey=true)]
		public Technique_CheckItemSet Technique_CheckItemSet
		{
			get
			{
				return this._Technique_CheckItemSet.Entity;
			}
			set
			{
				Technique_CheckItemSet previousValue = this._Technique_CheckItemSet.Entity;
				if (((previousValue != value) 
							|| (this._Technique_CheckItemSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Technique_CheckItemSet.Entity = null;
						previousValue.Technique_CheckItemDetail.Remove(this);
					}
					this._Technique_CheckItemSet.Entity = value;
					if ((value != null))
					{
						value.Technique_CheckItemDetail.Add(this);
						this._CheckItemSetId = value.CheckItemSetId;
					}
					else
					{
						this._CheckItemSetId = default(string);
					}
					this.SendPropertyChanged("Technique_CheckItemSet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_CheckItemSet")]
	public partial class Technique_CheckItemSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CheckItemSetId;
		
		private string _CheckItemName;
		
		private string _SupCheckItem;
		
		private string _CheckType;
		
		private string _MapCode;
		
		private System.Nullable<bool> _IsEndLever;
		
		private System.Nullable<int> _SortIndex;
		
		private System.Nullable<bool> _IsBuiltIn;
		
		private EntitySet<Technique_CheckItemDetail> _Technique_CheckItemDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckItemSetIdChanging(string value);
    partial void OnCheckItemSetIdChanged();
    partial void OnCheckItemNameChanging(string value);
    partial void OnCheckItemNameChanged();
    partial void OnSupCheckItemChanging(string value);
    partial void OnSupCheckItemChanged();
    partial void OnCheckTypeChanging(string value);
    partial void OnCheckTypeChanged();
    partial void OnMapCodeChanging(string value);
    partial void OnMapCodeChanged();
    partial void OnIsEndLeverChanging(System.Nullable<bool> value);
    partial void OnIsEndLeverChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnIsBuiltInChanging(System.Nullable<bool> value);
    partial void OnIsBuiltInChanged();
    #endregion
		
		public Technique_CheckItemSet()
		{
			this._Technique_CheckItemDetail = new EntitySet<Technique_CheckItemDetail>(new Action<Technique_CheckItemDetail>(this.attach_Technique_CheckItemDetail), new Action<Technique_CheckItemDetail>(this.detach_Technique_CheckItemDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckItemSetId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CheckItemSetId
		{
			get
			{
				return this._CheckItemSetId;
			}
			set
			{
				if ((this._CheckItemSetId != value))
				{
					this.OnCheckItemSetIdChanging(value);
					this.SendPropertyChanging();
					this._CheckItemSetId = value;
					this.SendPropertyChanged("CheckItemSetId");
					this.OnCheckItemSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckItemName", DbType="NVarChar(200)")]
		public string CheckItemName
		{
			get
			{
				return this._CheckItemName;
			}
			set
			{
				if ((this._CheckItemName != value))
				{
					this.OnCheckItemNameChanging(value);
					this.SendPropertyChanging();
					this._CheckItemName = value;
					this.SendPropertyChanged("CheckItemName");
					this.OnCheckItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupCheckItem", DbType="NVarChar(50)")]
		public string SupCheckItem
		{
			get
			{
				return this._SupCheckItem;
			}
			set
			{
				if ((this._SupCheckItem != value))
				{
					this.OnSupCheckItemChanging(value);
					this.SendPropertyChanging();
					this._SupCheckItem = value;
					this.SendPropertyChanged("SupCheckItem");
					this.OnSupCheckItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckType", DbType="Char(1)")]
		public string CheckType
		{
			get
			{
				return this._CheckType;
			}
			set
			{
				if ((this._CheckType != value))
				{
					this.OnCheckTypeChanging(value);
					this.SendPropertyChanging();
					this._CheckType = value;
					this.SendPropertyChanged("CheckType");
					this.OnCheckTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapCode", DbType="Char(2)")]
		public string MapCode
		{
			get
			{
				return this._MapCode;
			}
			set
			{
				if ((this._MapCode != value))
				{
					this.OnMapCodeChanging(value);
					this.SendPropertyChanging();
					this._MapCode = value;
					this.SendPropertyChanged("MapCode");
					this.OnMapCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLever", DbType="Bit")]
		public System.Nullable<bool> IsEndLever
		{
			get
			{
				return this._IsEndLever;
			}
			set
			{
				if ((this._IsEndLever != value))
				{
					this.OnIsEndLeverChanging(value);
					this.SendPropertyChanging();
					this._IsEndLever = value;
					this.SendPropertyChanged("IsEndLever");
					this.OnIsEndLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuiltIn", DbType="Bit")]
		public System.Nullable<bool> IsBuiltIn
		{
			get
			{
				return this._IsBuiltIn;
			}
			set
			{
				if ((this._IsBuiltIn != value))
				{
					this.OnIsBuiltInChanging(value);
					this.SendPropertyChanging();
					this._IsBuiltIn = value;
					this.SendPropertyChanged("IsBuiltIn");
					this.OnIsBuiltInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_CheckItemDetail_Technique_CheckItemSet", Storage="_Technique_CheckItemDetail", ThisKey="CheckItemSetId", OtherKey="CheckItemSetId", DeleteRule="NO ACTION")]
		public EntitySet<Technique_CheckItemDetail> Technique_CheckItemDetail
		{
			get
			{
				return this._Technique_CheckItemDetail;
			}
			set
			{
				this._Technique_CheckItemDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Technique_CheckItemDetail(Technique_CheckItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.Technique_CheckItemSet = this;
		}
		
		private void detach_Technique_CheckItemDetail(Technique_CheckItemDetail entity)
		{
			this.SendPropertyChanging();
			entity.Technique_CheckItemSet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_Emergency")]
	public partial class Technique_Emergency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmergencyId;
		
		private string _EmergencyTypeId;
		
		private string _EmergencyCode;
		
		private string _EmergencyName;
		
		private string _Summary;
		
		private string _AttachUrl;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private EntityRef<Base_EmergencyType> _Base_EmergencyType;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmergencyIdChanging(string value);
    partial void OnEmergencyIdChanged();
    partial void OnEmergencyTypeIdChanging(string value);
    partial void OnEmergencyTypeIdChanged();
    partial void OnEmergencyCodeChanging(string value);
    partial void OnEmergencyCodeChanged();
    partial void OnEmergencyNameChanging(string value);
    partial void OnEmergencyNameChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    #endregion
		
		public Technique_Emergency()
		{
			this._Base_EmergencyType = default(EntityRef<Base_EmergencyType>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmergencyId
		{
			get
			{
				return this._EmergencyId;
			}
			set
			{
				if ((this._EmergencyId != value))
				{
					this.OnEmergencyIdChanging(value);
					this.SendPropertyChanging();
					this._EmergencyId = value;
					this.SendPropertyChanged("EmergencyId");
					this.OnEmergencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyTypeId", DbType="NVarChar(50)")]
		public string EmergencyTypeId
		{
			get
			{
				return this._EmergencyTypeId;
			}
			set
			{
				if ((this._EmergencyTypeId != value))
				{
					if (this._Base_EmergencyType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmergencyTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EmergencyTypeId = value;
					this.SendPropertyChanged("EmergencyTypeId");
					this.OnEmergencyTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyCode", DbType="NVarChar(50)")]
		public string EmergencyCode
		{
			get
			{
				return this._EmergencyCode;
			}
			set
			{
				if ((this._EmergencyCode != value))
				{
					this.OnEmergencyCodeChanging(value);
					this.SendPropertyChanging();
					this._EmergencyCode = value;
					this.SendPropertyChanged("EmergencyCode");
					this.OnEmergencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyName", DbType="NVarChar(100)")]
		public string EmergencyName
		{
			get
			{
				return this._EmergencyName;
			}
			set
			{
				if ((this._EmergencyName != value))
				{
					this.OnEmergencyNameChanging(value);
					this.SendPropertyChanging();
					this._EmergencyName = value;
					this.SendPropertyChanged("EmergencyName");
					this.OnEmergencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(2000)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_Emergency_Base_EmergencyType", Storage="_Base_EmergencyType", ThisKey="EmergencyTypeId", OtherKey="EmergencyTypeId", IsForeignKey=true)]
		public Base_EmergencyType Base_EmergencyType
		{
			get
			{
				return this._Base_EmergencyType.Entity;
			}
			set
			{
				Base_EmergencyType previousValue = this._Base_EmergencyType.Entity;
				if (((previousValue != value) 
							|| (this._Base_EmergencyType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_EmergencyType.Entity = null;
						previousValue.Technique_Emergency.Remove(this);
					}
					this._Base_EmergencyType.Entity = value;
					if ((value != null))
					{
						value.Technique_Emergency.Add(this);
						this._EmergencyTypeId = value.EmergencyTypeId;
					}
					else
					{
						this._EmergencyTypeId = default(string);
					}
					this.SendPropertyChanged("Base_EmergencyType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_Emergency_Sys_User1", Storage="_Sys_User", ThisKey="AuditMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Technique_Emergency.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Technique_Emergency.Add(this);
						this._AuditMan = value.UserId;
					}
					else
					{
						this._AuditMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_Environmental")]
	public partial class Technique_Environmental : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EnvironmentalId;
		
		private string _EType;
		
		private string _ActivePoint;
		
		private string _EnvironmentalFactors;
		
		private System.Nullable<int> _AValue;
		
		private System.Nullable<int> _BValue;
		
		private System.Nullable<int> _CValue;
		
		private System.Nullable<int> _DValue;
		
		private System.Nullable<int> _EValue;
		
		private System.Nullable<int> _ZValue;
		
		private string _SmallType;
		
		private System.Nullable<bool> _IsImportant;
		
		private string _Code;
		
		private System.Nullable<int> _FValue;
		
		private System.Nullable<int> _GValue;
		
		private string _ControlMeasures;
		
		private string _Remark;
		
		private System.Nullable<bool> _IsCompany;
		
		private EntitySet<Hazard_EnvironmentalRiskItem> _Hazard_EnvironmentalRiskItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEnvironmentalIdChanging(string value);
    partial void OnEnvironmentalIdChanged();
    partial void OnETypeChanging(string value);
    partial void OnETypeChanged();
    partial void OnActivePointChanging(string value);
    partial void OnActivePointChanged();
    partial void OnEnvironmentalFactorsChanging(string value);
    partial void OnEnvironmentalFactorsChanged();
    partial void OnAValueChanging(System.Nullable<int> value);
    partial void OnAValueChanged();
    partial void OnBValueChanging(System.Nullable<int> value);
    partial void OnBValueChanged();
    partial void OnCValueChanging(System.Nullable<int> value);
    partial void OnCValueChanged();
    partial void OnDValueChanging(System.Nullable<int> value);
    partial void OnDValueChanged();
    partial void OnEValueChanging(System.Nullable<int> value);
    partial void OnEValueChanged();
    partial void OnZValueChanging(System.Nullable<int> value);
    partial void OnZValueChanged();
    partial void OnSmallTypeChanging(string value);
    partial void OnSmallTypeChanged();
    partial void OnIsImportantChanging(System.Nullable<bool> value);
    partial void OnIsImportantChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnFValueChanging(System.Nullable<int> value);
    partial void OnFValueChanged();
    partial void OnGValueChanging(System.Nullable<int> value);
    partial void OnGValueChanged();
    partial void OnControlMeasuresChanging(string value);
    partial void OnControlMeasuresChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIsCompanyChanging(System.Nullable<bool> value);
    partial void OnIsCompanyChanged();
    #endregion
		
		public Technique_Environmental()
		{
			this._Hazard_EnvironmentalRiskItem = new EntitySet<Hazard_EnvironmentalRiskItem>(new Action<Hazard_EnvironmentalRiskItem>(this.attach_Hazard_EnvironmentalRiskItem), new Action<Hazard_EnvironmentalRiskItem>(this.detach_Hazard_EnvironmentalRiskItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EnvironmentalId
		{
			get
			{
				return this._EnvironmentalId;
			}
			set
			{
				if ((this._EnvironmentalId != value))
				{
					this.OnEnvironmentalIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentalId = value;
					this.SendPropertyChanged("EnvironmentalId");
					this.OnEnvironmentalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EType", DbType="NVarChar(10)")]
		public string EType
		{
			get
			{
				return this._EType;
			}
			set
			{
				if ((this._EType != value))
				{
					this.OnETypeChanging(value);
					this.SendPropertyChanging();
					this._EType = value;
					this.SendPropertyChanged("EType");
					this.OnETypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivePoint", DbType="NVarChar(500)")]
		public string ActivePoint
		{
			get
			{
				return this._ActivePoint;
			}
			set
			{
				if ((this._ActivePoint != value))
				{
					this.OnActivePointChanging(value);
					this.SendPropertyChanging();
					this._ActivePoint = value;
					this.SendPropertyChanged("ActivePoint");
					this.OnActivePointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalFactors", DbType="NVarChar(500)")]
		public string EnvironmentalFactors
		{
			get
			{
				return this._EnvironmentalFactors;
			}
			set
			{
				if ((this._EnvironmentalFactors != value))
				{
					this.OnEnvironmentalFactorsChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentalFactors = value;
					this.SendPropertyChanged("EnvironmentalFactors");
					this.OnEnvironmentalFactorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AValue", DbType="Int")]
		public System.Nullable<int> AValue
		{
			get
			{
				return this._AValue;
			}
			set
			{
				if ((this._AValue != value))
				{
					this.OnAValueChanging(value);
					this.SendPropertyChanging();
					this._AValue = value;
					this.SendPropertyChanged("AValue");
					this.OnAValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BValue", DbType="Int")]
		public System.Nullable<int> BValue
		{
			get
			{
				return this._BValue;
			}
			set
			{
				if ((this._BValue != value))
				{
					this.OnBValueChanging(value);
					this.SendPropertyChanging();
					this._BValue = value;
					this.SendPropertyChanged("BValue");
					this.OnBValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CValue", DbType="Int")]
		public System.Nullable<int> CValue
		{
			get
			{
				return this._CValue;
			}
			set
			{
				if ((this._CValue != value))
				{
					this.OnCValueChanging(value);
					this.SendPropertyChanging();
					this._CValue = value;
					this.SendPropertyChanged("CValue");
					this.OnCValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DValue", DbType="Int")]
		public System.Nullable<int> DValue
		{
			get
			{
				return this._DValue;
			}
			set
			{
				if ((this._DValue != value))
				{
					this.OnDValueChanging(value);
					this.SendPropertyChanging();
					this._DValue = value;
					this.SendPropertyChanged("DValue");
					this.OnDValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EValue", DbType="Int")]
		public System.Nullable<int> EValue
		{
			get
			{
				return this._EValue;
			}
			set
			{
				if ((this._EValue != value))
				{
					this.OnEValueChanging(value);
					this.SendPropertyChanging();
					this._EValue = value;
					this.SendPropertyChanged("EValue");
					this.OnEValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZValue", DbType="Int")]
		public System.Nullable<int> ZValue
		{
			get
			{
				return this._ZValue;
			}
			set
			{
				if ((this._ZValue != value))
				{
					this.OnZValueChanging(value);
					this.SendPropertyChanging();
					this._ZValue = value;
					this.SendPropertyChanged("ZValue");
					this.OnZValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallType", DbType="Char(1)")]
		public string SmallType
		{
			get
			{
				return this._SmallType;
			}
			set
			{
				if ((this._SmallType != value))
				{
					this.OnSmallTypeChanging(value);
					this.SendPropertyChanging();
					this._SmallType = value;
					this.SendPropertyChanged("SmallType");
					this.OnSmallTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsImportant", DbType="Bit")]
		public System.Nullable<bool> IsImportant
		{
			get
			{
				return this._IsImportant;
			}
			set
			{
				if ((this._IsImportant != value))
				{
					this.OnIsImportantChanging(value);
					this.SendPropertyChanging();
					this._IsImportant = value;
					this.SendPropertyChanged("IsImportant");
					this.OnIsImportantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FValue", DbType="Int")]
		public System.Nullable<int> FValue
		{
			get
			{
				return this._FValue;
			}
			set
			{
				if ((this._FValue != value))
				{
					this.OnFValueChanging(value);
					this.SendPropertyChanging();
					this._FValue = value;
					this.SendPropertyChanged("FValue");
					this.OnFValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GValue", DbType="Int")]
		public System.Nullable<int> GValue
		{
			get
			{
				return this._GValue;
			}
			set
			{
				if ((this._GValue != value))
				{
					this.OnGValueChanging(value);
					this.SendPropertyChanging();
					this._GValue = value;
					this.SendPropertyChanged("GValue");
					this.OnGValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(800)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this.OnControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ControlMeasures = value;
					this.SendPropertyChanged("ControlMeasures");
					this.OnControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(800)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompany", DbType="Bit")]
		public System.Nullable<bool> IsCompany
		{
			get
			{
				return this._IsCompany;
			}
			set
			{
				if ((this._IsCompany != value))
				{
					this.OnIsCompanyChanging(value);
					this.SendPropertyChanging();
					this._IsCompany = value;
					this.SendPropertyChanged("IsCompany");
					this.OnIsCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Hazard_EnvironmentalRiskItem_Technique_Environmental", Storage="_Hazard_EnvironmentalRiskItem", ThisKey="EnvironmentalId", OtherKey="EnvironmentalId", DeleteRule="NO ACTION")]
		public EntitySet<Hazard_EnvironmentalRiskItem> Hazard_EnvironmentalRiskItem
		{
			get
			{
				return this._Hazard_EnvironmentalRiskItem;
			}
			set
			{
				this._Hazard_EnvironmentalRiskItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hazard_EnvironmentalRiskItem(Hazard_EnvironmentalRiskItem entity)
		{
			this.SendPropertyChanging();
			entity.Technique_Environmental = this;
		}
		
		private void detach_Hazard_EnvironmentalRiskItem(Hazard_EnvironmentalRiskItem entity)
		{
			this.SendPropertyChanging();
			entity.Technique_Environmental = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_HazardList")]
	public partial class Technique_HazardList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HazardId;
		
		private string _HazardListTypeId;
		
		private string _HazardCode;
		
		private string _HazardItems;
		
		private string _DefectsType;
		
		private string _MayLeadAccidents;
		
		private string _HelperMethod;
		
		private System.Nullable<decimal> _HazardJudge_L;
		
		private System.Nullable<decimal> _HazardJudge_E;
		
		private System.Nullable<decimal> _HazardJudge_C;
		
		private System.Nullable<decimal> _HazardJudge_D;
		
		private string _HazardLevel;
		
		private string _ControlMeasures;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private string _UpState;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Technique_HazardListType> _Technique_HazardListType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHazardIdChanging(string value);
    partial void OnHazardIdChanged();
    partial void OnHazardListTypeIdChanging(string value);
    partial void OnHazardListTypeIdChanged();
    partial void OnHazardCodeChanging(string value);
    partial void OnHazardCodeChanged();
    partial void OnHazardItemsChanging(string value);
    partial void OnHazardItemsChanged();
    partial void OnDefectsTypeChanging(string value);
    partial void OnDefectsTypeChanged();
    partial void OnMayLeadAccidentsChanging(string value);
    partial void OnMayLeadAccidentsChanged();
    partial void OnHelperMethodChanging(string value);
    partial void OnHelperMethodChanged();
    partial void OnHazardJudge_LChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_LChanged();
    partial void OnHazardJudge_EChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_EChanged();
    partial void OnHazardJudge_CChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_CChanged();
    partial void OnHazardJudge_DChanging(System.Nullable<decimal> value);
    partial void OnHazardJudge_DChanged();
    partial void OnHazardLevelChanging(string value);
    partial void OnHazardLevelChanged();
    partial void OnControlMeasuresChanging(string value);
    partial void OnControlMeasuresChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    #endregion
		
		public Technique_HazardList()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Technique_HazardListType = default(EntityRef<Technique_HazardListType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HazardId
		{
			get
			{
				return this._HazardId;
			}
			set
			{
				if ((this._HazardId != value))
				{
					this.OnHazardIdChanging(value);
					this.SendPropertyChanging();
					this._HazardId = value;
					this.SendPropertyChanged("HazardId");
					this.OnHazardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardListTypeId", DbType="NVarChar(50)")]
		public string HazardListTypeId
		{
			get
			{
				return this._HazardListTypeId;
			}
			set
			{
				if ((this._HazardListTypeId != value))
				{
					if (this._Technique_HazardListType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHazardListTypeIdChanging(value);
					this.SendPropertyChanging();
					this._HazardListTypeId = value;
					this.SendPropertyChanged("HazardListTypeId");
					this.OnHazardListTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HazardCode
		{
			get
			{
				return this._HazardCode;
			}
			set
			{
				if ((this._HazardCode != value))
				{
					this.OnHazardCodeChanging(value);
					this.SendPropertyChanging();
					this._HazardCode = value;
					this.SendPropertyChanged("HazardCode");
					this.OnHazardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardItems", DbType="NVarChar(150)")]
		public string HazardItems
		{
			get
			{
				return this._HazardItems;
			}
			set
			{
				if ((this._HazardItems != value))
				{
					this.OnHazardItemsChanging(value);
					this.SendPropertyChanging();
					this._HazardItems = value;
					this.SendPropertyChanged("HazardItems");
					this.OnHazardItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefectsType", DbType="NVarChar(50)")]
		public string DefectsType
		{
			get
			{
				return this._DefectsType;
			}
			set
			{
				if ((this._DefectsType != value))
				{
					this.OnDefectsTypeChanging(value);
					this.SendPropertyChanging();
					this._DefectsType = value;
					this.SendPropertyChanged("DefectsType");
					this.OnDefectsTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MayLeadAccidents", DbType="NVarChar(100)")]
		public string MayLeadAccidents
		{
			get
			{
				return this._MayLeadAccidents;
			}
			set
			{
				if ((this._MayLeadAccidents != value))
				{
					this.OnMayLeadAccidentsChanging(value);
					this.SendPropertyChanging();
					this._MayLeadAccidents = value;
					this.SendPropertyChanged("MayLeadAccidents");
					this.OnMayLeadAccidentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelperMethod", DbType="NVarChar(10)")]
		public string HelperMethod
		{
			get
			{
				return this._HelperMethod;
			}
			set
			{
				if ((this._HelperMethod != value))
				{
					this.OnHelperMethodChanging(value);
					this.SendPropertyChanging();
					this._HelperMethod = value;
					this.SendPropertyChanged("HelperMethod");
					this.OnHelperMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_L", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_L
		{
			get
			{
				return this._HazardJudge_L;
			}
			set
			{
				if ((this._HazardJudge_L != value))
				{
					this.OnHazardJudge_LChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_L = value;
					this.SendPropertyChanged("HazardJudge_L");
					this.OnHazardJudge_LChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_E", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_E
		{
			get
			{
				return this._HazardJudge_E;
			}
			set
			{
				if ((this._HazardJudge_E != value))
				{
					this.OnHazardJudge_EChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_E = value;
					this.SendPropertyChanged("HazardJudge_E");
					this.OnHazardJudge_EChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_C", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_C
		{
			get
			{
				return this._HazardJudge_C;
			}
			set
			{
				if ((this._HazardJudge_C != value))
				{
					this.OnHazardJudge_CChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_C = value;
					this.SendPropertyChanged("HazardJudge_C");
					this.OnHazardJudge_CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardJudge_D", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> HazardJudge_D
		{
			get
			{
				return this._HazardJudge_D;
			}
			set
			{
				if ((this._HazardJudge_D != value))
				{
					this.OnHazardJudge_DChanging(value);
					this.SendPropertyChanging();
					this._HazardJudge_D = value;
					this.SendPropertyChanged("HazardJudge_D");
					this.OnHazardJudge_DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardLevel", DbType="Char(1)")]
		public string HazardLevel
		{
			get
			{
				return this._HazardLevel;
			}
			set
			{
				if ((this._HazardLevel != value))
				{
					this.OnHazardLevelChanging(value);
					this.SendPropertyChanging();
					this._HazardLevel = value;
					this.SendPropertyChanged("HazardLevel");
					this.OnHazardLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(500)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this.OnControlMeasuresChanging(value);
					this.SendPropertyChanging();
					this._ControlMeasures = value;
					this.SendPropertyChanged("ControlMeasures");
					this.OnControlMeasuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_HazardList_Sys_User1", Storage="_Sys_User", ThisKey="AuditMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Technique_HazardList.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Technique_HazardList.Add(this);
						this._AuditMan = value.UserId;
					}
					else
					{
						this._AuditMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_HazardList_Technique_HazardListType", Storage="_Technique_HazardListType", ThisKey="HazardListTypeId", OtherKey="HazardListTypeId", IsForeignKey=true)]
		public Technique_HazardListType Technique_HazardListType
		{
			get
			{
				return this._Technique_HazardListType.Entity;
			}
			set
			{
				Technique_HazardListType previousValue = this._Technique_HazardListType.Entity;
				if (((previousValue != value) 
							|| (this._Technique_HazardListType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Technique_HazardListType.Entity = null;
						previousValue.Technique_HazardList.Remove(this);
					}
					this._Technique_HazardListType.Entity = value;
					if ((value != null))
					{
						value.Technique_HazardList.Add(this);
						this._HazardListTypeId = value.HazardListTypeId;
					}
					else
					{
						this._HazardListTypeId = default(string);
					}
					this.SendPropertyChanged("Technique_HazardListType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_HazardListType")]
	public partial class Technique_HazardListType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HazardListTypeId;
		
		private string _HazardListTypeCode;
		
		private string _HazardListTypeName;
		
		private string _SupHazardListTypeId;
		
		private System.Nullable<bool> _IsEndLevel;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private string _WorkStage;
		
		private System.Nullable<bool> _IsCompany;
		
		private EntitySet<Technique_HazardList> _Technique_HazardList;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHazardListTypeIdChanging(string value);
    partial void OnHazardListTypeIdChanged();
    partial void OnHazardListTypeCodeChanging(string value);
    partial void OnHazardListTypeCodeChanged();
    partial void OnHazardListTypeNameChanging(string value);
    partial void OnHazardListTypeNameChanged();
    partial void OnSupHazardListTypeIdChanging(string value);
    partial void OnSupHazardListTypeIdChanged();
    partial void OnIsEndLevelChanging(System.Nullable<bool> value);
    partial void OnIsEndLevelChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    partial void OnWorkStageChanging(string value);
    partial void OnWorkStageChanged();
    partial void OnIsCompanyChanging(System.Nullable<bool> value);
    partial void OnIsCompanyChanged();
    #endregion
		
		public Technique_HazardListType()
		{
			this._Technique_HazardList = new EntitySet<Technique_HazardList>(new Action<Technique_HazardList>(this.attach_Technique_HazardList), new Action<Technique_HazardList>(this.detach_Technique_HazardList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardListTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HazardListTypeId
		{
			get
			{
				return this._HazardListTypeId;
			}
			set
			{
				if ((this._HazardListTypeId != value))
				{
					this.OnHazardListTypeIdChanging(value);
					this.SendPropertyChanging();
					this._HazardListTypeId = value;
					this.SendPropertyChanged("HazardListTypeId");
					this.OnHazardListTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardListTypeCode", DbType="NVarChar(50)")]
		public string HazardListTypeCode
		{
			get
			{
				return this._HazardListTypeCode;
			}
			set
			{
				if ((this._HazardListTypeCode != value))
				{
					this.OnHazardListTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._HazardListTypeCode = value;
					this.SendPropertyChanged("HazardListTypeCode");
					this.OnHazardListTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardListTypeName", DbType="NVarChar(500)")]
		public string HazardListTypeName
		{
			get
			{
				return this._HazardListTypeName;
			}
			set
			{
				if ((this._HazardListTypeName != value))
				{
					this.OnHazardListTypeNameChanging(value);
					this.SendPropertyChanging();
					this._HazardListTypeName = value;
					this.SendPropertyChanged("HazardListTypeName");
					this.OnHazardListTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupHazardListTypeId", DbType="NVarChar(50)")]
		public string SupHazardListTypeId
		{
			get
			{
				return this._SupHazardListTypeId;
			}
			set
			{
				if ((this._SupHazardListTypeId != value))
				{
					this.OnSupHazardListTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SupHazardListTypeId = value;
					this.SendPropertyChanged("SupHazardListTypeId");
					this.OnSupHazardListTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLevel", DbType="Bit")]
		public System.Nullable<bool> IsEndLevel
		{
			get
			{
				return this._IsEndLevel;
			}
			set
			{
				if ((this._IsEndLevel != value))
				{
					this.OnIsEndLevelChanging(value);
					this.SendPropertyChanging();
					this._IsEndLevel = value;
					this.SendPropertyChanged("IsEndLevel");
					this.OnIsEndLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkStage", DbType="NVarChar(2000)")]
		public string WorkStage
		{
			get
			{
				return this._WorkStage;
			}
			set
			{
				if ((this._WorkStage != value))
				{
					this.OnWorkStageChanging(value);
					this.SendPropertyChanging();
					this._WorkStage = value;
					this.SendPropertyChanged("WorkStage");
					this.OnWorkStageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompany", DbType="Bit")]
		public System.Nullable<bool> IsCompany
		{
			get
			{
				return this._IsCompany;
			}
			set
			{
				if ((this._IsCompany != value))
				{
					this.OnIsCompanyChanging(value);
					this.SendPropertyChanging();
					this._IsCompany = value;
					this.SendPropertyChanged("IsCompany");
					this.OnIsCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_HazardList_Technique_HazardListType", Storage="_Technique_HazardList", ThisKey="HazardListTypeId", OtherKey="HazardListTypeId", DeleteRule="NO ACTION")]
		public EntitySet<Technique_HazardList> Technique_HazardList
		{
			get
			{
				return this._Technique_HazardList;
			}
			set
			{
				this._Technique_HazardList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Technique_HazardList(Technique_HazardList entity)
		{
			this.SendPropertyChanging();
			entity.Technique_HazardListType = this;
		}
		
		private void detach_Technique_HazardList(Technique_HazardList entity)
		{
			this.SendPropertyChanging();
			entity.Technique_HazardListType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_ProjectSolutionTemplete")]
	public partial class Technique_ProjectSolutionTemplete : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TempleteId;
		
		private string _TempleteCode;
		
		private string _TempleteName;
		
		private string _TempleteType;
		
		private string _FileContents;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTempleteIdChanging(string value);
    partial void OnTempleteIdChanged();
    partial void OnTempleteCodeChanging(string value);
    partial void OnTempleteCodeChanged();
    partial void OnTempleteNameChanging(string value);
    partial void OnTempleteNameChanged();
    partial void OnTempleteTypeChanging(string value);
    partial void OnTempleteTypeChanged();
    partial void OnFileContentsChanging(string value);
    partial void OnFileContentsChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    #endregion
		
		public Technique_ProjectSolutionTemplete()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempleteId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TempleteId
		{
			get
			{
				return this._TempleteId;
			}
			set
			{
				if ((this._TempleteId != value))
				{
					this.OnTempleteIdChanging(value);
					this.SendPropertyChanging();
					this._TempleteId = value;
					this.SendPropertyChanged("TempleteId");
					this.OnTempleteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempleteCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TempleteCode
		{
			get
			{
				return this._TempleteCode;
			}
			set
			{
				if ((this._TempleteCode != value))
				{
					this.OnTempleteCodeChanging(value);
					this.SendPropertyChanging();
					this._TempleteCode = value;
					this.SendPropertyChanged("TempleteCode");
					this.OnTempleteCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempleteName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TempleteName
		{
			get
			{
				return this._TempleteName;
			}
			set
			{
				if ((this._TempleteName != value))
				{
					this.OnTempleteNameChanging(value);
					this.SendPropertyChanging();
					this._TempleteName = value;
					this.SendPropertyChanged("TempleteName");
					this.OnTempleteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempleteType", DbType="NVarChar(50)")]
		public string TempleteType
		{
			get
			{
				return this._TempleteType;
			}
			set
			{
				if ((this._TempleteType != value))
				{
					this.OnTempleteTypeChanging(value);
					this.SendPropertyChanging();
					this._TempleteType = value;
					this.SendPropertyChanged("TempleteType");
					this.OnTempleteTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContents", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string FileContents
		{
			get
			{
				return this._FileContents;
			}
			set
			{
				if ((this._FileContents != value))
				{
					this.OnFileContentsChanging(value);
					this.SendPropertyChanging();
					this._FileContents = value;
					this.SendPropertyChanged("FileContents");
					this.OnFileContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_ProjectSolutionTemplete_Sys_User", Storage="_Sys_User", ThisKey="CompileMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Technique_ProjectSolutionTemplete.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Technique_ProjectSolutionTemplete.Add(this);
						this._CompileMan = value.UserId;
					}
					else
					{
						this._CompileMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_Rectify")]
	public partial class Technique_Rectify : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RectifyId;
		
		private string _RectifyCode;
		
		private string _RectifyName;
		
		private string _SupRectifyId;
		
		private System.Nullable<bool> _IsEndLever;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private EntitySet<Technique_RectifyItem> _Technique_RectifyItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRectifyIdChanging(string value);
    partial void OnRectifyIdChanged();
    partial void OnRectifyCodeChanging(string value);
    partial void OnRectifyCodeChanged();
    partial void OnRectifyNameChanging(string value);
    partial void OnRectifyNameChanged();
    partial void OnSupRectifyIdChanging(string value);
    partial void OnSupRectifyIdChanged();
    partial void OnIsEndLeverChanging(System.Nullable<bool> value);
    partial void OnIsEndLeverChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    #endregion
		
		public Technique_Rectify()
		{
			this._Technique_RectifyItem = new EntitySet<Technique_RectifyItem>(new Action<Technique_RectifyItem>(this.attach_Technique_RectifyItem), new Action<Technique_RectifyItem>(this.detach_Technique_RectifyItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RectifyId
		{
			get
			{
				return this._RectifyId;
			}
			set
			{
				if ((this._RectifyId != value))
				{
					this.OnRectifyIdChanging(value);
					this.SendPropertyChanging();
					this._RectifyId = value;
					this.SendPropertyChanged("RectifyId");
					this.OnRectifyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyCode", DbType="NVarChar(50)")]
		public string RectifyCode
		{
			get
			{
				return this._RectifyCode;
			}
			set
			{
				if ((this._RectifyCode != value))
				{
					this.OnRectifyCodeChanging(value);
					this.SendPropertyChanging();
					this._RectifyCode = value;
					this.SendPropertyChanged("RectifyCode");
					this.OnRectifyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyName", DbType="NVarChar(50)")]
		public string RectifyName
		{
			get
			{
				return this._RectifyName;
			}
			set
			{
				if ((this._RectifyName != value))
				{
					this.OnRectifyNameChanging(value);
					this.SendPropertyChanging();
					this._RectifyName = value;
					this.SendPropertyChanged("RectifyName");
					this.OnRectifyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupRectifyId", DbType="NVarChar(50)")]
		public string SupRectifyId
		{
			get
			{
				return this._SupRectifyId;
			}
			set
			{
				if ((this._SupRectifyId != value))
				{
					this.OnSupRectifyIdChanging(value);
					this.SendPropertyChanging();
					this._SupRectifyId = value;
					this.SendPropertyChanged("SupRectifyId");
					this.OnSupRectifyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLever", DbType="Bit")]
		public System.Nullable<bool> IsEndLever
		{
			get
			{
				return this._IsEndLever;
			}
			set
			{
				if ((this._IsEndLever != value))
				{
					this.OnIsEndLeverChanging(value);
					this.SendPropertyChanging();
					this._IsEndLever = value;
					this.SendPropertyChanged("IsEndLever");
					this.OnIsEndLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_RectifyItem_Technique_Rectify", Storage="_Technique_RectifyItem", ThisKey="RectifyId", OtherKey="RectifyId", DeleteRule="NO ACTION")]
		public EntitySet<Technique_RectifyItem> Technique_RectifyItem
		{
			get
			{
				return this._Technique_RectifyItem;
			}
			set
			{
				this._Technique_RectifyItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Technique_RectifyItem(Technique_RectifyItem entity)
		{
			this.SendPropertyChanging();
			entity.Technique_Rectify = this;
		}
		
		private void detach_Technique_RectifyItem(Technique_RectifyItem entity)
		{
			this.SendPropertyChanging();
			entity.Technique_Rectify = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_RectifyItem")]
	public partial class Technique_RectifyItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RectifyItemId;
		
		private string _RectifyId;
		
		private string _HazardSourcePoint;
		
		private string _RiskAnalysis;
		
		private string _RiskPrevention;
		
		private string _SimilarRisk;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private string _UpState;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Technique_Rectify> _Technique_Rectify;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRectifyItemIdChanging(string value);
    partial void OnRectifyItemIdChanged();
    partial void OnRectifyIdChanging(string value);
    partial void OnRectifyIdChanged();
    partial void OnHazardSourcePointChanging(string value);
    partial void OnHazardSourcePointChanged();
    partial void OnRiskAnalysisChanging(string value);
    partial void OnRiskAnalysisChanged();
    partial void OnRiskPreventionChanging(string value);
    partial void OnRiskPreventionChanged();
    partial void OnSimilarRiskChanging(string value);
    partial void OnSimilarRiskChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    #endregion
		
		public Technique_RectifyItem()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Technique_Rectify = default(EntityRef<Technique_Rectify>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RectifyItemId
		{
			get
			{
				return this._RectifyItemId;
			}
			set
			{
				if ((this._RectifyItemId != value))
				{
					this.OnRectifyItemIdChanging(value);
					this.SendPropertyChanging();
					this._RectifyItemId = value;
					this.SendPropertyChanged("RectifyItemId");
					this.OnRectifyItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RectifyId
		{
			get
			{
				return this._RectifyId;
			}
			set
			{
				if ((this._RectifyId != value))
				{
					if (this._Technique_Rectify.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRectifyIdChanging(value);
					this.SendPropertyChanging();
					this._RectifyId = value;
					this.SendPropertyChanged("RectifyId");
					this.OnRectifyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HazardSourcePoint", DbType="NVarChar(150)")]
		public string HazardSourcePoint
		{
			get
			{
				return this._HazardSourcePoint;
			}
			set
			{
				if ((this._HazardSourcePoint != value))
				{
					this.OnHazardSourcePointChanging(value);
					this.SendPropertyChanging();
					this._HazardSourcePoint = value;
					this.SendPropertyChanged("HazardSourcePoint");
					this.OnHazardSourcePointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskAnalysis", DbType="NVarChar(500)")]
		public string RiskAnalysis
		{
			get
			{
				return this._RiskAnalysis;
			}
			set
			{
				if ((this._RiskAnalysis != value))
				{
					this.OnRiskAnalysisChanging(value);
					this.SendPropertyChanging();
					this._RiskAnalysis = value;
					this.SendPropertyChanged("RiskAnalysis");
					this.OnRiskAnalysisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RiskPrevention", DbType="NVarChar(500)")]
		public string RiskPrevention
		{
			get
			{
				return this._RiskPrevention;
			}
			set
			{
				if ((this._RiskPrevention != value))
				{
					this.OnRiskPreventionChanging(value);
					this.SendPropertyChanging();
					this._RiskPrevention = value;
					this.SendPropertyChanged("RiskPrevention");
					this.OnRiskPreventionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimilarRisk", DbType="NVarChar(500)")]
		public string SimilarRisk
		{
			get
			{
				return this._SimilarRisk;
			}
			set
			{
				if ((this._SimilarRisk != value))
				{
					this.OnSimilarRiskChanging(value);
					this.SendPropertyChanging();
					this._SimilarRisk = value;
					this.SendPropertyChanged("SimilarRisk");
					this.OnSimilarRiskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_RectifyItem_Sys_User1", Storage="_Sys_User", ThisKey="AuditMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Technique_RectifyItem.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Technique_RectifyItem.Add(this);
						this._AuditMan = value.UserId;
					}
					else
					{
						this._AuditMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_RectifyItem_Technique_Rectify", Storage="_Technique_Rectify", ThisKey="RectifyId", OtherKey="RectifyId", IsForeignKey=true)]
		public Technique_Rectify Technique_Rectify
		{
			get
			{
				return this._Technique_Rectify.Entity;
			}
			set
			{
				Technique_Rectify previousValue = this._Technique_Rectify.Entity;
				if (((previousValue != value) 
							|| (this._Technique_Rectify.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Technique_Rectify.Entity = null;
						previousValue.Technique_RectifyItem.Remove(this);
					}
					this._Technique_Rectify.Entity = value;
					if ((value != null))
					{
						value.Technique_RectifyItem.Add(this);
						this._RectifyId = value.RectifyId;
					}
					else
					{
						this._RectifyId = default(string);
					}
					this.SendPropertyChanged("Technique_Rectify");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technique_SpecialScheme")]
	public partial class Technique_SpecialScheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SpecialSchemeId;
		
		private string _SpecialSchemeTypeId;
		
		private string _SpecialSchemeCode;
		
		private string _SpecialSchemeName;
		
		private string _UnitId;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _Summary;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private EntityRef<Base_SpecialSchemeType> _Base_SpecialSchemeType;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialSchemeIdChanging(string value);
    partial void OnSpecialSchemeIdChanged();
    partial void OnSpecialSchemeTypeIdChanging(string value);
    partial void OnSpecialSchemeTypeIdChanged();
    partial void OnSpecialSchemeCodeChanging(string value);
    partial void OnSpecialSchemeCodeChanged();
    partial void OnSpecialSchemeNameChanging(string value);
    partial void OnSpecialSchemeNameChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    #endregion
		
		public Technique_SpecialScheme()
		{
			this._Base_SpecialSchemeType = default(EntityRef<Base_SpecialSchemeType>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SpecialSchemeId
		{
			get
			{
				return this._SpecialSchemeId;
			}
			set
			{
				if ((this._SpecialSchemeId != value))
				{
					this.OnSpecialSchemeIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeId = value;
					this.SendPropertyChanged("SpecialSchemeId");
					this.OnSpecialSchemeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeTypeId", DbType="NVarChar(50)")]
		public string SpecialSchemeTypeId
		{
			get
			{
				return this._SpecialSchemeTypeId;
			}
			set
			{
				if ((this._SpecialSchemeTypeId != value))
				{
					if (this._Base_SpecialSchemeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialSchemeTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeTypeId = value;
					this.SendPropertyChanged("SpecialSchemeTypeId");
					this.OnSpecialSchemeTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeCode", DbType="NVarChar(50)")]
		public string SpecialSchemeCode
		{
			get
			{
				return this._SpecialSchemeCode;
			}
			set
			{
				if ((this._SpecialSchemeCode != value))
				{
					this.OnSpecialSchemeCodeChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeCode = value;
					this.SendPropertyChanged("SpecialSchemeCode");
					this.OnSpecialSchemeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeName", DbType="NVarChar(500)")]
		public string SpecialSchemeName
		{
			get
			{
				return this._SpecialSchemeName;
			}
			set
			{
				if ((this._SpecialSchemeName != value))
				{
					this.OnSpecialSchemeNameChanging(value);
					this.SendPropertyChanging();
					this._SpecialSchemeName = value;
					this.SendPropertyChanged("SpecialSchemeName");
					this.OnSpecialSchemeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_SpecialScheme_Base_SpecialSchemeType", Storage="_Base_SpecialSchemeType", ThisKey="SpecialSchemeTypeId", OtherKey="SpecialSchemeTypeId", IsForeignKey=true)]
		public Base_SpecialSchemeType Base_SpecialSchemeType
		{
			get
			{
				return this._Base_SpecialSchemeType.Entity;
			}
			set
			{
				Base_SpecialSchemeType previousValue = this._Base_SpecialSchemeType.Entity;
				if (((previousValue != value) 
							|| (this._Base_SpecialSchemeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_SpecialSchemeType.Entity = null;
						previousValue.Technique_SpecialScheme.Remove(this);
					}
					this._Base_SpecialSchemeType.Entity = value;
					if ((value != null))
					{
						value.Technique_SpecialScheme.Add(this);
						this._SpecialSchemeTypeId = value.SpecialSchemeTypeId;
					}
					else
					{
						this._SpecialSchemeTypeId = default(string);
					}
					this.SendPropertyChanged("Base_SpecialSchemeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_SpecialScheme_Base_Unit", Storage="_Base_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Technique_SpecialScheme.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Technique_SpecialScheme.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Technique_SpecialScheme_Sys_User1", Storage="_Sys_User", ThisKey="AuditMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Technique_SpecialScheme.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Technique_SpecialScheme.Add(this);
						this._AuditMan = value.UserId;
					}
					else
					{
						this._AuditMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_CompanyTraining")]
	public partial class Training_CompanyTraining : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CompanyTrainingId;
		
		private string _CompanyTrainingCode;
		
		private string _CompanyTrainingName;
		
		private string _SupCompanyTrainingId;
		
		private System.Nullable<bool> _IsEndLever;
		
		private EntitySet<Training_CompanyTrainingItem> _Training_CompanyTrainingItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyTrainingIdChanging(string value);
    partial void OnCompanyTrainingIdChanged();
    partial void OnCompanyTrainingCodeChanging(string value);
    partial void OnCompanyTrainingCodeChanged();
    partial void OnCompanyTrainingNameChanging(string value);
    partial void OnCompanyTrainingNameChanged();
    partial void OnSupCompanyTrainingIdChanging(string value);
    partial void OnSupCompanyTrainingIdChanged();
    partial void OnIsEndLeverChanging(System.Nullable<bool> value);
    partial void OnIsEndLeverChanged();
    #endregion
		
		public Training_CompanyTraining()
		{
			this._Training_CompanyTrainingItem = new EntitySet<Training_CompanyTrainingItem>(new Action<Training_CompanyTrainingItem>(this.attach_Training_CompanyTrainingItem), new Action<Training_CompanyTrainingItem>(this.detach_Training_CompanyTrainingItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTrainingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompanyTrainingId
		{
			get
			{
				return this._CompanyTrainingId;
			}
			set
			{
				if ((this._CompanyTrainingId != value))
				{
					this.OnCompanyTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyTrainingId = value;
					this.SendPropertyChanged("CompanyTrainingId");
					this.OnCompanyTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTrainingCode", DbType="NVarChar(50)")]
		public string CompanyTrainingCode
		{
			get
			{
				return this._CompanyTrainingCode;
			}
			set
			{
				if ((this._CompanyTrainingCode != value))
				{
					this.OnCompanyTrainingCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyTrainingCode = value;
					this.SendPropertyChanged("CompanyTrainingCode");
					this.OnCompanyTrainingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTrainingName", DbType="NVarChar(100)")]
		public string CompanyTrainingName
		{
			get
			{
				return this._CompanyTrainingName;
			}
			set
			{
				if ((this._CompanyTrainingName != value))
				{
					this.OnCompanyTrainingNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyTrainingName = value;
					this.SendPropertyChanged("CompanyTrainingName");
					this.OnCompanyTrainingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupCompanyTrainingId", DbType="NVarChar(50)")]
		public string SupCompanyTrainingId
		{
			get
			{
				return this._SupCompanyTrainingId;
			}
			set
			{
				if ((this._SupCompanyTrainingId != value))
				{
					this.OnSupCompanyTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._SupCompanyTrainingId = value;
					this.SendPropertyChanged("SupCompanyTrainingId");
					this.OnSupCompanyTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLever", DbType="Bit")]
		public System.Nullable<bool> IsEndLever
		{
			get
			{
				return this._IsEndLever;
			}
			set
			{
				if ((this._IsEndLever != value))
				{
					this.OnIsEndLeverChanging(value);
					this.SendPropertyChanging();
					this._IsEndLever = value;
					this.SendPropertyChanged("IsEndLever");
					this.OnIsEndLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_CompanyTrainingItem_Training_CompanyTraining", Storage="_Training_CompanyTrainingItem", ThisKey="CompanyTrainingId", OtherKey="CompanyTrainingId", DeleteRule="NO ACTION")]
		public EntitySet<Training_CompanyTrainingItem> Training_CompanyTrainingItem
		{
			get
			{
				return this._Training_CompanyTrainingItem;
			}
			set
			{
				this._Training_CompanyTrainingItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_CompanyTrainingItem(Training_CompanyTrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_CompanyTraining = this;
		}
		
		private void detach_Training_CompanyTrainingItem(Training_CompanyTrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_CompanyTraining = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_CompanyTrainingItem")]
	public partial class Training_CompanyTrainingItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CompanyTrainingItemId;
		
		private string _CompanyTrainingId;
		
		private string _CompanyTrainingItemCode;
		
		private string _CompanyTrainingItemName;
		
		private string _AttachUrl;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _WorkPostIds;
		
		private EntityRef<Training_CompanyTraining> _Training_CompanyTraining;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyTrainingItemIdChanging(string value);
    partial void OnCompanyTrainingItemIdChanged();
    partial void OnCompanyTrainingIdChanging(string value);
    partial void OnCompanyTrainingIdChanged();
    partial void OnCompanyTrainingItemCodeChanging(string value);
    partial void OnCompanyTrainingItemCodeChanged();
    partial void OnCompanyTrainingItemNameChanging(string value);
    partial void OnCompanyTrainingItemNameChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnWorkPostIdsChanging(string value);
    partial void OnWorkPostIdsChanged();
    #endregion
		
		public Training_CompanyTrainingItem()
		{
			this._Training_CompanyTraining = default(EntityRef<Training_CompanyTraining>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTrainingItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompanyTrainingItemId
		{
			get
			{
				return this._CompanyTrainingItemId;
			}
			set
			{
				if ((this._CompanyTrainingItemId != value))
				{
					this.OnCompanyTrainingItemIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyTrainingItemId = value;
					this.SendPropertyChanged("CompanyTrainingItemId");
					this.OnCompanyTrainingItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTrainingId", DbType="NVarChar(50)")]
		public string CompanyTrainingId
		{
			get
			{
				return this._CompanyTrainingId;
			}
			set
			{
				if ((this._CompanyTrainingId != value))
				{
					if (this._Training_CompanyTraining.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyTrainingId = value;
					this.SendPropertyChanged("CompanyTrainingId");
					this.OnCompanyTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTrainingItemCode", DbType="NVarChar(50)")]
		public string CompanyTrainingItemCode
		{
			get
			{
				return this._CompanyTrainingItemCode;
			}
			set
			{
				if ((this._CompanyTrainingItemCode != value))
				{
					this.OnCompanyTrainingItemCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyTrainingItemCode = value;
					this.SendPropertyChanged("CompanyTrainingItemCode");
					this.OnCompanyTrainingItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTrainingItemName", DbType="NVarChar(100)")]
		public string CompanyTrainingItemName
		{
			get
			{
				return this._CompanyTrainingItemName;
			}
			set
			{
				if ((this._CompanyTrainingItemName != value))
				{
					this.OnCompanyTrainingItemNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyTrainingItemName = value;
					this.SendPropertyChanged("CompanyTrainingItemName");
					this.OnCompanyTrainingItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostIds
		{
			get
			{
				return this._WorkPostIds;
			}
			set
			{
				if ((this._WorkPostIds != value))
				{
					this.OnWorkPostIdsChanging(value);
					this.SendPropertyChanging();
					this._WorkPostIds = value;
					this.SendPropertyChanged("WorkPostIds");
					this.OnWorkPostIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_CompanyTrainingItem_Training_CompanyTraining", Storage="_Training_CompanyTraining", ThisKey="CompanyTrainingId", OtherKey="CompanyTrainingId", IsForeignKey=true)]
		public Training_CompanyTraining Training_CompanyTraining
		{
			get
			{
				return this._Training_CompanyTraining.Entity;
			}
			set
			{
				Training_CompanyTraining previousValue = this._Training_CompanyTraining.Entity;
				if (((previousValue != value) 
							|| (this._Training_CompanyTraining.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_CompanyTraining.Entity = null;
						previousValue.Training_CompanyTrainingItem.Remove(this);
					}
					this._Training_CompanyTraining.Entity = value;
					if ((value != null))
					{
						value.Training_CompanyTrainingItem.Add(this);
						this._CompanyTrainingId = value.CompanyTrainingId;
					}
					else
					{
						this._CompanyTrainingId = default(string);
					}
					this.SendPropertyChanged("Training_CompanyTraining");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_Plan")]
	public partial class Training_Plan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PlanId;
		
		private string _ProjectId;
		
		private string _PlanCode;
		
		private string _DesignerId;
		
		private System.Nullable<System.DateTime> _DesignerDate;
		
		private string _WorkPostId;
		
		private string _States;
		
		private string _PlanName;
		
		private string _WorkPostNames;
		
		private string _TrainContent;
		
		private System.Nullable<System.DateTime> _TrainStartDate;
		
		private System.Nullable<System.DateTime> _TrainEndDate;
		
		private System.Nullable<decimal> _TeachHour;
		
		private string _TeachMan;
		
		private string _TeachAddress;
		
		private string _TrainTypeId;
		
		private string _TrainLevelId;
		
		private string _UnitIds;
		
		private string _QRCodeUrl;
		
		private EntitySet<EduTrain_TrainRecord> _EduTrain_TrainRecord;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_TrainLevel> _Base_TrainLevel;
		
		private EntityRef<Base_TrainType> _Base_TrainType;
		
		private EntityRef<Sys_User> _Sys_User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanIdChanging(string value);
    partial void OnPlanIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnPlanCodeChanging(string value);
    partial void OnPlanCodeChanged();
    partial void OnDesignerIdChanging(string value);
    partial void OnDesignerIdChanged();
    partial void OnDesignerDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDesignerDateChanged();
    partial void OnWorkPostIdChanging(string value);
    partial void OnWorkPostIdChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnPlanNameChanging(string value);
    partial void OnPlanNameChanged();
    partial void OnWorkPostNamesChanging(string value);
    partial void OnWorkPostNamesChanged();
    partial void OnTrainContentChanging(string value);
    partial void OnTrainContentChanged();
    partial void OnTrainStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrainStartDateChanged();
    partial void OnTrainEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrainEndDateChanged();
    partial void OnTeachHourChanging(System.Nullable<decimal> value);
    partial void OnTeachHourChanged();
    partial void OnTeachManChanging(string value);
    partial void OnTeachManChanged();
    partial void OnTeachAddressChanging(string value);
    partial void OnTeachAddressChanged();
    partial void OnTrainTypeIdChanging(string value);
    partial void OnTrainTypeIdChanged();
    partial void OnTrainLevelIdChanging(string value);
    partial void OnTrainLevelIdChanged();
    partial void OnUnitIdsChanging(string value);
    partial void OnUnitIdsChanged();
    partial void OnQRCodeUrlChanging(string value);
    partial void OnQRCodeUrlChanged();
    #endregion
		
		public Training_Plan()
		{
			this._EduTrain_TrainRecord = new EntitySet<EduTrain_TrainRecord>(new Action<EduTrain_TrainRecord>(this.attach_EduTrain_TrainRecord), new Action<EduTrain_TrainRecord>(this.detach_EduTrain_TrainRecord));
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_TrainLevel = default(EntityRef<Base_TrainLevel>);
			this._Base_TrainType = default(EntityRef<Base_TrainType>);
			this._Sys_User = default(EntityRef<Sys_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PlanId
		{
			get
			{
				return this._PlanId;
			}
			set
			{
				if ((this._PlanId != value))
				{
					this.OnPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PlanId = value;
					this.SendPropertyChanged("PlanId");
					this.OnPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanCode", DbType="NVarChar(50)")]
		public string PlanCode
		{
			get
			{
				return this._PlanCode;
			}
			set
			{
				if ((this._PlanCode != value))
				{
					this.OnPlanCodeChanging(value);
					this.SendPropertyChanging();
					this._PlanCode = value;
					this.SendPropertyChanged("PlanCode");
					this.OnPlanCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignerId", DbType="NVarChar(50)")]
		public string DesignerId
		{
			get
			{
				return this._DesignerId;
			}
			set
			{
				if ((this._DesignerId != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesignerIdChanging(value);
					this.SendPropertyChanging();
					this._DesignerId = value;
					this.SendPropertyChanged("DesignerId");
					this.OnDesignerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignerDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DesignerDate
		{
			get
			{
				return this._DesignerDate;
			}
			set
			{
				if ((this._DesignerDate != value))
				{
					this.OnDesignerDateChanging(value);
					this.SendPropertyChanging();
					this._DesignerDate = value;
					this.SendPropertyChanged("DesignerDate");
					this.OnDesignerDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					this.OnWorkPostIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPostId = value;
					this.SendPropertyChanged("WorkPostId");
					this.OnWorkPostIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(2)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanName", DbType="NVarChar(300)")]
		public string PlanName
		{
			get
			{
				return this._PlanName;
			}
			set
			{
				if ((this._PlanName != value))
				{
					this.OnPlanNameChanging(value);
					this.SendPropertyChanging();
					this._PlanName = value;
					this.SendPropertyChanged("PlanName");
					this.OnPlanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostNames", DbType="NVarChar(2000)")]
		public string WorkPostNames
		{
			get
			{
				return this._WorkPostNames;
			}
			set
			{
				if ((this._WorkPostNames != value))
				{
					this.OnWorkPostNamesChanging(value);
					this.SendPropertyChanging();
					this._WorkPostNames = value;
					this.SendPropertyChanged("WorkPostNames");
					this.OnWorkPostNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainContent", DbType="NVarChar(500)")]
		public string TrainContent
		{
			get
			{
				return this._TrainContent;
			}
			set
			{
				if ((this._TrainContent != value))
				{
					this.OnTrainContentChanging(value);
					this.SendPropertyChanging();
					this._TrainContent = value;
					this.SendPropertyChanged("TrainContent");
					this.OnTrainContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrainStartDate
		{
			get
			{
				return this._TrainStartDate;
			}
			set
			{
				if ((this._TrainStartDate != value))
				{
					this.OnTrainStartDateChanging(value);
					this.SendPropertyChanging();
					this._TrainStartDate = value;
					this.SendPropertyChanged("TrainStartDate");
					this.OnTrainStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrainEndDate
		{
			get
			{
				return this._TrainEndDate;
			}
			set
			{
				if ((this._TrainEndDate != value))
				{
					this.OnTrainEndDateChanging(value);
					this.SendPropertyChanging();
					this._TrainEndDate = value;
					this.SendPropertyChanged("TrainEndDate");
					this.OnTrainEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachHour", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> TeachHour
		{
			get
			{
				return this._TeachHour;
			}
			set
			{
				if ((this._TeachHour != value))
				{
					this.OnTeachHourChanging(value);
					this.SendPropertyChanging();
					this._TeachHour = value;
					this.SendPropertyChanged("TeachHour");
					this.OnTeachHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachMan", DbType="NVarChar(50)")]
		public string TeachMan
		{
			get
			{
				return this._TeachMan;
			}
			set
			{
				if ((this._TeachMan != value))
				{
					this.OnTeachManChanging(value);
					this.SendPropertyChanging();
					this._TeachMan = value;
					this.SendPropertyChanged("TeachMan");
					this.OnTeachManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachAddress", DbType="NVarChar(100)")]
		public string TeachAddress
		{
			get
			{
				return this._TeachAddress;
			}
			set
			{
				if ((this._TeachAddress != value))
				{
					this.OnTeachAddressChanging(value);
					this.SendPropertyChanging();
					this._TeachAddress = value;
					this.SendPropertyChanged("TeachAddress");
					this.OnTeachAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeId", DbType="NVarChar(50)")]
		public string TrainTypeId
		{
			get
			{
				return this._TrainTypeId;
			}
			set
			{
				if ((this._TrainTypeId != value))
				{
					if (this._Base_TrainType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeId = value;
					this.SendPropertyChanged("TrainTypeId");
					this.OnTrainTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainLevelId", DbType="NVarChar(50)")]
		public string TrainLevelId
		{
			get
			{
				return this._TrainLevelId;
			}
			set
			{
				if ((this._TrainLevelId != value))
				{
					if (this._Base_TrainLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainLevelIdChanging(value);
					this.SendPropertyChanging();
					this._TrainLevelId = value;
					this.SendPropertyChanged("TrainLevelId");
					this.OnTrainLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitIds", DbType="NVarChar(800)")]
		public string UnitIds
		{
			get
			{
				return this._UnitIds;
			}
			set
			{
				if ((this._UnitIds != value))
				{
					this.OnUnitIdsChanging(value);
					this.SendPropertyChanging();
					this._UnitIds = value;
					this.SendPropertyChanged("UnitIds");
					this.OnUnitIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCodeUrl", DbType="NVarChar(2000)")]
		public string QRCodeUrl
		{
			get
			{
				return this._QRCodeUrl;
			}
			set
			{
				if ((this._QRCodeUrl != value))
				{
					this.OnQRCodeUrlChanging(value);
					this.SendPropertyChanging();
					this._QRCodeUrl = value;
					this.SendPropertyChanged("QRCodeUrl");
					this.OnQRCodeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_EduTrain_TrainRecord_Training_Plan", Storage="_EduTrain_TrainRecord", ThisKey="PlanId", OtherKey="PlanId", DeleteRule="NO ACTION")]
		public EntitySet<EduTrain_TrainRecord> EduTrain_TrainRecord
		{
			get
			{
				return this._EduTrain_TrainRecord;
			}
			set
			{
				this._EduTrain_TrainRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Plan_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Training_Plan.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Training_Plan.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Plan_Base_TrainLevel", Storage="_Base_TrainLevel", ThisKey="TrainLevelId", OtherKey="TrainLevelId", IsForeignKey=true)]
		public Base_TrainLevel Base_TrainLevel
		{
			get
			{
				return this._Base_TrainLevel.Entity;
			}
			set
			{
				Base_TrainLevel previousValue = this._Base_TrainLevel.Entity;
				if (((previousValue != value) 
							|| (this._Base_TrainLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_TrainLevel.Entity = null;
						previousValue.Training_Plan.Remove(this);
					}
					this._Base_TrainLevel.Entity = value;
					if ((value != null))
					{
						value.Training_Plan.Add(this);
						this._TrainLevelId = value.TrainLevelId;
					}
					else
					{
						this._TrainLevelId = default(string);
					}
					this.SendPropertyChanged("Base_TrainLevel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Plan_Base_TrainType", Storage="_Base_TrainType", ThisKey="TrainTypeId", OtherKey="TrainTypeId", IsForeignKey=true)]
		public Base_TrainType Base_TrainType
		{
			get
			{
				return this._Base_TrainType.Entity;
			}
			set
			{
				Base_TrainType previousValue = this._Base_TrainType.Entity;
				if (((previousValue != value) 
							|| (this._Base_TrainType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_TrainType.Entity = null;
						previousValue.Training_Plan.Remove(this);
					}
					this._Base_TrainType.Entity = value;
					if ((value != null))
					{
						value.Training_Plan.Add(this);
						this._TrainTypeId = value.TrainTypeId;
					}
					else
					{
						this._TrainTypeId = default(string);
					}
					this.SendPropertyChanged("Base_TrainType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_Plan_Sys_User", Storage="_Sys_User", ThisKey="DesignerId", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Training_Plan.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Training_Plan.Add(this);
						this._DesignerId = value.UserId;
					}
					else
					{
						this._DesignerId = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EduTrain_TrainRecord(EduTrain_TrainRecord entity)
		{
			this.SendPropertyChanging();
			entity.Training_Plan = this;
		}
		
		private void detach_EduTrain_TrainRecord(EduTrain_TrainRecord entity)
		{
			this.SendPropertyChanging();
			entity.Training_Plan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TestTraining")]
	public partial class Training_TestTraining : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainingId;
		
		private string _TrainingCode;
		
		private string _TrainingName;
		
		private string _SupTrainingId;
		
		private System.Nullable<bool> _IsEndLever;
		
		private string _TrainTypeId;
		
		private EntitySet<Base_TrainTypeItem> _Base_TrainTypeItem;
		
		private EntityRef<Base_TrainType> _Base_TrainType;
		
		private EntitySet<Training_TestTrainingItem> _Training_TestTrainingItem;
		
		private EntitySet<Training_TestTrainingItem> _Training;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainingIdChanging(string value);
    partial void OnTrainingIdChanged();
    partial void OnTrainingCodeChanging(string value);
    partial void OnTrainingCodeChanged();
    partial void OnTrainingNameChanging(string value);
    partial void OnTrainingNameChanged();
    partial void OnSupTrainingIdChanging(string value);
    partial void OnSupTrainingIdChanged();
    partial void OnIsEndLeverChanging(System.Nullable<bool> value);
    partial void OnIsEndLeverChanged();
    partial void OnTrainTypeIdChanging(string value);
    partial void OnTrainTypeIdChanged();
    #endregion
		
		public Training_TestTraining()
		{
			this._Base_TrainTypeItem = new EntitySet<Base_TrainTypeItem>(new Action<Base_TrainTypeItem>(this.attach_Base_TrainTypeItem), new Action<Base_TrainTypeItem>(this.detach_Base_TrainTypeItem));
			this._Base_TrainType = default(EntityRef<Base_TrainType>);
			this._Training_TestTrainingItem = new EntitySet<Training_TestTrainingItem>(new Action<Training_TestTrainingItem>(this.attach_Training_TestTrainingItem), new Action<Training_TestTrainingItem>(this.detach_Training_TestTrainingItem));
			this._Training = new EntitySet<Training_TestTrainingItem>(new Action<Training_TestTrainingItem>(this.attach_Training), new Action<Training_TestTrainingItem>(this.detach_Training));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					this.OnTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingId = value;
					this.SendPropertyChanged("TrainingId");
					this.OnTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingCode", DbType="NVarChar(50)")]
		public string TrainingCode
		{
			get
			{
				return this._TrainingCode;
			}
			set
			{
				if ((this._TrainingCode != value))
				{
					this.OnTrainingCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainingCode = value;
					this.SendPropertyChanged("TrainingCode");
					this.OnTrainingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingName", DbType="NVarChar(100)")]
		public string TrainingName
		{
			get
			{
				return this._TrainingName;
			}
			set
			{
				if ((this._TrainingName != value))
				{
					this.OnTrainingNameChanging(value);
					this.SendPropertyChanging();
					this._TrainingName = value;
					this.SendPropertyChanged("TrainingName");
					this.OnTrainingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupTrainingId", DbType="NVarChar(50)")]
		public string SupTrainingId
		{
			get
			{
				return this._SupTrainingId;
			}
			set
			{
				if ((this._SupTrainingId != value))
				{
					this.OnSupTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._SupTrainingId = value;
					this.SendPropertyChanged("SupTrainingId");
					this.OnSupTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLever", DbType="Bit")]
		public System.Nullable<bool> IsEndLever
		{
			get
			{
				return this._IsEndLever;
			}
			set
			{
				if ((this._IsEndLever != value))
				{
					this.OnIsEndLeverChanging(value);
					this.SendPropertyChanging();
					this._IsEndLever = value;
					this.SendPropertyChanged("IsEndLever");
					this.OnIsEndLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTypeId", DbType="NVarChar(50)")]
		public string TrainTypeId
		{
			get
			{
				return this._TrainTypeId;
			}
			set
			{
				if ((this._TrainTypeId != value))
				{
					if (this._Base_TrainType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TrainTypeId = value;
					this.SendPropertyChanged("TrainTypeId");
					this.OnTrainTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Base_TrainTypeItem_Training_TestTraining", Storage="_Base_TrainTypeItem", ThisKey="TrainingId", OtherKey="TrainingId", DeleteRule="NO ACTION")]
		public EntitySet<Base_TrainTypeItem> Base_TrainTypeItem
		{
			get
			{
				return this._Base_TrainTypeItem;
			}
			set
			{
				this._Base_TrainTypeItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestTraining_Base_TrainType", Storage="_Base_TrainType", ThisKey="TrainTypeId", OtherKey="TrainTypeId", IsForeignKey=true)]
		public Base_TrainType Base_TrainType
		{
			get
			{
				return this._Base_TrainType.Entity;
			}
			set
			{
				Base_TrainType previousValue = this._Base_TrainType.Entity;
				if (((previousValue != value) 
							|| (this._Base_TrainType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_TrainType.Entity = null;
						previousValue.Training_TestTraining.Remove(this);
					}
					this._Base_TrainType.Entity = value;
					if ((value != null))
					{
						value.Training_TestTraining.Add(this);
						this._TrainTypeId = value.TrainTypeId;
					}
					else
					{
						this._TrainTypeId = default(string);
					}
					this.SendPropertyChanged("Base_TrainType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestTrainingItem_Training_TestTraining", Storage="_Training_TestTrainingItem", ThisKey="TrainingId", OtherKey="TrainingId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TestTrainingItem> Training_TestTrainingItem
		{
			get
			{
				return this._Training_TestTrainingItem;
			}
			set
			{
				this._Training_TestTrainingItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestTrainingItem_Training_TestTraining1", Storage="_Training", ThisKey="TrainingId", OtherKey="TrainingId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TestTrainingItem> Training
		{
			get
			{
				return this._Training;
			}
			set
			{
				this._Training.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Base_TrainTypeItem(Base_TrainTypeItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestTraining = this;
		}
		
		private void detach_Base_TrainTypeItem(Base_TrainTypeItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestTraining = null;
		}
		
		private void attach_Training_TestTrainingItem(Training_TestTrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestTraining = this;
		}
		
		private void detach_Training_TestTrainingItem(Training_TestTrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_TestTraining = null;
		}
		
		private void attach_Training(Training_TestTrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Training = this;
		}
		
		private void detach_Training(Training_TestTrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Training = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TestTrainingItem")]
	public partial class Training_TestTrainingItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainingItemId;
		
		private string _TrainingId;
		
		private string _TrainingItemCode;
		
		private string _TrainingItemName;
		
		private string _Abstracts;
		
		private string _AttachUrl;
		
		private string _VersionNum;
		
		private string _TestType;
		
		private string _WorkPostIds;
		
		private string _WorkPostNames;
		
		private string _AItem;
		
		private string _BItem;
		
		private string _CItem;
		
		private string _DItem;
		
		private string _EItem;
		
		private string _AnswerItems;
		
		private EntityRef<Training_TestTraining> _Training_TestTraining;
		
		private EntityRef<Training_TestTraining> _Training;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainingItemIdChanging(string value);
    partial void OnTrainingItemIdChanged();
    partial void OnTrainingIdChanging(string value);
    partial void OnTrainingIdChanged();
    partial void OnTrainingItemCodeChanging(string value);
    partial void OnTrainingItemCodeChanged();
    partial void OnTrainingItemNameChanging(string value);
    partial void OnTrainingItemNameChanged();
    partial void OnAbstractsChanging(string value);
    partial void OnAbstractsChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnVersionNumChanging(string value);
    partial void OnVersionNumChanged();
    partial void OnTestTypeChanging(string value);
    partial void OnTestTypeChanged();
    partial void OnWorkPostIdsChanging(string value);
    partial void OnWorkPostIdsChanged();
    partial void OnWorkPostNamesChanging(string value);
    partial void OnWorkPostNamesChanged();
    partial void OnAItemChanging(string value);
    partial void OnAItemChanged();
    partial void OnBItemChanging(string value);
    partial void OnBItemChanged();
    partial void OnCItemChanging(string value);
    partial void OnCItemChanged();
    partial void OnDItemChanging(string value);
    partial void OnDItemChanged();
    partial void OnEItemChanging(string value);
    partial void OnEItemChanged();
    partial void OnAnswerItemsChanging(string value);
    partial void OnAnswerItemsChanged();
    #endregion
		
		public Training_TestTrainingItem()
		{
			this._Training_TestTraining = default(EntityRef<Training_TestTraining>);
			this._Training = default(EntityRef<Training_TestTraining>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainingItemId
		{
			get
			{
				return this._TrainingItemId;
			}
			set
			{
				if ((this._TrainingItemId != value))
				{
					this.OnTrainingItemIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingItemId = value;
					this.SendPropertyChanged("TrainingItemId");
					this.OnTrainingItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50)")]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					if ((this._Training_TestTraining.HasLoadedOrAssignedValue || this._Training.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingId = value;
					this.SendPropertyChanged("TrainingId");
					this.OnTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemCode", DbType="NVarChar(50)")]
		public string TrainingItemCode
		{
			get
			{
				return this._TrainingItemCode;
			}
			set
			{
				if ((this._TrainingItemCode != value))
				{
					this.OnTrainingItemCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainingItemCode = value;
					this.SendPropertyChanged("TrainingItemCode");
					this.OnTrainingItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemName", DbType="NVarChar(100)")]
		public string TrainingItemName
		{
			get
			{
				return this._TrainingItemName;
			}
			set
			{
				if ((this._TrainingItemName != value))
				{
					this.OnTrainingItemNameChanging(value);
					this.SendPropertyChanging();
					this._TrainingItemName = value;
					this.SendPropertyChanged("TrainingItemName");
					this.OnTrainingItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abstracts", DbType="NVarChar(2000)")]
		public string Abstracts
		{
			get
			{
				return this._Abstracts;
			}
			set
			{
				if ((this._Abstracts != value))
				{
					this.OnAbstractsChanging(value);
					this.SendPropertyChanging();
					this._Abstracts = value;
					this.SendPropertyChanged("Abstracts");
					this.OnAbstractsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNum", DbType="NVarChar(50)")]
		public string VersionNum
		{
			get
			{
				return this._VersionNum;
			}
			set
			{
				if ((this._VersionNum != value))
				{
					this.OnVersionNumChanging(value);
					this.SendPropertyChanging();
					this._VersionNum = value;
					this.SendPropertyChanged("VersionNum");
					this.OnVersionNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="Char(1)")]
		public string TestType
		{
			get
			{
				return this._TestType;
			}
			set
			{
				if ((this._TestType != value))
				{
					this.OnTestTypeChanging(value);
					this.SendPropertyChanging();
					this._TestType = value;
					this.SendPropertyChanged("TestType");
					this.OnTestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostIds", DbType="NVarChar(4000)")]
		public string WorkPostIds
		{
			get
			{
				return this._WorkPostIds;
			}
			set
			{
				if ((this._WorkPostIds != value))
				{
					this.OnWorkPostIdsChanging(value);
					this.SendPropertyChanging();
					this._WorkPostIds = value;
					this.SendPropertyChanged("WorkPostIds");
					this.OnWorkPostIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostNames
		{
			get
			{
				return this._WorkPostNames;
			}
			set
			{
				if ((this._WorkPostNames != value))
				{
					this.OnWorkPostNamesChanging(value);
					this.SendPropertyChanging();
					this._WorkPostNames = value;
					this.SendPropertyChanged("WorkPostNames");
					this.OnWorkPostNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AItem", DbType="NVarChar(500)")]
		public string AItem
		{
			get
			{
				return this._AItem;
			}
			set
			{
				if ((this._AItem != value))
				{
					this.OnAItemChanging(value);
					this.SendPropertyChanging();
					this._AItem = value;
					this.SendPropertyChanged("AItem");
					this.OnAItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BItem", DbType="NVarChar(500)")]
		public string BItem
		{
			get
			{
				return this._BItem;
			}
			set
			{
				if ((this._BItem != value))
				{
					this.OnBItemChanging(value);
					this.SendPropertyChanging();
					this._BItem = value;
					this.SendPropertyChanged("BItem");
					this.OnBItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CItem", DbType="NVarChar(500)")]
		public string CItem
		{
			get
			{
				return this._CItem;
			}
			set
			{
				if ((this._CItem != value))
				{
					this.OnCItemChanging(value);
					this.SendPropertyChanging();
					this._CItem = value;
					this.SendPropertyChanged("CItem");
					this.OnCItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DItem", DbType="NVarChar(500)")]
		public string DItem
		{
			get
			{
				return this._DItem;
			}
			set
			{
				if ((this._DItem != value))
				{
					this.OnDItemChanging(value);
					this.SendPropertyChanging();
					this._DItem = value;
					this.SendPropertyChanged("DItem");
					this.OnDItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EItem", DbType="NVarChar(500)")]
		public string EItem
		{
			get
			{
				return this._EItem;
			}
			set
			{
				if ((this._EItem != value))
				{
					this.OnEItemChanging(value);
					this.SendPropertyChanging();
					this._EItem = value;
					this.SendPropertyChanged("EItem");
					this.OnEItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerItems", DbType="NVarChar(50)")]
		public string AnswerItems
		{
			get
			{
				return this._AnswerItems;
			}
			set
			{
				if ((this._AnswerItems != value))
				{
					this.OnAnswerItemsChanging(value);
					this.SendPropertyChanging();
					this._AnswerItems = value;
					this.SendPropertyChanged("AnswerItems");
					this.OnAnswerItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestTrainingItem_Training_TestTraining", Storage="_Training_TestTraining", ThisKey="TrainingId", OtherKey="TrainingId", IsForeignKey=true)]
		public Training_TestTraining Training_TestTraining
		{
			get
			{
				return this._Training_TestTraining.Entity;
			}
			set
			{
				Training_TestTraining previousValue = this._Training_TestTraining.Entity;
				if (((previousValue != value) 
							|| (this._Training_TestTraining.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_TestTraining.Entity = null;
						previousValue.Training_TestTrainingItem.Remove(this);
					}
					this._Training_TestTraining.Entity = value;
					if ((value != null))
					{
						value.Training_TestTrainingItem.Add(this);
						this._TrainingId = value.TrainingId;
					}
					else
					{
						this._TrainingId = default(string);
					}
					this.SendPropertyChanged("Training_TestTraining");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TestTrainingItem_Training_TestTraining1", Storage="_Training", ThisKey="TrainingId", OtherKey="TrainingId", IsForeignKey=true)]
		public Training_TestTraining Training
		{
			get
			{
				return this._Training.Entity;
			}
			set
			{
				Training_TestTraining previousValue = this._Training.Entity;
				if (((previousValue != value) 
							|| (this._Training.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training.Entity = null;
						previousValue.Training.Remove(this);
					}
					this._Training.Entity = value;
					if ((value != null))
					{
						value.Training.Add(this);
						this._TrainingId = value.TrainingId;
					}
					else
					{
						this._TrainingId = default(string);
					}
					this.SendPropertyChanged("Training");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_Training")]
	public partial class Training_Training : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainingId;
		
		private string _TrainingCode;
		
		private string _TrainingName;
		
		private string _SupTrainingId;
		
		private System.Nullable<bool> _IsEndLever;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private string _WorkPostIds;
		
		private EntitySet<Training_TrainingItem> _Training_TrainingItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainingIdChanging(string value);
    partial void OnTrainingIdChanged();
    partial void OnTrainingCodeChanging(string value);
    partial void OnTrainingCodeChanged();
    partial void OnTrainingNameChanging(string value);
    partial void OnTrainingNameChanged();
    partial void OnSupTrainingIdChanging(string value);
    partial void OnSupTrainingIdChanged();
    partial void OnIsEndLeverChanging(System.Nullable<bool> value);
    partial void OnIsEndLeverChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    partial void OnWorkPostIdsChanging(string value);
    partial void OnWorkPostIdsChanged();
    #endregion
		
		public Training_Training()
		{
			this._Training_TrainingItem = new EntitySet<Training_TrainingItem>(new Action<Training_TrainingItem>(this.attach_Training_TrainingItem), new Action<Training_TrainingItem>(this.detach_Training_TrainingItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					this.OnTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingId = value;
					this.SendPropertyChanged("TrainingId");
					this.OnTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingCode", DbType="NVarChar(50)")]
		public string TrainingCode
		{
			get
			{
				return this._TrainingCode;
			}
			set
			{
				if ((this._TrainingCode != value))
				{
					this.OnTrainingCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainingCode = value;
					this.SendPropertyChanged("TrainingCode");
					this.OnTrainingCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingName", DbType="NVarChar(100)")]
		public string TrainingName
		{
			get
			{
				return this._TrainingName;
			}
			set
			{
				if ((this._TrainingName != value))
				{
					this.OnTrainingNameChanging(value);
					this.SendPropertyChanging();
					this._TrainingName = value;
					this.SendPropertyChanged("TrainingName");
					this.OnTrainingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupTrainingId", DbType="NVarChar(50)")]
		public string SupTrainingId
		{
			get
			{
				return this._SupTrainingId;
			}
			set
			{
				if ((this._SupTrainingId != value))
				{
					this.OnSupTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._SupTrainingId = value;
					this.SendPropertyChanged("SupTrainingId");
					this.OnSupTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLever", DbType="Bit")]
		public System.Nullable<bool> IsEndLever
		{
			get
			{
				return this._IsEndLever;
			}
			set
			{
				if ((this._IsEndLever != value))
				{
					this.OnIsEndLeverChanging(value);
					this.SendPropertyChanging();
					this._IsEndLever = value;
					this.SendPropertyChanged("IsEndLever");
					this.OnIsEndLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostIds", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostIds
		{
			get
			{
				return this._WorkPostIds;
			}
			set
			{
				if ((this._WorkPostIds != value))
				{
					this.OnWorkPostIdsChanging(value);
					this.SendPropertyChanging();
					this._WorkPostIds = value;
					this.SendPropertyChanged("WorkPostIds");
					this.OnWorkPostIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainingItem_Training_Training", Storage="_Training_TrainingItem", ThisKey="TrainingId", OtherKey="TrainingId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TrainingItem> Training_TrainingItem
		{
			get
			{
				return this._Training_TrainingItem;
			}
			set
			{
				this._Training_TrainingItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_TrainingItem(Training_TrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_Training = this;
		}
		
		private void detach_Training_TrainingItem(Training_TrainingItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_Training = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TrainingItem")]
	public partial class Training_TrainingItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainingItemId;
		
		private string _TrainingId;
		
		private string _TrainingItemCode;
		
		private string _TrainingItemName;
		
		private string _AttachUrl;
		
		private string _VersionNum;
		
		private string _ApproveState;
		
		private string _ResourcesFrom;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _ResourcesFromType;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private string _UpState;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Training_Training> _Training_Training;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainingItemIdChanging(string value);
    partial void OnTrainingItemIdChanged();
    partial void OnTrainingIdChanging(string value);
    partial void OnTrainingIdChanged();
    partial void OnTrainingItemCodeChanging(string value);
    partial void OnTrainingItemCodeChanged();
    partial void OnTrainingItemNameChanging(string value);
    partial void OnTrainingItemNameChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnVersionNumChanging(string value);
    partial void OnVersionNumChanged();
    partial void OnApproveStateChanging(string value);
    partial void OnApproveStateChanged();
    partial void OnResourcesFromChanging(string value);
    partial void OnResourcesFromChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnResourcesFromTypeChanging(string value);
    partial void OnResourcesFromTypeChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    #endregion
		
		public Training_TrainingItem()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Training_Training = default(EntityRef<Training_Training>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainingItemId
		{
			get
			{
				return this._TrainingItemId;
			}
			set
			{
				if ((this._TrainingItemId != value))
				{
					this.OnTrainingItemIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingItemId = value;
					this.SendPropertyChanged("TrainingItemId");
					this.OnTrainingItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50)")]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					if (this._Training_Training.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainingIdChanging(value);
					this.SendPropertyChanging();
					this._TrainingId = value;
					this.SendPropertyChanged("TrainingId");
					this.OnTrainingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemCode", DbType="NVarChar(50)")]
		public string TrainingItemCode
		{
			get
			{
				return this._TrainingItemCode;
			}
			set
			{
				if ((this._TrainingItemCode != value))
				{
					this.OnTrainingItemCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainingItemCode = value;
					this.SendPropertyChanged("TrainingItemCode");
					this.OnTrainingItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemName", DbType="NVarChar(100)")]
		public string TrainingItemName
		{
			get
			{
				return this._TrainingItemName;
			}
			set
			{
				if ((this._TrainingItemName != value))
				{
					this.OnTrainingItemNameChanging(value);
					this.SendPropertyChanging();
					this._TrainingItemName = value;
					this.SendPropertyChanged("TrainingItemName");
					this.OnTrainingItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNum", DbType="NVarChar(50)")]
		public string VersionNum
		{
			get
			{
				return this._VersionNum;
			}
			set
			{
				if ((this._VersionNum != value))
				{
					this.OnVersionNumChanging(value);
					this.SendPropertyChanging();
					this._VersionNum = value;
					this.SendPropertyChanged("VersionNum");
					this.OnVersionNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveState", DbType="Char(1)")]
		public string ApproveState
		{
			get
			{
				return this._ApproveState;
			}
			set
			{
				if ((this._ApproveState != value))
				{
					this.OnApproveStateChanging(value);
					this.SendPropertyChanging();
					this._ApproveState = value;
					this.SendPropertyChanged("ApproveState");
					this.OnApproveStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourcesFrom", DbType="NVarChar(200)")]
		public string ResourcesFrom
		{
			get
			{
				return this._ResourcesFrom;
			}
			set
			{
				if ((this._ResourcesFrom != value))
				{
					this.OnResourcesFromChanging(value);
					this.SendPropertyChanging();
					this._ResourcesFrom = value;
					this.SendPropertyChanged("ResourcesFrom");
					this.OnResourcesFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourcesFromType", DbType="Char(1)")]
		public string ResourcesFromType
		{
			get
			{
				return this._ResourcesFromType;
			}
			set
			{
				if ((this._ResourcesFromType != value))
				{
					this.OnResourcesFromTypeChanging(value);
					this.SendPropertyChanging();
					this._ResourcesFromType = value;
					this.SendPropertyChanged("ResourcesFromType");
					this.OnResourcesFromTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainingItem_Sys_User", Storage="_Sys_User", ThisKey="AuditMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Training_TrainingItem.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Training_TrainingItem.Add(this);
						this._AuditMan = value.UserId;
					}
					else
					{
						this._AuditMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainingItem_Training_Training", Storage="_Training_Training", ThisKey="TrainingId", OtherKey="TrainingId", IsForeignKey=true)]
		public Training_Training Training_Training
		{
			get
			{
				return this._Training_Training.Entity;
			}
			set
			{
				Training_Training previousValue = this._Training_Training.Entity;
				if (((previousValue != value) 
							|| (this._Training_Training.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_Training.Entity = null;
						previousValue.Training_TrainingItem.Remove(this);
					}
					this._Training_Training.Entity = value;
					if ((value != null))
					{
						value.Training_TrainingItem.Add(this);
						this._TrainingId = value.TrainingId;
					}
					else
					{
						this._TrainingId = default(string);
					}
					this.SendPropertyChanged("Training_Training");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TrainTestDB")]
	public partial class Training_TrainTestDB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainTestId;
		
		private string _TrainTestCode;
		
		private string _TrainTestName;
		
		private string _SupTrainTestId;
		
		private System.Nullable<bool> _IsEndLever;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private EntitySet<Training_TrainTestDBItem> _Training_TrainTestDBItem;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainTestIdChanging(string value);
    partial void OnTrainTestIdChanged();
    partial void OnTrainTestCodeChanging(string value);
    partial void OnTrainTestCodeChanged();
    partial void OnTrainTestNameChanging(string value);
    partial void OnTrainTestNameChanged();
    partial void OnSupTrainTestIdChanging(string value);
    partial void OnSupTrainTestIdChanged();
    partial void OnIsEndLeverChanging(System.Nullable<bool> value);
    partial void OnIsEndLeverChanged();
    partial void OnIsBuildChanging(System.Nullable<bool> value);
    partial void OnIsBuildChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    #endregion
		
		public Training_TrainTestDB()
		{
			this._Training_TrainTestDBItem = new EntitySet<Training_TrainTestDBItem>(new Action<Training_TrainTestDBItem>(this.attach_Training_TrainTestDBItem), new Action<Training_TrainTestDBItem>(this.detach_Training_TrainTestDBItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTestId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainTestId
		{
			get
			{
				return this._TrainTestId;
			}
			set
			{
				if ((this._TrainTestId != value))
				{
					this.OnTrainTestIdChanging(value);
					this.SendPropertyChanging();
					this._TrainTestId = value;
					this.SendPropertyChanged("TrainTestId");
					this.OnTrainTestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTestCode", DbType="NVarChar(50)")]
		public string TrainTestCode
		{
			get
			{
				return this._TrainTestCode;
			}
			set
			{
				if ((this._TrainTestCode != value))
				{
					this.OnTrainTestCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainTestCode = value;
					this.SendPropertyChanged("TrainTestCode");
					this.OnTrainTestCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTestName", DbType="NVarChar(50)")]
		public string TrainTestName
		{
			get
			{
				return this._TrainTestName;
			}
			set
			{
				if ((this._TrainTestName != value))
				{
					this.OnTrainTestNameChanging(value);
					this.SendPropertyChanging();
					this._TrainTestName = value;
					this.SendPropertyChanged("TrainTestName");
					this.OnTrainTestNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupTrainTestId", DbType="NVarChar(50)")]
		public string SupTrainTestId
		{
			get
			{
				return this._SupTrainTestId;
			}
			set
			{
				if ((this._SupTrainTestId != value))
				{
					this.OnSupTrainTestIdChanging(value);
					this.SendPropertyChanging();
					this._SupTrainTestId = value;
					this.SendPropertyChanged("SupTrainTestId");
					this.OnSupTrainTestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEndLever", DbType="Bit")]
		public System.Nullable<bool> IsEndLever
		{
			get
			{
				return this._IsEndLever;
			}
			set
			{
				if ((this._IsEndLever != value))
				{
					this.OnIsEndLeverChanging(value);
					this.SendPropertyChanging();
					this._IsEndLever = value;
					this.SendPropertyChanged("IsEndLever");
					this.OnIsEndLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this.OnIsBuildChanging(value);
					this.SendPropertyChanging();
					this._IsBuild = value;
					this.SendPropertyChanged("IsBuild");
					this.OnIsBuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainTestDBItem_Training_TrainTestDB", Storage="_Training_TrainTestDBItem", ThisKey="TrainTestId", OtherKey="TrainTestId", DeleteRule="NO ACTION")]
		public EntitySet<Training_TrainTestDBItem> Training_TrainTestDBItem
		{
			get
			{
				return this._Training_TrainTestDBItem;
			}
			set
			{
				this._Training_TrainTestDBItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Training_TrainTestDBItem(Training_TrainTestDBItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_TrainTestDB = this;
		}
		
		private void detach_Training_TrainTestDBItem(Training_TrainTestDBItem entity)
		{
			this.SendPropertyChanging();
			entity.Training_TrainTestDB = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Training_TrainTestDBItem")]
	public partial class Training_TrainTestDBItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrainTestItemId;
		
		private string _TrainTestId;
		
		private string _TrainTestItemCode;
		
		private string _TraiinTestItemName;
		
		private string _AttachUrl;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private string _UpState;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Training_TrainTestDB> _Training_TrainTestDB;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrainTestItemIdChanging(string value);
    partial void OnTrainTestItemIdChanged();
    partial void OnTrainTestIdChanging(string value);
    partial void OnTrainTestIdChanged();
    partial void OnTrainTestItemCodeChanging(string value);
    partial void OnTrainTestItemCodeChanged();
    partial void OnTraiinTestItemNameChanging(string value);
    partial void OnTraiinTestItemNameChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnAuditManChanging(string value);
    partial void OnAuditManChanged();
    partial void OnAuditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuditDateChanged();
    partial void OnIsPassChanging(System.Nullable<bool> value);
    partial void OnIsPassChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnUpStateChanging(string value);
    partial void OnUpStateChanged();
    #endregion
		
		public Training_TrainTestDBItem()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Training_TrainTestDB = default(EntityRef<Training_TrainTestDB>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTestItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrainTestItemId
		{
			get
			{
				return this._TrainTestItemId;
			}
			set
			{
				if ((this._TrainTestItemId != value))
				{
					this.OnTrainTestItemIdChanging(value);
					this.SendPropertyChanging();
					this._TrainTestItemId = value;
					this.SendPropertyChanged("TrainTestItemId");
					this.OnTrainTestItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTestId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainTestId
		{
			get
			{
				return this._TrainTestId;
			}
			set
			{
				if ((this._TrainTestId != value))
				{
					if (this._Training_TrainTestDB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrainTestIdChanging(value);
					this.SendPropertyChanging();
					this._TrainTestId = value;
					this.SendPropertyChanged("TrainTestId");
					this.OnTrainTestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainTestItemCode", DbType="NVarChar(50)")]
		public string TrainTestItemCode
		{
			get
			{
				return this._TrainTestItemCode;
			}
			set
			{
				if ((this._TrainTestItemCode != value))
				{
					this.OnTrainTestItemCodeChanging(value);
					this.SendPropertyChanging();
					this._TrainTestItemCode = value;
					this.SendPropertyChanged("TrainTestItemCode");
					this.OnTrainTestItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraiinTestItemName", DbType="NVarChar(50)")]
		public string TraiinTestItemName
		{
			get
			{
				return this._TraiinTestItemName;
			}
			set
			{
				if ((this._TraiinTestItemName != value))
				{
					this.OnTraiinTestItemNameChanging(value);
					this.SendPropertyChanging();
					this._TraiinTestItemName = value;
					this.SendPropertyChanged("TraiinTestItemName");
					this.OnTraiinTestItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuditManChanging(value);
					this.SendPropertyChanging();
					this._AuditMan = value;
					this.SendPropertyChanged("AuditMan");
					this.OnAuditManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this.OnUpStateChanging(value);
					this.SendPropertyChanging();
					this._UpState = value;
					this.SendPropertyChanged("UpState");
					this.OnUpStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainTestDBItem_Sys_User1", Storage="_Sys_User", ThisKey="AuditMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Training_TrainTestDBItem.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Training_TrainTestDBItem.Add(this);
						this._AuditMan = value.UserId;
					}
					else
					{
						this._AuditMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Training_TrainTestDBItem_Training_TrainTestDB", Storage="_Training_TrainTestDB", ThisKey="TrainTestId", OtherKey="TrainTestId", IsForeignKey=true)]
		public Training_TrainTestDB Training_TrainTestDB
		{
			get
			{
				return this._Training_TrainTestDB.Entity;
			}
			set
			{
				Training_TrainTestDB previousValue = this._Training_TrainTestDB.Entity;
				if (((previousValue != value) 
							|| (this._Training_TrainTestDB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Training_TrainTestDB.Entity = null;
						previousValue.Training_TrainTestDBItem.Remove(this);
					}
					this._Training_TrainTestDB.Entity = value;
					if ((value != null))
					{
						value.Training_TrainTestDBItem.Add(this);
						this._TrainTestId = value.TrainTestId;
					}
					else
					{
						this._TrainTestId = default(string);
					}
					this.SendPropertyChanged("Training_TrainTestDB");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unqualified_WorkContact")]
	public partial class Unqualified_WorkContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkContactId;
		
		private string _ProjectId;
		
		private string _Code;
		
		private string _ProposedUnitId;
		
		private string _MainSendUnitIds;
		
		private string _CCUnitIds;
		
		private string _Cause;
		
		private string _Contents;
		
		private string _IsReply;
		
		private string _AttachUrl;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _State;
		
		private System.Nullable<bool> _IsFinal;
		
		private string _ReturnAttachUrl;
		
		private string _ReOpinion;
		
		private EntityRef<Base_Project> _Base_Project;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntitySet<Unqualified_WorkContactApprove> _Unqualified_WorkContactApprove;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkContactIdChanging(string value);
    partial void OnWorkContactIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnProposedUnitIdChanging(string value);
    partial void OnProposedUnitIdChanged();
    partial void OnMainSendUnitIdsChanging(string value);
    partial void OnMainSendUnitIdsChanged();
    partial void OnCCUnitIdsChanging(string value);
    partial void OnCCUnitIdsChanged();
    partial void OnCauseChanging(string value);
    partial void OnCauseChanged();
    partial void OnContentsChanging(string value);
    partial void OnContentsChanged();
    partial void OnIsReplyChanging(string value);
    partial void OnIsReplyChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnCompileManChanging(string value);
    partial void OnCompileManChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnIsFinalChanging(System.Nullable<bool> value);
    partial void OnIsFinalChanged();
    partial void OnReturnAttachUrlChanging(string value);
    partial void OnReturnAttachUrlChanged();
    partial void OnReOpinionChanging(string value);
    partial void OnReOpinionChanged();
    #endregion
		
		public Unqualified_WorkContact()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._Unqualified_WorkContactApprove = new EntitySet<Unqualified_WorkContactApprove>(new Action<Unqualified_WorkContactApprove>(this.attach_Unqualified_WorkContactApprove), new Action<Unqualified_WorkContactApprove>(this.detach_Unqualified_WorkContactApprove));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkContactId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkContactId
		{
			get
			{
				return this._WorkContactId;
			}
			set
			{
				if ((this._WorkContactId != value))
				{
					this.OnWorkContactIdChanging(value);
					this.SendPropertyChanging();
					this._WorkContactId = value;
					this.SendPropertyChanged("WorkContactId");
					this.OnWorkContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposedUnitId", DbType="NVarChar(50)")]
		public string ProposedUnitId
		{
			get
			{
				return this._ProposedUnitId;
			}
			set
			{
				if ((this._ProposedUnitId != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProposedUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ProposedUnitId = value;
					this.SendPropertyChanged("ProposedUnitId");
					this.OnProposedUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainSendUnitIds", DbType="NVarChar(500)")]
		public string MainSendUnitIds
		{
			get
			{
				return this._MainSendUnitIds;
			}
			set
			{
				if ((this._MainSendUnitIds != value))
				{
					this.OnMainSendUnitIdsChanging(value);
					this.SendPropertyChanging();
					this._MainSendUnitIds = value;
					this.SendPropertyChanged("MainSendUnitIds");
					this.OnMainSendUnitIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCUnitIds", DbType="NVarChar(500)")]
		public string CCUnitIds
		{
			get
			{
				return this._CCUnitIds;
			}
			set
			{
				if ((this._CCUnitIds != value))
				{
					this.OnCCUnitIdsChanging(value);
					this.SendPropertyChanging();
					this._CCUnitIds = value;
					this.SendPropertyChanged("CCUnitIds");
					this.OnCCUnitIdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cause", DbType="NVarChar(200)")]
		public string Cause
		{
			get
			{
				return this._Cause;
			}
			set
			{
				if ((this._Cause != value))
				{
					this.OnCauseChanging(value);
					this.SendPropertyChanging();
					this._Cause = value;
					this.SendPropertyChanged("Cause");
					this.OnCauseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contents", DbType="NVarChar(2000)")]
		public string Contents
		{
			get
			{
				return this._Contents;
			}
			set
			{
				if ((this._Contents != value))
				{
					this.OnContentsChanging(value);
					this.SendPropertyChanging();
					this._Contents = value;
					this.SendPropertyChanged("Contents");
					this.OnContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReply", DbType="Char(1)")]
		public string IsReply
		{
			get
			{
				return this._IsReply;
			}
			set
			{
				if ((this._IsReply != value))
				{
					this.OnIsReplyChanging(value);
					this.SendPropertyChanging();
					this._IsReply = value;
					this.SendPropertyChanged("IsReply");
					this.OnIsReplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this.OnCompileManChanging(value);
					this.SendPropertyChanging();
					this._CompileMan = value;
					this.SendPropertyChanged("CompileMan");
					this.OnCompileManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFinal", DbType="Bit")]
		public System.Nullable<bool> IsFinal
		{
			get
			{
				return this._IsFinal;
			}
			set
			{
				if ((this._IsFinal != value))
				{
					this.OnIsFinalChanging(value);
					this.SendPropertyChanging();
					this._IsFinal = value;
					this.SendPropertyChanged("IsFinal");
					this.OnIsFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnAttachUrl", DbType="NVarChar(2000)")]
		public string ReturnAttachUrl
		{
			get
			{
				return this._ReturnAttachUrl;
			}
			set
			{
				if ((this._ReturnAttachUrl != value))
				{
					this.OnReturnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._ReturnAttachUrl = value;
					this.SendPropertyChanged("ReturnAttachUrl");
					this.OnReturnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReOpinion", DbType="NVarChar(2000)")]
		public string ReOpinion
		{
			get
			{
				return this._ReOpinion;
			}
			set
			{
				if ((this._ReOpinion != value))
				{
					this.OnReOpinionChanging(value);
					this.SendPropertyChanging();
					this._ReOpinion = value;
					this.SendPropertyChanged("ReOpinion");
					this.OnReOpinionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Unqualified_WorkContact_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.Unqualified_WorkContact.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.Unqualified_WorkContact.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Unqualified_WorkContact_Base_Unit", Storage="_Base_Unit", ThisKey="ProposedUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.Unqualified_WorkContact.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.Unqualified_WorkContact.Add(this);
						this._ProposedUnitId = value.UnitId;
					}
					else
					{
						this._ProposedUnitId = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Unqualified_WorkContactApprove_Unqualified_WorkContact", Storage="_Unqualified_WorkContactApprove", ThisKey="WorkContactId", OtherKey="WorkContactId", DeleteRule="NO ACTION")]
		public EntitySet<Unqualified_WorkContactApprove> Unqualified_WorkContactApprove
		{
			get
			{
				return this._Unqualified_WorkContactApprove;
			}
			set
			{
				this._Unqualified_WorkContactApprove.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Unqualified_WorkContactApprove(Unqualified_WorkContactApprove entity)
		{
			this.SendPropertyChanging();
			entity.Unqualified_WorkContact = this;
		}
		
		private void detach_Unqualified_WorkContactApprove(Unqualified_WorkContactApprove entity)
		{
			this.SendPropertyChanging();
			entity.Unqualified_WorkContact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unqualified_WorkContactApprove")]
	public partial class Unqualified_WorkContactApprove : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkContactApproveId;
		
		private string _WorkContactId;
		
		private string _ApproveMan;
		
		private System.Nullable<System.DateTime> _ApproveDate;
		
		private System.Nullable<bool> _IsAgree;
		
		private string _ApproveIdea;
		
		private string _ApproveType;
		
		private string _AttachUrl;
		
		private EntityRef<Sys_User> _Sys_User;
		
		private EntityRef<Unqualified_WorkContact> _Unqualified_WorkContact;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkContactApproveIdChanging(string value);
    partial void OnWorkContactApproveIdChanged();
    partial void OnWorkContactIdChanging(string value);
    partial void OnWorkContactIdChanged();
    partial void OnApproveManChanging(string value);
    partial void OnApproveManChanged();
    partial void OnApproveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApproveDateChanged();
    partial void OnIsAgreeChanging(System.Nullable<bool> value);
    partial void OnIsAgreeChanged();
    partial void OnApproveIdeaChanging(string value);
    partial void OnApproveIdeaChanged();
    partial void OnApproveTypeChanging(string value);
    partial void OnApproveTypeChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    #endregion
		
		public Unqualified_WorkContactApprove()
		{
			this._Sys_User = default(EntityRef<Sys_User>);
			this._Unqualified_WorkContact = default(EntityRef<Unqualified_WorkContact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkContactApproveId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkContactApproveId
		{
			get
			{
				return this._WorkContactApproveId;
			}
			set
			{
				if ((this._WorkContactApproveId != value))
				{
					this.OnWorkContactApproveIdChanging(value);
					this.SendPropertyChanging();
					this._WorkContactApproveId = value;
					this.SendPropertyChanged("WorkContactApproveId");
					this.OnWorkContactApproveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkContactId", DbType="NVarChar(50)")]
		public string WorkContactId
		{
			get
			{
				return this._WorkContactId;
			}
			set
			{
				if ((this._WorkContactId != value))
				{
					if (this._Unqualified_WorkContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkContactIdChanging(value);
					this.SendPropertyChanging();
					this._WorkContactId = value;
					this.SendPropertyChanged("WorkContactId");
					this.OnWorkContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveMan", DbType="NVarChar(50)")]
		public string ApproveMan
		{
			get
			{
				return this._ApproveMan;
			}
			set
			{
				if ((this._ApproveMan != value))
				{
					if (this._Sys_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApproveManChanging(value);
					this.SendPropertyChanging();
					this._ApproveMan = value;
					this.SendPropertyChanged("ApproveMan");
					this.OnApproveManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAgree", DbType="Bit")]
		public System.Nullable<bool> IsAgree
		{
			get
			{
				return this._IsAgree;
			}
			set
			{
				if ((this._IsAgree != value))
				{
					this.OnIsAgreeChanging(value);
					this.SendPropertyChanging();
					this._IsAgree = value;
					this.SendPropertyChanged("IsAgree");
					this.OnIsAgreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveIdea", DbType="NVarChar(200)")]
		public string ApproveIdea
		{
			get
			{
				return this._ApproveIdea;
			}
			set
			{
				if ((this._ApproveIdea != value))
				{
					this.OnApproveIdeaChanging(value);
					this.SendPropertyChanging();
					this._ApproveIdea = value;
					this.SendPropertyChanged("ApproveIdea");
					this.OnApproveIdeaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveType", DbType="Char(1)")]
		public string ApproveType
		{
			get
			{
				return this._ApproveType;
			}
			set
			{
				if ((this._ApproveType != value))
				{
					this.OnApproveTypeChanging(value);
					this.SendPropertyChanging();
					this._ApproveType = value;
					this.SendPropertyChanged("ApproveType");
					this.OnApproveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(200)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Unqualified_WorkContactApprove_Sys_User", Storage="_Sys_User", ThisKey="ApproveMan", OtherKey="UserId", IsForeignKey=true)]
		public Sys_User Sys_User
		{
			get
			{
				return this._Sys_User.Entity;
			}
			set
			{
				Sys_User previousValue = this._Sys_User.Entity;
				if (((previousValue != value) 
							|| (this._Sys_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sys_User.Entity = null;
						previousValue.Unqualified_WorkContactApprove.Remove(this);
					}
					this._Sys_User.Entity = value;
					if ((value != null))
					{
						value.Unqualified_WorkContactApprove.Add(this);
						this._ApproveMan = value.UserId;
					}
					else
					{
						this._ApproveMan = default(string);
					}
					this.SendPropertyChanged("Sys_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Unqualified_WorkContactApprove_Unqualified_WorkContact", Storage="_Unqualified_WorkContact", ThisKey="WorkContactId", OtherKey="WorkContactId", IsForeignKey=true)]
		public Unqualified_WorkContact Unqualified_WorkContact
		{
			get
			{
				return this._Unqualified_WorkContact.Entity;
			}
			set
			{
				Unqualified_WorkContact previousValue = this._Unqualified_WorkContact.Entity;
				if (((previousValue != value) 
							|| (this._Unqualified_WorkContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unqualified_WorkContact.Entity = null;
						previousValue.Unqualified_WorkContactApprove.Remove(this);
					}
					this._Unqualified_WorkContact.Entity = value;
					if ((value != null))
					{
						value.Unqualified_WorkContactApprove.Add(this);
						this._WorkContactId = value.WorkContactId;
					}
					else
					{
						this._WorkContactId = default(string);
					}
					this.SendPropertyChanged("Unqualified_WorkContact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_ActionPlan_ManagerRule")]
	public partial class View_ActionPlan_ManagerRule
	{
		
		private string _ManagerRuleId;
		
		private string _ManageRuleCode;
		
		private string _ProjectId;
		
		private string _OldManageRuleCode;
		
		private string _ManageRuleName;
		
		private string _ManageRuleTypeId;
		
		private string _VersionNo;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private System.Nullable<bool> _IsIssue;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _ShortRemark;
		
		private string _Remark;
		
		private string _State;
		
		private string _ManageRuleTypeCode;
		
		private string _ManageRuleTypeName;
		
		private string _AttachUrlName;
		
		public View_ActionPlan_ManagerRule()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerRuleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManagerRuleId
		{
			get
			{
				return this._ManagerRuleId;
			}
			set
			{
				if ((this._ManagerRuleId != value))
				{
					this._ManagerRuleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleCode", DbType="NVarChar(50)")]
		public string ManageRuleCode
		{
			get
			{
				return this._ManageRuleCode;
			}
			set
			{
				if ((this._ManageRuleCode != value))
				{
					this._ManageRuleCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldManageRuleCode", DbType="NVarChar(50)")]
		public string OldManageRuleCode
		{
			get
			{
				return this._OldManageRuleCode;
			}
			set
			{
				if ((this._OldManageRuleCode != value))
				{
					this._OldManageRuleCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleName", DbType="NVarChar(50)")]
		public string ManageRuleName
		{
			get
			{
				return this._ManageRuleName;
			}
			set
			{
				if ((this._ManageRuleName != value))
				{
					this._ManageRuleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleTypeId", DbType="NVarChar(50)")]
		public string ManageRuleTypeId
		{
			get
			{
				return this._ManageRuleTypeId;
			}
			set
			{
				if ((this._ManageRuleTypeId != value))
				{
					this._ManageRuleTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNo", DbType="NVarChar(50)")]
		public string VersionNo
		{
			get
			{
				return this._VersionNo;
			}
			set
			{
				if ((this._VersionNo != value))
				{
					this._VersionNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this._CompileMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this._CompileDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIssue", DbType="Bit")]
		public System.Nullable<bool> IsIssue
		{
			get
			{
				return this._IsIssue;
			}
			set
			{
				if ((this._IsIssue != value))
				{
					this._IsIssue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this._IssueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortRemark", DbType="NVarChar(1000)")]
		public string ShortRemark
		{
			get
			{
				return this._ShortRemark;
			}
			set
			{
				if ((this._ShortRemark != value))
				{
					this._ShortRemark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleTypeCode", DbType="NVarChar(50)")]
		public string ManageRuleTypeCode
		{
			get
			{
				return this._ManageRuleTypeCode;
			}
			set
			{
				if ((this._ManageRuleTypeCode != value))
				{
					this._ManageRuleTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleTypeName", DbType="NVarChar(50)")]
		public string ManageRuleTypeName
		{
			get
			{
				return this._ManageRuleTypeName;
			}
			set
			{
				if ((this._ManageRuleTypeName != value))
				{
					this._ManageRuleTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrlName", DbType="NVarChar(2000)")]
		public string AttachUrlName
		{
			get
			{
				return this._AttachUrlName;
			}
			set
			{
				if ((this._AttachUrlName != value))
				{
					this._AttachUrlName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Batch_BatchTrust")]
	public partial class View_Batch_BatchTrust
	{
		
		private string _TrustBatchId;
		
		private string _TrustBatchCode;
		
		private string _NewTrustBatchCode;
		
		private System.Nullable<System.DateTime> _TrustDate;
		
		private string _NDEUuit;
		
		private string _ProjectId;
		
		private string _ProjectCode;
		
		private string _UnitId;
		
		private string _UnitWorkId;
		
		private string _DetectionTypeId;
		
		private string _DetectionRateId;
		
		private System.Nullable<bool> _IsCheck;
		
		private System.Nullable<bool> _IsAudit;
		
		private string _TopointBatch;
		
		private string _UnitCode;
		
		private string _UnitName;
		
		private string _UnitWorkCode;
		
		private string _UnitWorkName;
		
		private string _DetectionTypeCode;
		
		private string _CheckTrustBatchId;
		
		public View_Batch_BatchTrust()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrustBatchId
		{
			get
			{
				return this._TrustBatchId;
			}
			set
			{
				if ((this._TrustBatchId != value))
				{
					this._TrustBatchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchCode", DbType="NVarChar(50)")]
		public string TrustBatchCode
		{
			get
			{
				return this._TrustBatchCode;
			}
			set
			{
				if ((this._TrustBatchCode != value))
				{
					this._TrustBatchCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewTrustBatchCode", DbType="NVarChar(52)")]
		public string NewTrustBatchCode
		{
			get
			{
				return this._NewTrustBatchCode;
			}
			set
			{
				if ((this._NewTrustBatchCode != value))
				{
					this._NewTrustBatchCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrustDate
		{
			get
			{
				return this._TrustDate;
			}
			set
			{
				if ((this._TrustDate != value))
				{
					this._TrustDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEUuit", DbType="NVarChar(50)")]
		public string NDEUuit
		{
			get
			{
				return this._NDEUuit;
			}
			set
			{
				if ((this._NDEUuit != value))
				{
					this._NDEUuit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="NVarChar(50)")]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this._ProjectCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					this._DetectionTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50)")]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					this._DetectionRateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCheck", DbType="Bit")]
		public System.Nullable<bool> IsCheck
		{
			get
			{
				return this._IsCheck;
			}
			set
			{
				if ((this._IsCheck != value))
				{
					this._IsCheck = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAudit", DbType="Bit")]
		public System.Nullable<bool> IsAudit
		{
			get
			{
				return this._IsAudit;
			}
			set
			{
				if ((this._IsAudit != value))
				{
					this._IsAudit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopointBatch", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string TopointBatch
		{
			get
			{
				return this._TopointBatch;
			}
			set
			{
				if ((this._TopointBatch != value))
				{
					this._TopointBatch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(100)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this._UnitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkCode", DbType="NVarChar(10)")]
		public string UnitWorkCode
		{
			get
			{
				return this._UnitWorkCode;
			}
			set
			{
				if ((this._UnitWorkCode != value))
				{
					this._UnitWorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkName", DbType="NVarChar(30)")]
		public string UnitWorkName
		{
			get
			{
				return this._UnitWorkName;
			}
			set
			{
				if ((this._UnitWorkName != value))
				{
					this._UnitWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeCode", DbType="NVarChar(50)")]
		public string DetectionTypeCode
		{
			get
			{
				return this._DetectionTypeCode;
			}
			set
			{
				if ((this._DetectionTypeCode != value))
				{
					this._DetectionTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckTrustBatchId", DbType="NVarChar(50)")]
		public string CheckTrustBatchId
		{
			get
			{
				return this._CheckTrustBatchId;
			}
			set
			{
				if ((this._CheckTrustBatchId != value))
				{
					this._CheckTrustBatchId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Batch_BatchTrustItem")]
	public partial class View_Batch_BatchTrustItem
	{
		
		private System.Nullable<long> _Number;
		
		private string _TrustBatchItemId;
		
		private string _TrustBatchId;
		
		private string _PointBatchItemId;
		
		private string _WeldJointId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _TrustNum;
		
		private string _TrustType;
		
		private System.Nullable<int> _RepairNum;
		
		private string _TrustBatchCode;
		
		private string _ProjectId;
		
		private string _UnitWorkCode;
		
		private string _PipelineCode;
		
		private string _PipingClassCode;
		
		private string _WeldJointCode;
		
		private string _MaterialCode;
		
		private string _JointArea;
		
		private string _WelderCode;
		
		private string _WeldTypeCode;
		
		private System.Nullable<decimal> _Dia;
		
		private System.Nullable<decimal> _Size;
		
		private System.Nullable<decimal> _Thickness;
		
		private string _WeldingMethodCode;
		
		private string _DetectionRateCode;
		
		private System.Nullable<System.DateTime> _PointDate;
		
		public View_Batch_BatchTrustItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="BigInt")]
		public System.Nullable<long> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrustBatchItemId
		{
			get
			{
				return this._TrustBatchItemId;
			}
			set
			{
				if ((this._TrustBatchItemId != value))
				{
					this._TrustBatchItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchId", DbType="NVarChar(50)")]
		public string TrustBatchId
		{
			get
			{
				return this._TrustBatchId;
			}
			set
			{
				if ((this._TrustBatchId != value))
				{
					this._TrustBatchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchItemId", DbType="NVarChar(50)")]
		public string PointBatchItemId
		{
			get
			{
				return this._PointBatchItemId;
			}
			set
			{
				if ((this._PointBatchItemId != value))
				{
					this._PointBatchItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this._WeldJointId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustNum", DbType="Int")]
		public System.Nullable<int> TrustNum
		{
			get
			{
				return this._TrustNum;
			}
			set
			{
				if ((this._TrustNum != value))
				{
					this._TrustNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustType", DbType="NVarChar(1)")]
		public string TrustType
		{
			get
			{
				return this._TrustType;
			}
			set
			{
				if ((this._TrustType != value))
				{
					this._TrustType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairNum", DbType="Int")]
		public System.Nullable<int> RepairNum
		{
			get
			{
				return this._RepairNum;
			}
			set
			{
				if ((this._RepairNum != value))
				{
					this._RepairNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchCode", DbType="NVarChar(50)")]
		public string TrustBatchCode
		{
			get
			{
				return this._TrustBatchCode;
			}
			set
			{
				if ((this._TrustBatchCode != value))
				{
					this._TrustBatchCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkCode", DbType="NVarChar(10)")]
		public string UnitWorkCode
		{
			get
			{
				return this._UnitWorkCode;
			}
			set
			{
				if ((this._UnitWorkCode != value))
				{
					this._UnitWorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this._PipelineCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassCode", DbType="NVarChar(50)")]
		public string PipingClassCode
		{
			get
			{
				return this._PipingClassCode;
			}
			set
			{
				if ((this._PipingClassCode != value))
				{
					this._PipingClassCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointCode", DbType="NVarChar(50)")]
		public string WeldJointCode
		{
			get
			{
				return this._WeldJointCode;
			}
			set
			{
				if ((this._WeldJointCode != value))
				{
					this._WeldJointCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="NVarChar(50)")]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this._MaterialCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointArea", DbType="NVarChar(50)")]
		public string JointArea
		{
			get
			{
				return this._JointArea;
			}
			set
			{
				if ((this._JointArea != value))
				{
					this._JointArea = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderCode", DbType="NVarChar(50)")]
		public string WelderCode
		{
			get
			{
				return this._WelderCode;
			}
			set
			{
				if ((this._WelderCode != value))
				{
					this._WelderCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldTypeCode", DbType="NVarChar(50)")]
		public string WeldTypeCode
		{
			get
			{
				return this._WeldTypeCode;
			}
			set
			{
				if ((this._WeldTypeCode != value))
				{
					this._WeldTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dia", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Dia
		{
			get
			{
				return this._Dia;
			}
			set
			{
				if ((this._Dia != value))
				{
					this._Dia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Thickness
		{
			get
			{
				return this._Thickness;
			}
			set
			{
				if ((this._Thickness != value))
				{
					this._Thickness = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodCode", DbType="NVarChar(50)")]
		public string WeldingMethodCode
		{
			get
			{
				return this._WeldingMethodCode;
			}
			set
			{
				if ((this._WeldingMethodCode != value))
				{
					this._WeldingMethodCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateCode", DbType="NVarChar(50)")]
		public string DetectionRateCode
		{
			get
			{
				return this._DetectionRateCode;
			}
			set
			{
				if ((this._DetectionRateCode != value))
				{
					this._DetectionRateCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PointDate
		{
			get
			{
				return this._PointDate;
			}
			set
			{
				if ((this._PointDate != value))
				{
					this._PointDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Batch_NDE")]
	public partial class View_Batch_NDE
	{
		
		private string _NDEID;
		
		private string _TrustBatchId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _UnitWorkId;
		
		private string _NDEUnit;
		
		private string _NDECode;
		
		private System.Nullable<System.DateTime> _NDEDate;
		
		private string _NDEMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _Remark;
		
		private string _UnitName;
		
		private string _NDEUnitName;
		
		private string _UnitWorkName;
		
		private string _TrustBatchCode;
		
		private string _DetectionTypeId;
		
		private string _DetectionTypeCode;
		
		public View_Batch_NDE()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NDEID
		{
			get
			{
				return this._NDEID;
			}
			set
			{
				if ((this._NDEID != value))
				{
					this._NDEID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchId", DbType="NVarChar(50)")]
		public string TrustBatchId
		{
			get
			{
				return this._TrustBatchId;
			}
			set
			{
				if ((this._TrustBatchId != value))
				{
					this._TrustBatchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEUnit", DbType="NVarChar(50)")]
		public string NDEUnit
		{
			get
			{
				return this._NDEUnit;
			}
			set
			{
				if ((this._NDEUnit != value))
				{
					this._NDEUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDECode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NDECode
		{
			get
			{
				return this._NDECode;
			}
			set
			{
				if ((this._NDECode != value))
				{
					this._NDECode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NDEDate
		{
			get
			{
				return this._NDEDate;
			}
			set
			{
				if ((this._NDEDate != value))
				{
					this._NDEDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEMan", DbType="VarChar(50)")]
		public string NDEMan
		{
			get
			{
				return this._NDEMan;
			}
			set
			{
				if ((this._NDEMan != value))
				{
					this._NDEMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this._AuditDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEUnitName", DbType="NVarChar(200)")]
		public string NDEUnitName
		{
			get
			{
				return this._NDEUnitName;
			}
			set
			{
				if ((this._NDEUnitName != value))
				{
					this._NDEUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkName", DbType="NVarChar(30)")]
		public string UnitWorkName
		{
			get
			{
				return this._UnitWorkName;
			}
			set
			{
				if ((this._UnitWorkName != value))
				{
					this._UnitWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchCode", DbType="NVarChar(50)")]
		public string TrustBatchCode
		{
			get
			{
				return this._TrustBatchCode;
			}
			set
			{
				if ((this._TrustBatchCode != value))
				{
					this._TrustBatchCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					this._DetectionTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeCode", DbType="NVarChar(50)")]
		public string DetectionTypeCode
		{
			get
			{
				return this._DetectionTypeCode;
			}
			set
			{
				if ((this._DetectionTypeCode != value))
				{
					this._DetectionTypeCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Batch_NDEItem")]
	public partial class View_Batch_NDEItem
	{
		
		private string _NDEItemID;
		
		private string _NDEID;
		
		private string _TrustBatchItemId;
		
		private string _TrustBatchCode;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _DetectionTypeId;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private string _RepairLocation;
		
		private System.Nullable<int> _TotalFilm;
		
		private System.Nullable<int> _PassFilm;
		
		private string _CheckResult;
		
		private string _NDEReportNo;
		
		private System.Nullable<System.DateTime> _FilmDate;
		
		private System.Nullable<System.DateTime> _ReportDate;
		
		private System.Nullable<System.DateTime> _SubmitDate;
		
		private string _CheckDefects;
		
		private string _JudgeGrade;
		
		private string _Remark;
		
		private string _CheckResultStr;
		
		private string _PipelineCode;
		
		private string _WeldJointCode;
		
		private string _WeldJointId;
		
		private string _WeldingDailyId;
		
		private string _UnitWorkId;
		
		private string _UnitWorkCode;
		
		private string _WelderCode;
		
		private string _BackingWelderId;
		
		public View_Batch_NDEItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEItemID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NDEItemID
		{
			get
			{
				return this._NDEItemID;
			}
			set
			{
				if ((this._NDEItemID != value))
				{
					this._NDEItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NDEID
		{
			get
			{
				return this._NDEID;
			}
			set
			{
				if ((this._NDEID != value))
				{
					this._NDEID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchItemId", DbType="NVarChar(50)")]
		public string TrustBatchItemId
		{
			get
			{
				return this._TrustBatchItemId;
			}
			set
			{
				if ((this._TrustBatchItemId != value))
				{
					this._TrustBatchItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrustBatchCode", DbType="NVarChar(50)")]
		public string TrustBatchCode
		{
			get
			{
				return this._TrustBatchCode;
			}
			set
			{
				if ((this._TrustBatchCode != value))
				{
					this._TrustBatchCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					this._DetectionTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this._RequestDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairLocation", DbType="NVarChar(50)")]
		public string RepairLocation
		{
			get
			{
				return this._RepairLocation;
			}
			set
			{
				if ((this._RepairLocation != value))
				{
					this._RepairLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFilm", DbType="Int")]
		public System.Nullable<int> TotalFilm
		{
			get
			{
				return this._TotalFilm;
			}
			set
			{
				if ((this._TotalFilm != value))
				{
					this._TotalFilm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassFilm", DbType="Int")]
		public System.Nullable<int> PassFilm
		{
			get
			{
				return this._PassFilm;
			}
			set
			{
				if ((this._PassFilm != value))
				{
					this._PassFilm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckResult", DbType="VarChar(20)")]
		public string CheckResult
		{
			get
			{
				return this._CheckResult;
			}
			set
			{
				if ((this._CheckResult != value))
				{
					this._CheckResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEReportNo", DbType="VarChar(30)")]
		public string NDEReportNo
		{
			get
			{
				return this._NDEReportNo;
			}
			set
			{
				if ((this._NDEReportNo != value))
				{
					this._NDEReportNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FilmDate
		{
			get
			{
				return this._FilmDate;
			}
			set
			{
				if ((this._FilmDate != value))
				{
					this._FilmDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReportDate
		{
			get
			{
				return this._ReportDate;
			}
			set
			{
				if ((this._ReportDate != value))
				{
					this._ReportDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubmitDate
		{
			get
			{
				return this._SubmitDate;
			}
			set
			{
				if ((this._SubmitDate != value))
				{
					this._SubmitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDefects", DbType="NVarChar(100)")]
		public string CheckDefects
		{
			get
			{
				return this._CheckDefects;
			}
			set
			{
				if ((this._CheckDefects != value))
				{
					this._CheckDefects = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JudgeGrade", DbType="NVarChar(10)")]
		public string JudgeGrade
		{
			get
			{
				return this._JudgeGrade;
			}
			set
			{
				if ((this._JudgeGrade != value))
				{
					this._JudgeGrade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="VarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckResultStr", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string CheckResultStr
		{
			get
			{
				return this._CheckResultStr;
			}
			set
			{
				if ((this._CheckResultStr != value))
				{
					this._CheckResultStr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this._PipelineCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointCode", DbType="NVarChar(50)")]
		public string WeldJointCode
		{
			get
			{
				return this._WeldJointCode;
			}
			set
			{
				if ((this._WeldJointCode != value))
				{
					this._WeldJointCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this._WeldJointId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDailyId", DbType="NVarChar(50)")]
		public string WeldingDailyId
		{
			get
			{
				return this._WeldingDailyId;
			}
			set
			{
				if ((this._WeldingDailyId != value))
				{
					this._WeldingDailyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkCode", DbType="NVarChar(10)")]
		public string UnitWorkCode
		{
			get
			{
				return this._UnitWorkCode;
			}
			set
			{
				if ((this._UnitWorkCode != value))
				{
					this._UnitWorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderCode", DbType="NVarChar(50)")]
		public string WelderCode
		{
			get
			{
				return this._WelderCode;
			}
			set
			{
				if ((this._WelderCode != value))
				{
					this._WelderCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackingWelderId", DbType="NVarChar(50)")]
		public string BackingWelderId
		{
			get
			{
				return this._BackingWelderId;
			}
			set
			{
				if ((this._BackingWelderId != value))
				{
					this._BackingWelderId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Check_JointCheckDetail")]
	public partial class View_Check_JointCheckDetail
	{
		
		private string _JointCheckDetailId;
		
		private string _JointCheckId;
		
		private string _UnitWorkId;
		
		private string _CNProfessionalCode;
		
		private string _QuestionDef;
		
		private string _QuestionType;
		
		private string _CheckSite;
		
		private string _Standard;
		
		private string _RectifyOpinion;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private string _AttachUrl;
		
		private string _HandleWay;
		
		private System.Nullable<System.DateTime> _RectifyDate;
		
		private string _ReAttachUrl;
		
		private string _Feedback;
		
		private System.Nullable<bool> _IsOK;
		
		private string _ProjectId;
		
		private string _CheckType;
		
		private string _UnitId;
		
		private string _UnitName;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private string _State;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _HandleMan;
		
		private string _SaveHandleMan;
		
		private int _OK;
		
		private string _CheckTypeStr;
		
		private string _QuestionTypeStr;
		
		private string _ProposeUnitName;
		
		private string _ProposeUnitType;
		
		private System.Nullable<System.DateTime> _OKDate;
		
		private string _UnitWorkName;
		
		private string _ProfessionalName;
		
		public View_Check_JointCheckDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCheckDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JointCheckDetailId
		{
			get
			{
				return this._JointCheckDetailId;
			}
			set
			{
				if ((this._JointCheckDetailId != value))
				{
					this._JointCheckDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCheckId", DbType="NVarChar(50)")]
		public string JointCheckId
		{
			get
			{
				return this._JointCheckId;
			}
			set
			{
				if ((this._JointCheckId != value))
				{
					this._JointCheckId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNProfessionalCode", DbType="NVarChar(50)")]
		public string CNProfessionalCode
		{
			get
			{
				return this._CNProfessionalCode;
			}
			set
			{
				if ((this._CNProfessionalCode != value))
				{
					this._CNProfessionalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionDef", DbType="NVarChar(500)")]
		public string QuestionDef
		{
			get
			{
				return this._QuestionDef;
			}
			set
			{
				if ((this._QuestionDef != value))
				{
					this._QuestionDef = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionType", DbType="NVarChar(50)")]
		public string QuestionType
		{
			get
			{
				return this._QuestionType;
			}
			set
			{
				if ((this._QuestionType != value))
				{
					this._QuestionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckSite", DbType="NVarChar(50)")]
		public string CheckSite
		{
			get
			{
				return this._CheckSite;
			}
			set
			{
				if ((this._CheckSite != value))
				{
					this._CheckSite = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(50)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this._Standard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyOpinion", DbType="NVarChar(500)")]
		public string RectifyOpinion
		{
			get
			{
				return this._RectifyOpinion;
			}
			set
			{
				if ((this._RectifyOpinion != value))
				{
					this._RectifyOpinion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this._LimitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandleWay", DbType="NVarChar(500)")]
		public string HandleWay
		{
			get
			{
				return this._HandleWay;
			}
			set
			{
				if ((this._HandleWay != value))
				{
					this._HandleWay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RectifyDate
		{
			get
			{
				return this._RectifyDate;
			}
			set
			{
				if ((this._RectifyDate != value))
				{
					this._RectifyDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReAttachUrl", DbType="NVarChar(2000)")]
		public string ReAttachUrl
		{
			get
			{
				return this._ReAttachUrl;
			}
			set
			{
				if ((this._ReAttachUrl != value))
				{
					this._ReAttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="NVarChar(500)")]
		public string Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this._Feedback = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOK", DbType="Bit")]
		public System.Nullable<bool> IsOK
		{
			get
			{
				return this._IsOK;
			}
			set
			{
				if ((this._IsOK != value))
				{
					this._IsOK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckType", DbType="VarChar(1)")]
		public string CheckType
		{
			get
			{
				return this._CheckType;
			}
			set
			{
				if ((this._CheckType != value))
				{
					this._CheckType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this._CheckDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HandleMan", DbType="NVarChar(50)")]
		public string HandleMan
		{
			get
			{
				return this._HandleMan;
			}
			set
			{
				if ((this._HandleMan != value))
				{
					this._HandleMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveHandleMan", DbType="NVarChar(50)")]
		public string SaveHandleMan
		{
			get
			{
				return this._SaveHandleMan;
			}
			set
			{
				if ((this._SaveHandleMan != value))
				{
					this._SaveHandleMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OK", DbType="Int NOT NULL")]
		public int OK
		{
			get
			{
				return this._OK;
			}
			set
			{
				if ((this._OK != value))
				{
					this._OK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckTypeStr", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CheckTypeStr
		{
			get
			{
				return this._CheckTypeStr;
			}
			set
			{
				if ((this._CheckTypeStr != value))
				{
					this._CheckTypeStr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTypeStr", DbType="NVarChar(50)")]
		public string QuestionTypeStr
		{
			get
			{
				return this._QuestionTypeStr;
			}
			set
			{
				if ((this._QuestionTypeStr != value))
				{
					this._QuestionTypeStr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposeUnitName", DbType="NVarChar(200)")]
		public string ProposeUnitName
		{
			get
			{
				return this._ProposeUnitName;
			}
			set
			{
				if ((this._ProposeUnitName != value))
				{
					this._ProposeUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposeUnitType", DbType="NVarChar(50)")]
		public string ProposeUnitType
		{
			get
			{
				return this._ProposeUnitType;
			}
			set
			{
				if ((this._ProposeUnitType != value))
				{
					this._ProposeUnitType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OKDate
		{
			get
			{
				return this._OKDate;
			}
			set
			{
				if ((this._OKDate != value))
				{
					this._OKDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkName", DbType="NVarChar(30)")]
		public string UnitWorkName
		{
			get
			{
				return this._UnitWorkName;
			}
			set
			{
				if ((this._UnitWorkName != value))
				{
					this._UnitWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessionalName", DbType="NVarChar(30)")]
		public string ProfessionalName
		{
			get
			{
				return this._ProfessionalName;
			}
			set
			{
				if ((this._ProfessionalName != value))
				{
					this._ProfessionalName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Check_SoptCheckDetail")]
	public partial class View_Check_SoptCheckDetail
	{
		
		private string _SpotCheckDetailId;
		
		private string _SpotCheckCode;
		
		private string _ControlItemAndCycleId;
		
		private System.Nullable<bool> _IsOnesOK;
		
		private System.Nullable<bool> _IsOK;
		
		private System.Nullable<System.DateTime> _ConfirmDate;
		
		private string _RectifyDescription;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _IsDataOK;
		
		private System.Nullable<System.DateTime> _DataConfirmDate;
		
		private string _ControlPoint;
		
		private string _ProjectId;
		
		private string _CNProfessionalCode;
		
		private string _UnitId;
		
		private string _UnitName;
		
		private System.Nullable<System.DateTime> _SpotCheckDate;
		
		private System.Nullable<System.DateTime> _SpotCheckDate2;
		
		private string _State;
		
		private string _ProposeUnitName;
		
		private string _UnitWorkId;
		
		private string _UnitWorkName;
		
		private string _ProfessionalName;
		
		public View_Check_SoptCheckDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpotCheckDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SpotCheckDetailId
		{
			get
			{
				return this._SpotCheckDetailId;
			}
			set
			{
				if ((this._SpotCheckDetailId != value))
				{
					this._SpotCheckDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpotCheckCode", DbType="NVarChar(50)")]
		public string SpotCheckCode
		{
			get
			{
				return this._SpotCheckCode;
			}
			set
			{
				if ((this._SpotCheckCode != value))
				{
					this._SpotCheckCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemAndCycleId", DbType="NVarChar(50)")]
		public string ControlItemAndCycleId
		{
			get
			{
				return this._ControlItemAndCycleId;
			}
			set
			{
				if ((this._ControlItemAndCycleId != value))
				{
					this._ControlItemAndCycleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnesOK", DbType="Bit")]
		public System.Nullable<bool> IsOnesOK
		{
			get
			{
				return this._IsOnesOK;
			}
			set
			{
				if ((this._IsOnesOK != value))
				{
					this._IsOnesOK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOK", DbType="Bit")]
		public System.Nullable<bool> IsOK
		{
			get
			{
				return this._IsOK;
			}
			set
			{
				if ((this._IsOK != value))
				{
					this._IsOK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmDate
		{
			get
			{
				return this._ConfirmDate;
			}
			set
			{
				if ((this._ConfirmDate != value))
				{
					this._ConfirmDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RectifyDescription", DbType="NVarChar(500)")]
		public string RectifyDescription
		{
			get
			{
				return this._RectifyDescription;
			}
			set
			{
				if ((this._RectifyDescription != value))
				{
					this._RectifyDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDataOK", DbType="Char(1)")]
		public string IsDataOK
		{
			get
			{
				return this._IsDataOK;
			}
			set
			{
				if ((this._IsDataOK != value))
				{
					this._IsDataOK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataConfirmDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataConfirmDate
		{
			get
			{
				return this._DataConfirmDate;
			}
			set
			{
				if ((this._DataConfirmDate != value))
				{
					this._DataConfirmDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlPoint", DbType="NVarChar(10)")]
		public string ControlPoint
		{
			get
			{
				return this._ControlPoint;
			}
			set
			{
				if ((this._ControlPoint != value))
				{
					this._ControlPoint = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNProfessionalCode", DbType="NVarChar(10)")]
		public string CNProfessionalCode
		{
			get
			{
				return this._CNProfessionalCode;
			}
			set
			{
				if ((this._CNProfessionalCode != value))
				{
					this._CNProfessionalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(500)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpotCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SpotCheckDate
		{
			get
			{
				return this._SpotCheckDate;
			}
			set
			{
				if ((this._SpotCheckDate != value))
				{
					this._SpotCheckDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpotCheckDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> SpotCheckDate2
		{
			get
			{
				return this._SpotCheckDate2;
			}
			set
			{
				if ((this._SpotCheckDate2 != value))
				{
					this._SpotCheckDate2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposeUnitName", DbType="NVarChar(200)")]
		public string ProposeUnitName
		{
			get
			{
				return this._ProposeUnitName;
			}
			set
			{
				if ((this._ProposeUnitName != value))
				{
					this._ProposeUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkName", DbType="NVarChar(30)")]
		public string UnitWorkName
		{
			get
			{
				return this._UnitWorkName;
			}
			set
			{
				if ((this._UnitWorkName != value))
				{
					this._UnitWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessionalName", DbType="NVarChar(30)")]
		public string ProfessionalName
		{
			get
			{
				return this._ProfessionalName;
			}
			set
			{
				if ((this._ProfessionalName != value))
				{
					this._ProfessionalName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_DayRportView")]
	public partial class View_DayRportView
	{
		
		private string _DayReportUnitDetailId;
		
		private string _DayReportDetailId;
		
		private string _PostId;
		
		private System.Nullable<int> _CheckPersonNum;
		
		private System.Nullable<int> _RealPersonNum;
		
		private System.Nullable<decimal> _PersonWorkTime;
		
		private string _WorkPostName;
		
		private string _UnitId;
		
		private System.Nullable<decimal> _WorkTime;
		
		private string _StaffData;
		
		private System.Nullable<decimal> _DayNum;
		
		private System.Nullable<int> _YearPersonWorkTime;
		
		private string _UnitName;
		
		private string _DayReportId;
		
		private string _ProjectId;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<decimal> _TotalPersonWorkTime;
		
		private string _States;
		
		public View_DayRportView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayReportUnitDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DayReportUnitDetailId
		{
			get
			{
				return this._DayReportUnitDetailId;
			}
			set
			{
				if ((this._DayReportUnitDetailId != value))
				{
					this._DayReportUnitDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayReportDetailId", DbType="NVarChar(50)")]
		public string DayReportDetailId
		{
			get
			{
				return this._DayReportDetailId;
			}
			set
			{
				if ((this._DayReportDetailId != value))
				{
					this._DayReportDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="NVarChar(50)")]
		public string PostId
		{
			get
			{
				return this._PostId;
			}
			set
			{
				if ((this._PostId != value))
				{
					this._PostId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPersonNum", DbType="Int")]
		public System.Nullable<int> CheckPersonNum
		{
			get
			{
				return this._CheckPersonNum;
			}
			set
			{
				if ((this._CheckPersonNum != value))
				{
					this._CheckPersonNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPersonNum", DbType="Int")]
		public System.Nullable<int> RealPersonNum
		{
			get
			{
				return this._RealPersonNum;
			}
			set
			{
				if ((this._RealPersonNum != value))
				{
					this._RealPersonNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PersonWorkTime
		{
			get
			{
				return this._PersonWorkTime;
			}
			set
			{
				if ((this._PersonWorkTime != value))
				{
					this._PersonWorkTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostName", DbType="NVarChar(100)")]
		public string WorkPostName
		{
			get
			{
				return this._WorkPostName;
			}
			set
			{
				if ((this._WorkPostName != value))
				{
					this._WorkPostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this._WorkTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffData", DbType="NVarChar(2000)")]
		public string StaffData
		{
			get
			{
				return this._StaffData;
			}
			set
			{
				if ((this._StaffData != value))
				{
					this._StaffData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayNum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DayNum
		{
			get
			{
				return this._DayNum;
			}
			set
			{
				if ((this._DayNum != value))
				{
					this._DayNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearPersonWorkTime", DbType="Int")]
		public System.Nullable<int> YearPersonWorkTime
		{
			get
			{
				return this._YearPersonWorkTime;
			}
			set
			{
				if ((this._YearPersonWorkTime != value))
				{
					this._YearPersonWorkTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayReportId", DbType="NVarChar(50)")]
		public string DayReportId
		{
			get
			{
				return this._DayReportId;
			}
			set
			{
				if ((this._DayReportId != value))
				{
					this._DayReportId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this._CompileMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this._CompileDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPersonWorkTime
		{
			get
			{
				return this._TotalPersonWorkTime;
			}
			set
			{
				if ((this._TotalPersonWorkTime != value))
				{
					this._TotalPersonWorkTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this._States = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_GenerateTrust")]
	public partial class View_GenerateTrust
	{
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _UnitId;
		
		private string _DetectionTypeId;
		
		private string _DetectionRateId;
		
		public View_GenerateTrust()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					this._DetectionTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50)")]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					this._DetectionRateId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_GenerateTrustItem")]
	public partial class View_GenerateTrustItem
	{
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _UnitId;
		
		private string _DetectionTypeId;
		
		private string _DetectionRateId;
		
		private string _PointBatchItemId;
		
		private string _PointBatchId;
		
		private string _WeldJointId;
		
		public View_GenerateTrustItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					this._DetectionTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50)")]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					this._DetectionRateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PointBatchItemId
		{
			get
			{
				return this._PointBatchItemId;
			}
			set
			{
				if ((this._PointBatchItemId != value))
				{
					this._PointBatchItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchId", DbType="NVarChar(50)")]
		public string PointBatchId
		{
			get
			{
				return this._PointBatchId;
			}
			set
			{
				if ((this._PointBatchId != value))
				{
					this._PointBatchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this._WeldJointId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Hazard_EnvironmentalRiskItem")]
	public partial class View_Hazard_EnvironmentalRiskItem
	{
		
		private string _EnvironmentalRiskItemId;
		
		private string _EnvironmentalRiskListId;
		
		private string _EType;
		
		private string _ActivePoint;
		
		private string _EnvironmentalFactors;
		
		private System.Nullable<int> _AValue;
		
		private System.Nullable<int> _BValue;
		
		private System.Nullable<int> _CValue;
		
		private System.Nullable<int> _DValue;
		
		private System.Nullable<int> _EValue;
		
		private System.Nullable<int> _ZValue1;
		
		private System.Nullable<int> _FValue;
		
		private System.Nullable<int> _GValue;
		
		private System.Nullable<int> _ZValue2;
		
		private string _SmallType;
		
		private System.Nullable<bool> _IsImportant;
		
		private string _Code;
		
		private string _ETypeName;
		
		private string _SmallTypeName;
		
		private string _EnvironmentalId;
		
		private string _ControlMeasures;
		
		private string _Remark;
		
		private string _EnvironmentEffect;
		
		public View_Hazard_EnvironmentalRiskItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalRiskItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EnvironmentalRiskItemId
		{
			get
			{
				return this._EnvironmentalRiskItemId;
			}
			set
			{
				if ((this._EnvironmentalRiskItemId != value))
				{
					this._EnvironmentalRiskItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalRiskListId", DbType="NVarChar(50)")]
		public string EnvironmentalRiskListId
		{
			get
			{
				return this._EnvironmentalRiskListId;
			}
			set
			{
				if ((this._EnvironmentalRiskListId != value))
				{
					this._EnvironmentalRiskListId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EType", DbType="NVarChar(100)")]
		public string EType
		{
			get
			{
				return this._EType;
			}
			set
			{
				if ((this._EType != value))
				{
					this._EType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivePoint", DbType="NVarChar(500)")]
		public string ActivePoint
		{
			get
			{
				return this._ActivePoint;
			}
			set
			{
				if ((this._ActivePoint != value))
				{
					this._ActivePoint = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalFactors", DbType="NVarChar(500)")]
		public string EnvironmentalFactors
		{
			get
			{
				return this._EnvironmentalFactors;
			}
			set
			{
				if ((this._EnvironmentalFactors != value))
				{
					this._EnvironmentalFactors = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AValue", DbType="Int")]
		public System.Nullable<int> AValue
		{
			get
			{
				return this._AValue;
			}
			set
			{
				if ((this._AValue != value))
				{
					this._AValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BValue", DbType="Int")]
		public System.Nullable<int> BValue
		{
			get
			{
				return this._BValue;
			}
			set
			{
				if ((this._BValue != value))
				{
					this._BValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CValue", DbType="Int")]
		public System.Nullable<int> CValue
		{
			get
			{
				return this._CValue;
			}
			set
			{
				if ((this._CValue != value))
				{
					this._CValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DValue", DbType="Int")]
		public System.Nullable<int> DValue
		{
			get
			{
				return this._DValue;
			}
			set
			{
				if ((this._DValue != value))
				{
					this._DValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EValue", DbType="Int")]
		public System.Nullable<int> EValue
		{
			get
			{
				return this._EValue;
			}
			set
			{
				if ((this._EValue != value))
				{
					this._EValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZValue1", DbType="Int")]
		public System.Nullable<int> ZValue1
		{
			get
			{
				return this._ZValue1;
			}
			set
			{
				if ((this._ZValue1 != value))
				{
					this._ZValue1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FValue", DbType="Int")]
		public System.Nullable<int> FValue
		{
			get
			{
				return this._FValue;
			}
			set
			{
				if ((this._FValue != value))
				{
					this._FValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GValue", DbType="Int")]
		public System.Nullable<int> GValue
		{
			get
			{
				return this._GValue;
			}
			set
			{
				if ((this._GValue != value))
				{
					this._GValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZValue2", DbType="Int")]
		public System.Nullable<int> ZValue2
		{
			get
			{
				return this._ZValue2;
			}
			set
			{
				if ((this._ZValue2 != value))
				{
					this._ZValue2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallType", DbType="NVarChar(50)")]
		public string SmallType
		{
			get
			{
				return this._SmallType;
			}
			set
			{
				if ((this._SmallType != value))
				{
					this._SmallType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsImportant", DbType="Bit")]
		public System.Nullable<bool> IsImportant
		{
			get
			{
				return this._IsImportant;
			}
			set
			{
				if ((this._IsImportant != value))
				{
					this._IsImportant = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETypeName", DbType="NVarChar(100)")]
		public string ETypeName
		{
			get
			{
				return this._ETypeName;
			}
			set
			{
				if ((this._ETypeName != value))
				{
					this._ETypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmallTypeName", DbType="NVarChar(100)")]
		public string SmallTypeName
		{
			get
			{
				return this._SmallTypeName;
			}
			set
			{
				if ((this._SmallTypeName != value))
				{
					this._SmallTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalId", DbType="NVarChar(50)")]
		public string EnvironmentalId
		{
			get
			{
				return this._EnvironmentalId;
			}
			set
			{
				if ((this._EnvironmentalId != value))
				{
					this._EnvironmentalId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlMeasures", DbType="NVarChar(800)")]
		public string ControlMeasures
		{
			get
			{
				return this._ControlMeasures;
			}
			set
			{
				if ((this._ControlMeasures != value))
				{
					this._ControlMeasures = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(800)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentEffect", DbType="NVarChar(200)")]
		public string EnvironmentEffect
		{
			get
			{
				return this._EnvironmentEffect;
			}
			set
			{
				if ((this._EnvironmentEffect != value))
				{
					this._EnvironmentEffect = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_HJGL_Batch_PointBatch")]
	public partial class View_HJGL_Batch_PointBatch
	{
		
		private string _PointBatchId;
		
		private string _PointBatchCode;
		
		private string _ProjectId;
		
		private string _ProjectCode;
		
		private string _ProjectName;
		
		private string _UnitId;
		
		private string _UnitName;
		
		private string _UnitCode;
		
		private string _UnitTypeId;
		
		private string _UnitWorkId;
		
		private string _UnitWorkCode;
		
		private string _UnitWorkName;
		
		private string _DetectionTypeId;
		
		private string _DetectionTypeCode;
		
		private string _DetectionTypeName;
		
		private string _DetectionRateId;
		
		private string _DetectionRateCode;
		
		private System.Nullable<int> _DetectionRateValue;
		
		private string _WelderId;
		
		private string _WelderCode;
		
		private string _PersonName;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		public View_HJGL_Batch_PointBatch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PointBatchId
		{
			get
			{
				return this._PointBatchId;
			}
			set
			{
				if ((this._PointBatchId != value))
				{
					this._PointBatchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchCode", DbType="NVarChar(100)")]
		public string PointBatchCode
		{
			get
			{
				return this._PointBatchCode;
			}
			set
			{
				if ((this._PointBatchCode != value))
				{
					this._PointBatchCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="NVarChar(50)")]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this._ProjectCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this._ProjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(100)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this._UnitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitTypeId", DbType="NVarChar(50)")]
		public string UnitTypeId
		{
			get
			{
				return this._UnitTypeId;
			}
			set
			{
				if ((this._UnitTypeId != value))
				{
					this._UnitTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkCode", DbType="NVarChar(10)")]
		public string UnitWorkCode
		{
			get
			{
				return this._UnitWorkCode;
			}
			set
			{
				if ((this._UnitWorkCode != value))
				{
					this._UnitWorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkName", DbType="NVarChar(30)")]
		public string UnitWorkName
		{
			get
			{
				return this._UnitWorkName;
			}
			set
			{
				if ((this._UnitWorkName != value))
				{
					this._UnitWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					this._DetectionTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeCode", DbType="NVarChar(50)")]
		public string DetectionTypeCode
		{
			get
			{
				return this._DetectionTypeCode;
			}
			set
			{
				if ((this._DetectionTypeCode != value))
				{
					this._DetectionTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeName", DbType="NVarChar(50)")]
		public string DetectionTypeName
		{
			get
			{
				return this._DetectionTypeName;
			}
			set
			{
				if ((this._DetectionTypeName != value))
				{
					this._DetectionTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50)")]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					this._DetectionRateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateCode", DbType="NVarChar(50)")]
		public string DetectionRateCode
		{
			get
			{
				return this._DetectionRateCode;
			}
			set
			{
				if ((this._DetectionRateCode != value))
				{
					this._DetectionRateCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateValue", DbType="Int")]
		public System.Nullable<int> DetectionRateValue
		{
			get
			{
				return this._DetectionRateValue;
			}
			set
			{
				if ((this._DetectionRateValue != value))
				{
					this._DetectionRateValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderId", DbType="NVarChar(50)")]
		public string WelderId
		{
			get
			{
				return this._WelderId;
			}
			set
			{
				if ((this._WelderId != value))
				{
					this._WelderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderCode", DbType="NVarChar(50)")]
		public string WelderCode
		{
			get
			{
				return this._WelderCode;
			}
			set
			{
				if ((this._WelderCode != value))
				{
					this._WelderCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonName", DbType="NVarChar(50)")]
		public string PersonName
		{
			get
			{
				return this._PersonName;
			}
			set
			{
				if ((this._PersonName != value))
				{
					this._PersonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_HJGL_Batch_PointBatchItem")]
	public partial class View_HJGL_Batch_PointBatchItem
	{
		
		private string _PointBatchItemId;
		
		private string _PointBatchId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _DetectionTypeId;
		
		private string _PointBatchCode;
		
		private string _UnitWorkId;
		
		private string _WeldJointId;
		
		private string _PointState;
		
		private string _PointIsAudit;
		
		private System.Nullable<System.DateTime> _PointDate;
		
		private string _IsWelderFirst;
		
		private System.Nullable<System.DateTime> _RepairDate;
		
		private string _RepairRecordId;
		
		private System.Nullable<System.DateTime> _CutDate;
		
		private string _UnitWorkCode;
		
		private string _WeldJointCode;
		
		private string _WelderId;
		
		private string _JointAttribute;
		
		private string _JointArea;
		
		private System.Nullable<decimal> _Size;
		
		private System.Nullable<System.DateTime> _WeldingDate;
		
		private string _PipelineId;
		
		private string _Mat;
		
		private string _Specification;
		
		private string _PipelineCode;
		
		private string _PipingClassName;
		
		public View_HJGL_Batch_PointBatchItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PointBatchItemId
		{
			get
			{
				return this._PointBatchItemId;
			}
			set
			{
				if ((this._PointBatchItemId != value))
				{
					this._PointBatchItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchId", DbType="NVarChar(50)")]
		public string PointBatchId
		{
			get
			{
				return this._PointBatchId;
			}
			set
			{
				if ((this._PointBatchId != value))
				{
					this._PointBatchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					this._DetectionTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointBatchCode", DbType="NVarChar(100)")]
		public string PointBatchCode
		{
			get
			{
				return this._PointBatchCode;
			}
			set
			{
				if ((this._PointBatchCode != value))
				{
					this._PointBatchCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this._WeldJointId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointState", DbType="VarChar(4)")]
		public string PointState
		{
			get
			{
				return this._PointState;
			}
			set
			{
				if ((this._PointState != value))
				{
					this._PointState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointIsAudit", DbType="VarChar(2)")]
		public string PointIsAudit
		{
			get
			{
				return this._PointIsAudit;
			}
			set
			{
				if ((this._PointIsAudit != value))
				{
					this._PointIsAudit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PointDate
		{
			get
			{
				return this._PointDate;
			}
			set
			{
				if ((this._PointDate != value))
				{
					this._PointDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWelderFirst", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string IsWelderFirst
		{
			get
			{
				return this._IsWelderFirst;
			}
			set
			{
				if ((this._IsWelderFirst != value))
				{
					this._IsWelderFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RepairDate
		{
			get
			{
				return this._RepairDate;
			}
			set
			{
				if ((this._RepairDate != value))
				{
					this._RepairDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairRecordId", DbType="NVarChar(50)")]
		public string RepairRecordId
		{
			get
			{
				return this._RepairRecordId;
			}
			set
			{
				if ((this._RepairRecordId != value))
				{
					this._RepairRecordId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CutDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CutDate
		{
			get
			{
				return this._CutDate;
			}
			set
			{
				if ((this._CutDate != value))
				{
					this._CutDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkCode", DbType="NVarChar(10)")]
		public string UnitWorkCode
		{
			get
			{
				return this._UnitWorkCode;
			}
			set
			{
				if ((this._UnitWorkCode != value))
				{
					this._UnitWorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointCode", DbType="NVarChar(50)")]
		public string WeldJointCode
		{
			get
			{
				return this._WeldJointCode;
			}
			set
			{
				if ((this._WeldJointCode != value))
				{
					this._WeldJointCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderId", DbType="NVarChar(50)")]
		public string WelderId
		{
			get
			{
				return this._WelderId;
			}
			set
			{
				if ((this._WelderId != value))
				{
					this._WelderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointAttribute", DbType="NVarChar(10)")]
		public string JointAttribute
		{
			get
			{
				return this._JointAttribute;
			}
			set
			{
				if ((this._JointAttribute != value))
				{
					this._JointAttribute = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointArea", DbType="NVarChar(50)")]
		public string JointArea
		{
			get
			{
				return this._JointArea;
			}
			set
			{
				if ((this._JointArea != value))
				{
					this._JointArea = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WeldingDate
		{
			get
			{
				return this._WeldingDate;
			}
			set
			{
				if ((this._WeldingDate != value))
				{
					this._WeldingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					this._PipelineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mat", DbType="NVarChar(50)")]
		public string Mat
		{
			get
			{
				return this._Mat;
			}
			set
			{
				if ((this._Mat != value))
				{
					this._Mat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(20)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this._Specification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this._PipelineCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassName", DbType="NVarChar(50)")]
		public string PipingClassName
		{
			get
			{
				return this._PipingClassName;
			}
			set
			{
				if ((this._PipingClassName != value))
				{
					this._PipingClassName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_HJGL_Hard_Report")]
	public partial class View_HJGL_Hard_Report
	{
		
		private string _HardReportId;
		
		private string _HardTrustItemID;
		
		private string _WeldJointId;
		
		private string _HardReportNo;
		
		private string _TestingPointNo;
		
		private System.Nullable<int> _HardNessValue1;
		
		private System.Nullable<int> _HardNessValue2;
		
		private System.Nullable<int> _HardNessValue3;
		
		private string _Remark;
		
		private string _WeldJointCode;
		
		private string _PipelineCode;
		
		public View_HJGL_Hard_Report()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardReportId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HardReportId
		{
			get
			{
				return this._HardReportId;
			}
			set
			{
				if ((this._HardReportId != value))
				{
					this._HardReportId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustItemID", DbType="NVarChar(50)")]
		public string HardTrustItemID
		{
			get
			{
				return this._HardTrustItemID;
			}
			set
			{
				if ((this._HardTrustItemID != value))
				{
					this._HardTrustItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this._WeldJointId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardReportNo", DbType="NChar(10)")]
		public string HardReportNo
		{
			get
			{
				return this._HardReportNo;
			}
			set
			{
				if ((this._HardReportNo != value))
				{
					this._HardReportNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestingPointNo", DbType="NVarChar(20)")]
		public string TestingPointNo
		{
			get
			{
				return this._TestingPointNo;
			}
			set
			{
				if ((this._TestingPointNo != value))
				{
					this._TestingPointNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardNessValue1", DbType="Int")]
		public System.Nullable<int> HardNessValue1
		{
			get
			{
				return this._HardNessValue1;
			}
			set
			{
				if ((this._HardNessValue1 != value))
				{
					this._HardNessValue1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardNessValue2", DbType="Int")]
		public System.Nullable<int> HardNessValue2
		{
			get
			{
				return this._HardNessValue2;
			}
			set
			{
				if ((this._HardNessValue2 != value))
				{
					this._HardNessValue2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardNessValue3", DbType="Int")]
		public System.Nullable<int> HardNessValue3
		{
			get
			{
				return this._HardNessValue3;
			}
			set
			{
				if ((this._HardNessValue3 != value))
				{
					this._HardNessValue3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointCode", DbType="NVarChar(50)")]
		public string WeldJointCode
		{
			get
			{
				return this._WeldJointCode;
			}
			set
			{
				if ((this._WeldJointCode != value))
				{
					this._WeldJointCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this._PipelineCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_HJGL_Hard_Trust")]
	public partial class View_HJGL_Hard_Trust
	{
		
		private string _HardTrustID;
		
		private string _HardTrustNo;
		
		private string _HardTrustUnit;
		
		private System.Nullable<System.DateTime> _HardTrustDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _HardnessRate;
		
		private string _HardnessMethod;
		
		private string _CheckUnit;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _DetectionTime;
		
		private string _Sendee;
		
		private string _Standards;
		
		private string _InspectionNum;
		
		private string _CheckNum;
		
		private string _TestWeldNum;
		
		private string _HardTrustMan;
		
		private string _HardTrustUnitName;
		
		private string _CheckUnitName;
		
		private string _UnitWorkName;
		
		private string _AuditManName;
		
		private string _DetectionTimeStr;
		
		private string _HardTrustManName;
		
		public View_HJGL_Hard_Trust()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HardTrustID
		{
			get
			{
				return this._HardTrustID;
			}
			set
			{
				if ((this._HardTrustID != value))
				{
					this._HardTrustID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustNo", DbType="NVarChar(50)")]
		public string HardTrustNo
		{
			get
			{
				return this._HardTrustNo;
			}
			set
			{
				if ((this._HardTrustNo != value))
				{
					this._HardTrustNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustUnit", DbType="NVarChar(50)")]
		public string HardTrustUnit
		{
			get
			{
				return this._HardTrustUnit;
			}
			set
			{
				if ((this._HardTrustUnit != value))
				{
					this._HardTrustUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> HardTrustDate
		{
			get
			{
				return this._HardTrustDate;
			}
			set
			{
				if ((this._HardTrustDate != value))
				{
					this._HardTrustDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this._AuditMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this._AuditDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardnessRate", DbType="NVarChar(50)")]
		public string HardnessRate
		{
			get
			{
				return this._HardnessRate;
			}
			set
			{
				if ((this._HardnessRate != value))
				{
					this._HardnessRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardnessMethod", DbType="NVarChar(50)")]
		public string HardnessMethod
		{
			get
			{
				return this._HardnessMethod;
			}
			set
			{
				if ((this._HardnessMethod != value))
				{
					this._HardnessMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckUnit", DbType="NVarChar(50)")]
		public string CheckUnit
		{
			get
			{
				return this._CheckUnit;
			}
			set
			{
				if ((this._CheckUnit != value))
				{
					this._CheckUnit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTime", DbType="NVarChar(50)")]
		public string DetectionTime
		{
			get
			{
				return this._DetectionTime;
			}
			set
			{
				if ((this._DetectionTime != value))
				{
					this._DetectionTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sendee", DbType="NVarChar(50)")]
		public string Sendee
		{
			get
			{
				return this._Sendee;
			}
			set
			{
				if ((this._Sendee != value))
				{
					this._Sendee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standards", DbType="NVarChar(50)")]
		public string Standards
		{
			get
			{
				return this._Standards;
			}
			set
			{
				if ((this._Standards != value))
				{
					this._Standards = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionNum", DbType="NVarChar(50)")]
		public string InspectionNum
		{
			get
			{
				return this._InspectionNum;
			}
			set
			{
				if ((this._InspectionNum != value))
				{
					this._InspectionNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNum", DbType="NVarChar(50)")]
		public string CheckNum
		{
			get
			{
				return this._CheckNum;
			}
			set
			{
				if ((this._CheckNum != value))
				{
					this._CheckNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestWeldNum", DbType="NVarChar(50)")]
		public string TestWeldNum
		{
			get
			{
				return this._TestWeldNum;
			}
			set
			{
				if ((this._TestWeldNum != value))
				{
					this._TestWeldNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustMan", DbType="VarChar(50)")]
		public string HardTrustMan
		{
			get
			{
				return this._HardTrustMan;
			}
			set
			{
				if ((this._HardTrustMan != value))
				{
					this._HardTrustMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustUnitName", DbType="NVarChar(200)")]
		public string HardTrustUnitName
		{
			get
			{
				return this._HardTrustUnitName;
			}
			set
			{
				if ((this._HardTrustUnitName != value))
				{
					this._HardTrustUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="checkUnitName", Storage="_CheckUnitName", DbType="NVarChar(200)")]
		public string CheckUnitName
		{
			get
			{
				return this._CheckUnitName;
			}
			set
			{
				if ((this._CheckUnitName != value))
				{
					this._CheckUnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkName", DbType="NVarChar(30)")]
		public string UnitWorkName
		{
			get
			{
				return this._UnitWorkName;
			}
			set
			{
				if ((this._UnitWorkName != value))
				{
					this._UnitWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditManName", DbType="NVarChar(50)")]
		public string AuditManName
		{
			get
			{
				return this._AuditManName;
			}
			set
			{
				if ((this._AuditManName != value))
				{
					this._AuditManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTimeStr", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string DetectionTimeStr
		{
			get
			{
				return this._DetectionTimeStr;
			}
			set
			{
				if ((this._DetectionTimeStr != value))
				{
					this._DetectionTimeStr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustManName", DbType="NVarChar(50)")]
		public string HardTrustManName
		{
			get
			{
				return this._HardTrustManName;
			}
			set
			{
				if ((this._HardTrustManName != value))
				{
					this._HardTrustManName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_HJGL_Hard_TrustItem")]
	public partial class View_HJGL_Hard_TrustItem
	{
		
		private string _HardTrustItemID;
		
		private string _HardTrustID;
		
		private string _HotProessTrustItemId;
		
		private string _WeldJointId;
		
		private System.Nullable<bool> _IsPass;
		
		private System.Nullable<bool> _IsTrust;
		
		private string _PipelineCode;
		
		private string _WeldJointCode;
		
		private string _Specification;
		
		private string _Remark;
		
		private string _SingleNumber;
		
		private string _WelderCode;
		
		private string _MaterialCode;
		
		public View_HJGL_Hard_TrustItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustItemID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HardTrustItemID
		{
			get
			{
				return this._HardTrustItemID;
			}
			set
			{
				if ((this._HardTrustItemID != value))
				{
					this._HardTrustItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustID", DbType="NVarChar(50)")]
		public string HardTrustID
		{
			get
			{
				return this._HardTrustID;
			}
			set
			{
				if ((this._HardTrustID != value))
				{
					this._HardTrustID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustItemId", DbType="NVarChar(50)")]
		public string HotProessTrustItemId
		{
			get
			{
				return this._HotProessTrustItemId;
			}
			set
			{
				if ((this._HotProessTrustItemId != value))
				{
					this._HotProessTrustItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this._WeldJointId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this._IsPass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTrust", DbType="Bit")]
		public System.Nullable<bool> IsTrust
		{
			get
			{
				return this._IsTrust;
			}
			set
			{
				if ((this._IsTrust != value))
				{
					this._IsTrust = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this._PipelineCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointCode", DbType="NVarChar(50)")]
		public string WeldJointCode
		{
			get
			{
				return this._WeldJointCode;
			}
			set
			{
				if ((this._WeldJointCode != value))
				{
					this._WeldJointCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(20)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this._Specification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleNumber", DbType="NVarChar(50)")]
		public string SingleNumber
		{
			get
			{
				return this._SingleNumber;
			}
			set
			{
				if ((this._SingleNumber != value))
				{
					this._SingleNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderCode", DbType="NVarChar(101)")]
		public string WelderCode
		{
			get
			{
				return this._WelderCode;
			}
			set
			{
				if ((this._WelderCode != value))
				{
					this._WelderCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="NVarChar(101)")]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this._MaterialCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_HJGL_HotProess_TrustItem")]
	public partial class View_HJGL_HotProess_TrustItem
	{
		
		private string _HotProessTrustItemId;
		
		private string _HotProessTrustId;
		
		private string _WeldJointId;
		
		private System.Nullable<bool> _IsPass;
		
		private System.Nullable<bool> _IsHardness;
		
		private System.Nullable<bool> _IsTrust;
		
		private string _HardTrustItemID;
		
		private System.Nullable<bool> _IsCompleted;
		
		private string _ProjectId;
		
		private string _HotProessTrustNo;
		
		private System.Nullable<System.DateTime> _ProessDate;
		
		private string _WeldJointCode;
		
		private string _PipelineCode;
		
		private string _Specification;
		
		private string _MaterialCode;
		
		public View_HJGL_HotProess_TrustItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HotProessTrustItemId
		{
			get
			{
				return this._HotProessTrustItemId;
			}
			set
			{
				if ((this._HotProessTrustItemId != value))
				{
					this._HotProessTrustItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustId", DbType="NVarChar(50)")]
		public string HotProessTrustId
		{
			get
			{
				return this._HotProessTrustId;
			}
			set
			{
				if ((this._HotProessTrustId != value))
				{
					this._HotProessTrustId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50)")]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this._WeldJointId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this._IsPass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHardness", DbType="Bit")]
		public System.Nullable<bool> IsHardness
		{
			get
			{
				return this._IsHardness;
			}
			set
			{
				if ((this._IsHardness != value))
				{
					this._IsHardness = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTrust", DbType="Bit")]
		public System.Nullable<bool> IsTrust
		{
			get
			{
				return this._IsTrust;
			}
			set
			{
				if ((this._IsTrust != value))
				{
					this._IsTrust = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HardTrustItemID", DbType="NVarChar(50)")]
		public string HardTrustItemID
		{
			get
			{
				return this._HardTrustItemID;
			}
			set
			{
				if ((this._HardTrustItemID != value))
				{
					this._HardTrustItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this._IsCompleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustNo", DbType="NVarChar(50)")]
		public string HotProessTrustNo
		{
			get
			{
				return this._HotProessTrustNo;
			}
			set
			{
				if ((this._HotProessTrustNo != value))
				{
					this._HotProessTrustNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProessDate
		{
			get
			{
				return this._ProessDate;
			}
			set
			{
				if ((this._ProessDate != value))
				{
					this._ProessDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointCode", DbType="NVarChar(50)")]
		public string WeldJointCode
		{
			get
			{
				return this._WeldJointCode;
			}
			set
			{
				if ((this._WeldJointCode != value))
				{
					this._WeldJointCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this._PipelineCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(20)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this._Specification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="NVarChar(50)")]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this._MaterialCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_HJGL_HotProessTrustItemSearch")]
	public partial class View_HJGL_HotProessTrustItemSearch
	{
		
		private string _HotProessTrustItemId;
		
		private string _HotProessTrustId;
		
		private string _WeldJointId;
		
		private string _WeldJointCode;
		
		private string _WeldingDailyId;
		
		private string _Specification;
		
		private string _ProjectId;
		
		private string _PipelineCode;
		
		private string _PipelineId;
		
		private System.Nullable<System.DateTime> _WeldingDate;
		
		private string _MaterialCode;
		
		private System.Nullable<bool> _IsHotProess;
		
		public View_HJGL_HotProessTrustItemSearch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustItemId", DbType="NVarChar(50)")]
		public string HotProessTrustItemId
		{
			get
			{
				return this._HotProessTrustItemId;
			}
			set
			{
				if ((this._HotProessTrustItemId != value))
				{
					this._HotProessTrustItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotProessTrustId", DbType="NVarChar(50)")]
		public string HotProessTrustId
		{
			get
			{
				return this._HotProessTrustId;
			}
			set
			{
				if ((this._HotProessTrustId != value))
				{
					this._HotProessTrustId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this._WeldJointId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointCode", DbType="NVarChar(50)")]
		public string WeldJointCode
		{
			get
			{
				return this._WeldJointCode;
			}
			set
			{
				if ((this._WeldJointCode != value))
				{
					this._WeldJointCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDailyId", DbType="NVarChar(50)")]
		public string WeldingDailyId
		{
			get
			{
				return this._WeldingDailyId;
			}
			set
			{
				if ((this._WeldingDailyId != value))
				{
					this._WeldingDailyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(20)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this._Specification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this._PipelineCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					this._PipelineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WeldingDate
		{
			get
			{
				return this._WeldingDate;
			}
			set
			{
				if ((this._WeldingDate != value))
				{
					this._WeldingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="NVarChar(50)")]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this._MaterialCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHotProess", DbType="Bit")]
		public System.Nullable<bool> IsHotProess
		{
			get
			{
				return this._IsHotProess;
			}
			set
			{
				if ((this._IsHotProess != value))
				{
					this._IsHotProess = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_HJGL_Pipeline")]
	public partial class View_HJGL_Pipeline
	{
		
		private string _PipelineId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _UnitWorkId;
		
		private string _PipelineCode;
		
		private string _SingleNumber;
		
		private string _PipingClassId;
		
		private string _MediumId;
		
		private string _PipingClassCode;
		
		private string _DetectionRateId;
		
		private string _DetectionRateCode;
		
		private string _DetectionType;
		
		private System.Nullable<decimal> _TestPressure;
		
		private string _TestMedium;
		
		private string _Remark;
		
		private System.Nullable<decimal> _TotalDin;
		
		private System.Nullable<int> _JointCount;
		
		private string _UnitName;
		
		private string _UnitWorkCode;
		
		private string _MediumCode;
		
		private string _TestMediumCode;
		
		public View_HJGL_Pipeline()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					this._PipelineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this._PipelineCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleNumber", DbType="NVarChar(50)")]
		public string SingleNumber
		{
			get
			{
				return this._SingleNumber;
			}
			set
			{
				if ((this._SingleNumber != value))
				{
					this._SingleNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassId", DbType="NVarChar(50)")]
		public string PipingClassId
		{
			get
			{
				return this._PipingClassId;
			}
			set
			{
				if ((this._PipingClassId != value))
				{
					this._PipingClassId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumId", DbType="NVarChar(50)")]
		public string MediumId
		{
			get
			{
				return this._MediumId;
			}
			set
			{
				if ((this._MediumId != value))
				{
					this._MediumId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassCode", DbType="NVarChar(50)")]
		public string PipingClassCode
		{
			get
			{
				return this._PipingClassCode;
			}
			set
			{
				if ((this._PipingClassCode != value))
				{
					this._PipingClassCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50)")]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					this._DetectionRateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateCode", DbType="NVarChar(50)")]
		public string DetectionRateCode
		{
			get
			{
				return this._DetectionRateCode;
			}
			set
			{
				if ((this._DetectionRateCode != value))
				{
					this._DetectionRateCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionType", DbType="NVarChar(150)")]
		public string DetectionType
		{
			get
			{
				return this._DetectionType;
			}
			set
			{
				if ((this._DetectionType != value))
				{
					this._DetectionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestPressure", DbType="Decimal(9,1)")]
		public System.Nullable<decimal> TestPressure
		{
			get
			{
				return this._TestPressure;
			}
			set
			{
				if ((this._TestPressure != value))
				{
					this._TestPressure = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestMedium", DbType="NVarChar(50)")]
		public string TestMedium
		{
			get
			{
				return this._TestMedium;
			}
			set
			{
				if ((this._TestMedium != value))
				{
					this._TestMedium = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(150)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDin", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> TotalDin
		{
			get
			{
				return this._TotalDin;
			}
			set
			{
				if ((this._TotalDin != value))
				{
					this._TotalDin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointCount", DbType="Int")]
		public System.Nullable<int> JointCount
		{
			get
			{
				return this._JointCount;
			}
			set
			{
				if ((this._JointCount != value))
				{
					this._JointCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkCode", DbType="NVarChar(10)")]
		public string UnitWorkCode
		{
			get
			{
				return this._UnitWorkCode;
			}
			set
			{
				if ((this._UnitWorkCode != value))
				{
					this._UnitWorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumCode", DbType="NVarChar(50)")]
		public string MediumCode
		{
			get
			{
				return this._MediumCode;
			}
			set
			{
				if ((this._MediumCode != value))
				{
					this._MediumCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestMediumCode", DbType="NVarChar(50)")]
		public string TestMediumCode
		{
			get
			{
				return this._TestMediumCode;
			}
			set
			{
				if ((this._TestMediumCode != value))
				{
					this._TestMediumCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_HJGL_WeldJoint")]
	public partial class View_HJGL_WeldJoint
	{
		
		private string _WeldJointId;
		
		private string _PipelineCode;
		
		private string _WeldJointCode;
		
		private string _PipelineId;
		
		private string _ProjectId;
		
		private string _UnitWorkId;
		
		private string _UnitId;
		
		private string _SingleNumber;
		
		private string _PipingClassId;
		
		private string _MediumId;
		
		private string _WeldTypeId;
		
		private string _JointArea;
		
		private string _Material1Id;
		
		private string _Material2Id;
		
		private string _DetectionTypeId;
		
		private string _DetectionRateId;
		
		private string _WeldingMethodId;
		
		private string _GrooveTypeId;
		
		private string _WeldingLocationId;
		
		private string _JointAttribute;
		
		private System.Nullable<decimal> _Size;
		
		private System.Nullable<decimal> _Dia;
		
		private System.Nullable<decimal> _Thickness;
		
		private string _Specification;
		
		private string _WeldingWire;
		
		private string _WeldingRod;
		
		private string _Components1Id;
		
		private string _Components2Id;
		
		private string _HeartNo1;
		
		private string _HeartNo2;
		
		private System.Nullable<bool> _IsHotProess;
		
		private string _WeldingDailyId;
		
		private string _BackingWelderId;
		
		private string _CoverWelderId;
		
		private string _Remark;
		
		private string _PreTemperature;
		
		private string _MediumCode;
		
		private string _WeldTypeCode;
		
		private string _Material1Code;
		
		private string _Material2Code;
		
		private string _WeldingMethodCode;
		
		private string _WeldingLocationCode;
		
		private string _WeldingRodCode;
		
		private string _WeldingWireCode;
		
		private string _GrooveTypeCode;
		
		private string _IsWelding;
		
		private string _IsHotProessStr;
		
		private string _ComponentsCode1;
		
		private string _ComponentsCode2;
		
		private string _BackingWelderCode;
		
		private string _BackingWelderName;
		
		private string _CoverWelderCode;
		
		private string _CoverWelderName;
		
		private string _WelderCode;
		
		private string _MaterialCode;
		
		private string _PipingClassCode;
		
		private string _WeldingDate;
		
		private string _WeldingDailyCode;
		
		private string _WPQCode;
		
		public View_HJGL_WeldJoint()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WeldJointId
		{
			get
			{
				return this._WeldJointId;
			}
			set
			{
				if ((this._WeldJointId != value))
				{
					this._WeldJointId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this._PipelineCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointCode", DbType="NVarChar(50)")]
		public string WeldJointCode
		{
			get
			{
				return this._WeldJointCode;
			}
			set
			{
				if ((this._WeldJointCode != value))
				{
					this._WeldJointCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					this._PipelineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleNumber", DbType="NVarChar(50)")]
		public string SingleNumber
		{
			get
			{
				return this._SingleNumber;
			}
			set
			{
				if ((this._SingleNumber != value))
				{
					this._SingleNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassId", DbType="NVarChar(50)")]
		public string PipingClassId
		{
			get
			{
				return this._PipingClassId;
			}
			set
			{
				if ((this._PipingClassId != value))
				{
					this._PipingClassId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumId", DbType="NVarChar(50)")]
		public string MediumId
		{
			get
			{
				return this._MediumId;
			}
			set
			{
				if ((this._MediumId != value))
				{
					this._MediumId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldTypeId", DbType="NVarChar(50)")]
		public string WeldTypeId
		{
			get
			{
				return this._WeldTypeId;
			}
			set
			{
				if ((this._WeldTypeId != value))
				{
					this._WeldTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointArea", DbType="NVarChar(50)")]
		public string JointArea
		{
			get
			{
				return this._JointArea;
			}
			set
			{
				if ((this._JointArea != value))
				{
					this._JointArea = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material1Id", DbType="NVarChar(50)")]
		public string Material1Id
		{
			get
			{
				return this._Material1Id;
			}
			set
			{
				if ((this._Material1Id != value))
				{
					this._Material1Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material2Id", DbType="NVarChar(50)")]
		public string Material2Id
		{
			get
			{
				return this._Material2Id;
			}
			set
			{
				if ((this._Material2Id != value))
				{
					this._Material2Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionTypeId", DbType="NVarChar(50)")]
		public string DetectionTypeId
		{
			get
			{
				return this._DetectionTypeId;
			}
			set
			{
				if ((this._DetectionTypeId != value))
				{
					this._DetectionTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetectionRateId", DbType="NVarChar(50)")]
		public string DetectionRateId
		{
			get
			{
				return this._DetectionRateId;
			}
			set
			{
				if ((this._DetectionRateId != value))
				{
					this._DetectionRateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodId", DbType="NVarChar(50)")]
		public string WeldingMethodId
		{
			get
			{
				return this._WeldingMethodId;
			}
			set
			{
				if ((this._WeldingMethodId != value))
				{
					this._WeldingMethodId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveTypeId", DbType="NVarChar(50)")]
		public string GrooveTypeId
		{
			get
			{
				return this._GrooveTypeId;
			}
			set
			{
				if ((this._GrooveTypeId != value))
				{
					this._GrooveTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingLocationId", DbType="NVarChar(50)")]
		public string WeldingLocationId
		{
			get
			{
				return this._WeldingLocationId;
			}
			set
			{
				if ((this._WeldingLocationId != value))
				{
					this._WeldingLocationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointAttribute", DbType="NVarChar(10)")]
		public string JointAttribute
		{
			get
			{
				return this._JointAttribute;
			}
			set
			{
				if ((this._JointAttribute != value))
				{
					this._JointAttribute = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dia", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Dia
		{
			get
			{
				return this._Dia;
			}
			set
			{
				if ((this._Dia != value))
				{
					this._Dia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thickness", DbType="Decimal(8,3)")]
		public System.Nullable<decimal> Thickness
		{
			get
			{
				return this._Thickness;
			}
			set
			{
				if ((this._Thickness != value))
				{
					this._Thickness = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specification", DbType="NVarChar(20)")]
		public string Specification
		{
			get
			{
				return this._Specification;
			}
			set
			{
				if ((this._Specification != value))
				{
					this._Specification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingWire", DbType="NVarChar(50)")]
		public string WeldingWire
		{
			get
			{
				return this._WeldingWire;
			}
			set
			{
				if ((this._WeldingWire != value))
				{
					this._WeldingWire = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingRod", DbType="NVarChar(50)")]
		public string WeldingRod
		{
			get
			{
				return this._WeldingRod;
			}
			set
			{
				if ((this._WeldingRod != value))
				{
					this._WeldingRod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Components1Id", DbType="NVarChar(50)")]
		public string Components1Id
		{
			get
			{
				return this._Components1Id;
			}
			set
			{
				if ((this._Components1Id != value))
				{
					this._Components1Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Components2Id", DbType="NVarChar(50)")]
		public string Components2Id
		{
			get
			{
				return this._Components2Id;
			}
			set
			{
				if ((this._Components2Id != value))
				{
					this._Components2Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartNo1", DbType="NVarChar(30)")]
		public string HeartNo1
		{
			get
			{
				return this._HeartNo1;
			}
			set
			{
				if ((this._HeartNo1 != value))
				{
					this._HeartNo1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeartNo2", DbType="NVarChar(30)")]
		public string HeartNo2
		{
			get
			{
				return this._HeartNo2;
			}
			set
			{
				if ((this._HeartNo2 != value))
				{
					this._HeartNo2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHotProess", DbType="Bit")]
		public System.Nullable<bool> IsHotProess
		{
			get
			{
				return this._IsHotProess;
			}
			set
			{
				if ((this._IsHotProess != value))
				{
					this._IsHotProess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDailyId", DbType="NVarChar(50)")]
		public string WeldingDailyId
		{
			get
			{
				return this._WeldingDailyId;
			}
			set
			{
				if ((this._WeldingDailyId != value))
				{
					this._WeldingDailyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackingWelderId", DbType="NVarChar(50)")]
		public string BackingWelderId
		{
			get
			{
				return this._BackingWelderId;
			}
			set
			{
				if ((this._BackingWelderId != value))
				{
					this._BackingWelderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverWelderId", DbType="NVarChar(50)")]
		public string CoverWelderId
		{
			get
			{
				return this._CoverWelderId;
			}
			set
			{
				if ((this._CoverWelderId != value))
				{
					this._CoverWelderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreTemperature", DbType="NVarChar(20)")]
		public string PreTemperature
		{
			get
			{
				return this._PreTemperature;
			}
			set
			{
				if ((this._PreTemperature != value))
				{
					this._PreTemperature = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediumCode", DbType="NVarChar(50)")]
		public string MediumCode
		{
			get
			{
				return this._MediumCode;
			}
			set
			{
				if ((this._MediumCode != value))
				{
					this._MediumCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldTypeCode", DbType="NVarChar(50)")]
		public string WeldTypeCode
		{
			get
			{
				return this._WeldTypeCode;
			}
			set
			{
				if ((this._WeldTypeCode != value))
				{
					this._WeldTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material1Code", DbType="NVarChar(50)")]
		public string Material1Code
		{
			get
			{
				return this._Material1Code;
			}
			set
			{
				if ((this._Material1Code != value))
				{
					this._Material1Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material2Code", DbType="NVarChar(50)")]
		public string Material2Code
		{
			get
			{
				return this._Material2Code;
			}
			set
			{
				if ((this._Material2Code != value))
				{
					this._Material2Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodCode", DbType="NVarChar(50)")]
		public string WeldingMethodCode
		{
			get
			{
				return this._WeldingMethodCode;
			}
			set
			{
				if ((this._WeldingMethodCode != value))
				{
					this._WeldingMethodCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingLocationCode", DbType="NVarChar(50)")]
		public string WeldingLocationCode
		{
			get
			{
				return this._WeldingLocationCode;
			}
			set
			{
				if ((this._WeldingLocationCode != value))
				{
					this._WeldingLocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingRodCode", DbType="NVarChar(50)")]
		public string WeldingRodCode
		{
			get
			{
				return this._WeldingRodCode;
			}
			set
			{
				if ((this._WeldingRodCode != value))
				{
					this._WeldingRodCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingWireCode", DbType="NVarChar(50)")]
		public string WeldingWireCode
		{
			get
			{
				return this._WeldingWireCode;
			}
			set
			{
				if ((this._WeldingWireCode != value))
				{
					this._WeldingWireCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveTypeCode", DbType="NVarChar(50)")]
		public string GrooveTypeCode
		{
			get
			{
				return this._GrooveTypeCode;
			}
			set
			{
				if ((this._GrooveTypeCode != value))
				{
					this._GrooveTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWelding", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string IsWelding
		{
			get
			{
				return this._IsWelding;
			}
			set
			{
				if ((this._IsWelding != value))
				{
					this._IsWelding = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHotProessStr", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string IsHotProessStr
		{
			get
			{
				return this._IsHotProessStr;
			}
			set
			{
				if ((this._IsHotProessStr != value))
				{
					this._IsHotProessStr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentsCode1", DbType="NVarChar(50)")]
		public string ComponentsCode1
		{
			get
			{
				return this._ComponentsCode1;
			}
			set
			{
				if ((this._ComponentsCode1 != value))
				{
					this._ComponentsCode1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentsCode2", DbType="NVarChar(50)")]
		public string ComponentsCode2
		{
			get
			{
				return this._ComponentsCode2;
			}
			set
			{
				if ((this._ComponentsCode2 != value))
				{
					this._ComponentsCode2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackingWelderCode", DbType="NVarChar(50)")]
		public string BackingWelderCode
		{
			get
			{
				return this._BackingWelderCode;
			}
			set
			{
				if ((this._BackingWelderCode != value))
				{
					this._BackingWelderCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackingWelderName", DbType="NVarChar(50)")]
		public string BackingWelderName
		{
			get
			{
				return this._BackingWelderName;
			}
			set
			{
				if ((this._BackingWelderName != value))
				{
					this._BackingWelderName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverWelderCode", DbType="NVarChar(50)")]
		public string CoverWelderCode
		{
			get
			{
				return this._CoverWelderCode;
			}
			set
			{
				if ((this._CoverWelderCode != value))
				{
					this._CoverWelderCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoverWelderName", DbType="NVarChar(50)")]
		public string CoverWelderName
		{
			get
			{
				return this._CoverWelderName;
			}
			set
			{
				if ((this._CoverWelderName != value))
				{
					this._CoverWelderName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderCode", DbType="NVarChar(101)")]
		public string WelderCode
		{
			get
			{
				return this._WelderCode;
			}
			set
			{
				if ((this._WelderCode != value))
				{
					this._WelderCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialCode", DbType="NVarChar(101)")]
		public string MaterialCode
		{
			get
			{
				return this._MaterialCode;
			}
			set
			{
				if ((this._MaterialCode != value))
				{
					this._MaterialCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipingClassCode", DbType="NVarChar(50)")]
		public string PipingClassCode
		{
			get
			{
				return this._PipingClassCode;
			}
			set
			{
				if ((this._PipingClassCode != value))
				{
					this._PipingClassCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDate", DbType="VarChar(100)")]
		public string WeldingDate
		{
			get
			{
				return this._WeldingDate;
			}
			set
			{
				if ((this._WeldingDate != value))
				{
					this._WeldingDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingDailyCode", DbType="NVarChar(50)")]
		public string WeldingDailyCode
		{
			get
			{
				return this._WeldingDailyCode;
			}
			set
			{
				if ((this._WeldingDailyCode != value))
				{
					this._WeldingDailyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPQCode", DbType="NVarChar(50)")]
		public string WPQCode
		{
			get
			{
				return this._WPQCode;
			}
			set
			{
				if ((this._WPQCode != value))
				{
					this._WPQCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_InformationProject_ConstructionStandardIdentify")]
	public partial class View_InformationProject_ConstructionStandardIdentify
	{
		
		private string _ConstructionStandardIdentifyId;
		
		private string _ConstructionStandardIdentifyCode;
		
		private string _VersionNumber;
		
		private string _ProjectId;
		
		private string _IdentifyPerson;
		
		private System.Nullable<System.DateTime> _IdentifyDate;
		
		private string _Remark;
		
		private string _State;
		
		private string _IdentifyPersonName;
		
		private string _FlowOperateName;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		public View_InformationProject_ConstructionStandardIdentify()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructionStandardIdentifyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ConstructionStandardIdentifyId
		{
			get
			{
				return this._ConstructionStandardIdentifyId;
			}
			set
			{
				if ((this._ConstructionStandardIdentifyId != value))
				{
					this._ConstructionStandardIdentifyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructionStandardIdentifyCode", DbType="NVarChar(50)")]
		public string ConstructionStandardIdentifyCode
		{
			get
			{
				return this._ConstructionStandardIdentifyCode;
			}
			set
			{
				if ((this._ConstructionStandardIdentifyCode != value))
				{
					this._ConstructionStandardIdentifyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNumber", DbType="NVarChar(10)")]
		public string VersionNumber
		{
			get
			{
				return this._VersionNumber;
			}
			set
			{
				if ((this._VersionNumber != value))
				{
					this._VersionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifyPerson", DbType="NVarChar(50)")]
		public string IdentifyPerson
		{
			get
			{
				return this._IdentifyPerson;
			}
			set
			{
				if ((this._IdentifyPerson != value))
				{
					this._IdentifyPerson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IdentifyDate
		{
			get
			{
				return this._IdentifyDate;
			}
			set
			{
				if ((this._IdentifyDate != value))
				{
					this._IdentifyDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(150)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NChar(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentifyPersonName", DbType="NVarChar(50)")]
		public string IdentifyPersonName
		{
			get
			{
				return this._IdentifyPersonName;
			}
			set
			{
				if ((this._IdentifyPersonName != value))
				{
					this._IdentifyPersonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowOperateName", DbType="NVarChar(58)")]
		public string FlowOperateName
		{
			get
			{
				return this._FlowOperateName;
			}
			set
			{
				if ((this._FlowOperateName != value))
				{
					this._FlowOperateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_InformationProject_ConstructionStandardSelectedItem")]
	public partial class View_InformationProject_ConstructionStandardSelectedItem
	{
		
		private string _ConstructionStandardSelectedItemId;
		
		private string _ConstructionStandardIdentifyId;
		
		private string _StandardId;
		
		private string _StandardGrade;
		
		private string _StandardNo;
		
		private string _StandardName;
		
		private string _AttachUrl;
		
		private System.Nullable<bool> _IsSelected1;
		
		private System.Nullable<bool> _IsSelected2;
		
		private System.Nullable<bool> _IsSelected3;
		
		private System.Nullable<bool> _IsSelected4;
		
		private System.Nullable<bool> _IsSelected5;
		
		private System.Nullable<bool> _IsSelected6;
		
		private System.Nullable<bool> _IsSelected7;
		
		private System.Nullable<bool> _IsSelected8;
		
		private System.Nullable<bool> _IsSelected9;
		
		private System.Nullable<bool> _IsSelected10;
		
		private System.Nullable<bool> _IsSelected11;
		
		private System.Nullable<bool> _IsSelected12;
		
		private System.Nullable<bool> _IsSelected13;
		
		private System.Nullable<bool> _IsSelected14;
		
		private System.Nullable<bool> _IsSelected15;
		
		private System.Nullable<bool> _IsSelected16;
		
		private System.Nullable<bool> _IsSelected17;
		
		private System.Nullable<bool> _IsSelected18;
		
		private System.Nullable<bool> _IsSelected19;
		
		private System.Nullable<bool> _IsSelected20;
		
		private System.Nullable<bool> _IsSelected21;
		
		private System.Nullable<bool> _IsSelected22;
		
		private System.Nullable<bool> _IsSelected23;
		
		private System.Nullable<bool> _IsSelected90;
		
		public View_InformationProject_ConstructionStandardSelectedItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructionStandardSelectedItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ConstructionStandardSelectedItemId
		{
			get
			{
				return this._ConstructionStandardSelectedItemId;
			}
			set
			{
				if ((this._ConstructionStandardSelectedItemId != value))
				{
					this._ConstructionStandardSelectedItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstructionStandardIdentifyId", DbType="NVarChar(50)")]
		public string ConstructionStandardIdentifyId
		{
			get
			{
				return this._ConstructionStandardIdentifyId;
			}
			set
			{
				if ((this._ConstructionStandardIdentifyId != value))
				{
					this._ConstructionStandardIdentifyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardId", DbType="NVarChar(50)")]
		public string StandardId
		{
			get
			{
				return this._StandardId;
			}
			set
			{
				if ((this._StandardId != value))
				{
					this._StandardId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardGrade", DbType="NChar(12)")]
		public string StandardGrade
		{
			get
			{
				return this._StandardGrade;
			}
			set
			{
				if ((this._StandardGrade != value))
				{
					this._StandardGrade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardNo", DbType="NVarChar(25)")]
		public string StandardNo
		{
			get
			{
				return this._StandardNo;
			}
			set
			{
				if ((this._StandardNo != value))
				{
					this._StandardNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardName", DbType="NVarChar(100)")]
		public string StandardName
		{
			get
			{
				return this._StandardName;
			}
			set
			{
				if ((this._StandardName != value))
				{
					this._StandardName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected1", DbType="Bit")]
		public System.Nullable<bool> IsSelected1
		{
			get
			{
				return this._IsSelected1;
			}
			set
			{
				if ((this._IsSelected1 != value))
				{
					this._IsSelected1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected2", DbType="Bit")]
		public System.Nullable<bool> IsSelected2
		{
			get
			{
				return this._IsSelected2;
			}
			set
			{
				if ((this._IsSelected2 != value))
				{
					this._IsSelected2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected3", DbType="Bit")]
		public System.Nullable<bool> IsSelected3
		{
			get
			{
				return this._IsSelected3;
			}
			set
			{
				if ((this._IsSelected3 != value))
				{
					this._IsSelected3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected4", DbType="Bit")]
		public System.Nullable<bool> IsSelected4
		{
			get
			{
				return this._IsSelected4;
			}
			set
			{
				if ((this._IsSelected4 != value))
				{
					this._IsSelected4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected5", DbType="Bit")]
		public System.Nullable<bool> IsSelected5
		{
			get
			{
				return this._IsSelected5;
			}
			set
			{
				if ((this._IsSelected5 != value))
				{
					this._IsSelected5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected6", DbType="Bit")]
		public System.Nullable<bool> IsSelected6
		{
			get
			{
				return this._IsSelected6;
			}
			set
			{
				if ((this._IsSelected6 != value))
				{
					this._IsSelected6 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected7", DbType="Bit")]
		public System.Nullable<bool> IsSelected7
		{
			get
			{
				return this._IsSelected7;
			}
			set
			{
				if ((this._IsSelected7 != value))
				{
					this._IsSelected7 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected8", DbType="Bit")]
		public System.Nullable<bool> IsSelected8
		{
			get
			{
				return this._IsSelected8;
			}
			set
			{
				if ((this._IsSelected8 != value))
				{
					this._IsSelected8 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected9", DbType="Bit")]
		public System.Nullable<bool> IsSelected9
		{
			get
			{
				return this._IsSelected9;
			}
			set
			{
				if ((this._IsSelected9 != value))
				{
					this._IsSelected9 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected10", DbType="Bit")]
		public System.Nullable<bool> IsSelected10
		{
			get
			{
				return this._IsSelected10;
			}
			set
			{
				if ((this._IsSelected10 != value))
				{
					this._IsSelected10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected11", DbType="Bit")]
		public System.Nullable<bool> IsSelected11
		{
			get
			{
				return this._IsSelected11;
			}
			set
			{
				if ((this._IsSelected11 != value))
				{
					this._IsSelected11 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected12", DbType="Bit")]
		public System.Nullable<bool> IsSelected12
		{
			get
			{
				return this._IsSelected12;
			}
			set
			{
				if ((this._IsSelected12 != value))
				{
					this._IsSelected12 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected13", DbType="Bit")]
		public System.Nullable<bool> IsSelected13
		{
			get
			{
				return this._IsSelected13;
			}
			set
			{
				if ((this._IsSelected13 != value))
				{
					this._IsSelected13 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected14", DbType="Bit")]
		public System.Nullable<bool> IsSelected14
		{
			get
			{
				return this._IsSelected14;
			}
			set
			{
				if ((this._IsSelected14 != value))
				{
					this._IsSelected14 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected15", DbType="Bit")]
		public System.Nullable<bool> IsSelected15
		{
			get
			{
				return this._IsSelected15;
			}
			set
			{
				if ((this._IsSelected15 != value))
				{
					this._IsSelected15 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected16", DbType="Bit")]
		public System.Nullable<bool> IsSelected16
		{
			get
			{
				return this._IsSelected16;
			}
			set
			{
				if ((this._IsSelected16 != value))
				{
					this._IsSelected16 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected17", DbType="Bit")]
		public System.Nullable<bool> IsSelected17
		{
			get
			{
				return this._IsSelected17;
			}
			set
			{
				if ((this._IsSelected17 != value))
				{
					this._IsSelected17 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected18", DbType="Bit")]
		public System.Nullable<bool> IsSelected18
		{
			get
			{
				return this._IsSelected18;
			}
			set
			{
				if ((this._IsSelected18 != value))
				{
					this._IsSelected18 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected19", DbType="Bit")]
		public System.Nullable<bool> IsSelected19
		{
			get
			{
				return this._IsSelected19;
			}
			set
			{
				if ((this._IsSelected19 != value))
				{
					this._IsSelected19 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected20", DbType="Bit")]
		public System.Nullable<bool> IsSelected20
		{
			get
			{
				return this._IsSelected20;
			}
			set
			{
				if ((this._IsSelected20 != value))
				{
					this._IsSelected20 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected21", DbType="Bit")]
		public System.Nullable<bool> IsSelected21
		{
			get
			{
				return this._IsSelected21;
			}
			set
			{
				if ((this._IsSelected21 != value))
				{
					this._IsSelected21 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected22", DbType="Bit")]
		public System.Nullable<bool> IsSelected22
		{
			get
			{
				return this._IsSelected22;
			}
			set
			{
				if ((this._IsSelected22 != value))
				{
					this._IsSelected22 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected23", DbType="Bit")]
		public System.Nullable<bool> IsSelected23
		{
			get
			{
				return this._IsSelected23;
			}
			set
			{
				if ((this._IsSelected23 != value))
				{
					this._IsSelected23 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected90", DbType="Bit")]
		public System.Nullable<bool> IsSelected90
		{
			get
			{
				return this._IsSelected90;
			}
			set
			{
				if ((this._IsSelected90 != value))
				{
					this._IsSelected90 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Law_LawRegulationList")]
	public partial class View_Law_LawRegulationList
	{
		
		private string _LawRegulationId;
		
		private string _LawRegulationCode;
		
		private string _LawRegulationName;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private string _Description;
		
		private string _LawsRegulationsTypeId;
		
		private string _CompileMan;
		
		private string _CompileManName;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AuditMan;
		
		private string _AuditManName;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private string _LawsRegulationsTypeCode;
		
		private string _LawsRegulationsTypeName;
		
		private string _IsPassName;
		
		private string _AttachUrlName;
		
		private string _UnitId;
		
		private string _UpStates;
		
		private string _UpStateName;
		
		private string _IsBuildName;
		
		private string _AttachFileId;
		
		private string _AttachSource;
		
		private string _ToKeyId;
		
		private string _AttachUrl;
		
		public View_Law_LawRegulationList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LawRegulationId
		{
			get
			{
				return this._LawRegulationId;
			}
			set
			{
				if ((this._LawRegulationId != value))
				{
					this._LawRegulationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationCode", DbType="NVarChar(300)")]
		public string LawRegulationCode
		{
			get
			{
				return this._LawRegulationCode;
			}
			set
			{
				if ((this._LawRegulationCode != value))
				{
					this._LawRegulationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationName", DbType="NVarChar(500)")]
		public string LawRegulationName
		{
			get
			{
				return this._LawRegulationName;
			}
			set
			{
				if ((this._LawRegulationName != value))
				{
					this._LawRegulationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this._ApprovalDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this._EffectiveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawsRegulationsTypeId", DbType="NVarChar(50)")]
		public string LawsRegulationsTypeId
		{
			get
			{
				return this._LawsRegulationsTypeId;
			}
			set
			{
				if ((this._LawsRegulationsTypeId != value))
				{
					this._LawsRegulationsTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this._CompileMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileManName", DbType="NVarChar(50)")]
		public string CompileManName
		{
			get
			{
				return this._CompileManName;
			}
			set
			{
				if ((this._CompileManName != value))
				{
					this._CompileManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this._CompileDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this._AuditMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditManName", DbType="NVarChar(50)")]
		public string AuditManName
		{
			get
			{
				return this._AuditManName;
			}
			set
			{
				if ((this._AuditManName != value))
				{
					this._AuditManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this._AuditDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this._IsPass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this._IsBuild = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this._UpState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawsRegulationsTypeCode", DbType="NVarChar(50)")]
		public string LawsRegulationsTypeCode
		{
			get
			{
				return this._LawsRegulationsTypeCode;
			}
			set
			{
				if ((this._LawsRegulationsTypeCode != value))
				{
					this._LawsRegulationsTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawsRegulationsTypeName", DbType="NVarChar(50)")]
		public string LawsRegulationsTypeName
		{
			get
			{
				return this._LawsRegulationsTypeName;
			}
			set
			{
				if ((this._LawsRegulationsTypeName != value))
				{
					this._LawsRegulationsTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPassName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string IsPassName
		{
			get
			{
				return this._IsPassName;
			}
			set
			{
				if ((this._IsPassName != value))
				{
					this._IsPassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrlName", DbType="NVarChar(2000)")]
		public string AttachUrlName
		{
			get
			{
				return this._AttachUrlName;
			}
			set
			{
				if ((this._AttachUrlName != value))
				{
					this._AttachUrlName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpStates", DbType="VarChar(8)")]
		public string UpStates
		{
			get
			{
				return this._UpStates;
			}
			set
			{
				if ((this._UpStates != value))
				{
					this._UpStates = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpStateName", DbType="NVarChar(100)")]
		public string UpStateName
		{
			get
			{
				return this._UpStateName;
			}
			set
			{
				if ((this._UpStateName != value))
				{
					this._UpStateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuildName", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string IsBuildName
		{
			get
			{
				return this._IsBuildName;
			}
			set
			{
				if ((this._IsBuildName != value))
				{
					this._IsBuildName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachFileId", DbType="NVarChar(50)")]
		public string AttachFileId
		{
			get
			{
				return this._AttachFileId;
			}
			set
			{
				if ((this._AttachFileId != value))
				{
					this._AttachFileId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachSource", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AttachSource
		{
			get
			{
				return this._AttachSource;
			}
			set
			{
				if ((this._AttachSource != value))
				{
					this._AttachSource = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToKeyId", DbType="NVarChar(50)")]
		public string ToKeyId
		{
			get
			{
				return this._ToKeyId;
			}
			set
			{
				if ((this._ToKeyId != value))
				{
					this._ToKeyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Law_LawRegulationSelectedItem")]
	public partial class View_Law_LawRegulationSelectedItem
	{
		
		private string _LawRegulationSelectedItemId;
		
		private string _LawRegulationIdentifyId;
		
		private string _LawRegulationId;
		
		private string _LawRegulationCode;
		
		private string _LawsRegulationsTypeId;
		
		private string _FitPerfomance;
		
		private string _LawRegulationName;
		
		private System.Nullable<System.DateTime> _ApprovalDate;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private string _Description;
		
		private string _LawsRegulationsTypeName;
		
		private string _ShortDescription;
		
		public View_Law_LawRegulationSelectedItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationSelectedItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LawRegulationSelectedItemId
		{
			get
			{
				return this._LawRegulationSelectedItemId;
			}
			set
			{
				if ((this._LawRegulationSelectedItemId != value))
				{
					this._LawRegulationSelectedItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationIdentifyId", DbType="NVarChar(50)")]
		public string LawRegulationIdentifyId
		{
			get
			{
				return this._LawRegulationIdentifyId;
			}
			set
			{
				if ((this._LawRegulationIdentifyId != value))
				{
					this._LawRegulationIdentifyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationId", DbType="NVarChar(50)")]
		public string LawRegulationId
		{
			get
			{
				return this._LawRegulationId;
			}
			set
			{
				if ((this._LawRegulationId != value))
				{
					this._LawRegulationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationCode", DbType="NVarChar(300)")]
		public string LawRegulationCode
		{
			get
			{
				return this._LawRegulationCode;
			}
			set
			{
				if ((this._LawRegulationCode != value))
				{
					this._LawRegulationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawsRegulationsTypeId", DbType="NVarChar(50)")]
		public string LawsRegulationsTypeId
		{
			get
			{
				return this._LawsRegulationsTypeId;
			}
			set
			{
				if ((this._LawsRegulationsTypeId != value))
				{
					this._LawsRegulationsTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FitPerfomance", DbType="NVarChar(100)")]
		public string FitPerfomance
		{
			get
			{
				return this._FitPerfomance;
			}
			set
			{
				if ((this._FitPerfomance != value))
				{
					this._FitPerfomance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawRegulationName", DbType="NVarChar(500)")]
		public string LawRegulationName
		{
			get
			{
				return this._LawRegulationName;
			}
			set
			{
				if ((this._LawRegulationName != value))
				{
					this._LawRegulationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovalDate
		{
			get
			{
				return this._ApprovalDate;
			}
			set
			{
				if ((this._ApprovalDate != value))
				{
					this._ApprovalDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this._EffectiveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawsRegulationsTypeName", DbType="NVarChar(50)")]
		public string LawsRegulationsTypeName
		{
			get
			{
				return this._LawsRegulationsTypeName;
			}
			set
			{
				if ((this._LawsRegulationsTypeName != value))
				{
					this._LawsRegulationsTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NVarChar(1000)")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this._ShortDescription = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Law_ManageRule")]
	public partial class View_Law_ManageRule
	{
		
		private string _ManageRuleId;
		
		private string _ManageRuleCode;
		
		private string _ManageRuleName;
		
		private string _ManageRuleTypeId;
		
		private string _VersionNo;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _Remark;
		
		private string _RemarkDef;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _ManageRuleTypeCode;
		
		private string _ManageRuleTypeName;
		
		private string _AttachUrlName;
		
		private string _IsBuildName;
		
		public View_Law_ManageRule()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManageRuleId
		{
			get
			{
				return this._ManageRuleId;
			}
			set
			{
				if ((this._ManageRuleId != value))
				{
					this._ManageRuleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManageRuleCode
		{
			get
			{
				return this._ManageRuleCode;
			}
			set
			{
				if ((this._ManageRuleCode != value))
				{
					this._ManageRuleCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManageRuleName
		{
			get
			{
				return this._ManageRuleName;
			}
			set
			{
				if ((this._ManageRuleName != value))
				{
					this._ManageRuleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleTypeId", DbType="NVarChar(50)")]
		public string ManageRuleTypeId
		{
			get
			{
				return this._ManageRuleTypeId;
			}
			set
			{
				if ((this._ManageRuleTypeId != value))
				{
					this._ManageRuleTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNo", DbType="NVarChar(50)")]
		public string VersionNo
		{
			get
			{
				return this._VersionNo;
			}
			set
			{
				if ((this._VersionNo != value))
				{
					this._VersionNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this._CompileMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this._CompileDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemarkDef", DbType="NVarChar(1000)")]
		public string RemarkDef
		{
			get
			{
				return this._RemarkDef;
			}
			set
			{
				if ((this._RemarkDef != value))
				{
					this._RemarkDef = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this._IsPass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this._IsBuild = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleTypeCode", DbType="NVarChar(50)")]
		public string ManageRuleTypeCode
		{
			get
			{
				return this._ManageRuleTypeCode;
			}
			set
			{
				if ((this._ManageRuleTypeCode != value))
				{
					this._ManageRuleTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRuleTypeName", DbType="NVarChar(50)")]
		public string ManageRuleTypeName
		{
			get
			{
				return this._ManageRuleTypeName;
			}
			set
			{
				if ((this._ManageRuleTypeName != value))
				{
					this._ManageRuleTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrlName", DbType="NVarChar(2000)")]
		public string AttachUrlName
		{
			get
			{
				return this._AttachUrlName;
			}
			set
			{
				if ((this._AttachUrlName != value))
				{
					this._AttachUrlName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuildName", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string IsBuildName
		{
			get
			{
				return this._IsBuildName;
			}
			set
			{
				if ((this._IsBuildName != value))
				{
					this._IsBuildName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Law_RulesRegulations")]
	public partial class View_Law_RulesRegulations
	{
		
		private string _RulesRegulationsId;
		
		private string _RulesRegulationsCode;
		
		private string _RulesRegulationsName;
		
		private string _RulesRegulationsTypeId;
		
		private System.Nullable<System.DateTime> _CustomDate;
		
		private string _ApplicableScope;
		
		private string _Remark;
		
		private string _AttachUrl;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _RulesRegulationsTypeCode;
		
		private string _RulesRegulationsTypeName;
		
		private string _AttachUrlName;
		
		private string _IsBuildName;
		
		public View_Law_RulesRegulations()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RulesRegulationsId
		{
			get
			{
				return this._RulesRegulationsId;
			}
			set
			{
				if ((this._RulesRegulationsId != value))
				{
					this._RulesRegulationsId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsCode", DbType="NVarChar(50)")]
		public string RulesRegulationsCode
		{
			get
			{
				return this._RulesRegulationsCode;
			}
			set
			{
				if ((this._RulesRegulationsCode != value))
				{
					this._RulesRegulationsCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RulesRegulationsName
		{
			get
			{
				return this._RulesRegulationsName;
			}
			set
			{
				if ((this._RulesRegulationsName != value))
				{
					this._RulesRegulationsName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsTypeId", DbType="NVarChar(50)")]
		public string RulesRegulationsTypeId
		{
			get
			{
				return this._RulesRegulationsTypeId;
			}
			set
			{
				if ((this._RulesRegulationsTypeId != value))
				{
					this._RulesRegulationsTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CustomDate
		{
			get
			{
				return this._CustomDate;
			}
			set
			{
				if ((this._CustomDate != value))
				{
					this._CustomDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicableScope", DbType="NVarChar(2000)")]
		public string ApplicableScope
		{
			get
			{
				return this._ApplicableScope;
			}
			set
			{
				if ((this._ApplicableScope != value))
				{
					this._ApplicableScope = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this._CompileMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this._CompileDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this._IsPass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this._IsBuild = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsTypeCode", DbType="NVarChar(50)")]
		public string RulesRegulationsTypeCode
		{
			get
			{
				return this._RulesRegulationsTypeCode;
			}
			set
			{
				if ((this._RulesRegulationsTypeCode != value))
				{
					this._RulesRegulationsTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RulesRegulationsTypeName", DbType="NVarChar(50)")]
		public string RulesRegulationsTypeName
		{
			get
			{
				return this._RulesRegulationsTypeName;
			}
			set
			{
				if ((this._RulesRegulationsTypeName != value))
				{
					this._RulesRegulationsTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrlName", DbType="NVarChar(2000)")]
		public string AttachUrlName
		{
			get
			{
				return this._AttachUrlName;
			}
			set
			{
				if ((this._AttachUrlName != value))
				{
					this._AttachUrlName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuildName", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string IsBuildName
		{
			get
			{
				return this._IsBuildName;
			}
			set
			{
				if ((this._IsBuildName != value))
				{
					this._IsBuildName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_MonthReportView")]
	public partial class View_MonthReportView
	{
		
		private string _MonthReportUnitDetailId;
		
		private string _MonthReportDetailId;
		
		private string _PostId;
		
		private System.Nullable<int> _CheckPersonNum;
		
		private System.Nullable<int> _RealPersonNum;
		
		private System.Nullable<decimal> _PersonWorkTime;
		
		private string _Remark;
		
		private string _WorkPostName;
		
		private string _UnitId;
		
		private System.Nullable<decimal> _WorkTime;
		
		private System.Nullable<decimal> _TotalPersonWorkTime;
		
		private string _StaffData;
		
		private System.Nullable<decimal> _DayNum;
		
		private System.Nullable<int> _YearPersonWorkTime;
		
		private string _UnitName;
		
		private string _MonthReportId;
		
		private string _ProjectId;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _States;
		
		public View_MonthReportView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthReportUnitDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MonthReportUnitDetailId
		{
			get
			{
				return this._MonthReportUnitDetailId;
			}
			set
			{
				if ((this._MonthReportUnitDetailId != value))
				{
					this._MonthReportUnitDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthReportDetailId", DbType="NVarChar(50)")]
		public string MonthReportDetailId
		{
			get
			{
				return this._MonthReportDetailId;
			}
			set
			{
				if ((this._MonthReportDetailId != value))
				{
					this._MonthReportDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="NVarChar(50)")]
		public string PostId
		{
			get
			{
				return this._PostId;
			}
			set
			{
				if ((this._PostId != value))
				{
					this._PostId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPersonNum", DbType="Int")]
		public System.Nullable<int> CheckPersonNum
		{
			get
			{
				return this._CheckPersonNum;
			}
			set
			{
				if ((this._CheckPersonNum != value))
				{
					this._CheckPersonNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPersonNum", DbType="Int")]
		public System.Nullable<int> RealPersonNum
		{
			get
			{
				return this._RealPersonNum;
			}
			set
			{
				if ((this._RealPersonNum != value))
				{
					this._RealPersonNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PersonWorkTime
		{
			get
			{
				return this._PersonWorkTime;
			}
			set
			{
				if ((this._PersonWorkTime != value))
				{
					this._PersonWorkTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostName", DbType="NVarChar(100)")]
		public string WorkPostName
		{
			get
			{
				return this._WorkPostName;
			}
			set
			{
				if ((this._WorkPostName != value))
				{
					this._WorkPostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this._WorkTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPersonWorkTime
		{
			get
			{
				return this._TotalPersonWorkTime;
			}
			set
			{
				if ((this._TotalPersonWorkTime != value))
				{
					this._TotalPersonWorkTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffData", DbType="NVarChar(2000)")]
		public string StaffData
		{
			get
			{
				return this._StaffData;
			}
			set
			{
				if ((this._StaffData != value))
				{
					this._StaffData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayNum", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DayNum
		{
			get
			{
				return this._DayNum;
			}
			set
			{
				if ((this._DayNum != value))
				{
					this._DayNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearPersonWorkTime", DbType="Int")]
		public System.Nullable<int> YearPersonWorkTime
		{
			get
			{
				return this._YearPersonWorkTime;
			}
			set
			{
				if ((this._YearPersonWorkTime != value))
				{
					this._YearPersonWorkTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthReportId", DbType="NVarChar(50)")]
		public string MonthReportId
		{
			get
			{
				return this._MonthReportId;
			}
			set
			{
				if ((this._MonthReportId != value))
				{
					this._MonthReportId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this._CompileMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this._CompileDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="Char(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this._States = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_ProjectData_FlowOperate")]
	public partial class View_ProjectData_FlowOperate
	{
		
		private string _FlowOperateId;
		
		private string _MenuId;
		
		private string _DataId;
		
		private System.Nullable<int> _SortIndex;
		
		private string _OperaterId;
		
		private System.Nullable<System.DateTime> _OperaterTime;
		
		private string _State;
		
		private string _Opinion;
		
		private System.Nullable<bool> _IsClosed;
		
		private string _MenuName;
		
		private string _OperaterName;
		
		private string _UnitId;
		
		private string _UnitName;
		
		private string _StateName;
		
		public View_ProjectData_FlowOperate()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowOperateId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FlowOperateId
		{
			get
			{
				return this._FlowOperateId;
			}
			set
			{
				if ((this._FlowOperateId != value))
				{
					this._FlowOperateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="NVarChar(50)")]
		public string MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this._MenuId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataId", DbType="NVarChar(50)")]
		public string DataId
		{
			get
			{
				return this._DataId;
			}
			set
			{
				if ((this._DataId != value))
				{
					this._DataId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this._SortIndex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperaterId", DbType="NVarChar(50)")]
		public string OperaterId
		{
			get
			{
				return this._OperaterId;
			}
			set
			{
				if ((this._OperaterId != value))
				{
					this._OperaterId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperaterTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OperaterTime
		{
			get
			{
				return this._OperaterTime;
			}
			set
			{
				if ((this._OperaterTime != value))
				{
					this._OperaterTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(1)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opinion", DbType="NVarChar(1000)")]
		public string Opinion
		{
			get
			{
				return this._Opinion;
			}
			set
			{
				if ((this._Opinion != value))
				{
					this._Opinion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit")]
		public System.Nullable<bool> IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this._IsClosed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(50)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this._MenuName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperaterName", DbType="NVarChar(50)")]
		public string OperaterName
		{
			get
			{
				return this._OperaterName;
			}
			set
			{
				if ((this._OperaterName != value))
				{
					this._OperaterName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_PTP_TestPackageAudit")]
	public partial class View_PTP_TestPackageAudit
	{
		
		private string _PipelineId;
		
		private string _PT_PipeId;
		
		private string _PTP_ID;
		
		private string _ProjectId;
		
		private string _UnitWorkCode;
		
		private string _PipelineCode;
		
		private int _WeldJointCount;
		
		private int _WeldJointCountT;
		
		private int _CountS;
		
		private System.Nullable<int> _CountU;
		
		private string _NDTR_Name;
		
		private string _Ratio;
		
		private int _NDTR_Rate;
		
		private System.Nullable<decimal> _RatioC;
		
		public View_PTP_TestPackageAudit()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineId", DbType="NVarChar(50)")]
		public string PipelineId
		{
			get
			{
				return this._PipelineId;
			}
			set
			{
				if ((this._PipelineId != value))
				{
					this._PipelineId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_PipeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PT_PipeId
		{
			get
			{
				return this._PT_PipeId;
			}
			set
			{
				if ((this._PT_PipeId != value))
				{
					this._PT_PipeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTP_ID", DbType="NVarChar(50)")]
		public string PTP_ID
		{
			get
			{
				return this._PTP_ID;
			}
			set
			{
				if ((this._PTP_ID != value))
				{
					this._PTP_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkCode", DbType="NVarChar(10)")]
		public string UnitWorkCode
		{
			get
			{
				return this._UnitWorkCode;
			}
			set
			{
				if ((this._UnitWorkCode != value))
				{
					this._UnitWorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PipelineCode", DbType="NVarChar(50)")]
		public string PipelineCode
		{
			get
			{
				return this._PipelineCode;
			}
			set
			{
				if ((this._PipelineCode != value))
				{
					this._PipelineCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointCount", DbType="Int NOT NULL")]
		public int WeldJointCount
		{
			get
			{
				return this._WeldJointCount;
			}
			set
			{
				if ((this._WeldJointCount != value))
				{
					this._WeldJointCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldJointCountT", DbType="Int NOT NULL")]
		public int WeldJointCountT
		{
			get
			{
				return this._WeldJointCountT;
			}
			set
			{
				if ((this._WeldJointCountT != value))
				{
					this._WeldJointCountT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountS", DbType="Int NOT NULL")]
		public int CountS
		{
			get
			{
				return this._CountS;
			}
			set
			{
				if ((this._CountS != value))
				{
					this._CountS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountU", DbType="Int")]
		public System.Nullable<int> CountU
		{
			get
			{
				return this._CountU;
			}
			set
			{
				if ((this._CountU != value))
				{
					this._CountU = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_Name", DbType="VarChar(30)")]
		public string NDTR_Name
		{
			get
			{
				return this._NDTR_Name;
			}
			set
			{
				if ((this._NDTR_Name != value))
				{
					this._NDTR_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ratio", DbType="NVarChar(20)")]
		public string Ratio
		{
			get
			{
				return this._Ratio;
			}
			set
			{
				if ((this._Ratio != value))
				{
					this._Ratio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTR_Rate", DbType="Int NOT NULL")]
		public int NDTR_Rate
		{
			get
			{
				return this._NDTR_Rate;
			}
			set
			{
				if ((this._NDTR_Rate != value))
				{
					this._NDTR_Rate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatioC", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> RatioC
		{
			get
			{
				return this._RatioC;
			}
			set
			{
				if ((this._RatioC != value))
				{
					this._RatioC = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_QualityAudit_SubUnitQualityAuditDetail")]
	public partial class View_QualityAudit_SubUnitQualityAuditDetail
	{
		
		private string _AuditDetailId;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _AuditContent;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private string _AuditResult;
		
		private string _AuditManName;
		
		public View_QualityAudit_SubUnitQualityAuditDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AuditDetailId
		{
			get
			{
				return this._AuditDetailId;
			}
			set
			{
				if ((this._AuditDetailId != value))
				{
					this._AuditDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditContent", DbType="NVarChar(200)")]
		public string AuditContent
		{
			get
			{
				return this._AuditContent;
			}
			set
			{
				if ((this._AuditContent != value))
				{
					this._AuditContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this._AuditMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this._AuditDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditResult", DbType="NVarChar(500)")]
		public string AuditResult
		{
			get
			{
				return this._AuditResult;
			}
			set
			{
				if ((this._AuditResult != value))
				{
					this._AuditResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditManName", DbType="NVarChar(50)")]
		public string AuditManName
		{
			get
			{
				return this._AuditManName;
			}
			set
			{
				if ((this._AuditManName != value))
				{
					this._AuditManName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_SitePerson_Checking")]
	public partial class View_SitePerson_Checking
	{
		
		private string _CheckingId;
		
		private string _CardNo;
		
		private string _ProjectId;
		
		private string _IdentityCard;
		
		private string _WorkAreaId;
		
		private System.Nullable<System.DateTime> _IntoOutTime;
		
		private System.Nullable<bool> _IntoOut;
		
		private string _Address;
		
		private string _WorkAreaName;
		
		private string _PersonName;
		
		private string _UnitId;
		
		private string _UnitName;
		
		private string _States;
		
		public View_SitePerson_Checking()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckingId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CheckingId
		{
			get
			{
				return this._CheckingId;
			}
			set
			{
				if ((this._CheckingId != value))
				{
					this._CheckingId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNo", DbType="NVarChar(50)")]
		public string CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this._CardNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(50)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this._IdentityCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					this._WorkAreaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntoOutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> IntoOutTime
		{
			get
			{
				return this._IntoOutTime;
			}
			set
			{
				if ((this._IntoOutTime != value))
				{
					this._IntoOutTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntoOut", DbType="Bit")]
		public System.Nullable<bool> IntoOut
		{
			get
			{
				return this._IntoOut;
			}
			set
			{
				if ((this._IntoOut != value))
				{
					this._IntoOut = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaName", DbType="NVarChar(100)")]
		public string WorkAreaName
		{
			get
			{
				return this._WorkAreaName;
			}
			set
			{
				if ((this._WorkAreaName != value))
				{
					this._WorkAreaName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonName", DbType="NVarChar(50)")]
		public string PersonName
		{
			get
			{
				return this._PersonName;
			}
			set
			{
				if ((this._PersonName != value))
				{
					this._PersonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="VarChar(1)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this._States = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_SitePerson_DayReportUnitDetail")]
	public partial class View_SitePerson_DayReportUnitDetail
	{
		
		private string _DayReportUnitDetailId;
		
		private string _DayReportDetailId;
		
		private string _PostId;
		
		private System.Nullable<int> _CheckPersonNum;
		
		private System.Nullable<int> _RealPersonNum;
		
		private System.Nullable<decimal> _PersonWorkTime;
		
		private string _Remark;
		
		private string _WorkPostName;
		
		private string _PostType;
		
		private string _WorkPostCode;
		
		private string _IsHsse;
		
		public View_SitePerson_DayReportUnitDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayReportUnitDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DayReportUnitDetailId
		{
			get
			{
				return this._DayReportUnitDetailId;
			}
			set
			{
				if ((this._DayReportUnitDetailId != value))
				{
					this._DayReportUnitDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayReportDetailId", DbType="NVarChar(50)")]
		public string DayReportDetailId
		{
			get
			{
				return this._DayReportDetailId;
			}
			set
			{
				if ((this._DayReportDetailId != value))
				{
					this._DayReportDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="NVarChar(50)")]
		public string PostId
		{
			get
			{
				return this._PostId;
			}
			set
			{
				if ((this._PostId != value))
				{
					this._PostId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPersonNum", DbType="Int")]
		public System.Nullable<int> CheckPersonNum
		{
			get
			{
				return this._CheckPersonNum;
			}
			set
			{
				if ((this._CheckPersonNum != value))
				{
					this._CheckPersonNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPersonNum", DbType="Int")]
		public System.Nullable<int> RealPersonNum
		{
			get
			{
				return this._RealPersonNum;
			}
			set
			{
				if ((this._RealPersonNum != value))
				{
					this._RealPersonNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PersonWorkTime
		{
			get
			{
				return this._PersonWorkTime;
			}
			set
			{
				if ((this._PersonWorkTime != value))
				{
					this._PersonWorkTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostName", DbType="NVarChar(100)")]
		public string WorkPostName
		{
			get
			{
				return this._WorkPostName;
			}
			set
			{
				if ((this._WorkPostName != value))
				{
					this._WorkPostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostType", DbType="NChar(1)")]
		public string PostType
		{
			get
			{
				return this._PostType;
			}
			set
			{
				if ((this._PostType != value))
				{
					this._PostType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostCode", DbType="NVarChar(50)")]
		public string WorkPostCode
		{
			get
			{
				return this._WorkPostCode;
			}
			set
			{
				if ((this._WorkPostCode != value))
				{
					this._WorkPostCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHsse", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string IsHsse
		{
			get
			{
				return this._IsHsse;
			}
			set
			{
				if ((this._IsHsse != value))
				{
					this._IsHsse = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_SitePerson_MonthReportUnitDetail")]
	public partial class View_SitePerson_MonthReportUnitDetail
	{
		
		private string _MonthReportUnitDetailId;
		
		private string _MonthReportDetailId;
		
		private string _PostId;
		
		private System.Nullable<int> _CheckPersonNum;
		
		private System.Nullable<int> _RealPersonNum;
		
		private System.Nullable<decimal> _PersonWorkTime;
		
		private string _Remark;
		
		private string _WorkPostName;
		
		private string _PostType;
		
		private string _WorkPostCode;
		
		public View_SitePerson_MonthReportUnitDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthReportUnitDetailId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MonthReportUnitDetailId
		{
			get
			{
				return this._MonthReportUnitDetailId;
			}
			set
			{
				if ((this._MonthReportUnitDetailId != value))
				{
					this._MonthReportUnitDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthReportDetailId", DbType="NVarChar(50)")]
		public string MonthReportDetailId
		{
			get
			{
				return this._MonthReportDetailId;
			}
			set
			{
				if ((this._MonthReportDetailId != value))
				{
					this._MonthReportDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostId", DbType="NVarChar(50)")]
		public string PostId
		{
			get
			{
				return this._PostId;
			}
			set
			{
				if ((this._PostId != value))
				{
					this._PostId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPersonNum", DbType="Int")]
		public System.Nullable<int> CheckPersonNum
		{
			get
			{
				return this._CheckPersonNum;
			}
			set
			{
				if ((this._CheckPersonNum != value))
				{
					this._CheckPersonNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPersonNum", DbType="Int")]
		public System.Nullable<int> RealPersonNum
		{
			get
			{
				return this._RealPersonNum;
			}
			set
			{
				if ((this._RealPersonNum != value))
				{
					this._RealPersonNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonWorkTime", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PersonWorkTime
		{
			get
			{
				return this._PersonWorkTime;
			}
			set
			{
				if ((this._PersonWorkTime != value))
				{
					this._PersonWorkTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostName", DbType="NVarChar(100)")]
		public string WorkPostName
		{
			get
			{
				return this._WorkPostName;
			}
			set
			{
				if ((this._WorkPostName != value))
				{
					this._WorkPostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostType", DbType="NChar(1)")]
		public string PostType
		{
			get
			{
				return this._PostType;
			}
			set
			{
				if ((this._PostType != value))
				{
					this._PostType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostCode", DbType="NVarChar(50)")]
		public string WorkPostCode
		{
			get
			{
				return this._WorkPostCode;
			}
			set
			{
				if ((this._WorkPostCode != value))
				{
					this._WorkPostCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_SitePerson_Person")]
	public partial class View_SitePerson_Person
	{
		
		private string _PersonId;
		
		private string _CardNo;
		
		private string _PersonName;
		
		private string _Sex;
		
		private string _SexName;
		
		private string _IdentityCard;
		
		private string _Address;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _TeamGroupId;
		
		private string _WorkAreaId;
		
		private string _WorkPostId;
		
		private System.Nullable<System.DateTime> _InTime;
		
		private System.Nullable<System.DateTime> _OutTime;
		
		private string _OutResult;
		
		private string _Telephone;
		
		private string _PositionId;
		
		private string _PostTitleId;
		
		private string _PhotoUrl;
		
		private bool _IsUsed;
		
		private string _IsUsedName;
		
		private bool _IsCardUsed;
		
		private string _IsCardUsedName;
		
		private System.Nullable<int> _PersonIndex;
		
		private string _ProjectCode;
		
		private string _ProjectName;
		
		private string _UnitCode;
		
		private string _UnitName;
		
		private string _TeamGroupName;
		
		private string _WorkAreaCode;
		
		private string _WorkAreaName;
		
		private string _WorkPostName;
		
		private string _PositionName;
		
		private string _PostTitleName;
		
		private string _DepartName;
		
		private string _PostType;
		
		private System.Nullable<bool> _IsHsse;
		
		private System.Nullable<int> _TrainCount;
		
		private string _AuditorId;
		
		private string _AuditorName;
		
		private System.Nullable<System.DateTime> _AuditorDate;
		
		private string _IDCardUrl;
		
		private System.Nullable<bool> _IsForeign;
		
		private System.Nullable<bool> _IsOutside;
		
		public View_SitePerson_Person()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this._PersonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNo", DbType="NVarChar(50)")]
		public string CardNo
		{
			get
			{
				return this._CardNo;
			}
			set
			{
				if ((this._CardNo != value))
				{
					this._CardNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonName", DbType="NVarChar(50)")]
		public string PersonName
		{
			get
			{
				return this._PersonName;
			}
			set
			{
				if ((this._PersonName != value))
				{
					this._PersonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SexName", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string SexName
		{
			get
			{
				return this._SexName;
			}
			set
			{
				if ((this._SexName != value))
				{
					this._SexName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(50)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this._IdentityCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupId", DbType="NVarChar(50)")]
		public string TeamGroupId
		{
			get
			{
				return this._TeamGroupId;
			}
			set
			{
				if ((this._TeamGroupId != value))
				{
					this._TeamGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaId", DbType="NVarChar(50)")]
		public string WorkAreaId
		{
			get
			{
				return this._WorkAreaId;
			}
			set
			{
				if ((this._WorkAreaId != value))
				{
					this._WorkAreaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostId", DbType="NVarChar(50)")]
		public string WorkPostId
		{
			get
			{
				return this._WorkPostId;
			}
			set
			{
				if ((this._WorkPostId != value))
				{
					this._WorkPostId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> InTime
		{
			get
			{
				return this._InTime;
			}
			set
			{
				if ((this._InTime != value))
				{
					this._InTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutTime
		{
			get
			{
				return this._OutTime;
			}
			set
			{
				if ((this._OutTime != value))
				{
					this._OutTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutResult", DbType="NVarChar(50)")]
		public string OutResult
		{
			get
			{
				return this._OutResult;
			}
			set
			{
				if ((this._OutResult != value))
				{
					this._OutResult = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50)")]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this._PositionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleId", DbType="NVarChar(50)")]
		public string PostTitleId
		{
			get
			{
				return this._PostTitleId;
			}
			set
			{
				if ((this._PostTitleId != value))
				{
					this._PostTitleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(2000)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this._PhotoUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsed", DbType="Bit NOT NULL")]
		public bool IsUsed
		{
			get
			{
				return this._IsUsed;
			}
			set
			{
				if ((this._IsUsed != value))
				{
					this._IsUsed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUsedName", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string IsUsedName
		{
			get
			{
				return this._IsUsedName;
			}
			set
			{
				if ((this._IsUsedName != value))
				{
					this._IsUsedName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCardUsed", DbType="Bit NOT NULL")]
		public bool IsCardUsed
		{
			get
			{
				return this._IsCardUsed;
			}
			set
			{
				if ((this._IsCardUsed != value))
				{
					this._IsCardUsed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCardUsedName", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string IsCardUsedName
		{
			get
			{
				return this._IsCardUsedName;
			}
			set
			{
				if ((this._IsCardUsedName != value))
				{
					this._IsCardUsedName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonIndex", DbType="Int")]
		public System.Nullable<int> PersonIndex
		{
			get
			{
				return this._PersonIndex;
			}
			set
			{
				if ((this._PersonIndex != value))
				{
					this._PersonIndex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="NVarChar(50)")]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this._ProjectCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(100)")]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this._ProjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(100)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this._UnitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamGroupName", DbType="NVarChar(50)")]
		public string TeamGroupName
		{
			get
			{
				return this._TeamGroupName;
			}
			set
			{
				if ((this._TeamGroupName != value))
				{
					this._TeamGroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaCode", DbType="NVarChar(10)")]
		public string WorkAreaCode
		{
			get
			{
				return this._WorkAreaCode;
			}
			set
			{
				if ((this._WorkAreaCode != value))
				{
					this._WorkAreaCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkAreaName", DbType="NVarChar(30)")]
		public string WorkAreaName
		{
			get
			{
				return this._WorkAreaName;
			}
			set
			{
				if ((this._WorkAreaName != value))
				{
					this._WorkAreaName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostName", DbType="NVarChar(100)")]
		public string WorkPostName
		{
			get
			{
				return this._WorkPostName;
			}
			set
			{
				if ((this._WorkPostName != value))
				{
					this._WorkPostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionName", DbType="NVarChar(50)")]
		public string PositionName
		{
			get
			{
				return this._PositionName;
			}
			set
			{
				if ((this._PositionName != value))
				{
					this._PositionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTitleName", DbType="NVarChar(100)")]
		public string PostTitleName
		{
			get
			{
				return this._PostTitleName;
			}
			set
			{
				if ((this._PostTitleName != value))
				{
					this._PostTitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartName", DbType="NVarChar(50)")]
		public string DepartName
		{
			get
			{
				return this._DepartName;
			}
			set
			{
				if ((this._DepartName != value))
				{
					this._DepartName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostType", DbType="NChar(1)")]
		public string PostType
		{
			get
			{
				return this._PostType;
			}
			set
			{
				if ((this._PostType != value))
				{
					this._PostType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHsse", DbType="Bit")]
		public System.Nullable<bool> IsHsse
		{
			get
			{
				return this._IsHsse;
			}
			set
			{
				if ((this._IsHsse != value))
				{
					this._IsHsse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainCount", DbType="Int")]
		public System.Nullable<int> TrainCount
		{
			get
			{
				return this._TrainCount;
			}
			set
			{
				if ((this._TrainCount != value))
				{
					this._TrainCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorId", DbType="NVarChar(50)")]
		public string AuditorId
		{
			get
			{
				return this._AuditorId;
			}
			set
			{
				if ((this._AuditorId != value))
				{
					this._AuditorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorName", DbType="NVarChar(50)")]
		public string AuditorName
		{
			get
			{
				return this._AuditorName;
			}
			set
			{
				if ((this._AuditorName != value))
				{
					this._AuditorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditorDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditorDate
		{
			get
			{
				return this._AuditorDate;
			}
			set
			{
				if ((this._AuditorDate != value))
				{
					this._AuditorDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCardUrl", DbType="NVarChar(2000)")]
		public string IDCardUrl
		{
			get
			{
				return this._IDCardUrl;
			}
			set
			{
				if ((this._IDCardUrl != value))
				{
					this._IDCardUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForeign", DbType="Bit")]
		public System.Nullable<bool> IsForeign
		{
			get
			{
				return this._IsForeign;
			}
			set
			{
				if ((this._IsForeign != value))
				{
					this._IsForeign = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOutside", DbType="Bit")]
		public System.Nullable<bool> IsOutside
		{
			get
			{
				return this._IsOutside;
			}
			set
			{
				if ((this._IsOutside != value))
				{
					this._IsOutside = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Sys_User")]
	public partial class View_Sys_User
	{
		
		private string _UserId;
		
		private string _Account;
		
		private string _UserCode;
		
		private string _Password;
		
		private string _UserName;
		
		private string _RoleId;
		
		private string _UnitId;
		
		private System.Nullable<bool> _IsPost;
		
		private string _LoginProjectId;
		
		private string _Sex;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private string _Marriage;
		
		private string _Nation;
		
		private string _IdentityCard;
		
		private string _Email;
		
		private string _Telephone;
		
		private string _Education;
		
		private string _Hometown;
		
		private string _PositionId;
		
		private string _PhotoUrl;
		
		private string _Performance;
		
		private System.Nullable<int> _PageSize;
		
		private System.Nullable<bool> _IsOffice;
		
		private string _DeviceId;
		
		private string _SessionString;
		
		private System.Nullable<int> _RCount;
		
		private string _DataSources;
		
		private string _IsPostName;
		
		private string _RoleName;
		
		private string _RoleCode;
		
		private System.Nullable<bool> _IsAuditFlow;
		
		private string _UnitCode;
		
		private string _UnitName;
		
		private string _RoleTypeName;
		
		private string _SignatureUrl;
		
		private string _UserType;
		
		public View_Sys_User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(50)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this._Account = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(20)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(50)")]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPost", DbType="Bit")]
		public System.Nullable<bool> IsPost
		{
			get
			{
				return this._IsPost;
			}
			set
			{
				if ((this._IsPost != value))
				{
					this._IsPost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProjectId", DbType="NVarChar(50)")]
		public string LoginProjectId
		{
			get
			{
				return this._LoginProjectId;
			}
			set
			{
				if ((this._LoginProjectId != value))
				{
					this._LoginProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this._BirthDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marriage", DbType="NVarChar(20)")]
		public string Marriage
		{
			get
			{
				return this._Marriage;
			}
			set
			{
				if ((this._Marriage != value))
				{
					this._Marriage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="NVarChar(20)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this._Nation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityCard", DbType="NVarChar(50)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this._IdentityCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="NVarChar(20)")]
		public string Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this._Education = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hometown", DbType="NVarChar(50)")]
		public string Hometown
		{
			get
			{
				return this._Hometown;
			}
			set
			{
				if ((this._Hometown != value))
				{
					this._Hometown = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="NVarChar(50)")]
		public string PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this._PositionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(500)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this._PhotoUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Performance", DbType="NVarChar(800)")]
		public string Performance
		{
			get
			{
				return this._Performance;
			}
			set
			{
				if ((this._Performance != value))
				{
					this._Performance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSize", DbType="Int")]
		public System.Nullable<int> PageSize
		{
			get
			{
				return this._PageSize;
			}
			set
			{
				if ((this._PageSize != value))
				{
					this._PageSize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOffice", DbType="Bit")]
		public System.Nullable<bool> IsOffice
		{
			get
			{
				return this._IsOffice;
			}
			set
			{
				if ((this._IsOffice != value))
				{
					this._IsOffice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(100)")]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					this._DeviceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionString", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SessionString
		{
			get
			{
				return this._SessionString;
			}
			set
			{
				if ((this._SessionString != value))
				{
					this._SessionString = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCount", DbType="Int")]
		public System.Nullable<int> RCount
		{
			get
			{
				return this._RCount;
			}
			set
			{
				if ((this._RCount != value))
				{
					this._RCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSources", DbType="NVarChar(50)")]
		public string DataSources
		{
			get
			{
				return this._DataSources;
			}
			set
			{
				if ((this._DataSources != value))
				{
					this._DataSources = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPostName", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string IsPostName
		{
			get
			{
				return this._IsPostName;
			}
			set
			{
				if ((this._IsPostName != value))
				{
					this._IsPostName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this._RoleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleCode", DbType="NVarChar(50)")]
		public string RoleCode
		{
			get
			{
				return this._RoleCode;
			}
			set
			{
				if ((this._RoleCode != value))
				{
					this._RoleCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAuditFlow", DbType="Bit")]
		public System.Nullable<bool> IsAuditFlow
		{
			get
			{
				return this._IsAuditFlow;
			}
			set
			{
				if ((this._IsAuditFlow != value))
				{
					this._IsAuditFlow = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(100)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this._UnitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleTypeName", DbType="NVarChar(100)")]
		public string RoleTypeName
		{
			get
			{
				return this._RoleTypeName;
			}
			set
			{
				if ((this._RoleTypeName != value))
				{
					this._RoleTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureUrl", DbType="NVarChar(500)")]
		public string SignatureUrl
		{
			get
			{
				return this._SignatureUrl;
			}
			set
			{
				if ((this._SignatureUrl != value))
				{
					this._SignatureUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this._UserType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Technique_Emergency")]
	public partial class View_Technique_Emergency
	{
		
		private string _EmergencyId;
		
		private string _EmergencyTypeId;
		
		private string _EmergencyCode;
		
		private string _EmergencyName;
		
		private string _Summary;
		
		private string _AttachUrl;
		
		private string _Remark;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private string _EmergencyTypeCode;
		
		private string _EmergencyTypeName;
		
		private string _AuditManName;
		
		private string _AttachUrlName;
		
		private string _IsBuildName;
		
		public View_Technique_Emergency()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmergencyId
		{
			get
			{
				return this._EmergencyId;
			}
			set
			{
				if ((this._EmergencyId != value))
				{
					this._EmergencyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyTypeId", DbType="NVarChar(50)")]
		public string EmergencyTypeId
		{
			get
			{
				return this._EmergencyTypeId;
			}
			set
			{
				if ((this._EmergencyTypeId != value))
				{
					this._EmergencyTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyCode", DbType="NVarChar(50)")]
		public string EmergencyCode
		{
			get
			{
				return this._EmergencyCode;
			}
			set
			{
				if ((this._EmergencyCode != value))
				{
					this._EmergencyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyName", DbType="NVarChar(100)")]
		public string EmergencyName
		{
			get
			{
				return this._EmergencyName;
			}
			set
			{
				if ((this._EmergencyName != value))
				{
					this._EmergencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(2000)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(2000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this._CompileMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this._CompileDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this._AuditMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this._AuditDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this._IsPass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this._IsBuild = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this._UpState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyTypeCode", DbType="NVarChar(50)")]
		public string EmergencyTypeCode
		{
			get
			{
				return this._EmergencyTypeCode;
			}
			set
			{
				if ((this._EmergencyTypeCode != value))
				{
					this._EmergencyTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyTypeName", DbType="NVarChar(100)")]
		public string EmergencyTypeName
		{
			get
			{
				return this._EmergencyTypeName;
			}
			set
			{
				if ((this._EmergencyTypeName != value))
				{
					this._EmergencyTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditManName", DbType="NVarChar(50)")]
		public string AuditManName
		{
			get
			{
				return this._AuditManName;
			}
			set
			{
				if ((this._AuditManName != value))
				{
					this._AuditManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrlName", DbType="NVarChar(2000)")]
		public string AttachUrlName
		{
			get
			{
				return this._AttachUrlName;
			}
			set
			{
				if ((this._AttachUrlName != value))
				{
					this._AttachUrlName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuildName", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string IsBuildName
		{
			get
			{
				return this._IsBuildName;
			}
			set
			{
				if ((this._IsBuildName != value))
				{
					this._IsBuildName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Technique_SpecialScheme")]
	public partial class View_Technique_SpecialScheme
	{
		
		private string _SpecialSchemeId;
		
		private string _SpecialSchemeTypeId;
		
		private string _SpecialSchemeCode;
		
		private string _SpecialSchemeName;
		
		private string _UnitId;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _AttachUrl;
		
		private string _Summary;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private System.Nullable<bool> _IsBuild;
		
		private string _UpState;
		
		private string _AuditManName;
		
		private string _UnitName;
		
		private string _SpecialSchemeTypeCode;
		
		private string _SpecialSchemeTypeName;
		
		private string _AttachUrlName;
		
		private string _IsBuildName;
		
		public View_Technique_SpecialScheme()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SpecialSchemeId
		{
			get
			{
				return this._SpecialSchemeId;
			}
			set
			{
				if ((this._SpecialSchemeId != value))
				{
					this._SpecialSchemeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeTypeId", DbType="NVarChar(50)")]
		public string SpecialSchemeTypeId
		{
			get
			{
				return this._SpecialSchemeTypeId;
			}
			set
			{
				if ((this._SpecialSchemeTypeId != value))
				{
					this._SpecialSchemeTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeCode", DbType="NVarChar(50)")]
		public string SpecialSchemeCode
		{
			get
			{
				return this._SpecialSchemeCode;
			}
			set
			{
				if ((this._SpecialSchemeCode != value))
				{
					this._SpecialSchemeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeName", DbType="NVarChar(500)")]
		public string SpecialSchemeName
		{
			get
			{
				return this._SpecialSchemeName;
			}
			set
			{
				if ((this._SpecialSchemeName != value))
				{
					this._SpecialSchemeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this._CompileMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this._CompileDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this._AuditMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this._AuditDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this._IsPass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuild", DbType="Bit")]
		public System.Nullable<bool> IsBuild
		{
			get
			{
				return this._IsBuild;
			}
			set
			{
				if ((this._IsBuild != value))
				{
					this._IsBuild = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpState", DbType="Char(1)")]
		public string UpState
		{
			get
			{
				return this._UpState;
			}
			set
			{
				if ((this._UpState != value))
				{
					this._UpState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditManName", DbType="NVarChar(50)")]
		public string AuditManName
		{
			get
			{
				return this._AuditManName;
			}
			set
			{
				if ((this._AuditManName != value))
				{
					this._AuditManName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeTypeCode", DbType="NVarChar(50)")]
		public string SpecialSchemeTypeCode
		{
			get
			{
				return this._SpecialSchemeTypeCode;
			}
			set
			{
				if ((this._SpecialSchemeTypeCode != value))
				{
					this._SpecialSchemeTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialSchemeTypeName", DbType="NVarChar(500)")]
		public string SpecialSchemeTypeName
		{
			get
			{
				return this._SpecialSchemeTypeName;
			}
			set
			{
				if ((this._SpecialSchemeTypeName != value))
				{
					this._SpecialSchemeTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrlName", DbType="NVarChar(2000)")]
		public string AttachUrlName
		{
			get
			{
				return this._AttachUrlName;
			}
			set
			{
				if ((this._AttachUrlName != value))
				{
					this._AttachUrlName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuildName", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string IsBuildName
		{
			get
			{
				return this._IsBuildName;
			}
			set
			{
				if ((this._IsBuildName != value))
				{
					this._IsBuildName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Training_TestTrainingItem")]
	public partial class View_Training_TestTrainingItem
	{
		
		private string _TrainingId;
		
		private string _TrainingCode;
		
		private string _TrainingName;
		
		private string _TrainingItemId;
		
		private string _TrainingItemCode;
		
		private string _TrainingItemName;
		
		private string _Abstracts;
		
		private string _AttachUrl;
		
		private string _VersionNum;
		
		private string _TestType;
		
		private string _WorkPostIds;
		
		private string _WorkPostNames;
		
		private string _AItem;
		
		private string _BItem;
		
		private string _CItem;
		
		private string _DItem;
		
		private string _EItem;
		
		private string _AnswerItems;
		
		public View_Training_TestTrainingItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50)")]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					this._TrainingId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingCode", DbType="NVarChar(50)")]
		public string TrainingCode
		{
			get
			{
				return this._TrainingCode;
			}
			set
			{
				if ((this._TrainingCode != value))
				{
					this._TrainingCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingName", DbType="NVarChar(100)")]
		public string TrainingName
		{
			get
			{
				return this._TrainingName;
			}
			set
			{
				if ((this._TrainingName != value))
				{
					this._TrainingName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainingItemId
		{
			get
			{
				return this._TrainingItemId;
			}
			set
			{
				if ((this._TrainingItemId != value))
				{
					this._TrainingItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemCode", DbType="NVarChar(50)")]
		public string TrainingItemCode
		{
			get
			{
				return this._TrainingItemCode;
			}
			set
			{
				if ((this._TrainingItemCode != value))
				{
					this._TrainingItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemName", DbType="NVarChar(100)")]
		public string TrainingItemName
		{
			get
			{
				return this._TrainingItemName;
			}
			set
			{
				if ((this._TrainingItemName != value))
				{
					this._TrainingItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abstracts", DbType="NVarChar(2000)")]
		public string Abstracts
		{
			get
			{
				return this._Abstracts;
			}
			set
			{
				if ((this._Abstracts != value))
				{
					this._Abstracts = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNum", DbType="NVarChar(50)")]
		public string VersionNum
		{
			get
			{
				return this._VersionNum;
			}
			set
			{
				if ((this._VersionNum != value))
				{
					this._VersionNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="Char(1)")]
		public string TestType
		{
			get
			{
				return this._TestType;
			}
			set
			{
				if ((this._TestType != value))
				{
					this._TestType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostIds", DbType="NVarChar(4000)")]
		public string WorkPostIds
		{
			get
			{
				return this._WorkPostIds;
			}
			set
			{
				if ((this._WorkPostIds != value))
				{
					this._WorkPostIds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPostNames", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string WorkPostNames
		{
			get
			{
				return this._WorkPostNames;
			}
			set
			{
				if ((this._WorkPostNames != value))
				{
					this._WorkPostNames = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AItem", DbType="NVarChar(500)")]
		public string AItem
		{
			get
			{
				return this._AItem;
			}
			set
			{
				if ((this._AItem != value))
				{
					this._AItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BItem", DbType="NVarChar(500)")]
		public string BItem
		{
			get
			{
				return this._BItem;
			}
			set
			{
				if ((this._BItem != value))
				{
					this._BItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CItem", DbType="NVarChar(500)")]
		public string CItem
		{
			get
			{
				return this._CItem;
			}
			set
			{
				if ((this._CItem != value))
				{
					this._CItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DItem", DbType="NVarChar(500)")]
		public string DItem
		{
			get
			{
				return this._DItem;
			}
			set
			{
				if ((this._DItem != value))
				{
					this._DItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EItem", DbType="NVarChar(500)")]
		public string EItem
		{
			get
			{
				return this._EItem;
			}
			set
			{
				if ((this._EItem != value))
				{
					this._EItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerItems", DbType="NVarChar(50)")]
		public string AnswerItems
		{
			get
			{
				return this._AnswerItems;
			}
			set
			{
				if ((this._AnswerItems != value))
				{
					this._AnswerItems = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Training_TrainingItem")]
	public partial class View_Training_TrainingItem
	{
		
		private string _TrainingItemId;
		
		private string _TrainingId;
		
		private string _TrainingItemCode;
		
		private string _TrainingItemName;
		
		private string _AttachUrl;
		
		private string _VersionNum;
		
		private string _ApproveState;
		
		private string _ResourcesFrom;
		
		private string _CompileMan;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _ResourcesFromType;
		
		private string _AuditMan;
		
		private System.Nullable<System.DateTime> _AuditDate;
		
		private System.Nullable<bool> _IsPass;
		
		private string _UnitId;
		
		private string _UnitCode;
		
		private string _UnitName;
		
		private string _TrainingCode;
		
		private string _TrainingName;
		
		private string _AttachUrlName;
		
		public View_Training_TrainingItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrainingItemId
		{
			get
			{
				return this._TrainingItemId;
			}
			set
			{
				if ((this._TrainingItemId != value))
				{
					this._TrainingItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingId", DbType="NVarChar(50)")]
		public string TrainingId
		{
			get
			{
				return this._TrainingId;
			}
			set
			{
				if ((this._TrainingId != value))
				{
					this._TrainingId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemCode", DbType="NVarChar(50)")]
		public string TrainingItemCode
		{
			get
			{
				return this._TrainingItemCode;
			}
			set
			{
				if ((this._TrainingItemCode != value))
				{
					this._TrainingItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingItemName", DbType="NVarChar(100)")]
		public string TrainingItemName
		{
			get
			{
				return this._TrainingItemName;
			}
			set
			{
				if ((this._TrainingItemName != value))
				{
					this._TrainingItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(2000)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this._AttachUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNum", DbType="NVarChar(50)")]
		public string VersionNum
		{
			get
			{
				return this._VersionNum;
			}
			set
			{
				if ((this._VersionNum != value))
				{
					this._VersionNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveState", DbType="Char(1)")]
		public string ApproveState
		{
			get
			{
				return this._ApproveState;
			}
			set
			{
				if ((this._ApproveState != value))
				{
					this._ApproveState = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourcesFrom", DbType="NVarChar(200)")]
		public string ResourcesFrom
		{
			get
			{
				return this._ResourcesFrom;
			}
			set
			{
				if ((this._ResourcesFrom != value))
				{
					this._ResourcesFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileMan", DbType="NVarChar(50)")]
		public string CompileMan
		{
			get
			{
				return this._CompileMan;
			}
			set
			{
				if ((this._CompileMan != value))
				{
					this._CompileMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this._CompileDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourcesFromType", DbType="Char(1)")]
		public string ResourcesFromType
		{
			get
			{
				return this._ResourcesFromType;
			}
			set
			{
				if ((this._ResourcesFromType != value))
				{
					this._ResourcesFromType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditMan", DbType="NVarChar(50)")]
		public string AuditMan
		{
			get
			{
				return this._AuditMan;
			}
			set
			{
				if ((this._AuditMan != value))
				{
					this._AuditMan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this._AuditDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit")]
		public System.Nullable<bool> IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this._IsPass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this._UnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCode", DbType="NVarChar(100)")]
		public string UnitCode
		{
			get
			{
				return this._UnitCode;
			}
			set
			{
				if ((this._UnitCode != value))
				{
					this._UnitCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(200)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingCode", DbType="NVarChar(50)")]
		public string TrainingCode
		{
			get
			{
				return this._TrainingCode;
			}
			set
			{
				if ((this._TrainingCode != value))
				{
					this._TrainingCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingName", DbType="NVarChar(100)")]
		public string TrainingName
		{
			get
			{
				return this._TrainingName;
			}
			set
			{
				if ((this._TrainingName != value))
				{
					this._TrainingName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrlName", DbType="NVarChar(2000)")]
		public string AttachUrlName
		{
			get
			{
				return this._AttachUrlName;
			}
			set
			{
				if ((this._AttachUrlName != value))
				{
					this._AttachUrlName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_WBS_ControlItemAndCycle")]
	public partial class View_WBS_ControlItemAndCycle
	{
		
		private string _ControlItemAndCycleId;
		
		private string _ControlItemAndCycleCode;
		
		private string _WorkPackageId;
		
		private string _ProjectId;
		
		private string _ControlItemContent;
		
		private string _ControlPoint;
		
		private string _ControlItemDef;
		
		private System.Nullable<bool> _IsApprove;
		
		private System.Nullable<decimal> _Weights;
		
		private string _HGForms;
		
		private string _SHForms;
		
		private string _Standard;
		
		private string _ClauseNo;
		
		private System.Nullable<int> _CheckNum;
		
		private string _InitControlItemCode;
		
		private string _UnitWorkId;
		
		private string _PackageContent;
		
		private string _UnitWorkName;
		
		private string _HGFormsJZ;
		
		private string _HGFormsAZ;
		
		public View_WBS_ControlItemAndCycle()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemAndCycleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ControlItemAndCycleId
		{
			get
			{
				return this._ControlItemAndCycleId;
			}
			set
			{
				if ((this._ControlItemAndCycleId != value))
				{
					this._ControlItemAndCycleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemAndCycleCode", DbType="NVarChar(30)")]
		public string ControlItemAndCycleCode
		{
			get
			{
				return this._ControlItemAndCycleCode;
			}
			set
			{
				if ((this._ControlItemAndCycleCode != value))
				{
					this._ControlItemAndCycleCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPackageId", DbType="NVarChar(50)")]
		public string WorkPackageId
		{
			get
			{
				return this._WorkPackageId;
			}
			set
			{
				if ((this._WorkPackageId != value))
				{
					this._WorkPackageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this._ProjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemContent", DbType="NVarChar(300)")]
		public string ControlItemContent
		{
			get
			{
				return this._ControlItemContent;
			}
			set
			{
				if ((this._ControlItemContent != value))
				{
					this._ControlItemContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlPoint", DbType="NVarChar(10)")]
		public string ControlPoint
		{
			get
			{
				return this._ControlPoint;
			}
			set
			{
				if ((this._ControlPoint != value))
				{
					this._ControlPoint = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemDef", DbType="NVarChar(500)")]
		public string ControlItemDef
		{
			get
			{
				return this._ControlItemDef;
			}
			set
			{
				if ((this._ControlItemDef != value))
				{
					this._ControlItemDef = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApprove", DbType="Bit")]
		public System.Nullable<bool> IsApprove
		{
			get
			{
				return this._IsApprove;
			}
			set
			{
				if ((this._IsApprove != value))
				{
					this._IsApprove = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weights", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Weights
		{
			get
			{
				return this._Weights;
			}
			set
			{
				if ((this._Weights != value))
				{
					this._Weights = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HGForms", DbType="NVarChar(500)")]
		public string HGForms
		{
			get
			{
				return this._HGForms;
			}
			set
			{
				if ((this._HGForms != value))
				{
					this._HGForms = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHForms", DbType="NVarChar(500)")]
		public string SHForms
		{
			get
			{
				return this._SHForms;
			}
			set
			{
				if ((this._SHForms != value))
				{
					this._SHForms = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(50)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this._Standard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClauseNo", DbType="NVarChar(50)")]
		public string ClauseNo
		{
			get
			{
				return this._ClauseNo;
			}
			set
			{
				if ((this._ClauseNo != value))
				{
					this._ClauseNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNum", DbType="Int")]
		public System.Nullable<int> CheckNum
		{
			get
			{
				return this._CheckNum;
			}
			set
			{
				if ((this._CheckNum != value))
				{
					this._CheckNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitControlItemCode", DbType="NVarChar(30)")]
		public string InitControlItemCode
		{
			get
			{
				return this._InitControlItemCode;
			}
			set
			{
				if ((this._InitControlItemCode != value))
				{
					this._InitControlItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this._UnitWorkId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageContent", DbType="NVarChar(50)")]
		public string PackageContent
		{
			get
			{
				return this._PackageContent;
			}
			set
			{
				if ((this._PackageContent != value))
				{
					this._PackageContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkName", DbType="NVarChar(30)")]
		public string UnitWorkName
		{
			get
			{
				return this._UnitWorkName;
			}
			set
			{
				if ((this._UnitWorkName != value))
				{
					this._UnitWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HGFormsJZ", DbType="NVarChar(500)")]
		public string HGFormsJZ
		{
			get
			{
				return this._HGFormsJZ;
			}
			set
			{
				if ((this._HGFormsJZ != value))
				{
					this._HGFormsJZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HGFormsAZ", DbType="NVarChar(500)")]
		public string HGFormsAZ
		{
			get
			{
				return this._HGFormsAZ;
			}
			set
			{
				if ((this._HGFormsAZ != value))
				{
					this._HGFormsAZ = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Welder_WelderQualify")]
	public partial class View_Welder_WelderQualify
	{
		
		private string _WelderQualifyId;
		
		private string _WelderId;
		
		private string _QualificationItem;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private System.Nullable<decimal> _ThicknessMax;
		
		private System.Nullable<decimal> _SizesMin;
		
		private string _Remark;
		
		private string _WelderCode;
		
		private string _PersonName;
		
		private string _WeldingMethod;
		
		private string _WeldingLocation;
		
		private string _MaterialType;
		
		private System.Nullable<bool> _IsPrintShow;
		
		public View_Welder_WelderQualify()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderQualifyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WelderQualifyId
		{
			get
			{
				return this._WelderQualifyId;
			}
			set
			{
				if ((this._WelderQualifyId != value))
				{
					this._WelderQualifyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderId", DbType="NVarChar(50)")]
		public string WelderId
		{
			get
			{
				return this._WelderId;
			}
			set
			{
				if ((this._WelderId != value))
				{
					this._WelderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationItem", DbType="NVarChar(100)")]
		public string QualificationItem
		{
			get
			{
				return this._QualificationItem;
			}
			set
			{
				if ((this._QualificationItem != value))
				{
					this._QualificationItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this._LimitDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this._CheckDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThicknessMax", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ThicknessMax
		{
			get
			{
				return this._ThicknessMax;
			}
			set
			{
				if ((this._ThicknessMax != value))
				{
					this._ThicknessMax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizesMin", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SizesMin
		{
			get
			{
				return this._SizesMin;
			}
			set
			{
				if ((this._SizesMin != value))
				{
					this._SizesMin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this._Remark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderCode", DbType="NVarChar(50)")]
		public string WelderCode
		{
			get
			{
				return this._WelderCode;
			}
			set
			{
				if ((this._WelderCode != value))
				{
					this._WelderCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonName", DbType="NVarChar(50)")]
		public string PersonName
		{
			get
			{
				return this._PersonName;
			}
			set
			{
				if ((this._PersonName != value))
				{
					this._PersonName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethod", DbType="NVarChar(50)")]
		public string WeldingMethod
		{
			get
			{
				return this._WeldingMethod;
			}
			set
			{
				if ((this._WeldingMethod != value))
				{
					this._WeldingMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingLocation", DbType="NVarChar(50)")]
		public string WeldingLocation
		{
			get
			{
				return this._WeldingLocation;
			}
			set
			{
				if ((this._WeldingLocation != value))
				{
					this._WeldingLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialType", DbType="NVarChar(50)")]
		public string MaterialType
		{
			get
			{
				return this._MaterialType;
			}
			set
			{
				if ((this._MaterialType != value))
				{
					this._MaterialType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrintShow", DbType="Bit")]
		public System.Nullable<bool> IsPrintShow
		{
			get
			{
				return this._IsPrintShow;
			}
			set
			{
				if ((this._IsPrintShow != value))
				{
					this._IsPrintShow = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WBS_ControlItemAndCycle")]
	public partial class WBS_ControlItemAndCycle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ControlItemAndCycleId;
		
		private string _ControlItemAndCycleCode;
		
		private string _WorkPackageId;
		
		private string _ProjectId;
		
		private string _ControlItemContent;
		
		private string _ControlPoint;
		
		private string _ControlItemDef;
		
		private System.Nullable<bool> _IsSelected;
		
		private System.Nullable<bool> _IsApprove;
		
		private string _AttachUrl;
		
		private System.Nullable<decimal> _Weights;
		
		private string _HGForms;
		
		private string _SHForms;
		
		private string _Standard;
		
		private string _ClauseNo;
		
		private System.Nullable<int> _CheckNum;
		
		private string _InitControlItemCode;
		
		private System.Nullable<System.DateTime> _PlanCompleteDate;
		
		private EntityRef<WBS_WorkPackage> _WBS_WorkPackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControlItemAndCycleIdChanging(string value);
    partial void OnControlItemAndCycleIdChanged();
    partial void OnControlItemAndCycleCodeChanging(string value);
    partial void OnControlItemAndCycleCodeChanged();
    partial void OnWorkPackageIdChanging(string value);
    partial void OnWorkPackageIdChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnControlItemContentChanging(string value);
    partial void OnControlItemContentChanged();
    partial void OnControlPointChanging(string value);
    partial void OnControlPointChanged();
    partial void OnControlItemDefChanging(string value);
    partial void OnControlItemDefChanged();
    partial void OnIsSelectedChanging(System.Nullable<bool> value);
    partial void OnIsSelectedChanged();
    partial void OnIsApproveChanging(System.Nullable<bool> value);
    partial void OnIsApproveChanged();
    partial void OnAttachUrlChanging(string value);
    partial void OnAttachUrlChanged();
    partial void OnWeightsChanging(System.Nullable<decimal> value);
    partial void OnWeightsChanged();
    partial void OnHGFormsChanging(string value);
    partial void OnHGFormsChanged();
    partial void OnSHFormsChanging(string value);
    partial void OnSHFormsChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnClauseNoChanging(string value);
    partial void OnClauseNoChanged();
    partial void OnCheckNumChanging(System.Nullable<int> value);
    partial void OnCheckNumChanged();
    partial void OnInitControlItemCodeChanging(string value);
    partial void OnInitControlItemCodeChanged();
    partial void OnPlanCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanCompleteDateChanged();
    #endregion
		
		public WBS_ControlItemAndCycle()
		{
			this._WBS_WorkPackage = default(EntityRef<WBS_WorkPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemAndCycleId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ControlItemAndCycleId
		{
			get
			{
				return this._ControlItemAndCycleId;
			}
			set
			{
				if ((this._ControlItemAndCycleId != value))
				{
					this.OnControlItemAndCycleIdChanging(value);
					this.SendPropertyChanging();
					this._ControlItemAndCycleId = value;
					this.SendPropertyChanged("ControlItemAndCycleId");
					this.OnControlItemAndCycleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemAndCycleCode", DbType="NVarChar(30)")]
		public string ControlItemAndCycleCode
		{
			get
			{
				return this._ControlItemAndCycleCode;
			}
			set
			{
				if ((this._ControlItemAndCycleCode != value))
				{
					this.OnControlItemAndCycleCodeChanging(value);
					this.SendPropertyChanging();
					this._ControlItemAndCycleCode = value;
					this.SendPropertyChanged("ControlItemAndCycleCode");
					this.OnControlItemAndCycleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPackageId", DbType="NVarChar(50)")]
		public string WorkPackageId
		{
			get
			{
				return this._WorkPackageId;
			}
			set
			{
				if ((this._WorkPackageId != value))
				{
					if (this._WBS_WorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkPackageIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPackageId = value;
					this.SendPropertyChanged("WorkPackageId");
					this.OnWorkPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemContent", DbType="NVarChar(300)")]
		public string ControlItemContent
		{
			get
			{
				return this._ControlItemContent;
			}
			set
			{
				if ((this._ControlItemContent != value))
				{
					this.OnControlItemContentChanging(value);
					this.SendPropertyChanging();
					this._ControlItemContent = value;
					this.SendPropertyChanged("ControlItemContent");
					this.OnControlItemContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlPoint", DbType="NVarChar(10)")]
		public string ControlPoint
		{
			get
			{
				return this._ControlPoint;
			}
			set
			{
				if ((this._ControlPoint != value))
				{
					this.OnControlPointChanging(value);
					this.SendPropertyChanging();
					this._ControlPoint = value;
					this.SendPropertyChanged("ControlPoint");
					this.OnControlPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemDef", DbType="NVarChar(500)")]
		public string ControlItemDef
		{
			get
			{
				return this._ControlItemDef;
			}
			set
			{
				if ((this._ControlItemDef != value))
				{
					this.OnControlItemDefChanging(value);
					this.SendPropertyChanging();
					this._ControlItemDef = value;
					this.SendPropertyChanged("ControlItemDef");
					this.OnControlItemDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected", DbType="Bit")]
		public System.Nullable<bool> IsSelected
		{
			get
			{
				return this._IsSelected;
			}
			set
			{
				if ((this._IsSelected != value))
				{
					this.OnIsSelectedChanging(value);
					this.SendPropertyChanging();
					this._IsSelected = value;
					this.SendPropertyChanged("IsSelected");
					this.OnIsSelectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApprove", DbType="Bit")]
		public System.Nullable<bool> IsApprove
		{
			get
			{
				return this._IsApprove;
			}
			set
			{
				if ((this._IsApprove != value))
				{
					this.OnIsApproveChanging(value);
					this.SendPropertyChanging();
					this._IsApprove = value;
					this.SendPropertyChanged("IsApprove");
					this.OnIsApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachUrl", DbType="NVarChar(500)")]
		public string AttachUrl
		{
			get
			{
				return this._AttachUrl;
			}
			set
			{
				if ((this._AttachUrl != value))
				{
					this.OnAttachUrlChanging(value);
					this.SendPropertyChanging();
					this._AttachUrl = value;
					this.SendPropertyChanged("AttachUrl");
					this.OnAttachUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weights", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Weights
		{
			get
			{
				return this._Weights;
			}
			set
			{
				if ((this._Weights != value))
				{
					this.OnWeightsChanging(value);
					this.SendPropertyChanging();
					this._Weights = value;
					this.SendPropertyChanged("Weights");
					this.OnWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HGForms", DbType="NVarChar(500)")]
		public string HGForms
		{
			get
			{
				return this._HGForms;
			}
			set
			{
				if ((this._HGForms != value))
				{
					this.OnHGFormsChanging(value);
					this.SendPropertyChanging();
					this._HGForms = value;
					this.SendPropertyChanged("HGForms");
					this.OnHGFormsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHForms", DbType="NVarChar(500)")]
		public string SHForms
		{
			get
			{
				return this._SHForms;
			}
			set
			{
				if ((this._SHForms != value))
				{
					this.OnSHFormsChanging(value);
					this.SendPropertyChanging();
					this._SHForms = value;
					this.SendPropertyChanged("SHForms");
					this.OnSHFormsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(50)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClauseNo", DbType="NVarChar(50)")]
		public string ClauseNo
		{
			get
			{
				return this._ClauseNo;
			}
			set
			{
				if ((this._ClauseNo != value))
				{
					this.OnClauseNoChanging(value);
					this.SendPropertyChanging();
					this._ClauseNo = value;
					this.SendPropertyChanged("ClauseNo");
					this.OnClauseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNum", DbType="Int")]
		public System.Nullable<int> CheckNum
		{
			get
			{
				return this._CheckNum;
			}
			set
			{
				if ((this._CheckNum != value))
				{
					this.OnCheckNumChanging(value);
					this.SendPropertyChanging();
					this._CheckNum = value;
					this.SendPropertyChanged("CheckNum");
					this.OnCheckNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitControlItemCode", DbType="NVarChar(30)")]
		public string InitControlItemCode
		{
			get
			{
				return this._InitControlItemCode;
			}
			set
			{
				if ((this._InitControlItemCode != value))
				{
					this.OnInitControlItemCodeChanging(value);
					this.SendPropertyChanging();
					this._InitControlItemCode = value;
					this.SendPropertyChanged("InitControlItemCode");
					this.OnInitControlItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanCompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PlanCompleteDate
		{
			get
			{
				return this._PlanCompleteDate;
			}
			set
			{
				if ((this._PlanCompleteDate != value))
				{
					this.OnPlanCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._PlanCompleteDate = value;
					this.SendPropertyChanged("PlanCompleteDate");
					this.OnPlanCompleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_ControlItemAndCycle_WBS_ControlItemAndCycle", Storage="_WBS_WorkPackage", ThisKey="WorkPackageId", OtherKey="WorkPackageId", IsForeignKey=true)]
		public WBS_WorkPackage WBS_WorkPackage
		{
			get
			{
				return this._WBS_WorkPackage.Entity;
			}
			set
			{
				WBS_WorkPackage previousValue = this._WBS_WorkPackage.Entity;
				if (((previousValue != value) 
							|| (this._WBS_WorkPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_WorkPackage.Entity = null;
						previousValue.WBS_ControlItemAndCycle.Remove(this);
					}
					this._WBS_WorkPackage.Entity = value;
					if ((value != null))
					{
						value.WBS_ControlItemAndCycle.Add(this);
						this._WorkPackageId = value.WorkPackageId;
					}
					else
					{
						this._WorkPackageId = default(string);
					}
					this.SendPropertyChanged("WBS_WorkPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WBS_ControlItemInit")]
	public partial class WBS_ControlItemInit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ControlItemCode;
		
		private string _WorkPackageCode;
		
		private string _ControlItemContent;
		
		private string _ControlPoint;
		
		private string _ControlItemDef;
		
		private System.Nullable<decimal> _Weights;
		
		private string _HGForms;
		
		private string _SHForms;
		
		private string _Standard;
		
		private string _ClauseNo;
		
		private EntityRef<WBS_WorkPackageInit> _WBS_WorkPackageInit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControlItemCodeChanging(string value);
    partial void OnControlItemCodeChanged();
    partial void OnWorkPackageCodeChanging(string value);
    partial void OnWorkPackageCodeChanged();
    partial void OnControlItemContentChanging(string value);
    partial void OnControlItemContentChanged();
    partial void OnControlPointChanging(string value);
    partial void OnControlPointChanged();
    partial void OnControlItemDefChanging(string value);
    partial void OnControlItemDefChanged();
    partial void OnWeightsChanging(System.Nullable<decimal> value);
    partial void OnWeightsChanged();
    partial void OnHGFormsChanging(string value);
    partial void OnHGFormsChanged();
    partial void OnSHFormsChanging(string value);
    partial void OnSHFormsChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnClauseNoChanging(string value);
    partial void OnClauseNoChanged();
    #endregion
		
		public WBS_ControlItemInit()
		{
			this._WBS_WorkPackageInit = default(EntityRef<WBS_WorkPackageInit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ControlItemCode
		{
			get
			{
				return this._ControlItemCode;
			}
			set
			{
				if ((this._ControlItemCode != value))
				{
					this.OnControlItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ControlItemCode = value;
					this.SendPropertyChanged("ControlItemCode");
					this.OnControlItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPackageCode", DbType="NVarChar(30)")]
		public string WorkPackageCode
		{
			get
			{
				return this._WorkPackageCode;
			}
			set
			{
				if ((this._WorkPackageCode != value))
				{
					if (this._WBS_WorkPackageInit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkPackageCode = value;
					this.SendPropertyChanged("WorkPackageCode");
					this.OnWorkPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemContent", DbType="NVarChar(300)")]
		public string ControlItemContent
		{
			get
			{
				return this._ControlItemContent;
			}
			set
			{
				if ((this._ControlItemContent != value))
				{
					this.OnControlItemContentChanging(value);
					this.SendPropertyChanging();
					this._ControlItemContent = value;
					this.SendPropertyChanged("ControlItemContent");
					this.OnControlItemContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlPoint", DbType="NVarChar(10)")]
		public string ControlPoint
		{
			get
			{
				return this._ControlPoint;
			}
			set
			{
				if ((this._ControlPoint != value))
				{
					this.OnControlPointChanging(value);
					this.SendPropertyChanging();
					this._ControlPoint = value;
					this.SendPropertyChanged("ControlPoint");
					this.OnControlPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemDef", DbType="NVarChar(500)")]
		public string ControlItemDef
		{
			get
			{
				return this._ControlItemDef;
			}
			set
			{
				if ((this._ControlItemDef != value))
				{
					this.OnControlItemDefChanging(value);
					this.SendPropertyChanging();
					this._ControlItemDef = value;
					this.SendPropertyChanged("ControlItemDef");
					this.OnControlItemDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weights", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Weights
		{
			get
			{
				return this._Weights;
			}
			set
			{
				if ((this._Weights != value))
				{
					this.OnWeightsChanging(value);
					this.SendPropertyChanging();
					this._Weights = value;
					this.SendPropertyChanged("Weights");
					this.OnWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HGForms", DbType="NVarChar(500)")]
		public string HGForms
		{
			get
			{
				return this._HGForms;
			}
			set
			{
				if ((this._HGForms != value))
				{
					this.OnHGFormsChanging(value);
					this.SendPropertyChanging();
					this._HGForms = value;
					this.SendPropertyChanged("HGForms");
					this.OnHGFormsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHForms", DbType="NVarChar(500)")]
		public string SHForms
		{
			get
			{
				return this._SHForms;
			}
			set
			{
				if ((this._SHForms != value))
				{
					this.OnSHFormsChanging(value);
					this.SendPropertyChanging();
					this._SHForms = value;
					this.SendPropertyChanged("SHForms");
					this.OnSHFormsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(50)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClauseNo", DbType="NVarChar(50)")]
		public string ClauseNo
		{
			get
			{
				return this._ClauseNo;
			}
			set
			{
				if ((this._ClauseNo != value))
				{
					this.OnClauseNoChanging(value);
					this.SendPropertyChanging();
					this._ClauseNo = value;
					this.SendPropertyChanged("ClauseNo");
					this.OnClauseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_ControlItemInit_WBS_WorkPackageInit", Storage="_WBS_WorkPackageInit", ThisKey="WorkPackageCode", OtherKey="WorkPackageCode", IsForeignKey=true)]
		public WBS_WorkPackageInit WBS_WorkPackageInit
		{
			get
			{
				return this._WBS_WorkPackageInit.Entity;
			}
			set
			{
				WBS_WorkPackageInit previousValue = this._WBS_WorkPackageInit.Entity;
				if (((previousValue != value) 
							|| (this._WBS_WorkPackageInit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_WorkPackageInit.Entity = null;
						previousValue.WBS_ControlItemInit.Remove(this);
					}
					this._WBS_WorkPackageInit.Entity = value;
					if ((value != null))
					{
						value.WBS_ControlItemInit.Add(this);
						this._WorkPackageCode = value.WorkPackageCode;
					}
					else
					{
						this._WorkPackageCode = default(string);
					}
					this.SendPropertyChanged("WBS_WorkPackageInit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WBS_ControlItemProject")]
	public partial class WBS_ControlItemProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ControlItemCode;
		
		private string _ProjectId;
		
		private string _WorkPackageCode;
		
		private string _ControlItemContent;
		
		private string _ControlPoint;
		
		private string _ControlItemDef;
		
		private System.Nullable<decimal> _Weights;
		
		private string _HGForms;
		
		private string _SHForms;
		
		private string _Standard;
		
		private string _ClauseNo;
		
		private System.Nullable<int> _CheckNum;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnControlItemCodeChanging(string value);
    partial void OnControlItemCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnWorkPackageCodeChanging(string value);
    partial void OnWorkPackageCodeChanged();
    partial void OnControlItemContentChanging(string value);
    partial void OnControlItemContentChanged();
    partial void OnControlPointChanging(string value);
    partial void OnControlPointChanged();
    partial void OnControlItemDefChanging(string value);
    partial void OnControlItemDefChanged();
    partial void OnWeightsChanging(System.Nullable<decimal> value);
    partial void OnWeightsChanged();
    partial void OnHGFormsChanging(string value);
    partial void OnHGFormsChanged();
    partial void OnSHFormsChanging(string value);
    partial void OnSHFormsChanged();
    partial void OnStandardChanging(string value);
    partial void OnStandardChanged();
    partial void OnClauseNoChanging(string value);
    partial void OnClauseNoChanged();
    partial void OnCheckNumChanging(System.Nullable<int> value);
    partial void OnCheckNumChanged();
    #endregion
		
		public WBS_ControlItemProject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ControlItemCode
		{
			get
			{
				return this._ControlItemCode;
			}
			set
			{
				if ((this._ControlItemCode != value))
				{
					this.OnControlItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ControlItemCode = value;
					this.SendPropertyChanged("ControlItemCode");
					this.OnControlItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPackageCode", DbType="NVarChar(30)")]
		public string WorkPackageCode
		{
			get
			{
				return this._WorkPackageCode;
			}
			set
			{
				if ((this._WorkPackageCode != value))
				{
					this.OnWorkPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkPackageCode = value;
					this.SendPropertyChanged("WorkPackageCode");
					this.OnWorkPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemContent", DbType="NVarChar(300)")]
		public string ControlItemContent
		{
			get
			{
				return this._ControlItemContent;
			}
			set
			{
				if ((this._ControlItemContent != value))
				{
					this.OnControlItemContentChanging(value);
					this.SendPropertyChanging();
					this._ControlItemContent = value;
					this.SendPropertyChanged("ControlItemContent");
					this.OnControlItemContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlPoint", DbType="NVarChar(10)")]
		public string ControlPoint
		{
			get
			{
				return this._ControlPoint;
			}
			set
			{
				if ((this._ControlPoint != value))
				{
					this.OnControlPointChanging(value);
					this.SendPropertyChanging();
					this._ControlPoint = value;
					this.SendPropertyChanged("ControlPoint");
					this.OnControlPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlItemDef", DbType="NVarChar(500)")]
		public string ControlItemDef
		{
			get
			{
				return this._ControlItemDef;
			}
			set
			{
				if ((this._ControlItemDef != value))
				{
					this.OnControlItemDefChanging(value);
					this.SendPropertyChanging();
					this._ControlItemDef = value;
					this.SendPropertyChanged("ControlItemDef");
					this.OnControlItemDefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weights", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Weights
		{
			get
			{
				return this._Weights;
			}
			set
			{
				if ((this._Weights != value))
				{
					this.OnWeightsChanging(value);
					this.SendPropertyChanging();
					this._Weights = value;
					this.SendPropertyChanged("Weights");
					this.OnWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HGForms", DbType="NVarChar(500)")]
		public string HGForms
		{
			get
			{
				return this._HGForms;
			}
			set
			{
				if ((this._HGForms != value))
				{
					this.OnHGFormsChanging(value);
					this.SendPropertyChanging();
					this._HGForms = value;
					this.SendPropertyChanged("HGForms");
					this.OnHGFormsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHForms", DbType="NVarChar(500)")]
		public string SHForms
		{
			get
			{
				return this._SHForms;
			}
			set
			{
				if ((this._SHForms != value))
				{
					this.OnSHFormsChanging(value);
					this.SendPropertyChanging();
					this._SHForms = value;
					this.SendPropertyChanged("SHForms");
					this.OnSHFormsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Standard", DbType="NVarChar(50)")]
		public string Standard
		{
			get
			{
				return this._Standard;
			}
			set
			{
				if ((this._Standard != value))
				{
					this.OnStandardChanging(value);
					this.SendPropertyChanging();
					this._Standard = value;
					this.SendPropertyChanged("Standard");
					this.OnStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClauseNo", DbType="NVarChar(50)")]
		public string ClauseNo
		{
			get
			{
				return this._ClauseNo;
			}
			set
			{
				if ((this._ClauseNo != value))
				{
					this.OnClauseNoChanging(value);
					this.SendPropertyChanging();
					this._ClauseNo = value;
					this.SendPropertyChanged("ClauseNo");
					this.OnClauseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNum", DbType="Int")]
		public System.Nullable<int> CheckNum
		{
			get
			{
				return this._CheckNum;
			}
			set
			{
				if ((this._CheckNum != value))
				{
					this.OnCheckNumChanging(value);
					this.SendPropertyChanging();
					this._CheckNum = value;
					this.SendPropertyChanged("CheckNum");
					this.OnCheckNumChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WBS_UnitWork")]
	public partial class WBS_UnitWork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UnitWorkId;
		
		private string _UnitWorkCode;
		
		private string _UnitWorkName;
		
		private string _ProjectId;
		
		private string _UnitId;
		
		private string _SupervisorUnitId;
		
		private string _NDEUnit;
		
		private System.Nullable<int> _SuperUnitWork;
		
		private System.Nullable<bool> _IsChild;
		
		private string _ProjectType;
		
		private System.Nullable<decimal> _Weights;
		
		private EntitySet<HJGL_Batch_BatchTrust> _HJGL_Batch_BatchTrust;
		
		private EntitySet<HJGL_Batch_NDE> _HJGL_Batch_NDE;
		
		private EntitySet<HJGL_Batch_PointBatch> _HJGL_Batch_PointBatch;
		
		private EntitySet<HJGL_Hard_Trust> _HJGL_Hard_Trust;
		
		private EntitySet<HJGL_HotProess_Trust> _HJGL_HotProess_Trust;
		
		private EntitySet<HJGL_Pipeline> _HJGL_Pipeline;
		
		private EntitySet<HJGL_RepairRecord> _HJGL_RepairRecord;
		
		private EntitySet<HJGL_WeldingDaily> _HJGL_WeldingDaily;
		
		private EntitySet<PTP_TestPackage> _PTP_TestPackage;
		
		private EntitySet<SitePerson_Checking> _SitePerson_Checking;
		
		private EntitySet<SitePerson_Person> _SitePerson_Person;
		
		private EntityRef<Base_Unit> _Base_Unit;
		
		private EntityRef<Base_Unit> _SupervisorUnit;
		
		private EntityRef<Base_Unit> _Unit;
		
		private EntitySet<WBS_WorkPackage> _WBS_WorkPackage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnUnitWorkCodeChanging(string value);
    partial void OnUnitWorkCodeChanged();
    partial void OnUnitWorkNameChanging(string value);
    partial void OnUnitWorkNameChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnSupervisorUnitIdChanging(string value);
    partial void OnSupervisorUnitIdChanged();
    partial void OnNDEUnitChanging(string value);
    partial void OnNDEUnitChanged();
    partial void OnSuperUnitWorkChanging(System.Nullable<int> value);
    partial void OnSuperUnitWorkChanged();
    partial void OnIsChildChanging(System.Nullable<bool> value);
    partial void OnIsChildChanged();
    partial void OnProjectTypeChanging(string value);
    partial void OnProjectTypeChanged();
    partial void OnWeightsChanging(System.Nullable<decimal> value);
    partial void OnWeightsChanged();
    #endregion
		
		public WBS_UnitWork()
		{
			this._HJGL_Batch_BatchTrust = new EntitySet<HJGL_Batch_BatchTrust>(new Action<HJGL_Batch_BatchTrust>(this.attach_HJGL_Batch_BatchTrust), new Action<HJGL_Batch_BatchTrust>(this.detach_HJGL_Batch_BatchTrust));
			this._HJGL_Batch_NDE = new EntitySet<HJGL_Batch_NDE>(new Action<HJGL_Batch_NDE>(this.attach_HJGL_Batch_NDE), new Action<HJGL_Batch_NDE>(this.detach_HJGL_Batch_NDE));
			this._HJGL_Batch_PointBatch = new EntitySet<HJGL_Batch_PointBatch>(new Action<HJGL_Batch_PointBatch>(this.attach_HJGL_Batch_PointBatch), new Action<HJGL_Batch_PointBatch>(this.detach_HJGL_Batch_PointBatch));
			this._HJGL_Hard_Trust = new EntitySet<HJGL_Hard_Trust>(new Action<HJGL_Hard_Trust>(this.attach_HJGL_Hard_Trust), new Action<HJGL_Hard_Trust>(this.detach_HJGL_Hard_Trust));
			this._HJGL_HotProess_Trust = new EntitySet<HJGL_HotProess_Trust>(new Action<HJGL_HotProess_Trust>(this.attach_HJGL_HotProess_Trust), new Action<HJGL_HotProess_Trust>(this.detach_HJGL_HotProess_Trust));
			this._HJGL_Pipeline = new EntitySet<HJGL_Pipeline>(new Action<HJGL_Pipeline>(this.attach_HJGL_Pipeline), new Action<HJGL_Pipeline>(this.detach_HJGL_Pipeline));
			this._HJGL_RepairRecord = new EntitySet<HJGL_RepairRecord>(new Action<HJGL_RepairRecord>(this.attach_HJGL_RepairRecord), new Action<HJGL_RepairRecord>(this.detach_HJGL_RepairRecord));
			this._HJGL_WeldingDaily = new EntitySet<HJGL_WeldingDaily>(new Action<HJGL_WeldingDaily>(this.attach_HJGL_WeldingDaily), new Action<HJGL_WeldingDaily>(this.detach_HJGL_WeldingDaily));
			this._PTP_TestPackage = new EntitySet<PTP_TestPackage>(new Action<PTP_TestPackage>(this.attach_PTP_TestPackage), new Action<PTP_TestPackage>(this.detach_PTP_TestPackage));
			this._SitePerson_Checking = new EntitySet<SitePerson_Checking>(new Action<SitePerson_Checking>(this.attach_SitePerson_Checking), new Action<SitePerson_Checking>(this.detach_SitePerson_Checking));
			this._SitePerson_Person = new EntitySet<SitePerson_Person>(new Action<SitePerson_Person>(this.attach_SitePerson_Person), new Action<SitePerson_Person>(this.detach_SitePerson_Person));
			this._Base_Unit = default(EntityRef<Base_Unit>);
			this._SupervisorUnit = default(EntityRef<Base_Unit>);
			this._Unit = default(EntityRef<Base_Unit>);
			this._WBS_WorkPackage = new EntitySet<WBS_WorkPackage>(new Action<WBS_WorkPackage>(this.attach_WBS_WorkPackage), new Action<WBS_WorkPackage>(this.detach_WBS_WorkPackage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkCode", DbType="NVarChar(10)")]
		public string UnitWorkCode
		{
			get
			{
				return this._UnitWorkCode;
			}
			set
			{
				if ((this._UnitWorkCode != value))
				{
					this.OnUnitWorkCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkCode = value;
					this.SendPropertyChanged("UnitWorkCode");
					this.OnUnitWorkCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkName", DbType="NVarChar(30)")]
		public string UnitWorkName
		{
			get
			{
				return this._UnitWorkName;
			}
			set
			{
				if ((this._UnitWorkName != value))
				{
					this.OnUnitWorkNameChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkName = value;
					this.SendPropertyChanged("UnitWorkName");
					this.OnUnitWorkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisorUnitId", DbType="NVarChar(50)")]
		public string SupervisorUnitId
		{
			get
			{
				return this._SupervisorUnitId;
			}
			set
			{
				if ((this._SupervisorUnitId != value))
				{
					if (this._SupervisorUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupervisorUnitIdChanging(value);
					this.SendPropertyChanging();
					this._SupervisorUnitId = value;
					this.SendPropertyChanged("SupervisorUnitId");
					this.OnSupervisorUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDEUnit", DbType="NVarChar(50)")]
		public string NDEUnit
		{
			get
			{
				return this._NDEUnit;
			}
			set
			{
				if ((this._NDEUnit != value))
				{
					if (this._Base_Unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNDEUnitChanging(value);
					this.SendPropertyChanging();
					this._NDEUnit = value;
					this.SendPropertyChanged("NDEUnit");
					this.OnNDEUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperUnitWork", DbType="Int")]
		public System.Nullable<int> SuperUnitWork
		{
			get
			{
				return this._SuperUnitWork;
			}
			set
			{
				if ((this._SuperUnitWork != value))
				{
					this.OnSuperUnitWorkChanging(value);
					this.SendPropertyChanging();
					this._SuperUnitWork = value;
					this.SendPropertyChanged("SuperUnitWork");
					this.OnSuperUnitWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChild", DbType="Bit")]
		public System.Nullable<bool> IsChild
		{
			get
			{
				return this._IsChild;
			}
			set
			{
				if ((this._IsChild != value))
				{
					this.OnIsChildChanging(value);
					this.SendPropertyChanging();
					this._IsChild = value;
					this.SendPropertyChanged("IsChild");
					this.OnIsChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectType", DbType="Char(1)")]
		public string ProjectType
		{
			get
			{
				return this._ProjectType;
			}
			set
			{
				if ((this._ProjectType != value))
				{
					this.OnProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ProjectType = value;
					this.SendPropertyChanged("ProjectType");
					this.OnProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weights", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Weights
		{
			get
			{
				return this._Weights;
			}
			set
			{
				if ((this._Weights != value))
				{
					this.OnWeightsChanging(value);
					this.SendPropertyChanging();
					this._Weights = value;
					this.SendPropertyChanged("Weights");
					this.OnWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_BatchTrust_WBS_UnitWork", Storage="_HJGL_Batch_BatchTrust", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_BatchTrust> HJGL_Batch_BatchTrust
		{
			get
			{
				return this._HJGL_Batch_BatchTrust;
			}
			set
			{
				this._HJGL_Batch_BatchTrust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_NDE_WBS_UnitWork", Storage="_HJGL_Batch_NDE", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_NDE> HJGL_Batch_NDE
		{
			get
			{
				return this._HJGL_Batch_NDE;
			}
			set
			{
				this._HJGL_Batch_NDE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Batch_PointBatch_WBS_UnitWork", Storage="_HJGL_Batch_PointBatch", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Batch_PointBatch> HJGL_Batch_PointBatch
		{
			get
			{
				return this._HJGL_Batch_PointBatch;
			}
			set
			{
				this._HJGL_Batch_PointBatch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Hard_Trust_WBS_UnitWork", Storage="_HJGL_Hard_Trust", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Hard_Trust> HJGL_Hard_Trust
		{
			get
			{
				return this._HJGL_Hard_Trust;
			}
			set
			{
				this._HJGL_Hard_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_HotProess_Trust_WBS_UnitWork", Storage="_HJGL_HotProess_Trust", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_HotProess_Trust> HJGL_HotProess_Trust
		{
			get
			{
				return this._HJGL_HotProess_Trust;
			}
			set
			{
				this._HJGL_HotProess_Trust.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_Pipeline_WBS_UnitWork", Storage="_HJGL_Pipeline", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_Pipeline> HJGL_Pipeline
		{
			get
			{
				return this._HJGL_Pipeline;
			}
			set
			{
				this._HJGL_Pipeline.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_RepairRecord_WBS_UnitWork", Storage="_HJGL_RepairRecord", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_RepairRecord> HJGL_RepairRecord
		{
			get
			{
				return this._HJGL_RepairRecord;
			}
			set
			{
				this._HJGL_RepairRecord.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldingDaily_WBS_UnitWork", Storage="_HJGL_WeldingDaily", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldingDaily> HJGL_WeldingDaily
		{
			get
			{
				return this._HJGL_WeldingDaily;
			}
			set
			{
				this._HJGL_WeldingDaily.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_PTP_TestPackage_WBS_UnitWork", Storage="_PTP_TestPackage", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<PTP_TestPackage> PTP_TestPackage
		{
			get
			{
				return this._PTP_TestPackage;
			}
			set
			{
				this._PTP_TestPackage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Checking_WBS_UnitWork", Storage="_SitePerson_Checking", ThisKey="UnitWorkId", OtherKey="WorkAreaId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Checking> SitePerson_Checking
		{
			get
			{
				return this._SitePerson_Checking;
			}
			set
			{
				this._SitePerson_Checking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SitePerson_Person_WBS_UnitWork", Storage="_SitePerson_Person", ThisKey="UnitWorkId", OtherKey="WorkAreaId", DeleteRule="NO ACTION")]
		public EntitySet<SitePerson_Person> SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person;
			}
			set
			{
				this._SitePerson_Person.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_UnitWork_Base_Unit_NDEUnit", Storage="_Base_Unit", ThisKey="NDEUnit", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Base_Unit
		{
			get
			{
				return this._Base_Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Base_Unit.Entity;
				if (((previousValue != value) 
							|| (this._Base_Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Unit.Entity = null;
						previousValue.WBS_UnitWork.Remove(this);
					}
					this._Base_Unit.Entity = value;
					if ((value != null))
					{
						value.WBS_UnitWork.Add(this);
						this._NDEUnit = value.UnitId;
					}
					else
					{
						this._NDEUnit = default(string);
					}
					this.SendPropertyChanged("Base_Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_UnitWork_Base_Unit_SupervisorUnit", Storage="_SupervisorUnit", ThisKey="SupervisorUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit SupervisorUnit
		{
			get
			{
				return this._SupervisorUnit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._SupervisorUnit.Entity;
				if (((previousValue != value) 
							|| (this._SupervisorUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupervisorUnit.Entity = null;
						previousValue.WBS_UnitWork_Base_Unit_SupervisorUnit.Remove(this);
					}
					this._SupervisorUnit.Entity = value;
					if ((value != null))
					{
						value.WBS_UnitWork_Base_Unit_SupervisorUnit.Add(this);
						this._SupervisorUnitId = value.UnitId;
					}
					else
					{
						this._SupervisorUnitId = default(string);
					}
					this.SendPropertyChanged("SupervisorUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_UnitWork_Base_Unit_Unit", Storage="_Unit", ThisKey="UnitId", OtherKey="UnitId", IsForeignKey=true)]
		public Base_Unit Unit
		{
			get
			{
				return this._Unit.Entity;
			}
			set
			{
				Base_Unit previousValue = this._Unit.Entity;
				if (((previousValue != value) 
							|| (this._Unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unit.Entity = null;
						previousValue.WBS_UnitWork_Base_Unit_Unit.Remove(this);
					}
					this._Unit.Entity = value;
					if ((value != null))
					{
						value.WBS_UnitWork_Base_Unit_Unit.Add(this);
						this._UnitId = value.UnitId;
					}
					else
					{
						this._UnitId = default(string);
					}
					this.SendPropertyChanged("Unit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_WorkPackage_WBS_UnitWork", Storage="_WBS_WorkPackage", ThisKey="UnitWorkId", OtherKey="UnitWorkId", DeleteRule="NO ACTION")]
		public EntitySet<WBS_WorkPackage> WBS_WorkPackage
		{
			get
			{
				return this._WBS_WorkPackage;
			}
			set
			{
				this._WBS_WorkPackage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_Batch_BatchTrust(HJGL_Batch_BatchTrust entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_Batch_NDE(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_Batch_NDE(HJGL_Batch_NDE entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_Batch_PointBatch(HJGL_Batch_PointBatch entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_Hard_Trust(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_Hard_Trust(HJGL_Hard_Trust entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_HotProess_Trust(HJGL_HotProess_Trust entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_HotProess_Trust(HJGL_HotProess_Trust entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_Pipeline(HJGL_Pipeline entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_RepairRecord(HJGL_RepairRecord entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_HJGL_WeldingDaily(HJGL_WeldingDaily entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_PTP_TestPackage(PTP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_PTP_TestPackage(PTP_TestPackage entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_SitePerson_Checking(SitePerson_Checking entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_SitePerson_Checking(SitePerson_Checking entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_SitePerson_Person(SitePerson_Person entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
		
		private void attach_WBS_WorkPackage(WBS_WorkPackage entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = this;
		}
		
		private void detach_WBS_WorkPackage(WBS_WorkPackage entity)
		{
			this.SendPropertyChanging();
			entity.WBS_UnitWork = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WBS_WorkPackage")]
	public partial class WBS_WorkPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkPackageId;
		
		private string _WorkPackageCode;
		
		private string _UnitWorkId;
		
		private string _PackageCode;
		
		private string _PackageContent;
		
		private string _ProjectId;
		
		private string _SuperWorkPack;
		
		private string _SuperWorkPackageId;
		
		private System.Nullable<bool> _IsChild;
		
		private System.Nullable<bool> _IsCopy;
		
		private System.Nullable<bool> _IsCopyed;
		
		private System.Nullable<int> _SortIndex;
		
		private string _ProjectType;
		
		private string _InitWorkPackageCode;
		
		private System.Nullable<decimal> _Weights;
		
		private System.Nullable<bool> _IsApprove;
		
		private EntitySet<WBS_ControlItemAndCycle> _WBS_ControlItemAndCycle;
		
		private EntityRef<WBS_UnitWork> _WBS_UnitWork;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkPackageIdChanging(string value);
    partial void OnWorkPackageIdChanged();
    partial void OnWorkPackageCodeChanging(string value);
    partial void OnWorkPackageCodeChanged();
    partial void OnUnitWorkIdChanging(string value);
    partial void OnUnitWorkIdChanged();
    partial void OnPackageCodeChanging(string value);
    partial void OnPackageCodeChanged();
    partial void OnPackageContentChanging(string value);
    partial void OnPackageContentChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnSuperWorkPackChanging(string value);
    partial void OnSuperWorkPackChanged();
    partial void OnSuperWorkPackageIdChanging(string value);
    partial void OnSuperWorkPackageIdChanged();
    partial void OnIsChildChanging(System.Nullable<bool> value);
    partial void OnIsChildChanged();
    partial void OnIsCopyChanging(System.Nullable<bool> value);
    partial void OnIsCopyChanged();
    partial void OnIsCopyedChanging(System.Nullable<bool> value);
    partial void OnIsCopyedChanged();
    partial void OnSortIndexChanging(System.Nullable<int> value);
    partial void OnSortIndexChanged();
    partial void OnProjectTypeChanging(string value);
    partial void OnProjectTypeChanged();
    partial void OnInitWorkPackageCodeChanging(string value);
    partial void OnInitWorkPackageCodeChanged();
    partial void OnWeightsChanging(System.Nullable<decimal> value);
    partial void OnWeightsChanged();
    partial void OnIsApproveChanging(System.Nullable<bool> value);
    partial void OnIsApproveChanged();
    #endregion
		
		public WBS_WorkPackage()
		{
			this._WBS_ControlItemAndCycle = new EntitySet<WBS_ControlItemAndCycle>(new Action<WBS_ControlItemAndCycle>(this.attach_WBS_ControlItemAndCycle), new Action<WBS_ControlItemAndCycle>(this.detach_WBS_ControlItemAndCycle));
			this._WBS_UnitWork = default(EntityRef<WBS_UnitWork>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPackageId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkPackageId
		{
			get
			{
				return this._WorkPackageId;
			}
			set
			{
				if ((this._WorkPackageId != value))
				{
					this.OnWorkPackageIdChanging(value);
					this.SendPropertyChanging();
					this._WorkPackageId = value;
					this.SendPropertyChanged("WorkPackageId");
					this.OnWorkPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPackageCode", DbType="NVarChar(30)")]
		public string WorkPackageCode
		{
			get
			{
				return this._WorkPackageCode;
			}
			set
			{
				if ((this._WorkPackageCode != value))
				{
					this.OnWorkPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkPackageCode = value;
					this.SendPropertyChanged("WorkPackageCode");
					this.OnWorkPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitWorkId", DbType="NVarChar(50)")]
		public string UnitWorkId
		{
			get
			{
				return this._UnitWorkId;
			}
			set
			{
				if ((this._UnitWorkId != value))
				{
					if (this._WBS_UnitWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitWorkIdChanging(value);
					this.SendPropertyChanging();
					this._UnitWorkId = value;
					this.SendPropertyChanged("UnitWorkId");
					this.OnUnitWorkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCode", DbType="NVarChar(10)")]
		public string PackageCode
		{
			get
			{
				return this._PackageCode;
			}
			set
			{
				if ((this._PackageCode != value))
				{
					this.OnPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._PackageCode = value;
					this.SendPropertyChanged("PackageCode");
					this.OnPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageContent", DbType="NVarChar(50)")]
		public string PackageContent
		{
			get
			{
				return this._PackageContent;
			}
			set
			{
				if ((this._PackageContent != value))
				{
					this.OnPackageContentChanging(value);
					this.SendPropertyChanging();
					this._PackageContent = value;
					this.SendPropertyChanged("PackageContent");
					this.OnPackageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50)")]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperWorkPack", DbType="NVarChar(30)")]
		public string SuperWorkPack
		{
			get
			{
				return this._SuperWorkPack;
			}
			set
			{
				if ((this._SuperWorkPack != value))
				{
					this.OnSuperWorkPackChanging(value);
					this.SendPropertyChanging();
					this._SuperWorkPack = value;
					this.SendPropertyChanged("SuperWorkPack");
					this.OnSuperWorkPackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperWorkPackageId", DbType="NVarChar(50)")]
		public string SuperWorkPackageId
		{
			get
			{
				return this._SuperWorkPackageId;
			}
			set
			{
				if ((this._SuperWorkPackageId != value))
				{
					this.OnSuperWorkPackageIdChanging(value);
					this.SendPropertyChanging();
					this._SuperWorkPackageId = value;
					this.SendPropertyChanged("SuperWorkPackageId");
					this.OnSuperWorkPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChild", DbType="Bit")]
		public System.Nullable<bool> IsChild
		{
			get
			{
				return this._IsChild;
			}
			set
			{
				if ((this._IsChild != value))
				{
					this.OnIsChildChanging(value);
					this.SendPropertyChanging();
					this._IsChild = value;
					this.SendPropertyChanged("IsChild");
					this.OnIsChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCopy", DbType="Bit")]
		public System.Nullable<bool> IsCopy
		{
			get
			{
				return this._IsCopy;
			}
			set
			{
				if ((this._IsCopy != value))
				{
					this.OnIsCopyChanging(value);
					this.SendPropertyChanging();
					this._IsCopy = value;
					this.SendPropertyChanged("IsCopy");
					this.OnIsCopyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCopyed", DbType="Bit")]
		public System.Nullable<bool> IsCopyed
		{
			get
			{
				return this._IsCopyed;
			}
			set
			{
				if ((this._IsCopyed != value))
				{
					this.OnIsCopyedChanging(value);
					this.SendPropertyChanging();
					this._IsCopyed = value;
					this.SendPropertyChanged("IsCopyed");
					this.OnIsCopyedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int")]
		public System.Nullable<int> SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectType", DbType="Char(1)")]
		public string ProjectType
		{
			get
			{
				return this._ProjectType;
			}
			set
			{
				if ((this._ProjectType != value))
				{
					this.OnProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ProjectType = value;
					this.SendPropertyChanged("ProjectType");
					this.OnProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitWorkPackageCode", DbType="NVarChar(50)")]
		public string InitWorkPackageCode
		{
			get
			{
				return this._InitWorkPackageCode;
			}
			set
			{
				if ((this._InitWorkPackageCode != value))
				{
					this.OnInitWorkPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._InitWorkPackageCode = value;
					this.SendPropertyChanged("InitWorkPackageCode");
					this.OnInitWorkPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weights", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> Weights
		{
			get
			{
				return this._Weights;
			}
			set
			{
				if ((this._Weights != value))
				{
					this.OnWeightsChanging(value);
					this.SendPropertyChanging();
					this._Weights = value;
					this.SendPropertyChanged("Weights");
					this.OnWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApprove", DbType="Bit")]
		public System.Nullable<bool> IsApprove
		{
			get
			{
				return this._IsApprove;
			}
			set
			{
				if ((this._IsApprove != value))
				{
					this.OnIsApproveChanging(value);
					this.SendPropertyChanging();
					this._IsApprove = value;
					this.SendPropertyChanged("IsApprove");
					this.OnIsApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_ControlItemAndCycle_WBS_ControlItemAndCycle", Storage="_WBS_ControlItemAndCycle", ThisKey="WorkPackageId", OtherKey="WorkPackageId", DeleteRule="NO ACTION")]
		public EntitySet<WBS_ControlItemAndCycle> WBS_ControlItemAndCycle
		{
			get
			{
				return this._WBS_ControlItemAndCycle;
			}
			set
			{
				this._WBS_ControlItemAndCycle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_WorkPackage_WBS_UnitWork", Storage="_WBS_UnitWork", ThisKey="UnitWorkId", OtherKey="UnitWorkId", IsForeignKey=true)]
		public WBS_UnitWork WBS_UnitWork
		{
			get
			{
				return this._WBS_UnitWork.Entity;
			}
			set
			{
				WBS_UnitWork previousValue = this._WBS_UnitWork.Entity;
				if (((previousValue != value) 
							|| (this._WBS_UnitWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WBS_UnitWork.Entity = null;
						previousValue.WBS_WorkPackage.Remove(this);
					}
					this._WBS_UnitWork.Entity = value;
					if ((value != null))
					{
						value.WBS_WorkPackage.Add(this);
						this._UnitWorkId = value.UnitWorkId;
					}
					else
					{
						this._UnitWorkId = default(string);
					}
					this.SendPropertyChanged("WBS_UnitWork");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WBS_ControlItemAndCycle(WBS_ControlItemAndCycle entity)
		{
			this.SendPropertyChanging();
			entity.WBS_WorkPackage = this;
		}
		
		private void detach_WBS_ControlItemAndCycle(WBS_ControlItemAndCycle entity)
		{
			this.SendPropertyChanging();
			entity.WBS_WorkPackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WBS_WorkPackageInit")]
	public partial class WBS_WorkPackageInit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkPackageCode;
		
		private string _PackageContent;
		
		private string _SuperWorkPack;
		
		private System.Nullable<bool> _IsChild;
		
		private string _PackageCode;
		
		private string _ProjectType;
		
		private EntitySet<WBS_ControlItemInit> _WBS_ControlItemInit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkPackageCodeChanging(string value);
    partial void OnWorkPackageCodeChanged();
    partial void OnPackageContentChanging(string value);
    partial void OnPackageContentChanged();
    partial void OnSuperWorkPackChanging(string value);
    partial void OnSuperWorkPackChanged();
    partial void OnIsChildChanging(System.Nullable<bool> value);
    partial void OnIsChildChanged();
    partial void OnPackageCodeChanging(string value);
    partial void OnPackageCodeChanged();
    partial void OnProjectTypeChanging(string value);
    partial void OnProjectTypeChanged();
    #endregion
		
		public WBS_WorkPackageInit()
		{
			this._WBS_ControlItemInit = new EntitySet<WBS_ControlItemInit>(new Action<WBS_ControlItemInit>(this.attach_WBS_ControlItemInit), new Action<WBS_ControlItemInit>(this.detach_WBS_ControlItemInit));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPackageCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkPackageCode
		{
			get
			{
				return this._WorkPackageCode;
			}
			set
			{
				if ((this._WorkPackageCode != value))
				{
					this.OnWorkPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkPackageCode = value;
					this.SendPropertyChanged("WorkPackageCode");
					this.OnWorkPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageContent", DbType="NVarChar(50)")]
		public string PackageContent
		{
			get
			{
				return this._PackageContent;
			}
			set
			{
				if ((this._PackageContent != value))
				{
					this.OnPackageContentChanging(value);
					this.SendPropertyChanging();
					this._PackageContent = value;
					this.SendPropertyChanged("PackageContent");
					this.OnPackageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperWorkPack", DbType="NVarChar(30)")]
		public string SuperWorkPack
		{
			get
			{
				return this._SuperWorkPack;
			}
			set
			{
				if ((this._SuperWorkPack != value))
				{
					this.OnSuperWorkPackChanging(value);
					this.SendPropertyChanging();
					this._SuperWorkPack = value;
					this.SendPropertyChanged("SuperWorkPack");
					this.OnSuperWorkPackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChild", DbType="Bit")]
		public System.Nullable<bool> IsChild
		{
			get
			{
				return this._IsChild;
			}
			set
			{
				if ((this._IsChild != value))
				{
					this.OnIsChildChanging(value);
					this.SendPropertyChanging();
					this._IsChild = value;
					this.SendPropertyChanged("IsChild");
					this.OnIsChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCode", DbType="NVarChar(10)")]
		public string PackageCode
		{
			get
			{
				return this._PackageCode;
			}
			set
			{
				if ((this._PackageCode != value))
				{
					this.OnPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._PackageCode = value;
					this.SendPropertyChanged("PackageCode");
					this.OnPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectType", DbType="Char(1)")]
		public string ProjectType
		{
			get
			{
				return this._ProjectType;
			}
			set
			{
				if ((this._ProjectType != value))
				{
					this.OnProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ProjectType = value;
					this.SendPropertyChanged("ProjectType");
					this.OnProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_ControlItemInit_WBS_WorkPackageInit", Storage="_WBS_ControlItemInit", ThisKey="WorkPackageCode", OtherKey="WorkPackageCode", DeleteRule="NO ACTION")]
		public EntitySet<WBS_ControlItemInit> WBS_ControlItemInit
		{
			get
			{
				return this._WBS_ControlItemInit;
			}
			set
			{
				this._WBS_ControlItemInit.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WBS_ControlItemInit(WBS_ControlItemInit entity)
		{
			this.SendPropertyChanging();
			entity.WBS_WorkPackageInit = this;
		}
		
		private void detach_WBS_ControlItemInit(WBS_ControlItemInit entity)
		{
			this.SendPropertyChanging();
			entity.WBS_WorkPackageInit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WBS_WorkPackageProject")]
	public partial class WBS_WorkPackageProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WorkPackageCode;
		
		private string _ProjectId;
		
		private string _PackageContent;
		
		private string _SuperWorkPack;
		
		private System.Nullable<bool> _IsChild;
		
		private string _PackageCode;
		
		private string _ProjectType;
		
		private EntityRef<Base_Project> _Base_Project;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkPackageCodeChanging(string value);
    partial void OnWorkPackageCodeChanged();
    partial void OnProjectIdChanging(string value);
    partial void OnProjectIdChanged();
    partial void OnPackageContentChanging(string value);
    partial void OnPackageContentChanged();
    partial void OnSuperWorkPackChanging(string value);
    partial void OnSuperWorkPackChanged();
    partial void OnIsChildChanging(System.Nullable<bool> value);
    partial void OnIsChildChanged();
    partial void OnPackageCodeChanging(string value);
    partial void OnPackageCodeChanged();
    partial void OnProjectTypeChanging(string value);
    partial void OnProjectTypeChanged();
    #endregion
		
		public WBS_WorkPackageProject()
		{
			this._Base_Project = default(EntityRef<Base_Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPackageCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WorkPackageCode
		{
			get
			{
				return this._WorkPackageCode;
			}
			set
			{
				if ((this._WorkPackageCode != value))
				{
					this.OnWorkPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._WorkPackageCode = value;
					this.SendPropertyChanged("WorkPackageCode");
					this.OnWorkPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Base_Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageContent", DbType="NVarChar(50)")]
		public string PackageContent
		{
			get
			{
				return this._PackageContent;
			}
			set
			{
				if ((this._PackageContent != value))
				{
					this.OnPackageContentChanging(value);
					this.SendPropertyChanging();
					this._PackageContent = value;
					this.SendPropertyChanged("PackageContent");
					this.OnPackageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuperWorkPack", DbType="NVarChar(30)")]
		public string SuperWorkPack
		{
			get
			{
				return this._SuperWorkPack;
			}
			set
			{
				if ((this._SuperWorkPack != value))
				{
					this.OnSuperWorkPackChanging(value);
					this.SendPropertyChanging();
					this._SuperWorkPack = value;
					this.SendPropertyChanged("SuperWorkPack");
					this.OnSuperWorkPackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChild", DbType="Bit")]
		public System.Nullable<bool> IsChild
		{
			get
			{
				return this._IsChild;
			}
			set
			{
				if ((this._IsChild != value))
				{
					this.OnIsChildChanging(value);
					this.SendPropertyChanging();
					this._IsChild = value;
					this.SendPropertyChanged("IsChild");
					this.OnIsChildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCode", DbType="NVarChar(10)")]
		public string PackageCode
		{
			get
			{
				return this._PackageCode;
			}
			set
			{
				if ((this._PackageCode != value))
				{
					this.OnPackageCodeChanging(value);
					this.SendPropertyChanging();
					this._PackageCode = value;
					this.SendPropertyChanged("PackageCode");
					this.OnPackageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectType", DbType="Char(1)")]
		public string ProjectType
		{
			get
			{
				return this._ProjectType;
			}
			set
			{
				if ((this._ProjectType != value))
				{
					this.OnProjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ProjectType = value;
					this.SendPropertyChanged("ProjectType");
					this.OnProjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WBS_WorkPackageProject_Base_Project", Storage="_Base_Project", ThisKey="ProjectId", OtherKey="ProjectId", IsForeignKey=true)]
		public Base_Project Base_Project
		{
			get
			{
				return this._Base_Project.Entity;
			}
			set
			{
				Base_Project previousValue = this._Base_Project.Entity;
				if (((previousValue != value) 
							|| (this._Base_Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Project.Entity = null;
						previousValue.WBS_WorkPackageProject.Remove(this);
					}
					this._Base_Project.Entity = value;
					if ((value != null))
					{
						value.WBS_WorkPackageProject.Add(this);
						this._ProjectId = value.ProjectId;
					}
					else
					{
						this._ProjectId = default(string);
					}
					this.SendPropertyChanged("Base_Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Welder_WelderQualify")]
	public partial class Welder_WelderQualify : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WelderQualifyId;
		
		private string _WelderId;
		
		private string _QualificationItem;
		
		private System.Nullable<System.DateTime> _LimitDate;
		
		private string _WeldingMethod;
		
		private string _MaterialType;
		
		private string _WeldingLocation;
		
		private System.Nullable<decimal> _ThicknessMax;
		
		private System.Nullable<decimal> _ThicknessMin;
		
		private System.Nullable<decimal> _SizesMax;
		
		private System.Nullable<decimal> _SizesMin;
		
		private string _Remark;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private System.Nullable<bool> _IsPrintShow;
		
		private EntityRef<SitePerson_Person> _SitePerson_Person;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWelderQualifyIdChanging(string value);
    partial void OnWelderQualifyIdChanged();
    partial void OnWelderIdChanging(string value);
    partial void OnWelderIdChanged();
    partial void OnQualificationItemChanging(string value);
    partial void OnQualificationItemChanged();
    partial void OnLimitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLimitDateChanged();
    partial void OnWeldingMethodChanging(string value);
    partial void OnWeldingMethodChanged();
    partial void OnMaterialTypeChanging(string value);
    partial void OnMaterialTypeChanged();
    partial void OnWeldingLocationChanging(string value);
    partial void OnWeldingLocationChanged();
    partial void OnThicknessMaxChanging(System.Nullable<decimal> value);
    partial void OnThicknessMaxChanged();
    partial void OnThicknessMinChanging(System.Nullable<decimal> value);
    partial void OnThicknessMinChanged();
    partial void OnSizesMaxChanging(System.Nullable<decimal> value);
    partial void OnSizesMaxChanged();
    partial void OnSizesMinChanging(System.Nullable<decimal> value);
    partial void OnSizesMinChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnIsPrintShowChanging(System.Nullable<bool> value);
    partial void OnIsPrintShowChanged();
    #endregion
		
		public Welder_WelderQualify()
		{
			this._SitePerson_Person = default(EntityRef<SitePerson_Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderQualifyId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WelderQualifyId
		{
			get
			{
				return this._WelderQualifyId;
			}
			set
			{
				if ((this._WelderQualifyId != value))
				{
					this.OnWelderQualifyIdChanging(value);
					this.SendPropertyChanging();
					this._WelderQualifyId = value;
					this.SendPropertyChanged("WelderQualifyId");
					this.OnWelderQualifyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelderId", DbType="NVarChar(50)")]
		public string WelderId
		{
			get
			{
				return this._WelderId;
			}
			set
			{
				if ((this._WelderId != value))
				{
					if (this._SitePerson_Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWelderIdChanging(value);
					this.SendPropertyChanging();
					this._WelderId = value;
					this.SendPropertyChanged("WelderId");
					this.OnWelderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationItem", DbType="NVarChar(100)")]
		public string QualificationItem
		{
			get
			{
				return this._QualificationItem;
			}
			set
			{
				if ((this._QualificationItem != value))
				{
					this.OnQualificationItemChanging(value);
					this.SendPropertyChanging();
					this._QualificationItem = value;
					this.SendPropertyChanged("QualificationItem");
					this.OnQualificationItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LimitDate
		{
			get
			{
				return this._LimitDate;
			}
			set
			{
				if ((this._LimitDate != value))
				{
					this.OnLimitDateChanging(value);
					this.SendPropertyChanging();
					this._LimitDate = value;
					this.SendPropertyChanged("LimitDate");
					this.OnLimitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethod", DbType="NVarChar(50)")]
		public string WeldingMethod
		{
			get
			{
				return this._WeldingMethod;
			}
			set
			{
				if ((this._WeldingMethod != value))
				{
					this.OnWeldingMethodChanging(value);
					this.SendPropertyChanging();
					this._WeldingMethod = value;
					this.SendPropertyChanged("WeldingMethod");
					this.OnWeldingMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialType", DbType="NVarChar(50)")]
		public string MaterialType
		{
			get
			{
				return this._MaterialType;
			}
			set
			{
				if ((this._MaterialType != value))
				{
					this.OnMaterialTypeChanging(value);
					this.SendPropertyChanging();
					this._MaterialType = value;
					this.SendPropertyChanged("MaterialType");
					this.OnMaterialTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingLocation", DbType="NVarChar(50)")]
		public string WeldingLocation
		{
			get
			{
				return this._WeldingLocation;
			}
			set
			{
				if ((this._WeldingLocation != value))
				{
					this.OnWeldingLocationChanging(value);
					this.SendPropertyChanging();
					this._WeldingLocation = value;
					this.SendPropertyChanged("WeldingLocation");
					this.OnWeldingLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThicknessMax", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ThicknessMax
		{
			get
			{
				return this._ThicknessMax;
			}
			set
			{
				if ((this._ThicknessMax != value))
				{
					this.OnThicknessMaxChanging(value);
					this.SendPropertyChanging();
					this._ThicknessMax = value;
					this.SendPropertyChanged("ThicknessMax");
					this.OnThicknessMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThicknessMin", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ThicknessMin
		{
			get
			{
				return this._ThicknessMin;
			}
			set
			{
				if ((this._ThicknessMin != value))
				{
					this.OnThicknessMinChanging(value);
					this.SendPropertyChanging();
					this._ThicknessMin = value;
					this.SendPropertyChanged("ThicknessMin");
					this.OnThicknessMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizesMax", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SizesMax
		{
			get
			{
				return this._SizesMax;
			}
			set
			{
				if ((this._SizesMax != value))
				{
					this.OnSizesMaxChanging(value);
					this.SendPropertyChanging();
					this._SizesMax = value;
					this.SendPropertyChanged("SizesMax");
					this.OnSizesMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizesMin", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SizesMin
		{
			get
			{
				return this._SizesMin;
			}
			set
			{
				if ((this._SizesMin != value))
				{
					this.OnSizesMinChanging(value);
					this.SendPropertyChanging();
					this._SizesMin = value;
					this.SendPropertyChanged("SizesMin");
					this.OnSizesMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(100)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrintShow", DbType="Bit")]
		public System.Nullable<bool> IsPrintShow
		{
			get
			{
				return this._IsPrintShow;
			}
			set
			{
				if ((this._IsPrintShow != value))
				{
					this.OnIsPrintShowChanging(value);
					this.SendPropertyChanging();
					this._IsPrintShow = value;
					this.SendPropertyChanged("IsPrintShow");
					this.OnIsPrintShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Welder_WelderQualify_SitePerson_Person", Storage="_SitePerson_Person", ThisKey="WelderId", OtherKey="PersonId", IsForeignKey=true)]
		public SitePerson_Person SitePerson_Person
		{
			get
			{
				return this._SitePerson_Person.Entity;
			}
			set
			{
				SitePerson_Person previousValue = this._SitePerson_Person.Entity;
				if (((previousValue != value) 
							|| (this._SitePerson_Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SitePerson_Person.Entity = null;
						previousValue.Welder_WelderQualify.Remove(this);
					}
					this._SitePerson_Person.Entity = value;
					if ((value != null))
					{
						value.Welder_WelderQualify.Add(this);
						this._WelderId = value.PersonId;
					}
					else
					{
						this._WelderId = default(string);
					}
					this.SendPropertyChanged("SitePerson_Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WPQ_WPQList")]
	public partial class WPQ_WPQList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WPQId;
		
		private string _UnitId;
		
		private string _WPQCode;
		
		private System.Nullable<System.DateTime> _CompileDate;
		
		private string _MaterialId1;
		
		private string _MaterialId2;
		
		private string _Specifications;
		
		private string _WeldingRod;
		
		private string _WeldingWire;
		
		private string _GrooveType;
		
		private string _PreTemperature;
		
		private string _WeldingPosition;
		
		private string _WeldingMethodId;
		
		private System.Nullable<decimal> _MinImpactDia;
		
		private System.Nullable<decimal> _MaxImpactDia;
		
		private System.Nullable<decimal> _MinImpactThickness;
		
		private System.Nullable<decimal> _MaxImpactThickness;
		
		private System.Nullable<decimal> _NoMinImpactThickness;
		
		private System.Nullable<decimal> _NoMaxImpactThickness;
		
		private System.Nullable<bool> _IsHotProess;
		
		private string _WPQStandard;
		
		private string _Remark;
		
		private string _JointType;
		
		private string _Motorization;
		
		private string _ProtectiveGas;
		
		private string _Stretching;
		
		private string _Bend;
		
		private string _ToAttack;
		
		private string _Others;
		
		private EntitySet<HJGL_WeldJoint> _HJGL_WeldJoint;
		
		private EntityRef<Base_Material> _Base_Material;
		
		private EntityRef<Base_Material> _MaterialId2Base_Material;
		
		private EntityRef<Base_WeldingMethod> _Base_WeldingMethod;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWPQIdChanging(string value);
    partial void OnWPQIdChanged();
    partial void OnUnitIdChanging(string value);
    partial void OnUnitIdChanged();
    partial void OnWPQCodeChanging(string value);
    partial void OnWPQCodeChanged();
    partial void OnCompileDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompileDateChanged();
    partial void OnMaterialId1Changing(string value);
    partial void OnMaterialId1Changed();
    partial void OnMaterialId2Changing(string value);
    partial void OnMaterialId2Changed();
    partial void OnSpecificationsChanging(string value);
    partial void OnSpecificationsChanged();
    partial void OnWeldingRodChanging(string value);
    partial void OnWeldingRodChanged();
    partial void OnWeldingWireChanging(string value);
    partial void OnWeldingWireChanged();
    partial void OnGrooveTypeChanging(string value);
    partial void OnGrooveTypeChanged();
    partial void OnPreTemperatureChanging(string value);
    partial void OnPreTemperatureChanged();
    partial void OnWeldingPositionChanging(string value);
    partial void OnWeldingPositionChanged();
    partial void OnWeldingMethodIdChanging(string value);
    partial void OnWeldingMethodIdChanged();
    partial void OnMinImpactDiaChanging(System.Nullable<decimal> value);
    partial void OnMinImpactDiaChanged();
    partial void OnMaxImpactDiaChanging(System.Nullable<decimal> value);
    partial void OnMaxImpactDiaChanged();
    partial void OnMinImpactThicknessChanging(System.Nullable<decimal> value);
    partial void OnMinImpactThicknessChanged();
    partial void OnMaxImpactThicknessChanging(System.Nullable<decimal> value);
    partial void OnMaxImpactThicknessChanged();
    partial void OnNoMinImpactThicknessChanging(System.Nullable<decimal> value);
    partial void OnNoMinImpactThicknessChanged();
    partial void OnNoMaxImpactThicknessChanging(System.Nullable<decimal> value);
    partial void OnNoMaxImpactThicknessChanged();
    partial void OnIsHotProessChanging(System.Nullable<bool> value);
    partial void OnIsHotProessChanged();
    partial void OnWPQStandardChanging(string value);
    partial void OnWPQStandardChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnJointTypeChanging(string value);
    partial void OnJointTypeChanged();
    partial void OnMotorizationChanging(string value);
    partial void OnMotorizationChanged();
    partial void OnProtectiveGasChanging(string value);
    partial void OnProtectiveGasChanged();
    partial void OnStretchingChanging(string value);
    partial void OnStretchingChanged();
    partial void OnBendChanging(string value);
    partial void OnBendChanged();
    partial void OnToAttackChanging(string value);
    partial void OnToAttackChanged();
    partial void OnOthersChanging(string value);
    partial void OnOthersChanged();
    #endregion
		
		public WPQ_WPQList()
		{
			this._HJGL_WeldJoint = new EntitySet<HJGL_WeldJoint>(new Action<HJGL_WeldJoint>(this.attach_HJGL_WeldJoint), new Action<HJGL_WeldJoint>(this.detach_HJGL_WeldJoint));
			this._Base_Material = default(EntityRef<Base_Material>);
			this._MaterialId2Base_Material = default(EntityRef<Base_Material>);
			this._Base_WeldingMethod = default(EntityRef<Base_WeldingMethod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPQId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WPQId
		{
			get
			{
				return this._WPQId;
			}
			set
			{
				if ((this._WPQId != value))
				{
					this.OnWPQIdChanging(value);
					this.SendPropertyChanging();
					this._WPQId = value;
					this.SendPropertyChanged("WPQId");
					this.OnWPQIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="NVarChar(50)")]
		public string UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPQCode", DbType="NVarChar(50)")]
		public string WPQCode
		{
			get
			{
				return this._WPQCode;
			}
			set
			{
				if ((this._WPQCode != value))
				{
					this.OnWPQCodeChanging(value);
					this.SendPropertyChanging();
					this._WPQCode = value;
					this.SendPropertyChanged("WPQCode");
					this.OnWPQCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompileDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompileDate
		{
			get
			{
				return this._CompileDate;
			}
			set
			{
				if ((this._CompileDate != value))
				{
					this.OnCompileDateChanging(value);
					this.SendPropertyChanging();
					this._CompileDate = value;
					this.SendPropertyChanged("CompileDate");
					this.OnCompileDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId1", DbType="NVarChar(50)")]
		public string MaterialId1
		{
			get
			{
				return this._MaterialId1;
			}
			set
			{
				if ((this._MaterialId1 != value))
				{
					if (this._Base_Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialId1Changing(value);
					this.SendPropertyChanging();
					this._MaterialId1 = value;
					this.SendPropertyChanged("MaterialId1");
					this.OnMaterialId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialId2", DbType="NVarChar(50)")]
		public string MaterialId2
		{
			get
			{
				return this._MaterialId2;
			}
			set
			{
				if ((this._MaterialId2 != value))
				{
					if (this._MaterialId2Base_Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialId2Changing(value);
					this.SendPropertyChanging();
					this._MaterialId2 = value;
					this.SendPropertyChanged("MaterialId2");
					this.OnMaterialId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specifications", DbType="NVarChar(100)")]
		public string Specifications
		{
			get
			{
				return this._Specifications;
			}
			set
			{
				if ((this._Specifications != value))
				{
					this.OnSpecificationsChanging(value);
					this.SendPropertyChanging();
					this._Specifications = value;
					this.SendPropertyChanged("Specifications");
					this.OnSpecificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingRod", DbType="NVarChar(100)")]
		public string WeldingRod
		{
			get
			{
				return this._WeldingRod;
			}
			set
			{
				if ((this._WeldingRod != value))
				{
					this.OnWeldingRodChanging(value);
					this.SendPropertyChanging();
					this._WeldingRod = value;
					this.SendPropertyChanged("WeldingRod");
					this.OnWeldingRodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingWire", DbType="NVarChar(100)")]
		public string WeldingWire
		{
			get
			{
				return this._WeldingWire;
			}
			set
			{
				if ((this._WeldingWire != value))
				{
					this.OnWeldingWireChanging(value);
					this.SendPropertyChanging();
					this._WeldingWire = value;
					this.SendPropertyChanged("WeldingWire");
					this.OnWeldingWireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrooveType", DbType="NVarChar(100)")]
		public string GrooveType
		{
			get
			{
				return this._GrooveType;
			}
			set
			{
				if ((this._GrooveType != value))
				{
					this.OnGrooveTypeChanging(value);
					this.SendPropertyChanging();
					this._GrooveType = value;
					this.SendPropertyChanged("GrooveType");
					this.OnGrooveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreTemperature", DbType="NVarChar(50)")]
		public string PreTemperature
		{
			get
			{
				return this._PreTemperature;
			}
			set
			{
				if ((this._PreTemperature != value))
				{
					this.OnPreTemperatureChanging(value);
					this.SendPropertyChanging();
					this._PreTemperature = value;
					this.SendPropertyChanged("PreTemperature");
					this.OnPreTemperatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingPosition", DbType="NVarChar(50)")]
		public string WeldingPosition
		{
			get
			{
				return this._WeldingPosition;
			}
			set
			{
				if ((this._WeldingPosition != value))
				{
					this.OnWeldingPositionChanging(value);
					this.SendPropertyChanging();
					this._WeldingPosition = value;
					this.SendPropertyChanged("WeldingPosition");
					this.OnWeldingPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeldingMethodId", DbType="NVarChar(50)")]
		public string WeldingMethodId
		{
			get
			{
				return this._WeldingMethodId;
			}
			set
			{
				if ((this._WeldingMethodId != value))
				{
					if (this._Base_WeldingMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeldingMethodIdChanging(value);
					this.SendPropertyChanging();
					this._WeldingMethodId = value;
					this.SendPropertyChanged("WeldingMethodId");
					this.OnWeldingMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinImpactDia", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> MinImpactDia
		{
			get
			{
				return this._MinImpactDia;
			}
			set
			{
				if ((this._MinImpactDia != value))
				{
					this.OnMinImpactDiaChanging(value);
					this.SendPropertyChanging();
					this._MinImpactDia = value;
					this.SendPropertyChanged("MinImpactDia");
					this.OnMinImpactDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxImpactDia", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> MaxImpactDia
		{
			get
			{
				return this._MaxImpactDia;
			}
			set
			{
				if ((this._MaxImpactDia != value))
				{
					this.OnMaxImpactDiaChanging(value);
					this.SendPropertyChanging();
					this._MaxImpactDia = value;
					this.SendPropertyChanged("MaxImpactDia");
					this.OnMaxImpactDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinImpactThickness", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> MinImpactThickness
		{
			get
			{
				return this._MinImpactThickness;
			}
			set
			{
				if ((this._MinImpactThickness != value))
				{
					this.OnMinImpactThicknessChanging(value);
					this.SendPropertyChanging();
					this._MinImpactThickness = value;
					this.SendPropertyChanged("MinImpactThickness");
					this.OnMinImpactThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxImpactThickness", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> MaxImpactThickness
		{
			get
			{
				return this._MaxImpactThickness;
			}
			set
			{
				if ((this._MaxImpactThickness != value))
				{
					this.OnMaxImpactThicknessChanging(value);
					this.SendPropertyChanging();
					this._MaxImpactThickness = value;
					this.SendPropertyChanged("MaxImpactThickness");
					this.OnMaxImpactThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoMinImpactThickness", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> NoMinImpactThickness
		{
			get
			{
				return this._NoMinImpactThickness;
			}
			set
			{
				if ((this._NoMinImpactThickness != value))
				{
					this.OnNoMinImpactThicknessChanging(value);
					this.SendPropertyChanging();
					this._NoMinImpactThickness = value;
					this.SendPropertyChanged("NoMinImpactThickness");
					this.OnNoMinImpactThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoMaxImpactThickness", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> NoMaxImpactThickness
		{
			get
			{
				return this._NoMaxImpactThickness;
			}
			set
			{
				if ((this._NoMaxImpactThickness != value))
				{
					this.OnNoMaxImpactThicknessChanging(value);
					this.SendPropertyChanging();
					this._NoMaxImpactThickness = value;
					this.SendPropertyChanged("NoMaxImpactThickness");
					this.OnNoMaxImpactThicknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHotProess", DbType="Bit")]
		public System.Nullable<bool> IsHotProess
		{
			get
			{
				return this._IsHotProess;
			}
			set
			{
				if ((this._IsHotProess != value))
				{
					this.OnIsHotProessChanging(value);
					this.SendPropertyChanging();
					this._IsHotProess = value;
					this.SendPropertyChanged("IsHotProess");
					this.OnIsHotProessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WPQStandard", DbType="NVarChar(50)")]
		public string WPQStandard
		{
			get
			{
				return this._WPQStandard;
			}
			set
			{
				if ((this._WPQStandard != value))
				{
					this.OnWPQStandardChanging(value);
					this.SendPropertyChanging();
					this._WPQStandard = value;
					this.SendPropertyChanged("WPQStandard");
					this.OnWPQStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JointType", DbType="NVarChar(50)")]
		public string JointType
		{
			get
			{
				return this._JointType;
			}
			set
			{
				if ((this._JointType != value))
				{
					this.OnJointTypeChanging(value);
					this.SendPropertyChanging();
					this._JointType = value;
					this.SendPropertyChanged("JointType");
					this.OnJointTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motorization", DbType="NVarChar(50)")]
		public string Motorization
		{
			get
			{
				return this._Motorization;
			}
			set
			{
				if ((this._Motorization != value))
				{
					this.OnMotorizationChanging(value);
					this.SendPropertyChanging();
					this._Motorization = value;
					this.SendPropertyChanged("Motorization");
					this.OnMotorizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtectiveGas", DbType="NVarChar(50)")]
		public string ProtectiveGas
		{
			get
			{
				return this._ProtectiveGas;
			}
			set
			{
				if ((this._ProtectiveGas != value))
				{
					this.OnProtectiveGasChanging(value);
					this.SendPropertyChanging();
					this._ProtectiveGas = value;
					this.SendPropertyChanged("ProtectiveGas");
					this.OnProtectiveGasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stretching", DbType="NVarChar(50)")]
		public string Stretching
		{
			get
			{
				return this._Stretching;
			}
			set
			{
				if ((this._Stretching != value))
				{
					this.OnStretchingChanging(value);
					this.SendPropertyChanging();
					this._Stretching = value;
					this.SendPropertyChanged("Stretching");
					this.OnStretchingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bend", DbType="NVarChar(50)")]
		public string Bend
		{
			get
			{
				return this._Bend;
			}
			set
			{
				if ((this._Bend != value))
				{
					this.OnBendChanging(value);
					this.SendPropertyChanging();
					this._Bend = value;
					this.SendPropertyChanged("Bend");
					this.OnBendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAttack", DbType="NVarChar(50)")]
		public string ToAttack
		{
			get
			{
				return this._ToAttack;
			}
			set
			{
				if ((this._ToAttack != value))
				{
					this.OnToAttackChanging(value);
					this.SendPropertyChanging();
					this._ToAttack = value;
					this.SendPropertyChanged("ToAttack");
					this.OnToAttackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Others", DbType="NVarChar(50)")]
		public string Others
		{
			get
			{
				return this._Others;
			}
			set
			{
				if ((this._Others != value))
				{
					this.OnOthersChanging(value);
					this.SendPropertyChanging();
					this._Others = value;
					this.SendPropertyChanged("Others");
					this.OnOthersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_HJGL_WeldJoint_WPQ_WPQList", Storage="_HJGL_WeldJoint", ThisKey="WPQId", OtherKey="WPQId", DeleteRule="NO ACTION")]
		public EntitySet<HJGL_WeldJoint> HJGL_WeldJoint
		{
			get
			{
				return this._HJGL_WeldJoint;
			}
			set
			{
				this._HJGL_WeldJoint.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WPQ_WPQList_Base_Material1", Storage="_Base_Material", ThisKey="MaterialId1", OtherKey="MaterialId", IsForeignKey=true)]
		public Base_Material Base_Material
		{
			get
			{
				return this._Base_Material.Entity;
			}
			set
			{
				Base_Material previousValue = this._Base_Material.Entity;
				if (((previousValue != value) 
							|| (this._Base_Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_Material.Entity = null;
						previousValue.WPQ_WPQList.Remove(this);
					}
					this._Base_Material.Entity = value;
					if ((value != null))
					{
						value.WPQ_WPQList.Add(this);
						this._MaterialId1 = value.MaterialId;
					}
					else
					{
						this._MaterialId1 = default(string);
					}
					this.SendPropertyChanged("Base_Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WPQ_WPQList_Base_Material2", Storage="_MaterialId2Base_Material", ThisKey="MaterialId2", OtherKey="MaterialId", IsForeignKey=true)]
		public Base_Material MaterialId2Base_Material
		{
			get
			{
				return this._MaterialId2Base_Material.Entity;
			}
			set
			{
				Base_Material previousValue = this._MaterialId2Base_Material.Entity;
				if (((previousValue != value) 
							|| (this._MaterialId2Base_Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaterialId2Base_Material.Entity = null;
						previousValue.WPQ_WPQList_Base_Material2.Remove(this);
					}
					this._MaterialId2Base_Material.Entity = value;
					if ((value != null))
					{
						value.WPQ_WPQList_Base_Material2.Add(this);
						this._MaterialId2 = value.MaterialId;
					}
					else
					{
						this._MaterialId2 = default(string);
					}
					this.SendPropertyChanged("MaterialId2Base_Material");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_WPQ_WPQList_Base_WeldingMethod", Storage="_Base_WeldingMethod", ThisKey="WeldingMethodId", OtherKey="WeldingMethodId", IsForeignKey=true)]
		public Base_WeldingMethod Base_WeldingMethod
		{
			get
			{
				return this._Base_WeldingMethod.Entity;
			}
			set
			{
				Base_WeldingMethod previousValue = this._Base_WeldingMethod.Entity;
				if (((previousValue != value) 
							|| (this._Base_WeldingMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Base_WeldingMethod.Entity = null;
						previousValue.WPQ_WPQList.Remove(this);
					}
					this._Base_WeldingMethod.Entity = value;
					if ((value != null))
					{
						value.WPQ_WPQList.Add(this);
						this._WeldingMethodId = value.WeldingMethodId;
					}
					else
					{
						this._WeldingMethodId = default(string);
					}
					this.SendPropertyChanged("Base_WeldingMethod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.WPQ_WPQList = this;
		}
		
		private void detach_HJGL_WeldJoint(HJGL_WeldJoint entity)
		{
			this.SendPropertyChanging();
			entity.WPQ_WPQList = null;
		}
	}
}
#pragma warning restore 1591
