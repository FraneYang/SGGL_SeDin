//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL.OAWebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="anyType2anyTypeMap", Namespace="webservices.ofs.weaver.com.cn", ItemName="entry")]
    [System.SerializableAttribute()]
    public class anyType2anyTypeMap : System.Collections.Generic.List<BLL.OAWebService.entry> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="entry", Namespace="webservices.ofs.weaver.com.cn")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BLL.OAWebService.anyType2anyTypeMap))]
    public partial class entry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object keyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public object key {
            get {
                return this.keyField;
            }
            set {
                if ((object.ReferenceEquals(this.keyField, value) != true)) {
                    this.keyField = value;
                    this.RaisePropertyChanged("key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public object value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="webservices.ofs.weaver.com.cn", ConfigurationName="OAWebService.OfsTodoDataWebServicePortType")]
    public interface OfsTodoDataWebServicePortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        BLL.OAWebService.anyType2anyTypeMap processOverRequestByMap(BLL.OAWebService.anyType2anyTypeMap in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<BLL.OAWebService.anyType2anyTypeMap> processOverRequestByMapAsync(BLL.OAWebService.anyType2anyTypeMap in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string processOverRequestByJson(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> processOverRequestByJsonAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        BLL.OAWebService.anyType2anyTypeMap receiveRequestInfoByMap(BLL.OAWebService.anyType2anyTypeMap in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<BLL.OAWebService.anyType2anyTypeMap> receiveRequestInfoByMapAsync(BLL.OAWebService.anyType2anyTypeMap in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string receiveRequestInfoByXml(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> receiveRequestInfoByXmlAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string receiveTodoRequestByXml(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> receiveTodoRequestByXmlAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string deleteRequestInfoByXML(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> deleteRequestInfoByXMLAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        BLL.OAWebService.anyType2anyTypeMap receiveTodoRequestByMap(BLL.OAWebService.anyType2anyTypeMap in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<BLL.OAWebService.anyType2anyTypeMap> receiveTodoRequestByMapAsync(BLL.OAWebService.anyType2anyTypeMap in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string deleteUserRequestInfoByJson(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> deleteUserRequestInfoByJsonAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string processDoneRequestByJson(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> processDoneRequestByJsonAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string processOverRequestByXml(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> processOverRequestByXmlAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string receiveRequestInfoByJson(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> receiveRequestInfoByJsonAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string deleteRequestInfoByJson(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> deleteRequestInfoByJsonAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        BLL.OAWebService.anyType2anyTypeMap deleteRequestInfoByMap(BLL.OAWebService.anyType2anyTypeMap in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<BLL.OAWebService.anyType2anyTypeMap> deleteRequestInfoByMapAsync(BLL.OAWebService.anyType2anyTypeMap in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        BLL.OAWebService.anyType2anyTypeMap deleteUserRequestInfoByMap(BLL.OAWebService.anyType2anyTypeMap in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<BLL.OAWebService.anyType2anyTypeMap> deleteUserRequestInfoByMapAsync(BLL.OAWebService.anyType2anyTypeMap in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string processDoneRequestByXml(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> processDoneRequestByXmlAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string receiveTodoRequestByJson(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> receiveTodoRequestByJsonAsync(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        BLL.OAWebService.anyType2anyTypeMap processDoneRequestByMap(BLL.OAWebService.anyType2anyTypeMap in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<BLL.OAWebService.anyType2anyTypeMap> processDoneRequestByMapAsync(BLL.OAWebService.anyType2anyTypeMap in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string deleteUserRequestInfoByXML(string in0);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> deleteUserRequestInfoByXMLAsync(string in0);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface OfsTodoDataWebServicePortTypeChannel : BLL.OAWebService.OfsTodoDataWebServicePortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OfsTodoDataWebServicePortTypeClient : System.ServiceModel.ClientBase<BLL.OAWebService.OfsTodoDataWebServicePortType>, BLL.OAWebService.OfsTodoDataWebServicePortType {
        
        public OfsTodoDataWebServicePortTypeClient() {
        }
        
        public OfsTodoDataWebServicePortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OfsTodoDataWebServicePortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OfsTodoDataWebServicePortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OfsTodoDataWebServicePortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BLL.OAWebService.anyType2anyTypeMap processOverRequestByMap(BLL.OAWebService.anyType2anyTypeMap in0) {
            return base.Channel.processOverRequestByMap(in0);
        }
        
        public System.Threading.Tasks.Task<BLL.OAWebService.anyType2anyTypeMap> processOverRequestByMapAsync(BLL.OAWebService.anyType2anyTypeMap in0) {
            return base.Channel.processOverRequestByMapAsync(in0);
        }
        
        public string processOverRequestByJson(string in0) {
            return base.Channel.processOverRequestByJson(in0);
        }
        
        public System.Threading.Tasks.Task<string> processOverRequestByJsonAsync(string in0) {
            return base.Channel.processOverRequestByJsonAsync(in0);
        }
        
        public BLL.OAWebService.anyType2anyTypeMap receiveRequestInfoByMap(BLL.OAWebService.anyType2anyTypeMap in0) {
            return base.Channel.receiveRequestInfoByMap(in0);
        }
        
        public System.Threading.Tasks.Task<BLL.OAWebService.anyType2anyTypeMap> receiveRequestInfoByMapAsync(BLL.OAWebService.anyType2anyTypeMap in0) {
            return base.Channel.receiveRequestInfoByMapAsync(in0);
        }
        
        public string receiveRequestInfoByXml(string in0) {
            return base.Channel.receiveRequestInfoByXml(in0);
        }
        
        public System.Threading.Tasks.Task<string> receiveRequestInfoByXmlAsync(string in0) {
            return base.Channel.receiveRequestInfoByXmlAsync(in0);
        }
        
        public string receiveTodoRequestByXml(string in0) {
            return base.Channel.receiveTodoRequestByXml(in0);
        }
        
        public System.Threading.Tasks.Task<string> receiveTodoRequestByXmlAsync(string in0) {
            return base.Channel.receiveTodoRequestByXmlAsync(in0);
        }
        
        public string deleteRequestInfoByXML(string in0) {
            return base.Channel.deleteRequestInfoByXML(in0);
        }
        
        public System.Threading.Tasks.Task<string> deleteRequestInfoByXMLAsync(string in0) {
            return base.Channel.deleteRequestInfoByXMLAsync(in0);
        }
        
        public BLL.OAWebService.anyType2anyTypeMap receiveTodoRequestByMap(BLL.OAWebService.anyType2anyTypeMap in0) {
            return base.Channel.receiveTodoRequestByMap(in0);
        }
        
        public System.Threading.Tasks.Task<BLL.OAWebService.anyType2anyTypeMap> receiveTodoRequestByMapAsync(BLL.OAWebService.anyType2anyTypeMap in0) {
            return base.Channel.receiveTodoRequestByMapAsync(in0);
        }
        
        public string deleteUserRequestInfoByJson(string in0) {
            return base.Channel.deleteUserRequestInfoByJson(in0);
        }
        
        public System.Threading.Tasks.Task<string> deleteUserRequestInfoByJsonAsync(string in0) {
            return base.Channel.deleteUserRequestInfoByJsonAsync(in0);
        }
        
        public string processDoneRequestByJson(string in0) {
            return base.Channel.processDoneRequestByJson(in0);
        }
        
        public System.Threading.Tasks.Task<string> processDoneRequestByJsonAsync(string in0) {
            return base.Channel.processDoneRequestByJsonAsync(in0);
        }
        
        public string processOverRequestByXml(string in0) {
            return base.Channel.processOverRequestByXml(in0);
        }
        
        public System.Threading.Tasks.Task<string> processOverRequestByXmlAsync(string in0) {
            return base.Channel.processOverRequestByXmlAsync(in0);
        }
        
        public string receiveRequestInfoByJson(string in0) {
            return base.Channel.receiveRequestInfoByJson(in0);
        }
        
        public System.Threading.Tasks.Task<string> receiveRequestInfoByJsonAsync(string in0) {
            return base.Channel.receiveRequestInfoByJsonAsync(in0);
        }
        
        public string deleteRequestInfoByJson(string in0) {
            return base.Channel.deleteRequestInfoByJson(in0);
        }
        
        public System.Threading.Tasks.Task<string> deleteRequestInfoByJsonAsync(string in0) {
            return base.Channel.deleteRequestInfoByJsonAsync(in0);
        }
        
        public BLL.OAWebService.anyType2anyTypeMap deleteRequestInfoByMap(BLL.OAWebService.anyType2anyTypeMap in0) {
            return base.Channel.deleteRequestInfoByMap(in0);
        }
        
        public System.Threading.Tasks.Task<BLL.OAWebService.anyType2anyTypeMap> deleteRequestInfoByMapAsync(BLL.OAWebService.anyType2anyTypeMap in0) {
            return base.Channel.deleteRequestInfoByMapAsync(in0);
        }
        
        public BLL.OAWebService.anyType2anyTypeMap deleteUserRequestInfoByMap(BLL.OAWebService.anyType2anyTypeMap in0) {
            return base.Channel.deleteUserRequestInfoByMap(in0);
        }
        
        public System.Threading.Tasks.Task<BLL.OAWebService.anyType2anyTypeMap> deleteUserRequestInfoByMapAsync(BLL.OAWebService.anyType2anyTypeMap in0) {
            return base.Channel.deleteUserRequestInfoByMapAsync(in0);
        }
        
        public string processDoneRequestByXml(string in0) {
            return base.Channel.processDoneRequestByXml(in0);
        }
        
        public System.Threading.Tasks.Task<string> processDoneRequestByXmlAsync(string in0) {
            return base.Channel.processDoneRequestByXmlAsync(in0);
        }
        
        public string receiveTodoRequestByJson(string in0) {
            return base.Channel.receiveTodoRequestByJson(in0);
        }
        
        public System.Threading.Tasks.Task<string> receiveTodoRequestByJsonAsync(string in0) {
            return base.Channel.receiveTodoRequestByJsonAsync(in0);
        }
        
        public BLL.OAWebService.anyType2anyTypeMap processDoneRequestByMap(BLL.OAWebService.anyType2anyTypeMap in0) {
            return base.Channel.processDoneRequestByMap(in0);
        }
        
        public System.Threading.Tasks.Task<BLL.OAWebService.anyType2anyTypeMap> processDoneRequestByMapAsync(BLL.OAWebService.anyType2anyTypeMap in0) {
            return base.Channel.processDoneRequestByMapAsync(in0);
        }
        
        public string deleteUserRequestInfoByXML(string in0) {
            return base.Channel.deleteUserRequestInfoByXML(in0);
        }
        
        public System.Threading.Tasks.Task<string> deleteUserRequestInfoByXMLAsync(string in0) {
            return base.Channel.deleteUserRequestInfoByXMLAsync(in0);
        }
    }
}
